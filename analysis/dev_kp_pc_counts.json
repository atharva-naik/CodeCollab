{
    "page views": {
        "constant term": 120,
        "train set": 90,
        "multiple linear regression": 72,
        "coefficient": 66,
        "non-linear regression": 66,
        "predict method": 63,
        "selection variable": 60,
        "backups": 60,
        "x matrix": 54,
        "coefficients": 54,
        "page view": 54,
        "cpu load": 54,
        "cross products": 54,
        "polynomial features extraction": 54,
        "optimal weights": 54,
        "polynomal expansion function": 54,
        "random noise": 51,
        "noise level": 51,
        "random forests": 47,
        "sine function": 46,
        "colored image": 36,
        "support vector machines": 36,
        "noisy sine function": 34,
        "noise samples": 34,
        "functions": 34,
        "polynomial expansion": 31,
        "extrapolation": 30,
        "ridge regression": 28,
        "forecasting techniques": 24,
        "linear classifier": 22,
        "fine tuning": 18,
        "parameter tuning": 18,
        "machine learning technique": 18,
        "polynomial function": 18,
        "taylor expansion": 18,
        "math class": 18,
        "polynomialfeatures": 18,
        "width variable": 18,
        "ials": 17,
        "mathematical precision": 17,
        "test score": 16,
        "validation score": 16,
        "validation sets": 16,
        "average error": 16,
        "set": 16,
        "lassocv": 15,
        "optimal degree": 14,
        "regularisation parameter": 14,
        "optimal plot": 14,
        "machine learning algorithms": 12,
        "width parameter": 12,
        "non-linear classification": 10,
        "non-linear classifier": 10,
        "polynomials": 10,
        "linear decision boundary": 10,
        "t optimal degree": 9,
        "lassocv()": 9,
        "ridgecv()": 9,
        "double spiral": 8,
        "decision trees": 8,
        "double spiral problem": 8,
        "voting mechanism": 8,
        "matical representation": 8,
        "forecasting": 6,
        "anomaly detection": 6,
        "page views data": 6,
        "multiple features": 6,
        "gaussianprocess()": 5,
        "confidance intervals": 5,
        "noise level estimation": 4,
        "validation": 4,
        "random forest": 3,
        "estimators": 3,
        "ensembles": 3,
        "polynomial feature extraction": 3
    },
    "tritoned": {
        "missing data": 64,
        "income": 59,
        "age": 53,
        "survey": 41,
        "data scientist": 33,
        "unclean data": 33,
        "height data": 33,
        "column names": 31,
        "majors": 31,
        "numerical labels": 26,
        "training samples": 26,
        "data columns": 24,
        "string methods": 23,
        "standardize": 23,
        "tinder": 23,
        "apply function": 22,
        "students": 22,
        "nltk": 20,
        "vm": 20,
        "id": 20,
        "data cleaning": 19,
        "income column": 19,
        "steps column": 18,
        "income10": 18,
        "test samples": 16,
        "testing samples": 16,
        "predicted labels": 16,
        "pandas method": 16,
        "average income": 16,
        "compsci": 15,
        "alpha significance value": 15,
        "null hypothesis": 15,
        "boolean values": 15,
        "test data": 15,
        "population": 14,
        "project notebook": 13,
        "career choice": 13,
        "missing": 12,
        "real world data": 12,
        "emojis": 12,
        "string labels": 12,
        "svm classifier": 12,
        "substring checking": 11,
        "missing gender information": 11,
        "unique responses": 11,
        "standard": 11,
        "hints": 11,
        "trailing whitespace": 11,
        "measurement systems": 11,
        "inches": 11,
        "exploratory data visualization": 11,
        "exploratory data vizualization": 11,
        "scatter matrix": 11,
        "bar chart plot": 11,
        "pandas objects": 11,
        "corpus data": 11,
        "natural language processing": 11,
        "nlp": 11,
        "natural language toolkit": 11,
        "tab separated raw text file": 11,
        "discriminative information": 11,
        "countvectorizer": 11,
        "array": 11,
        "vectorizer": 11,
        "custom sklearn objects": 11,
        "data wrangling": 11,
        "pandas guide": 11,
        "data files": 11,
        "steps": 11,
        "tinder users": 11,
        "safe harbor method": 11,
        "null value": 11,
        "ndarray": 10,
        "np": 10,
        "training data samples": 10,
        "test data samples": 10,
        "test sets": 10,
        "learnt classifier": 10,
        "training labels": 10,
        "trained classifier": 10,
        "predict labels": 10,
        "id column": 10,
        "merged df dataframe": 10,
        "presidential election": 10,
        "disk cleanup": 10,
        "nonresponse": 10,
        "ice cream flavour": 9,
        "cs students": 9,
        "tf scaling": 9,
        "missing incomes": 9,
        "plotting capabilities": 9,
        "andas": 9,
        "plotlib": 9,
        "plotting": 9,
        "data visualization": 9,
        "age column": 9,
        "income values": 9,
        "prediction ability": 9,
        "log transformation": 9,
        "data transformation": 9,
        "polyfit": 9,
        "unique favourite ice cream": 8,
        "ions": 8,
        "disributions": 8,
        "statistical tests": 8,
        "test statistic": 8,
        "significance": 8,
        "cogsci": 8,
        "design matrices": 8,
        "income10 data": 8,
        "review column": 8,
        "tfidf": 8,
        "vectors": 8,
        "values": 7,
        "describe pandas method": 7,
        "cs data": 6,
        "height": 6,
        "confounding variable": 6,
        "ordinary least squares": 6,
        "linear models": 6,
        "corrs": 6,
        "pairwise correlations": 6,
        "quantile method": 6,
        "svm": 6,
        "cogs students": 5,
        "mean height": 5,
        "ols model": 5,
        "log10": 5,
        "customer review task": 5,
        "labels": 5,
        "header arguments": 5,
        "steps data": 5,
        "outliers": 5,
        "average heights": 4,
        "height distributions": 4,
        "alpha value": 4,
        "statistical test": 4,
        "interim conclusion": 4,
        "hypothesis": 4,
        "first pass analysis": 4,
        "confounding variables": 4,
        "women": 4,
        "df2": 4,
        "compsci majors": 4,
        "output parameters": 4,
        "income data": 4,
        "outlier": 4,
        "step values": 4,
        "age histogram": 4,
        "0 steps": 4,
        "step data": 4,
        "incomes": 4,
        "returned variable": 4,
        "pivot tables": 3,
        "average height values": 3,
        "pivot table": 3,
        "patsy": 3,
        "integer age": 3,
        "mean income": 3,
        "exponential decay function": 3,
        "valueerror": 3,
        "zero values": 3,
        "math domain error": 3,
        "standard deviations": 3,
        "sslerror": 3,
        "ssl module": 3,
        "https": 3,
        "zip code": 3,
        "linearmodels": 3,
        "diistribution": 3,
        "transformantion": 3,
        "tfidf vectorizer": 3,
        "gaussian curve": 3,
        "steps variable plot": 2,
        "default value": 2,
        "advanced indexing": 2,
        "df dataframe": 2,
        "booleans": 2,
        "oleans": 2,
        "isnull": 2,
        "computer science majors": 2,
        "error message": 2,
        "returned object": 2,
        "income spectrum": 2,
        "income graph": 2,
        "0 incomes": 2,
        "income axis": 2,
        "pandas array indexing": 1,
        "replotting": 1,
        "kmeans": 1,
        "income distribution": 1,
        "age mood": 1,
        "correlationship coefficient": 1,
        "stroger relationships": 1,
        "boolean variables": 1,
        "prediction power": 1,
        "mathematical calculations": 1,
        "skewed data distributions": 1,
        "logbase10": 1,
        "logarithmic transforms": 1,
        "corrs variable": 1,
        "predicted numerical labels": 1,
        "matplotlib visualizations": 1,
        "lambda expression": 1,
        "array element": 1,
        "log transform": 1,
        "geometric means": 1,
        "log10 transformation": 1,
        "pand": 1,
        "dataset size": 1,
        "log transforming data": 1,
        "log base 10": 1,
        "0 income": 1
    },
    "bag of words": {
        "bayes theorem": 69,
        "diabetes": 66,
        "immigration": 51,
        "gary johnson": 42,
        "jill stein": 42,
        "freedom": 39,
        "countvectorizer method": 33,
        "alphanumeric strings": 33,
        "countvectorizer()": 33,
        "data preprocessing": 33,
        "document dataset": 33,
        "countvectorizer object": 33,
        "libertarian party": 33,
        "green party": 33,
        "vocabulary": 30,
        "documents": 30,
        "toarray": 30,
        "transform() method": 30,
        "numpy integers": 30,
        "frequency distribution": 30,
        "word names": 30,
        "posteriors": 30,
        "specificity": 27,
        "sensitivity": 27,
        "numerical labels": 26,
        "training samples": 26,
        "delimiter": 24,
        "document set": 24,
        "tokenization": 24,
        "python collections library": 24,
        "counter method": 24,
        "punctuation marks": 24,
        "bag of words process": 22,
        "frequency distribution dictionary": 22,
        "ity": 21,
        "final probabilities": 21,
        "test result": 21,
        "feature vectors": 21,
        "probabilities": 21,
        "stein": 21,
        "posterior probabilities": 21,
        "nltk": 20,
        "vm": 20,
        "test samples": 16,
        "testing samples": 16,
        "predicted labels": 16,
        "test data": 15,
        "string labels": 12,
        "svm classifier": 12,
        "spam detectors": 12,
        "search engine": 12,
        "naive bayes algorithm": 12,
        "corpus data": 11,
        "natural language processing": 11,
        "nlp": 11,
        "natural language toolkit": 11,
        "tab separated raw text file": 11,
        "discriminative information": 11,
        "countvectorizer": 11,
        "array": 11,
        "vectorizer": 11,
        "custom sklearn objects": 11,
        "ndarray": 10,
        "np": 10,
        "training data samples": 10,
        "test data samples": 10,
        "test sets": 10,
        "learnt classifier": 10,
        "training labels": 10,
        "trained classifier": 10,
        "predict labels": 10,
        "tf scaling": 9,
        "review column": 8,
        "tfidf": 8,
        "vectors": 8,
        "svm": 6,
        "scramento kings nba basketball team": 6,
        "sac": 6,
        "o kings": 6,
        "joint probabilities": 6,
        "tpr": 6,
        "positive test": 6,
        "conditional probabilities": 6,
        "priors": 6,
        "tnr": 6,
        "sacramento kings": 6,
        "nba basketball team": 6,
        "customer review task": 5,
        "labels": 5,
        "header arguments": 5,
        "returned variable": 4,
        "tfidf vectorizer": 3,
        "returned object": 2,
        "predicted numerical labels": 1
    },
    "total page views": {
        "constant term": 80,
        "train set": 60,
        "non-linear regression": 58,
        "multiple linear regression": 54,
        "random forests": 46,
        "sine function": 46,
        "coefficient": 44,
        "predict method": 42,
        "selection variable": 40,
        "backups": 40,
        "x matrix": 36,
        "coefficients": 36,
        "page view": 36,
        "cpu load": 36,
        "support vector machines": 36,
        "cross products": 36,
        "polynomial features extraction": 36,
        "optimal weights": 36,
        "polynomal expansion function": 36,
        "random noise": 34,
        "noise level": 34,
        "noisy sine function": 34,
        "noise samples": 34,
        "functions": 34,
        "polynomial expansion": 30,
        "ridge regression": 28,
        "colored image": 24,
        "extrapolation": 22,
        "linear classifier": 22,
        "machine learning technique": 18,
        "polynomial function": 18,
        "taylor expansion": 18,
        "math class": 18,
        "polynomialfeatures": 18,
        "ials": 17,
        "mathematical precision": 17,
        "forecasting techniques": 16,
        "test score": 16,
        "validation score": 16,
        "validation sets": 16,
        "average error": 16,
        "set": 16,
        "optimal degree": 14,
        "regularisation parameter": 14,
        "optimal plot": 14,
        "fine tuning": 12,
        "parameter tuning": 12,
        "machine learning algorithms": 12,
        "width variable": 12,
        "width parameter": 12,
        "non-linear classification": 10,
        "non-linear classifier": 10,
        "polynomials": 10,
        "linear decision boundary": 10,
        "lassocv": 10,
        "t optimal degree": 9,
        "lassocv()": 9,
        "ridgecv()": 9,
        "double spiral": 8,
        "decision trees": 8,
        "double spiral problem": 8,
        "voting mechanism": 8,
        "matical representation": 8,
        "forecasting": 6,
        "anomaly detection": 6,
        "page views data": 6,
        "multiple features": 6,
        "gaussianprocess()": 5,
        "confidance intervals": 5,
        "noise level estimation": 4,
        "validation": 4,
        "random forest": 2,
        "estimators": 2,
        "ensembles": 2,
        "polynomial feature extraction": 2
    },
    "cpu load": {
        "constant term": 60,
        "train set": 60,
        "multiple linear regression": 59,
        "non-linear regression": 58,
        "random forests": 46,
        "sine function": 46,
        "predict method": 45,
        "selection variable": 40,
        "backups": 40,
        "x matrix": 39,
        "cpu load": 38,
        "coefficients": 36,
        "page view": 36,
        "support vector machines": 36,
        "cross products": 36,
        "polynomial features extraction": 36,
        "optimal weights": 36,
        "polynomal expansion function": 36,
        "random noise": 34,
        "noise level": 34,
        "noisy sine function": 34,
        "noise samples": 34,
        "functions": 34,
        "polynomial expansion": 30,
        "ridge regression": 28,
        "colored image": 24,
        "coefficient": 22,
        "extrapolation": 22,
        "linear classifier": 22,
        "machine learning technique": 18,
        "polynomial function": 18,
        "taylor expansion": 18,
        "math class": 18,
        "polynomialfeatures": 18,
        "ials": 17,
        "mathematical precision": 17,
        "forecasting techniques": 16,
        "test score": 16,
        "validation score": 16,
        "validation sets": 16,
        "average error": 16,
        "set": 16,
        "optimal degree": 14,
        "regularisation parameter": 14,
        "optimal plot": 14,
        "width parameter": 14,
        "width variable": 13,
        "fine tuning": 12,
        "parameter tuning": 12,
        "machine learning algorithms": 12,
        "lassocv": 11,
        "non-linear classification": 10,
        "non-linear classifier": 10,
        "polynomials": 10,
        "linear decision boundary": 10,
        "t optimal degree": 9,
        "lassocv()": 9,
        "ridgecv()": 9,
        "double spiral": 8,
        "decision trees": 8,
        "double spiral problem": 8,
        "voting mechanism": 8,
        "matical representation": 8,
        "anomaly detection": 8,
        "page views data": 7,
        "multiple features": 7,
        "forecasting": 6,
        "confidance intervals": 6,
        "gaussianprocess()": 5,
        "noise level estimation": 4,
        "validation": 4,
        "random forest": 2,
        "estimators": 2,
        "ensembles": 2,
        "polynomial feature extraction": 2,
        "request": 2,
        "average cpu usage": 2,
        "single linear regression": 2,
        "gaussianprocess": 1,
        "ridgecv": 1
    },
    "think stats": {
        "sampling distribution": 49,
        "residuals": 42,
        "first babies": 39,
        "birth weight": 31,
        "resampling": 31,
        "normal probability plot": 30,
        "pregnancy length": 27,
        "exponential distribution": 24,
        "null hypothesis": 24,
        "hazard function": 24,
        "live births": 22,
        "confidence interval": 21,
        "survival function": 20,
        "intercept": 18,
        "dependent variable": 18,
        "birth weights": 17,
        "adult weights": 17,
        "rmse": 17,
        "cdf": 15,
        "lognormal model": 15,
        "probability": 12,
        "first marriage": 12,
        "age": 12,
        "thinkstats2": 12,
        "average age": 12,
        "estimated slope": 12,
        "pareto distribution": 11,
        "standard error": 11,
        "log weights": 11,
        "correlation": 10,
        "permutation": 10,
        "bracket operator": 10,
        "bar graph": 10,
        "hist": 10,
        "sampling weights": 10,
        "cohen effect size": 10,
        "ccdf": 10,
        "normal model": 10,
        "percentile rank": 10,
        "nsfg data": 9,
        "percentiles": 9,
        "sampling distributions": 8,
        "probabilities": 8,
        "hypothesistest": 8,
        "total probability": 8,
        "pmf": 8,
        "biased pmf": 8,
        "pregnancy lengths": 8,
        "pareto world": 8,
        "random variates": 7,
        "nsfg": 7,
        "scatterplot": 7,
        "central limit theorem": 6,
        "prob": 6,
        "distributions": 6,
        "python dictionary": 6,
        "hist object": 6,
        "freq": 6,
        "values method": 6,
        "items method": 6,
        "thinkplot": 6,
        "pregnancy file": 6,
        "longest pregnancy lengths": 6,
        "width": 6,
        "align": 6,
        "brfss": 6,
        "mean height": 6,
        "least squares": 6,
        "least squares fit": 6,
        "slope": 6,
        "independent variable": 6,
        "residual": 6,
        "cd": 6,
        "non-linear relationship": 6,
        "curvature": 6,
        "mean": 6,
        "resamplerows": 6,
        "mean birth weight": 6,
        "summarize": 6,
        "fitted line": 6,
        "resampled estimate": 6,
        "uncertainty": 6,
        "mother's age": 6,
        "mother": 6,
        "predictive power": 6,
        "iq": 6,
        "sat scores": 6,
        "stratified survey design": 6,
        "mean birthweight": 6,
        "weights": 6,
        "strata": 6,
        "survey": 6,
        "brfss data": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "plot percentiles": 6,
        "compute coefficient of determination": 6,
        "random sample": 6,
        "analytic distribution": 5,
        "random sampling": 5,
        "mean pregnancy lengths": 5,
        "standard deviations": 5,
        "exponential cdf": 5,
        "birth times": 5,
        "interarrival times": 5,
        "normal cdf": 5,
        "observed cdf": 5,
        "model": 5,
        "normality": 5,
        "visual test": 5,
        "preterm babies": 5,
        "full term births": 5,
        "lognormal disrtribution": 5,
        "adult weight": 5,
        "pareto cdf": 5,
        "pareto model": 5,
        "analytic cdf": 5,
        "straight": 5,
        "pareto variate": 5,
        "blue man group": 5,
        "stats": 5,
        "analytic distributions": 5,
        "scipy": 5,
        "frozen random variable": 5,
        "height information": 5,
        "confidence intervals": 4,
        "lognormal distribution": 4,
        "clt": 4,
        "student t distribution": 4,
        "nsfg pregnancy file": 4,
        "probability mass function": 4,
        "pmf object": 4,
        "incr method": 4,
        "mult method": 4,
        "normalize": 4,
        "step function": 4,
        "makeframes": 4,
        "fs": 4,
        "pmf objects": 4,
        "observed mean": 4,
        "biased sample": 4,
        "inverse operation": 4,
        "pandas indexing": 4,
        "column names": 4,
        "normal indexing": 4,
        "loc attribute": 4,
        "iloc attribute": 4,
        "integer indices": 4,
        "row labels": 4,
        "integer index": 4,
        "class size paradox": 4,
        "nsfg respondent variable": 4,
        "biased distribution": 4,
        "biased distributions": 4,
        "survival analysis": 4,
        "nsfg dataset": 4,
        "complete lifetimes": 4,
        "complementary cdf": 4,
        "marriage": 4,
        "nsfg respondent file": 4,
        "resampling process": 4,
        "weighted resampling": 4,
        "survivial curves": 4,
        "birth cohort": 4,
        "nsfg cycles": 4,
        "sfs": 4,
        "difference shapes": 4,
        "remaining lifetime": 4,
        "pregnancy": 4,
        "median remaining time": 4,
        "divorce": 4,
        "survival curve": 4,
        "sampling error": 4,
        "human height": 4,
        "percentilerank": 4,
        "respondent file": 3,
        "codebook": 3,
        "test statistic": 3,
        "weight": 3,
        "estimated mean": 2,
        "arithmetic operations": 2,
        "normal class": 2,
        "normal distributions": 2,
        "difference sizes": 2,
        "independent variates": 2,
        "normal probability plots": 2,
        "exponential variates": 2,
        "infinite variance": 2,
        "correlated normal values": 2,
        "correlated values": 2,
        "analytic methods": 2,
        "finite mean": 2,
        "simulation": 2,
        "multiplicative factors": 2,
        "random value": 2,
        "difference in means": 2,
        "children": 2,
        "weibull distribution": 2,
        "statistical significance": 2,
        "permutation test": 2,
        "resample rows": 2,
        "percentile": 2,
        "cumulative distribution function": 2,
        "inverse cdf": 2,
        "cdfs": 2,
        "pmfs": 2,
        "interquartile range": 2,
        "sample": 2,
        "high income respondents": 1,
        "failure analysis": 1,
        "empirical distribution": 1,
        "random values": 1,
        "gender gap": 1,
        "student engineering teams": 1,
        "class projects": 1,
        "standard errors": 1,
        "hypothesis testing": 1,
        "simulated results": 1,
        "simulated samples": 1,
        "test statistics": 1,
        "outcome": 1,
        "false negative rate": 1,
        "hypothesis test": 1,
        "respondents": 1,
        "visual artifact": 1,
        "random noice": 1,
        "uniform distribution": 1,
        "jittered data": 1,
        "saturation": 1,
        "outliers": 1,
        "overlapping points": 1,
        "height": 1,
        "jittering": 1,
        "hexbin plot": 1,
        "binned plot": 1,
        "hexbin": 1,
        "scatter": 1,
        "pairwise differences": 1,
        "column": 1,
        "finalwt": 1
    },
    "thinkstats": {
        "sampling distribution": 49,
        "residuals": 42,
        "first babies": 39,
        "birth weight": 31,
        "resampling": 31,
        "normal probability plot": 30,
        "pregnancy length": 27,
        "exponential distribution": 24,
        "null hypothesis": 24,
        "hazard function": 24,
        "live births": 22,
        "confidence interval": 21,
        "survival function": 20,
        "intercept": 18,
        "dependent variable": 18,
        "birth weights": 17,
        "adult weights": 17,
        "rmse": 17,
        "cdf": 15,
        "lognormal model": 15,
        "probability": 12,
        "first marriage": 12,
        "age": 12,
        "thinkstats2": 12,
        "average age": 12,
        "estimated slope": 12,
        "pareto distribution": 11,
        "standard error": 11,
        "log weights": 11,
        "correlation": 10,
        "permutation": 10,
        "bracket operator": 10,
        "bar graph": 10,
        "hist": 10,
        "sampling weights": 10,
        "cohen effect size": 10,
        "ccdf": 10,
        "normal model": 10,
        "percentile rank": 10,
        "nsfg data": 9,
        "percentiles": 9,
        "sampling distributions": 8,
        "probabilities": 8,
        "hypothesistest": 8,
        "total probability": 8,
        "pmf": 8,
        "biased pmf": 8,
        "pregnancy lengths": 8,
        "pareto world": 8,
        "random variates": 7,
        "nsfg": 7,
        "scatterplot": 7,
        "central limit theorem": 6,
        "prob": 6,
        "distributions": 6,
        "python dictionary": 6,
        "hist object": 6,
        "freq": 6,
        "values method": 6,
        "items method": 6,
        "thinkplot": 6,
        "pregnancy file": 6,
        "longest pregnancy lengths": 6,
        "width": 6,
        "align": 6,
        "brfss": 6,
        "mean height": 6,
        "least squares": 6,
        "least squares fit": 6,
        "slope": 6,
        "independent variable": 6,
        "residual": 6,
        "cd": 6,
        "non-linear relationship": 6,
        "curvature": 6,
        "mean": 6,
        "resamplerows": 6,
        "mean birth weight": 6,
        "summarize": 6,
        "fitted line": 6,
        "resampled estimate": 6,
        "uncertainty": 6,
        "mother's age": 6,
        "mother": 6,
        "predictive power": 6,
        "iq": 6,
        "sat scores": 6,
        "stratified survey design": 6,
        "mean birthweight": 6,
        "weights": 6,
        "strata": 6,
        "survey": 6,
        "brfss data": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "plot percentiles": 6,
        "compute coefficient of determination": 6,
        "random sample": 6,
        "analytic distribution": 5,
        "random sampling": 5,
        "mean pregnancy lengths": 5,
        "standard deviations": 5,
        "exponential cdf": 5,
        "birth times": 5,
        "interarrival times": 5,
        "normal cdf": 5,
        "observed cdf": 5,
        "model": 5,
        "normality": 5,
        "visual test": 5,
        "preterm babies": 5,
        "full term births": 5,
        "lognormal disrtribution": 5,
        "adult weight": 5,
        "pareto cdf": 5,
        "pareto model": 5,
        "analytic cdf": 5,
        "straight": 5,
        "pareto variate": 5,
        "blue man group": 5,
        "stats": 5,
        "analytic distributions": 5,
        "scipy": 5,
        "frozen random variable": 5,
        "height information": 5,
        "confidence intervals": 4,
        "lognormal distribution": 4,
        "clt": 4,
        "student t distribution": 4,
        "nsfg pregnancy file": 4,
        "probability mass function": 4,
        "pmf object": 4,
        "incr method": 4,
        "mult method": 4,
        "normalize": 4,
        "step function": 4,
        "makeframes": 4,
        "fs": 4,
        "pmf objects": 4,
        "observed mean": 4,
        "biased sample": 4,
        "inverse operation": 4,
        "pandas indexing": 4,
        "column names": 4,
        "normal indexing": 4,
        "loc attribute": 4,
        "iloc attribute": 4,
        "integer indices": 4,
        "row labels": 4,
        "integer index": 4,
        "class size paradox": 4,
        "nsfg respondent variable": 4,
        "biased distribution": 4,
        "biased distributions": 4,
        "survival analysis": 4,
        "nsfg dataset": 4,
        "complete lifetimes": 4,
        "complementary cdf": 4,
        "marriage": 4,
        "nsfg respondent file": 4,
        "resampling process": 4,
        "weighted resampling": 4,
        "survivial curves": 4,
        "birth cohort": 4,
        "nsfg cycles": 4,
        "sfs": 4,
        "difference shapes": 4,
        "remaining lifetime": 4,
        "pregnancy": 4,
        "median remaining time": 4,
        "divorce": 4,
        "survival curve": 4,
        "sampling error": 4,
        "human height": 4,
        "percentilerank": 4,
        "respondent file": 3,
        "codebook": 3,
        "test statistic": 3,
        "weight": 3,
        "estimated mean": 2,
        "arithmetic operations": 2,
        "normal class": 2,
        "normal distributions": 2,
        "difference sizes": 2,
        "independent variates": 2,
        "normal probability plots": 2,
        "exponential variates": 2,
        "infinite variance": 2,
        "correlated normal values": 2,
        "correlated values": 2,
        "analytic methods": 2,
        "finite mean": 2,
        "simulation": 2,
        "multiplicative factors": 2,
        "random value": 2,
        "difference in means": 2,
        "children": 2,
        "weibull distribution": 2,
        "statistical significance": 2,
        "permutation test": 2,
        "resample rows": 2,
        "percentile": 2,
        "cumulative distribution function": 2,
        "inverse cdf": 2,
        "cdfs": 2,
        "pmfs": 2,
        "interquartile range": 2,
        "sample": 2,
        "high income respondents": 1,
        "failure analysis": 1,
        "empirical distribution": 1,
        "random values": 1,
        "gender gap": 1,
        "student engineering teams": 1,
        "class projects": 1,
        "standard errors": 1,
        "hypothesis testing": 1,
        "simulated results": 1,
        "simulated samples": 1,
        "test statistics": 1,
        "outcome": 1,
        "false negative rate": 1,
        "hypothesis test": 1,
        "respondents": 1,
        "visual artifact": 1,
        "random noice": 1,
        "uniform distribution": 1,
        "jittered data": 1,
        "saturation": 1,
        "outliers": 1,
        "overlapping points": 1,
        "height": 1,
        "jittering": 1,
        "hexbin plot": 1,
        "binned plot": 1,
        "hexbin": 1,
        "scatter": 1,
        "pairwise differences": 1,
        "column": 1,
        "finalwt": 1
    },
    "data exploration": {
        "income": 105,
        "age": 79,
        "data cleaning": 77,
        "data wrangling": 75,
        "data files": 75,
        "tritoned": 64,
        "data visualization": 62,
        "axis labels": 53,
        "missing data": 35,
        "plotting": 35,
        "student id": 34,
        "income data": 31,
        "markdown cell": 30,
        "tutorials notebooks": 30,
        "coding": 30,
        "iterative approach": 24,
        "10": 22,
        "log transforming": 22,
        "steps column": 22,
        "pandas method": 21,
        "id": 20,
        "income column": 19,
        "income10": 18,
        "average income": 16,
        "outliers": 14,
        "pandas guide": 11,
        "steps": 11,
        "id column": 10,
        "merged df dataframe": 10,
        "survey": 10,
        "presidential election": 10,
        "disk cleanup": 10,
        "nonresponse": 10,
        "pdf": 10,
        "subtle outliers": 9,
        "data values": 9,
        "population": 9,
        "missing incomes": 9,
        "plotting capabilities": 9,
        "andas": 9,
        "plotlib": 9,
        "age column": 9,
        "income values": 9,
        "prediction ability": 9,
        "log transformation": 9,
        "data transformation": 9,
        "polyfit": 9,
        "middle aged men": 9,
        "income10 data": 8,
        "age distribution": 8,
        "describe pandas method": 7,
        "chinups": 7,
        "hue parameter": 7,
        "mean value": 6,
        "corrs": 6,
        "pairwise correlations": 6,
        "quantile method": 6,
        "density estimation": 6,
        "suvived passengers": 6,
        "log10": 5,
        "steps data": 5,
        "titanic passengers": 5,
        "output parameters": 4,
        "liver disease": 4,
        "outlier": 4,
        "step values": 4,
        "tophat kernel": 4,
        "age histogram": 4,
        "0 steps": 4,
        "step data": 4,
        "incomes": 4,
        "integer age": 3,
        "mean income": 3,
        "exponential decay function": 3,
        "valueerror": 3,
        "zero values": 3,
        "math domain error": 3,
        "standard deviations": 3,
        "histogram plots": 3,
        "diistribution": 3,
        "transformantion": 3,
        "violin plot": 3,
        "gaussian curve": 3,
        "steps variable plot": 2,
        "waist size": 2,
        "pulse": 2,
        "weight": 2,
        "situps": 2,
        "jumps": 2,
        "linnerud data set": 2,
        "default settings": 2,
        "bin centers": 2,
        "continuous distribution": 2,
        "bin width": 2,
        "variable width bins": 2,
        "bin edges": 2,
        "bin choices": 2,
        "rug plot": 2,
        "chinup measurements": 2,
        "transparency": 2,
        "bin grouping": 2,
        "user choices": 2,
        "bin centering": 2,
        "univariate data": 2,
        "bin": 2,
        "output histogram": 2,
        "ering": 2,
        "epanechnikov": 2,
        "kernel density estimation": 2,
        "minimal mean square error": 2,
        "inverted parabola": 2,
        "discrete data": 2,
        "normalized kernel function": 2,
        "default value": 2,
        "income spectrum": 2,
        "income graph": 2,
        "0 incomes": 2,
        "income axis": 2,
        "user exploration": 1,
        "structured data": 1,
        "scatterplot": 1,
        "survey responses": 1,
        "numeric features": 1,
        "simple line graph": 1,
        "uci machine learning": 1,
        "file contents": 1,
        "decision tree learning": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1,
        "replotting": 1,
        "continuous data": 1,
        "bandwidth selection": 1,
        "epanechnikov kernel": 1,
        "income distribution": 1,
        "age mood": 1,
        "correlationship coefficient": 1,
        "stroger relationships": 1,
        "prediction power": 1,
        "mathematical calculations": 1,
        "skewed data distributions": 1,
        "logbase10": 1,
        "logarithmic transforms": 1,
        "corrs variable": 1,
        "patients": 1,
        "grouped bar chart": 1,
        "hue property": 1,
        "correlation heatmap": 1,
        "dimensionality": 1,
        "decisiontreeclassifier": 1,
        "data engineering project": 1,
        "pyspark": 1,
        "schema": 1,
        "helper function": 1,
        "countries": 1,
        "periodicities": 1,
        "aggregation methods": 1,
        "exercise": 1,
        "indicators": 1,
        "wdidata": 1,
        "matplotlib visualizations": 1,
        "lambda expression": 1,
        "log transform": 1,
        "geometric means": 1,
        "log10 transformation": 1,
        "pand": 1,
        "dataset size": 1,
        "log transforming data": 1,
        "log base 10": 1,
        "0 income": 1
    },
    "exploratory data analysis": {
        "zipfile": 28,
        "google finance": 24,
        "pandas datareader": 24,
        "iloc": 22,
        "pairplot": 20,
        "morgan stanley": 17,
        "bank of america": 16,
        "granularity": 14,
        "isprime": 12,
        "random numbers": 12,
        "numpy functions": 12,
        "banks": 12,
        "symbol": 12,
        "goldman sachs": 12,
        "jpmorgan chase": 12,
        "tick": 12,
        "wells fargo": 12,
        "stock information": 12,
        "numerical tests": 12,
        "dfcars": 12,
        "listiness property": 12,
        "postal code": 11,
        "python lists": 10,
        "inline matploblib plots": 10,
        "automatic tests": 10,
        "utilities": 10,
        "sanity checks": 10,
        "data frames": 10,
        "businesses file": 10,
        "primary keys": 10,
        "flower species": 10,
        "kde plot": 10,
        "setosa species": 10,
        "bar plot": 9,
        "attributes": 9,
        "94602": 9,
        "bank": 9,
        "jointplot": 8,
        "age": 8,
        "businesses": 8,
        "zip codes": 8,
        "ticker symbols": 8,
        "alphabetical": 8,
        "listiness": 8,
        "distplot": 8,
        "head function": 7,
        "single data frame": 7,
        "tickers list": 7,
        "automobile data": 7,
        "rear axle ratio": 7,
        "close price": 7,
        "women": 6,
        "matplotlib libraries": 6,
        "function object": 6,
        "umpy module": 6,
        "method": 6,
        "lambda functions": 6,
        "mathematical functions": 6,
        "prime numbers": 6,
        "list myprimes": 6,
        "default argument values": 6,
        "libraries": 6,
        "keyword arguments": 6,
        "iterate": 6,
        "numpy module functions": 6,
        "numpy array constructors": 6,
        "64 bit": 6,
        "floating point": 6,
        "random constructor": 6,
        "vector operations": 6,
        "readability": 6,
        "computer chips": 6,
        "broadcasting": 6,
        "2d arrays": 6,
        "lists": 6,
        "matrix multiplication": 6,
        "mean": 6,
        "zip": 6,
        "zip code": 6,
        "boolean expressions": 6,
        "data variables": 6,
        "datasets": 6,
        "column name levels": 6,
        "returns": 6,
        "empty": 6,
        "bank stock ticker": 6,
        "returns column": 6,
        "close column": 6,
        "returns dataframe": 6,
        "single day returns": 6,
        "worst": 6,
        "titanic": 5,
        "exploratory data analysis": 5,
        "filenames": 5,
        "python docs": 5,
        "fillna": 5,
        "extended zip codes": 5,
        "extended postal codes": 5,
        "94545": 5,
        "area income": 4,
        "kde distributions": 4,
        "kaggle data documentation": 4,
        "datatypes": 4,
        "numeric columns": 4,
        "zipped data": 4,
        "text editor": 4,
        "web browser": 4,
        "datahub": 4,
        "vio dataframes": 4,
        "floating point values": 4,
        "testing function": 4,
        "rounding error": 4,
        "bus dataframe": 4,
        "gridsearch": 4,
        "businesses data frame": 4,
        "bus data frame": 4,
        "business table": 4,
        "variable postal code": 4,
        "zip code values": 4,
        "counts": 4,
        "missing zipcode values": 4,
        "internet": 4,
        "94609": 4,
        "san francisco": 4,
        "one dimensional iteration": 4,
        "idiom": 4,
        "contiguous memory": 4,
        "floating": 4,
        "type conversion": 4,
        "lic": 4,
        "iteration": 4,
        "horsepower": 4,
        "displacement": 4,
        "biometrics": 4,
        "multiple regression models": 4,
        "automobile design": 4,
        "forward gears": 4,
        "carburetors": 4,
        "fuel consumption": 4,
        "arrcars": 4,
        "numpy function": 4,
        "genfromtxt": 4,
        "dataframe structure": 4,
        "series objects": 4,
        "da rx4": 4,
        "mazda rx4": 4,
        "dictionary syntax": 4,
        "column": 4,
        "python variables": 4,
        "dictionary keys": 4,
        "complex indexing": 4,
        "list operations": 4,
        "statistics": 4,
        "containers": 4,
        "automobile data loaded": 4,
        "attribute shape": 4,
        "set length": 4,
        "len function": 4,
        "attribute columns": 4,
        "numpy methods": 4,
        "itertuples": 4,
        "pandas methods": 4,
        "indexing": 4,
        "loc property indexes": 4,
        "iloc indexes": 4,
        "row indices": 4,
        "column attributes": 4,
        "label name": 4,
        "integer position indices": 4,
        "toy dataframe": 4,
        "data manipulation": 3,
        "kaggle": 3,
        "passengerid": 3,
        "scraping": 3,
        "mathematical manipulation": 3,
        "homework 1": 3,
        "numpy documention": 3,
        "scientific python": 3,
        "matlab": 3,
        "gridsearchcv": 3,
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "longitude values": 3,
        "validzip variable": 3,
        "ly": 3,
        "visualization libraries": 3,
        "cufflinks": 3,
        "global matplotlib plotting": 3,
        "seaborn package": 3,
        "notebook": 3,
        "frequency distribution": 3,
        "hist function": 3,
        "listy container": 3,
        "matplotlib hist": 3,
        "seaborn context": 3,
        "axvline": 3,
        "plot documentation": 3,
        "plotting commands": 3,
        "file extension": 3,
        "savefig command": 3,
        "saved png": 3,
        "markdown": 3,
        "columns of interest": 3,
        "matplotlib plotting routines": 3,
        "titanic dataset feature": 2,
        "bar plots": 2,
        "missing zip codes": 2,
        "confusion matrices": 2,
        "grid model": 2,
        "inspection": 2,
        "inspection dataframe": 2,
        "deceased passengers": 2,
        "cs": 2,
        "spreadsheet": 2,
        "moving averages": 2,
        "heatmap": 2,
        "dictionary key": 2,
        "boolean variable": 2,
        "ordered interpretation": 2,
        "cylinders": 2,
        "categorical data": 2,
        "dtypes attribute": 2,
        "op": 2,
        "garbage collector": 2,
        "functional programming": 2,
        "h": 2,
        "spark": 2,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "business name": 1,
        "search engine": 1,
        "men": 1,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "bollinger band plot": 1,
        "small multiples": 1,
        "aggregation functions": 1,
        "group properties": 1,
        "atomic properties": 1,
        "global properties": 1,
        "mpg": 1
    },
    "machine learning library": {
        "constant term": 46,
        "sine function": 46,
        "multiple linear regression": 41,
        "non-linear regression": 32,
        "train set": 30,
        "polynomial expansion": 29,
        "ridge regression": 28,
        "random forests": 27,
        "coefficient": 26,
        "predict method": 24,
        "linear classifier": 22,
        "x matrix": 21,
        "selection variable": 20,
        "backups": 20,
        "cpu load": 20,
        "coefficients": 18,
        "page view": 18,
        "support vector machines": 18,
        "machine learning technique": 18,
        "polynomial function": 18,
        "taylor expansion": 18,
        "math class": 18,
        "polynomialfeatures": 18,
        "cross products": 18,
        "polynomial features extraction": 18,
        "optimal weights": 18,
        "polynomal expansion function": 18,
        "ials": 17,
        "mathematical precision": 17,
        "random noise": 17,
        "noise level": 17,
        "noisy sine function": 17,
        "noise samples": 17,
        "functions": 17,
        "test score": 16,
        "validation score": 16,
        "validation sets": 16,
        "average error": 16,
        "set": 16,
        "optimal degree": 14,
        "regularisation parameter": 14,
        "optimal plot": 14,
        "extrapolation": 14,
        "width parameter": 14,
        "colored image": 12,
        "machine learning algorithms": 12,
        "non-linear classification": 10,
        "non-linear classifier": 10,
        "polynomials": 10,
        "linear decision boundary": 10,
        "t optimal degree": 9,
        "lassocv()": 9,
        "ridgecv()": 9,
        "validation": 9,
        "forecasting techniques": 8,
        "double spiral": 8,
        "decision trees": 8,
        "double spiral problem": 8,
        "voting mechanism": 8,
        "matical representation": 8,
        "anomaly detection": 8,
        "page views data": 7,
        "multiple features": 7,
        "width variable": 7,
        "predictive models": 7,
        "learn": 7,
        "tutorial": 7,
        "scikit-learn": 7,
        "titanic survival dataset": 7,
        "sklearn library": 7,
        "categorical variables": 7,
        "exploratory data analysis": 7,
        "age": 7,
        "numerical variables": 7,
        "complexity parameter": 7,
        "fine tuning": 6,
        "parameter tuning": 6,
        "forecasting": 6,
        "confidance intervals": 6,
        "lassocv": 6,
        "gaussianprocess()": 5,
        "test set error": 5,
        "validation error": 5,
        "tensorflow": 5,
        "total request rate": 4,
        "cpu": 4,
        "noise level estimation": 4,
        "best fit model": 4,
        "test risk": 4,
        "validation set error": 3,
        "hypothesis set": 3,
        "polynomial degree": 3,
        "request": 2,
        "average cpu usage": 2,
        "single linear regression": 2,
        "0th order polynomials": 2,
        "test set errors": 2,
        "hyper": 2,
        "learner": 2,
        "test error": 2,
        "validation set errors": 2,
        "gradient descent": 2,
        "training error": 2,
        "20th order polynomials": 2,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial feature extraction": 1,
        "test sets": 1,
        "training example": 1,
        "x28": 1,
        "training examples": 1,
        "multiclass classification": 1,
        "softmax loss function": 1,
        "true labels": 1,
        "trained model": 1,
        "input variable": 1,
        "mnist dataset": 1,
        "bias vectors": 1,
        "gradient descent training": 1,
        "softmax regression function": 1,
        "softmax implementation": 1,
        "negative log probability": 1,
        "softmax regression": 1,
        "classification function": 1,
        "cross entropy loss": 1,
        "learning rate": 1,
        "cross entropy loss function": 1,
        "tutorials": 1,
        "random splits": 1,
        "prediction error": 1,
        "multiple": 1,
        "validation process": 1,
        "validation errors": 1,
        "sine curve": 1,
        "hypothesis space": 1,
        "kfold": 1,
        "fold errors": 1,
        "dual problem": 1,
        "wildly behaving pilynomials": 1,
        "lagrange multipliers": 1,
        "bias": 1,
        "penalty term": 1,
        "gaussianprocess": 1,
        "ridgecv": 1
    },
    "supervised learning": {
        "bayes theorem": 44,
        "bag of words": 35,
        "diabetes": 31,
        "data preprocessing": 23,
        "countvectorizer()": 21,
        "immigration": 17,
        "age": 14,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "departure delay": 12,
        "probabilistic inference algorithms": 12,
        "naive bayes theorem": 12,
        "nervousness": 12,
        "democratic presidential nominee": 12,
        "secret service": 12,
        "sex": 12,
        "sms message": 12,
        "text content": 12,
        "uci machine learning repository": 12,
        "tab separated dataset": 12,
        "recall scores": 12,
        "precision": 12,
        "performance metrics": 12,
        "binary variables": 12,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "svm": 11,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "probabilities": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "testing sets": 10,
        "bag of words problem": 10,
        "bag of words processing": 10,
        "posteriors": 10,
        "bayes theorem implementation": 9,
        "bayes formula": 9,
        "true negative rate": 9,
        "true positive rate": 9,
        "medical field": 9,
        "specificity": 9,
        "sensitivity": 9,
        "naive bayes implementation": 9,
        "iata airport code": 8,
        "crsdeptime": 8,
        "scheduled departure time": 8,
        "punctuation marks": 8,
        "hyperparameters": 7,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "women": 6,
        "dbscan": 6,
        "titanic": 5,
        "bar plot": 5,
        "iris data set": 5,
        "kaggle data documentation": 4,
        "datatypes": 4,
        "numeric columns": 4,
        "carrier code": 4,
        "uniquecarrier": 4,
        "american airlines": 4,
        "delayed flights": 4,
        "non-delayed": 4,
        "liver disease": 4,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "naive bayes implementations": 4,
        "word counts": 4,
        "text classification": 4,
        "iris": 4,
        "scheduled arrival time": 4,
        "crsarrtime": 4,
        "depdelay": 4,
        "ord": 4,
        "faa": 4,
        "data manipulation": 3,
        "kaggle": 3,
        "passengerid": 3,
        "machine learning model": 3,
        "indian liver patient records dataset": 3,
        "2d array": 3,
        "nayseyer": 3,
        "sklearn x array": 3,
        "sds": 3,
        "sdss dataset": 3,
        "galaxy evolution": 3,
        "domain knowledge": 3,
        "pandas dataframes": 3,
        "astropy tables": 3,
        "challenge problem": 3,
        "training error": 3,
        "generalization error": 3,
        "cross validation": 3,
        "label array": 3,
        "training classifications": 3,
        "iris set": 3,
        "misclassifications": 3,
        "cv": 3,
        "split function": 3,
        "returned dataframes": 3,
        "code cell": 3,
        "returned values": 3,
        "int64": 3,
        "normalized value": 3,
        "machine learning technique": 3,
        "maximum values": 3,
        "float64": 3,
        "unit tests": 3,
        "trained model": 3,
        "validation": 3,
        "titanic dataset feature": 2,
        "bar plots": 2,
        "matrix": 2,
        "gaussian distribution": 2,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "gaussian naive bayes": 2,
        "na": 2,
        "bayes implementation": 2,
        "integer word counts": 2,
        "discrete": 2,
        "multinomial naive bayes implementation": 2,
        "unknown iris": 2,
        "predicted response value": 2,
        "euclidian distance": 2,
        "distance metric": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2,
        "random categorical variable": 2,
        "orical": 2,
        "mutually exclusive outcomes": 2,
        "binomial distribution": 2,
        "laplace smoothing": 2,
        "categorical random variable": 2,
        "multinomial distribution": 2,
        "occurrence counts": 2,
        "multin": 2,
        "mult": 2,
        "bernoulli variable": 2,
        "nb": 2,
        "probability distribution": 2,
        "discrete data": 2,
        "outcome probabilities": 2,
        "bern": 2,
        "1d array": 2,
        "supervised models": 2,
        "d array": 2,
        "unsupervised models": 2,
        "distance matrix": 2,
        "random state": 2,
        "euclidean distance": 2,
        "cluster centers": 2,
        "clustering outcome": 2,
        "petal length": 2,
        "scaling": 2,
        "input": 1,
        "men": 1,
        "iris target": 1,
        "clustering algorithms": 1,
        "2d plot": 1,
        "sepal length": 1,
        "regression": 1,
        "iris data": 1,
        "final classification": 1,
        "supervised machine learning": 1,
        "accuracy score": 1,
        "confusion matrix plot": 1,
        "colored heatmap": 1,
        "flight delays": 1,
        "patients": 1,
        "grouped bar chart": 1,
        "hue property": 1,
        "correlation heatmap": 1,
        "dimensionality": 1,
        "decisiontreeclassifier": 1
    },
    "hidden tests": {
        "missing data": 55,
        "data scientist": 33,
        "unclean data": 33,
        "height data": 33,
        "column names": 31,
        "survey": 31,
        "majors": 31,
        "numerical labels": 26,
        "training samples": 26,
        "data columns": 24,
        "string methods": 23,
        "standardize": 23,
        "apply function": 22,
        "students": 22,
        "nltk": 20,
        "vm": 20,
        "test samples": 16,
        "testing samples": 16,
        "predicted labels": 16,
        "compsci": 15,
        "alpha significance value": 15,
        "null hypothesis": 15,
        "boolean values": 15,
        "test data": 15,
        "project notebook": 13,
        "career choice": 13,
        "missing": 12,
        "real world data": 12,
        "emojis": 12,
        "string labels": 12,
        "svm classifier": 12,
        "substring checking": 11,
        "missing gender information": 11,
        "unique responses": 11,
        "standard": 11,
        "hints": 11,
        "trailing whitespace": 11,
        "measurement systems": 11,
        "inches": 11,
        "exploratory data visualization": 11,
        "exploratory data vizualization": 11,
        "scatter matrix": 11,
        "bar chart plot": 11,
        "pandas objects": 11,
        "corpus data": 11,
        "natural language processing": 11,
        "nlp": 11,
        "natural language toolkit": 11,
        "tab separated raw text file": 11,
        "discriminative information": 11,
        "countvectorizer": 11,
        "array": 11,
        "vectorizer": 11,
        "custom sklearn objects": 11,
        "null value": 11,
        "ndarray": 10,
        "np": 10,
        "training data samples": 10,
        "test data samples": 10,
        "test sets": 10,
        "learnt classifier": 10,
        "training labels": 10,
        "trained classifier": 10,
        "predict labels": 10,
        "ice cream flavour": 9,
        "cs students": 9,
        "tf scaling": 9,
        "unique favourite ice cream": 8,
        "ions": 8,
        "disributions": 8,
        "statistical tests": 8,
        "test statistic": 8,
        "significance": 8,
        "cogsci": 8,
        "design matrices": 8,
        "review column": 8,
        "tfidf": 8,
        "vectors": 8,
        "values": 7,
        "cs data": 6,
        "height": 6,
        "confounding variable": 6,
        "ordinary least squares": 6,
        "linear models": 6,
        "svm": 6,
        "cogs students": 5,
        "mean height": 5,
        "ols model": 5,
        "customer review task": 5,
        "labels": 5,
        "header arguments": 5,
        "average heights": 4,
        "height distributions": 4,
        "alpha value": 4,
        "statistical test": 4,
        "interim conclusion": 4,
        "hypothesis": 4,
        "first pass analysis": 4,
        "confounding variables": 4,
        "women": 4,
        "df2": 4,
        "compsci majors": 4,
        "returned variable": 4,
        "pivot tables": 3,
        "average height values": 3,
        "pivot table": 3,
        "patsy": 3,
        "linearmodels": 3,
        "coll": 3,
        "spark exercise": 3,
        "tfidf vectorizer": 3,
        "advanced indexing": 2,
        "df dataframe": 2,
        "booleans": 2,
        "oleans": 2,
        "isnull": 2,
        "computer science majors": 2,
        "returned object": 2,
        "pandas array indexing": 1,
        "kmeans": 1,
        "boolean variables": 1,
        "predicted numerical labels": 1,
        "array element": 1
    },
    "tutorial": {
        "page views": 52,
        "cpu load": 44,
        "constant term": 44,
        "web server": 32,
        "linear realationship": 26,
        "historical": 26,
        "total page views": 26,
        "coefficient": 26,
        "train set": 24,
        "predict method": 23,
        "multiple linear regression": 21,
        "anomaly detection": 20,
        "x matrix": 19,
        "selection variable": 18,
        "backups": 18,
        "coefficients": 16,
        "page view": 16,
        "non-linear regression": 16,
        "random forests": 16,
        "support vector machines": 16,
        "cross products": 16,
        "polynomial features extraction": 16,
        "optimal weights": 16,
        "polynomal expansion function": 16,
        "false matches": 15,
        "functions": 15,
        "total request rate": 15,
        "arithmetical operations": 14,
        "random noise": 14,
        "noise level": 14,
        "noisy sine function": 14,
        "noise samples": 14,
        "width variable": 13,
        "jupyter": 13,
        "sine function": 12,
        "ridge regression": 12,
        "optimal plot": 12,
        "request rates": 12,
        "lassocv": 11,
        "warped images": 10,
        "recursion": 10,
        "maximum": 10,
        "minmum": 10,
        "cpu": 10,
        "unseen data": 9,
        "shape shifts": 9,
        "seasonality": 9,
        "cost array": 9,
        "axis variable": 8,
        "colored image": 8,
        "convenience function": 7,
        "color channels": 7,
        "variable model": 7,
        "exact indices": 6,
        "inspection": 6,
        "data import": 6,
        "data wrangling": 6,
        "web request": 6,
        "loaded data": 6,
        "head command": 6,
        "cpu column": 6,
        "numpy function": 6,
        "ransac": 5,
        "inliers": 5,
        "panorama": 5,
        "output": 5,
        "stationary image": 5,
        "input images": 5,
        "command mode": 5,
        "keyboard shortcuts": 5,
        "mathematical expressions": 5,
        "rocket icon": 5,
        "loops": 5,
        "lambdas": 5,
        "anonymous functions": 5,
        "ellipsis": 5,
        "code icon": 5,
        "double100": 4,
        "integers": 4,
        "numpy library": 4,
        "docs": 4,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "seed points": 4,
        "human eye": 3,
        "gaussian blurring function": 3,
        "image": 3,
        "overlap region": 3,
        "utility function": 3,
        "construct cost array": 3,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "optimal path": 3,
        "mcp": 3,
        "ransac transform estimation": 3,
        "random element": 3,
        "negative mask": 3,
        "numpy masked array conventions": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "width plot option": 2,
        "user guide": 2,
        "ts cell magic": 2,
        "python pic": 2,
        "request": 2,
        "average cpu usage": 2,
        "single linear regression": 2,
        "dictionaries": 2,
        "array computation package": 2,
        "fourier transforms": 2,
        "linear algebra": 2,
        "random numbers": 2,
        "solvers": 2,
        "interpolation routines": 2,
        "spare matrices": 2,
        "optimization": 2,
        "scipy": 2,
        "signal processing methods": 2,
        "basic differential equations": 2,
        "numeric integration": 2,
        "matlab": 2,
        "python program": 2,
        "united states": 2,
        "canada": 2,
        "partial derivative": 2,
        "berkeley bowl": 2,
        "cantaloupes": 2,
        "fine tuning": 2,
        "parameter tuning": 2,
        "label of interest": 2,
        "final mask": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2,
        "width parameter": 2,
        "identity matrix": 2,
        "boolean mask": 2,
        "core python crash course": 1,
        "latin alphabets": 1,
        "python 3": 1,
        "unicode strings": 1,
        "programming problem": 1,
        "collection types": 1,
        "associative arrays": 1,
        "collection type": 1,
        "default namespace": 1,
        "tab": 1,
        "question mark": 1,
        "ipython": 1,
        "ops": 1,
        "control flow": 1,
        "conditionals": 1,
        "control flow structure": 1,
        "error messages": 1,
        "vector dot products": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "fruit prices": 1,
        "final costs": 1,
        "fruit baskets": 1,
        "fasta file": 1,
        "sequence text combination": 1,
        "blast executions": 1,
        "rdd": 1,
        "multiple features": 1,
        "confidance intervals": 1,
        "gaussianprocess": 1,
        "ridgecv": 1,
        "importing idiom": 1,
        "dictionary types": 1,
        "multidimensional arrays": 1,
        "ave": 1,
        "structured matrices": 1,
        "element types": 1,
        "eye() function": 1,
        "diag()": 1,
        "element type": 1,
        "commas": 1,
        "indexing notation": 1,
        "numpy array variables": 1,
        "integer indices": 1,
        "indirect addressing": 1,
        "indexing": 1
    },
    "binary classification": {
        "bayes theorem": 44,
        "bag of words": 35,
        "diabetes": 31,
        "data preprocessing": 23,
        "countvectorizer()": 21,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "gre score": 13,
        "freedom": 13,
        "probabilistic inference algorithms": 12,
        "naive bayes theorem": 12,
        "nervousness": 12,
        "age": 12,
        "democratic presidential nominee": 12,
        "secret service": 12,
        "sex": 12,
        "sms message": 12,
        "text content": 12,
        "uci machine learning repository": 12,
        "tab separated dataset": 12,
        "recall scores": 12,
        "precision": 12,
        "performance metrics": 12,
        "binary variables": 12,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "testing sets": 10,
        "bag of words problem": 10,
        "bag of words processing": 10,
        "posteriors": 10,
        "bayes theorem implementation": 9,
        "bayes formula": 9,
        "true negative rate": 9,
        "true positive rate": 9,
        "medical field": 9,
        "specificity": 9,
        "sensitivity": 9,
        "naive bayes implementation": 9,
        "probabilities": 9,
        "punctuation marks": 8,
        "pandas function": 7,
        "pivot table": 7,
        "bar chart": 7,
        "undergraduate schools": 7,
        "score": 7,
        "map() function": 7,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "admission": 6,
        "gradient ascent": 5,
        "heaviside function": 4,
        "admission rate": 4,
        "confidence interval": 4,
        "uncertainty": 4,
        "helper function": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "gpa": 4,
        "prestige": 4,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "naive bayes implementations": 4,
        "word counts": 4,
        "text classification": 4,
        "logistic function": 3,
        "fudge factor": 3,
        "numpy matrix": 2,
        "conditional probability": 2,
        "moral equivalent": 2,
        "mle": 2,
        "signature": 2,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "gaussian naive bayes": 2,
        "na": 2,
        "bayes implementation": 2,
        "integer word counts": 2,
        "discrete": 2,
        "multinomial naive bayes implementation": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2,
        "random categorical variable": 2,
        "orical": 2,
        "mutually exclusive outcomes": 2,
        "binomial distribution": 2,
        "laplace smoothing": 2,
        "categorical random variable": 2,
        "multinomial distribution": 2,
        "occurrence counts": 2,
        "multin": 2,
        "mult": 2,
        "bernoulli variable": 2,
        "nb": 2,
        "probability distribution": 2,
        "discrete data": 2,
        "outcome probabilities": 2,
        "bern": 2,
        "quiz": 2,
        "preliminaries": 1,
        "marine biologists": 1,
        "predators": 1,
        "rock lobsters": 1,
        "median carapace": 1,
        "length": 1,
        "lobsters": 1,
        "binary label": 1,
        "initial dummy coordinate": 1,
        "binary vector": 1,
        "synthetic data sets": 1,
        "synthetic training set": 1,
        "synethetic data set": 1,
        "labeled data points": 1,
        "points matrix": 1,
        "numpy column vector labels": 1,
        "linear boundary": 1,
        "synthetic data example": 1,
        "linear discriminants": 1,
        "mathematical function": 1,
        "linear discriminant function": 1,
        "linear discriminant": 1,
        "aviside function": 1,
        "arithmetic operators": 1,
        "elementwise operations": 1,
        "test code": 1,
        "synthetic data": 1,
        "our plot": 1,
        "lobsters example": 1,
        "contour plot": 1,
        "sigmoid elementwise": 1,
        "gaussian distributions": 1,
        "statistics": 1,
        "normal equations": 1,
        "synthetic dataset": 1,
        "maximum likelihood estimation": 1,
        "maximum likelihood principle": 1,
        "objective function": 1,
        "arithm": 1,
        "joint probability": 1,
        "bernoulli trial": 1,
        "notational conventions": 1,
        "scalar argument": 1,
        "elementwise logarithm": 1,
        "least squares minimization": 1,
        "mle solution": 1,
        "numerical optimization procedures": 1,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "step size": 1,
        "numerical optimization": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "hessian": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1
    },
    "views": {
        "sine function": 46,
        "constant term": 40,
        "multiple linear regression": 36,
        "non-linear regression": 32,
        "train set": 30,
        "polynomial expansion": 29,
        "ridge regression": 28,
        "random forests": 27,
        "coefficient": 22,
        "linear classifier": 22,
        "predict method": 21,
        "selection variable": 20,
        "backups": 20,
        "x matrix": 18,
        "coefficients": 18,
        "page view": 18,
        "cpu load": 18,
        "support vector machines": 18,
        "machine learning technique": 18,
        "polynomial function": 18,
        "taylor expansion": 18,
        "math class": 18,
        "polynomialfeatures": 18,
        "cross products": 18,
        "polynomial features extraction": 18,
        "optimal weights": 18,
        "polynomal expansion function": 18,
        "ials": 17,
        "mathematical precision": 17,
        "random noise": 17,
        "noise level": 17,
        "noisy sine function": 17,
        "noise samples": 17,
        "functions": 17,
        "test score": 16,
        "validation score": 16,
        "validation sets": 16,
        "average error": 16,
        "set": 16,
        "optimal degree": 14,
        "regularisation parameter": 14,
        "optimal plot": 14,
        "extrapolation": 14,
        "colored image": 12,
        "machine learning algorithms": 12,
        "width parameter": 12,
        "non-linear classification": 10,
        "non-linear classifier": 10,
        "polynomials": 10,
        "linear decision boundary": 10,
        "t optimal degree": 9,
        "lassocv()": 9,
        "ridgecv()": 9,
        "forecasting techniques": 8,
        "double spiral": 8,
        "decision trees": 8,
        "double spiral problem": 8,
        "voting mechanism": 8,
        "matical representation": 8,
        "fine tuning": 6,
        "parameter tuning": 6,
        "forecasting": 6,
        "anomaly detection": 6,
        "page views data": 6,
        "multiple features": 6,
        "width variable": 6,
        "gaussianprocess()": 5,
        "confidance intervals": 5,
        "lassocv": 5,
        "noise level estimation": 4,
        "validation": 4,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial feature extraction": 1
    },
    "cpu": {
        "sine function": 46,
        "constant term": 40,
        "multiple linear regression": 36,
        "non-linear regression": 32,
        "train set": 30,
        "polynomial expansion": 29,
        "ridge regression": 28,
        "random forests": 27,
        "coefficient": 22,
        "linear classifier": 22,
        "predict method": 21,
        "selection variable": 20,
        "backups": 20,
        "x matrix": 18,
        "coefficients": 18,
        "page view": 18,
        "cpu load": 18,
        "support vector machines": 18,
        "machine learning technique": 18,
        "polynomial function": 18,
        "taylor expansion": 18,
        "math class": 18,
        "polynomialfeatures": 18,
        "cross products": 18,
        "polynomial features extraction": 18,
        "optimal weights": 18,
        "polynomal expansion function": 18,
        "ials": 17,
        "mathematical precision": 17,
        "random noise": 17,
        "noise level": 17,
        "noisy sine function": 17,
        "noise samples": 17,
        "functions": 17,
        "test score": 16,
        "validation score": 16,
        "validation sets": 16,
        "average error": 16,
        "set": 16,
        "optimal degree": 14,
        "regularisation parameter": 14,
        "optimal plot": 14,
        "extrapolation": 14,
        "colored image": 12,
        "machine learning algorithms": 12,
        "width parameter": 12,
        "non-linear classification": 10,
        "non-linear classifier": 10,
        "polynomials": 10,
        "linear decision boundary": 10,
        "t optimal degree": 9,
        "lassocv()": 9,
        "ridgecv()": 9,
        "forecasting techniques": 8,
        "double spiral": 8,
        "decision trees": 8,
        "double spiral problem": 8,
        "voting mechanism": 8,
        "matical representation": 8,
        "fine tuning": 6,
        "parameter tuning": 6,
        "forecasting": 6,
        "anomaly detection": 6,
        "page views data": 6,
        "multiple features": 6,
        "width variable": 6,
        "gaussianprocess()": 5,
        "confidance intervals": 5,
        "lassocv": 5,
        "noise level estimation": 4,
        "validation": 4,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial feature extraction": 1
    },
    "predict function": {
        "sine function": 46,
        "multiple linear regression": 41,
        "non-linear regression": 32,
        "train set": 30,
        "polynomial expansion": 29,
        "ridge regression": 28,
        "random forests": 27,
        "predict method": 24,
        "linear classifier": 22,
        "x matrix": 21,
        "selection variable": 20,
        "backups": 20,
        "constant term": 20,
        "cpu load": 20,
        "coefficients": 18,
        "page view": 18,
        "support vector machines": 18,
        "machine learning technique": 18,
        "polynomial function": 18,
        "taylor expansion": 18,
        "math class": 18,
        "polynomialfeatures": 18,
        "cross products": 18,
        "polynomial features extraction": 18,
        "optimal weights": 18,
        "polynomal expansion function": 18,
        "ials": 17,
        "mathematical precision": 17,
        "random noise": 17,
        "noise level": 17,
        "noisy sine function": 17,
        "noise samples": 17,
        "functions": 17,
        "test score": 16,
        "validation score": 16,
        "validation sets": 16,
        "average error": 16,
        "set": 16,
        "optimal degree": 14,
        "regularisation parameter": 14,
        "optimal plot": 14,
        "extrapolation": 14,
        "width parameter": 14,
        "colored image": 12,
        "machine learning algorithms": 12,
        "non-linear classification": 10,
        "non-linear classifier": 10,
        "polynomials": 10,
        "linear decision boundary": 10,
        "t optimal degree": 9,
        "lassocv()": 9,
        "ridgecv()": 9,
        "forecasting techniques": 8,
        "double spiral": 8,
        "decision trees": 8,
        "double spiral problem": 8,
        "voting mechanism": 8,
        "matical representation": 8,
        "anomaly detection": 8,
        "page views data": 7,
        "multiple features": 7,
        "width variable": 7,
        "fine tuning": 6,
        "parameter tuning": 6,
        "forecasting": 6,
        "confidance intervals": 6,
        "lassocv": 6,
        "gaussianprocess()": 5,
        "noise level estimation": 4,
        "validation": 4,
        "request": 2,
        "average cpu usage": 2,
        "single linear regression": 2,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial feature extraction": 1,
        "gaussianprocess": 1,
        "ridgecv": 1
    },
    "fit function": {
        "sine function": 46,
        "multiple linear regression": 41,
        "non-linear regression": 32,
        "train set": 30,
        "polynomial expansion": 29,
        "ridge regression": 28,
        "random forests": 27,
        "predict method": 24,
        "linear classifier": 22,
        "x matrix": 21,
        "selection variable": 20,
        "backups": 20,
        "constant term": 20,
        "cpu load": 20,
        "coefficients": 18,
        "page view": 18,
        "support vector machines": 18,
        "machine learning technique": 18,
        "polynomial function": 18,
        "taylor expansion": 18,
        "math class": 18,
        "polynomialfeatures": 18,
        "cross products": 18,
        "polynomial features extraction": 18,
        "optimal weights": 18,
        "polynomal expansion function": 18,
        "ials": 17,
        "mathematical precision": 17,
        "random noise": 17,
        "noise level": 17,
        "noisy sine function": 17,
        "noise samples": 17,
        "functions": 17,
        "test score": 16,
        "validation score": 16,
        "validation sets": 16,
        "average error": 16,
        "set": 16,
        "optimal degree": 14,
        "regularisation parameter": 14,
        "optimal plot": 14,
        "extrapolation": 14,
        "width parameter": 14,
        "colored image": 12,
        "machine learning algorithms": 12,
        "non-linear classification": 10,
        "non-linear classifier": 10,
        "polynomials": 10,
        "linear decision boundary": 10,
        "t optimal degree": 9,
        "lassocv()": 9,
        "ridgecv()": 9,
        "forecasting techniques": 8,
        "double spiral": 8,
        "decision trees": 8,
        "double spiral problem": 8,
        "voting mechanism": 8,
        "matical representation": 8,
        "anomaly detection": 8,
        "page views data": 7,
        "multiple features": 7,
        "width variable": 7,
        "fine tuning": 6,
        "parameter tuning": 6,
        "forecasting": 6,
        "confidance intervals": 6,
        "lassocv": 6,
        "gaussianprocess()": 5,
        "noise level estimation": 4,
        "validation": 4,
        "request": 2,
        "average cpu usage": 2,
        "single linear regression": 2,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial feature extraction": 1,
        "gaussianprocess": 1,
        "ridgecv": 1
    },
    "multiple linear regression": {
        "sine function": 46,
        "train set": 30,
        "polynomial expansion": 29,
        "ridge regression": 28,
        "random forests": 27,
        "non-linear regression": 26,
        "linear classifier": 22,
        "x matrix": 21,
        "constant term": 20,
        "cpu load": 20,
        "coefficients": 18,
        "page view": 18,
        "support vector machines": 18,
        "machine learning technique": 18,
        "polynomial function": 18,
        "taylor expansion": 18,
        "math class": 18,
        "polynomialfeatures": 18,
        "cross products": 18,
        "polynomial features extraction": 18,
        "optimal weights": 18,
        "multiple linear regression": 18,
        "polynomal expansion function": 18,
        "ials": 17,
        "mathematical precision": 17,
        "random noise": 17,
        "noise level": 17,
        "noisy sine function": 17,
        "noise samples": 17,
        "functions": 17,
        "test score": 16,
        "validation score": 16,
        "validation sets": 16,
        "average error": 16,
        "set": 16,
        "optimal degree": 14,
        "regularisation parameter": 14,
        "optimal plot": 14,
        "colored image": 12,
        "machine learning algorithms": 12,
        "width parameter": 12,
        "multiple regression": 12,
        "non-linear classification": 10,
        "non-linear classifier": 10,
        "polynomials": 10,
        "linear decision boundary": 10,
        "t optimal degree": 9,
        "lassocv()": 9,
        "ridgecv()": 9,
        "extrapolation": 8,
        "forecasting techniques": 8,
        "decision trees": 8,
        "double spiral problem": 8,
        "voting mechanism": 8,
        "matical representation": 8,
        "width variable": 8,
        "predictive performance": 8,
        "test": 8,
        "attributes": 8,
        "optimal coefficient": 8,
        "house price": 8,
        "prediction error": 8,
        "house size": 8,
        "predicted price": 8,
        "prediction errors": 8,
        "predicted prices": 8,
        "fine tuning": 6,
        "parameter tuning": 6,
        "multiple features": 6,
        "regression": 6,
        "correlation": 6,
        "gaussianprocess()": 5,
        "confidance intervals": 5,
        "lassocv": 5,
        "noise level estimation": 4,
        "validation": 4,
        "request": 2,
        "residuals": 2,
        "test errors": 2,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial feature extraction": 1
    },
    "linear correlation": {
        "sine function": 46,
        "multiple linear regression": 36,
        "non-linear regression": 32,
        "train set": 30,
        "polynomial expansion": 29,
        "ridge regression": 28,
        "random forests": 27,
        "linear classifier": 22,
        "selection variable": 20,
        "backups": 20,
        "x matrix": 18,
        "coefficients": 18,
        "page view": 18,
        "constant term": 18,
        "cpu load": 18,
        "support vector machines": 18,
        "machine learning technique": 18,
        "polynomial function": 18,
        "taylor expansion": 18,
        "math class": 18,
        "polynomialfeatures": 18,
        "cross products": 18,
        "polynomial features extraction": 18,
        "optimal weights": 18,
        "polynomal expansion function": 18,
        "ials": 17,
        "mathematical precision": 17,
        "random noise": 17,
        "noise level": 17,
        "noisy sine function": 17,
        "noise samples": 17,
        "functions": 17,
        "test score": 16,
        "validation score": 16,
        "validation sets": 16,
        "average error": 16,
        "set": 16,
        "optimal degree": 14,
        "regularisation parameter": 14,
        "optimal plot": 14,
        "extrapolation": 14,
        "colored image": 12,
        "machine learning algorithms": 12,
        "width parameter": 12,
        "non-linear classification": 10,
        "non-linear classifier": 10,
        "polynomials": 10,
        "linear decision boundary": 10,
        "t optimal degree": 9,
        "lassocv()": 9,
        "ridgecv()": 9,
        "forecasting techniques": 8,
        "double spiral": 8,
        "decision trees": 8,
        "double spiral problem": 8,
        "voting mechanism": 8,
        "matical representation": 8,
        "fine tuning": 6,
        "parameter tuning": 6,
        "forecasting": 6,
        "anomaly detection": 6,
        "page views data": 6,
        "multiple features": 6,
        "width variable": 6,
        "gaussianprocess()": 5,
        "confidance intervals": 5,
        "lassocv": 5,
        "noise level estimation": 4,
        "validation": 4,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial feature extraction": 1
    },
    "spam detection": {
        "bayes theorem": 44,
        "bag of words": 35,
        "diabetes": 31,
        "data preprocessing": 23,
        "countvectorizer()": 21,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "probabilistic inference algorithms": 12,
        "naive bayes theorem": 12,
        "nervousness": 12,
        "age": 12,
        "democratic presidential nominee": 12,
        "secret service": 12,
        "sex": 12,
        "sms message": 12,
        "text content": 12,
        "uci machine learning repository": 12,
        "tab separated dataset": 12,
        "recall scores": 12,
        "precision": 12,
        "performance metrics": 12,
        "binary variables": 12,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "testing sets": 10,
        "bag of words problem": 10,
        "bag of words processing": 10,
        "posteriors": 10,
        "bayes theorem implementation": 9,
        "bayes formula": 9,
        "true negative rate": 9,
        "true positive rate": 9,
        "medical field": 9,
        "specificity": 9,
        "sensitivity": 9,
        "naive bayes implementation": 9,
        "probabilities": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "tensorflow": 5,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "naive bayes implementations": 4,
        "word counts": 4,
        "text classification": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "gaussian naive bayes": 2,
        "na": 2,
        "bayes implementation": 2,
        "integer word counts": 2,
        "discrete": 2,
        "multinomial naive bayes implementation": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2,
        "random categorical variable": 2,
        "orical": 2,
        "mutually exclusive outcomes": 2,
        "binomial distribution": 2,
        "laplace smoothing": 2,
        "categorical random variable": 2,
        "multinomial distribution": 2,
        "occurrence counts": 2,
        "multin": 2,
        "mult": 2,
        "bernoulli variable": 2,
        "nb": 2,
        "probability distribution": 2,
        "discrete data": 2,
        "outcome probabilities": 2,
        "bern": 2,
        "gradient descent": 2,
        "test sets": 1,
        "validation": 1,
        "training example": 1,
        "x28": 1,
        "training examples": 1,
        "multiclass classification": 1,
        "softmax loss function": 1,
        "true labels": 1,
        "trained model": 1,
        "input variable": 1,
        "mnist dataset": 1,
        "bias vectors": 1,
        "gradient descent training": 1,
        "softmax regression function": 1,
        "softmax implementation": 1,
        "negative log probability": 1,
        "softmax regression": 1,
        "classification function": 1,
        "cross entropy loss": 1,
        "learning rate": 1,
        "cross entropy loss function": 1,
        "tutorials": 1
    },
    "predictor variables": {
        "ridgecv": 32,
        "3rd degree polynomial": 30,
        "regularized regression": 24,
        "linearregression object": 24,
        "plotting function": 18,
        "3rd degree polynomial regression": 18,
        "polynomialfeatures": 18,
        "polynomial": 18,
        "test sets": 18,
        "training error": 18,
        "polynomial approximation": 18,
        "testing error": 18,
        "lasso": 18,
        "idgecv": 18,
        "datatypes": 18,
        "info()": 18,
        "ols()": 18,
        "atemp column": 15,
        "registered columns": 15,
        "instant column": 15,
        "columns": 15,
        "correlations": 15,
        "fit()": 15,
        "gre score": 13,
        "modeling": 12,
        "linear models": 12,
        "data preparation": 12,
        "model performance": 12,
        "nom": 12,
        "ression": 12,
        "asso regression": 12,
        "cost function": 12,
        "idge regression": 12,
        "predictor variables": 12,
        "lasso regression": 12,
        "response variables": 12,
        "ridge regression": 12,
        "automatic regular": 12,
        "sklearn pipeline": 12,
        "sin function": 12,
        "ex": 12,
        "exercises": 12,
        "bike sharing dataset": 12,
        "ises": 12,
        "distributions": 12,
        "boxplots": 12,
        "relationships": 12,
        "humidity": 12,
        "confidence interval": 10,
        "boxplot": 9,
        "statsmodels model": 9,
        "summary()": 9,
        "()": 9,
        "season": 9,
        "linearregression": 9,
        "response vector": 9,
        "iloc": 9,
        "features data matrix": 9,
        "pandas function": 7,
        "pivot table": 7,
        "bar chart": 7,
        "undergraduate schools": 7,
        "score": 7,
        "map() function": 7,
        "admission": 6,
        "middle table": 6,
        "regression statistics": 6,
        "predictors": 6,
        "correlation coefficient": 6,
        "score()": 6,
        "admission rate": 4,
        "uncertainty": 4,
        "helper function": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "gpa": 4,
        "prestige": 4,
        "correlation": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "linearregression model": 3,
        "data matrix": 3,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2,
        "indicator variables": 2,
        "lambda function": 2,
        "categorical attributes": 2,
        "hours distribution": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "corr()": 1,
        "order()": 1
    },
    "mail": {
        "bayes theorem": 44,
        "bag of words": 35,
        "diabetes": 31,
        "data preprocessing": 23,
        "countvectorizer()": 21,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "probabilistic inference algorithms": 12,
        "naive bayes theorem": 12,
        "nervousness": 12,
        "age": 12,
        "democratic presidential nominee": 12,
        "secret service": 12,
        "sex": 12,
        "sms message": 12,
        "text content": 12,
        "uci machine learning repository": 12,
        "tab separated dataset": 12,
        "recall scores": 12,
        "precision": 12,
        "performance metrics": 12,
        "binary variables": 12,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "testing sets": 10,
        "bag of words problem": 10,
        "bag of words processing": 10,
        "posteriors": 10,
        "bayes theorem implementation": 9,
        "bayes formula": 9,
        "true negative rate": 9,
        "true positive rate": 9,
        "medical field": 9,
        "specificity": 9,
        "sensitivity": 9,
        "naive bayes implementation": 9,
        "probabilities": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "naive bayes implementations": 4,
        "word counts": 4,
        "text classification": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "gaussian naive bayes": 2,
        "na": 2,
        "bayes implementation": 2,
        "integer word counts": 2,
        "discrete": 2,
        "multinomial naive bayes implementation": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2,
        "random categorical variable": 2,
        "orical": 2,
        "mutually exclusive outcomes": 2,
        "binomial distribution": 2,
        "laplace smoothing": 2,
        "categorical random variable": 2,
        "multinomial distribution": 2,
        "occurrence counts": 2,
        "multin": 2,
        "mult": 2,
        "bernoulli variable": 2,
        "nb": 2,
        "probability distribution": 2,
        "discrete data": 2,
        "outcome probabilities": 2,
        "bern": 2
    },
    "email service providers": {
        "bayes theorem": 44,
        "bag of words": 35,
        "diabetes": 31,
        "data preprocessing": 23,
        "countvectorizer()": 21,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "probabilistic inference algorithms": 12,
        "naive bayes theorem": 12,
        "nervousness": 12,
        "age": 12,
        "democratic presidential nominee": 12,
        "secret service": 12,
        "sex": 12,
        "sms message": 12,
        "text content": 12,
        "uci machine learning repository": 12,
        "tab separated dataset": 12,
        "recall scores": 12,
        "precision": 12,
        "performance metrics": 12,
        "binary variables": 12,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "testing sets": 10,
        "bag of words problem": 10,
        "bag of words processing": 10,
        "posteriors": 10,
        "bayes theorem implementation": 9,
        "bayes formula": 9,
        "true negative rate": 9,
        "true positive rate": 9,
        "medical field": 9,
        "specificity": 9,
        "sensitivity": 9,
        "naive bayes implementation": 9,
        "probabilities": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "naive bayes implementations": 4,
        "word counts": 4,
        "text classification": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "gaussian naive bayes": 2,
        "na": 2,
        "bayes implementation": 2,
        "integer word counts": 2,
        "discrete": 2,
        "multinomial naive bayes implementation": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2,
        "random categorical variable": 2,
        "orical": 2,
        "mutually exclusive outcomes": 2,
        "binomial distribution": 2,
        "laplace smoothing": 2,
        "categorical random variable": 2,
        "multinomial distribution": 2,
        "occurrence counts": 2,
        "multin": 2,
        "mult": 2,
        "bernoulli variable": 2,
        "nb": 2,
        "probability distribution": 2,
        "discrete data": 2,
        "outcome probabilities": 2,
        "bern": 2
    },
    "naive bayes algorithm": {
        "bayes theorem": 44,
        "bag of words": 35,
        "diabetes": 31,
        "data preprocessing": 23,
        "countvectorizer()": 21,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "probabilistic inference algorithms": 12,
        "naive bayes theorem": 12,
        "nervousness": 12,
        "age": 12,
        "democratic presidential nominee": 12,
        "secret service": 12,
        "sex": 12,
        "sms message": 12,
        "text content": 12,
        "uci machine learning repository": 12,
        "tab separated dataset": 12,
        "recall scores": 12,
        "precision": 12,
        "performance metrics": 12,
        "binary variables": 12,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "testing sets": 10,
        "bag of words problem": 10,
        "bag of words processing": 10,
        "posteriors": 10,
        "bayes theorem implementation": 9,
        "bayes formula": 9,
        "true negative rate": 9,
        "true positive rate": 9,
        "medical field": 9,
        "specificity": 9,
        "sensitivity": 9,
        "naive bayes implementation": 9,
        "probabilities": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "naive bayes implementations": 4,
        "word counts": 4,
        "text classification": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "gaussian naive bayes": 2,
        "na": 2,
        "bayes implementation": 2,
        "integer word counts": 2,
        "discrete": 2,
        "multinomial naive bayes implementation": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2,
        "random categorical variable": 2,
        "orical": 2,
        "mutually exclusive outcomes": 2,
        "binomial distribution": 2,
        "laplace smoothing": 2,
        "categorical random variable": 2,
        "multinomial distribution": 2,
        "occurrence counts": 2,
        "multin": 2,
        "mult": 2,
        "bernoulli variable": 2,
        "nb": 2,
        "probability distribution": 2,
        "discrete data": 2,
        "outcome probabilities": 2,
        "bern": 2
    },
    "junk mail": {
        "bayes theorem": 44,
        "bag of words": 35,
        "diabetes": 31,
        "data preprocessing": 23,
        "countvectorizer()": 21,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "probabilistic inference algorithms": 12,
        "naive bayes theorem": 12,
        "nervousness": 12,
        "age": 12,
        "democratic presidential nominee": 12,
        "secret service": 12,
        "sex": 12,
        "sms message": 12,
        "text content": 12,
        "uci machine learning repository": 12,
        "tab separated dataset": 12,
        "recall scores": 12,
        "precision": 12,
        "performance metrics": 12,
        "binary variables": 12,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "testing sets": 10,
        "bag of words problem": 10,
        "bag of words processing": 10,
        "posteriors": 10,
        "bayes theorem implementation": 9,
        "bayes formula": 9,
        "true negative rate": 9,
        "true positive rate": 9,
        "medical field": 9,
        "specificity": 9,
        "sensitivity": 9,
        "naive bayes implementation": 9,
        "probabilities": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "naive bayes implementations": 4,
        "word counts": 4,
        "text classification": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "gaussian naive bayes": 2,
        "na": 2,
        "bayes implementation": 2,
        "integer word counts": 2,
        "discrete": 2,
        "multinomial naive bayes implementation": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2,
        "random categorical variable": 2,
        "orical": 2,
        "mutually exclusive outcomes": 2,
        "binomial distribution": 2,
        "laplace smoothing": 2,
        "categorical random variable": 2,
        "multinomial distribution": 2,
        "occurrence counts": 2,
        "multin": 2,
        "mult": 2,
        "bernoulli variable": 2,
        "nb": 2,
        "probability distribution": 2,
        "discrete data": 2,
        "outcome probabilities": 2,
        "bern": 2
    },
    "decision trees": {
        "regression tree": 32,
        "early stopping conditions": 30,
        "decision trees": 28,
        "classification error": 28,
        "mean salary": 27,
        "minimum node size": 24,
        "prediction path": 24,
        "error reduction": 18,
        "regression": 18,
        "splitting rule": 18,
        "cutpoint": 17,
        "validation data": 14,
        "early stopping condition": 12,
        "intermediate node": 12,
        "tree learning algorithm": 12,
        "tree model": 12,
        "validation error": 12,
        "decision tree model": 12,
        "nearest neighbor algorithm": 9,
        "computation time": 9,
        "early stopping methods": 9,
        "safe loans": 9,
        "group exercise": 9,
        "equivalent regression tree": 9,
        "computer": 9,
        "salary": 9,
        "vehicle sale prices": 9,
        "binary splits": 9,
        "mean price": 9,
        "recursive binary splitting": 9,
        "maximum tree depth": 9,
        "stopping criterion": 9,
        "distance function": 8,
        "pybatch": 8,
        "lowest classification error": 8,
        "distance computation": 7,
        "fine tuning": 6,
        "parameter tuning": 6,
        "binary decision trees": 6,
        "home ownership status": 6,
        "maximum depth": 6,
        "binary tree implementation": 6,
        "maximum depth stopping condition": 6,
        "stopping": 6,
        "risky loans": 6,
        "binary decision tree helper functions": 6,
        "misclassified examples": 6,
        "majority class": 6,
        "binary decision tree implementation": 6,
        "minimum error reduction": 6,
        "if condition": 6,
        "function classify": 6,
        "predicted class": 6,
        "training error": 6,
        "http requests": 5,
        "weather underground": 5,
        "terms of service": 5,
        "api": 5,
        "weather": 5,
        "apis": 5,
        "weather underground api": 5,
        "json": 4,
        "parse time": 4,
        "history": 4,
        "visibilities": 4,
        "square euclidean distance": 4,
        "nearest neighbors": 4,
        "python nearest neighbor": 4,
        "unlabeled point": 4,
        "nearest neighbor": 4,
        "distance matrix": 4,
        "distance compuation": 4,
        "function pydistance": 4,
        "higher performance": 4,
        "correct": 4,
        "python nearest neighbor search": 4,
        "optimized nearest neighbor function": 4,
        "unlabeled test points": 4,
        "fixed parameters": 4,
        "toy dataset": 4,
        "digit recognition task": 4,
        "numpy operations": 4,
        "pairwise distances": 4,
        "squared euclidean distance": 4,
        "lowest": 4,
        "wine quality dataset": 4,
        "gini index": 4,
        "iata airport code": 3,
        "carrier code": 3,
        "departure delay": 3,
        "crsdeptime": 3,
        "depdelay": 3,
        "uniquecarrier": 3,
        "scheduled departure time": 3,
        "ord": 3,
        "american airlines": 3,
        "departure": 3,
        "frame": 3,
        "time visibility": 3,
        "code cell": 3,
        "test sets": 3,
        "speedup": 3,
        "numpy optimized distance computation": 3,
        "nearest neighbor search": 3,
        "multiple test points": 3,
        "age": 3,
        "sex": 3,
        "overfitting": 3,
        "stopping parameters": 3,
        "graphlab create": 3,
        "lendingclub": 3,
        "safe loan": 3,
        "categorical features": 3,
        "binary decision tree": 3,
        "subsample dataset": 3,
        "learning algorithm": 3,
        "binary features": 3,
        "api documentation": 3,
        "graphlab": 3,
        "loanee": 3,
        "categorical data": 3,
        "binary data": 3,
        "feature columns": 3,
        "prediction accuracy": 3,
        "boosted trees model": 3,
        "probabilities": 3,
        "prediction probability": 3,
        "classification trees": 3,
        "classification error rate": 3,
        "vectorized way": 2,
        "big data": 2,
        "numerical operations": 2,
        "iterrows()": 2,
        "points": 2,
        "optimization": 2,
        "cabin number": 2,
        "cabin": 2,
        "fare": 2,
        "ticket number": 2,
        "prediction targets": 2,
        "qu": 2,
        "complexity": 2,
        "define folds": 2,
        "random forest": 2,
        "tree models": 2,
        "training errors": 2,
        "tree diagram": 2,
        "predicted probability": 2,
        "response variable": 2,
        "splitting criteria": 2,
        "decision tree algorithm": 2,
        "extratree": 2,
        "decision rules": 2,
        "decisiontreeregression": 2,
        "decisiontreeregressor": 2,
        "important features": 2,
        "importance weight": 2,
        "returned dataframes": 1,
        "decision trees model": 1,
        "default parameters": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1,
        "handwritten digits recognition dataset": 1,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1,
        "survival outcome outcomes": 1,
        "rms titanic": 1,
        "data preprocessing": 1,
        "testing sets": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1,
        "predictors": 1,
        "python lists": 1,
        "check": 1,
        "gradient boosted trees": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1,
        "mean response value": 1,
        "observation": 1,
        "predictive feature": 1,
        "high": 1,
        "high school graduation rate": 1,
        "high population density": 1,
        "continuous response": 1,
        "regression trees": 1,
        "categorical response": 1,
        "mean response": 1,
        "total variance": 1,
        "training observations": 1,
        "maximum value": 1,
        "node purity": 1,
        "titanic": 1
    },
    "jupyter notebooks": {
        "mathematical functions": 32,
        "broadcasting": 20,
        "tab completion": 16,
        "matlab": 16,
        "numpy module": 16,
        "dataframe structures": 16,
        "null vector": 15,
        "string methods": 13,
        "jupyter": 13,
        "string values": 12,
        "slicing": 12,
        "random values": 12,
        "replace method": 11,
        "string value": 11,
        "final expression": 11,
        "zfill": 11,
        "decimal point": 11,
        "pi": 10,
        "natural logarithm": 10,
        "recursion": 10,
        "automatic tests": 10,
        "int value float": 10,
        "float value": 10,
        "line magics": 8,
        "notebook kernel": 8,
        "help documentation": 8,
        "import packages": 8,
        "linear algebra": 8,
        "nonnegative integers": 8,
        "array indexing": 8,
        "boolean array indexing": 8,
        "array datatypes": 8,
        "numeric datatypes": 8,
        "array math": 8,
        "operator overloads": 8,
        "elementwise multiplication": 8,
        "array objects": 8,
        "matrix multiplication": 8,
        "inner products": 8,
        "dot function": 8,
        "arithmetic operations": 8,
        "elementwise maximum": 8,
        "numpy documentation": 8,
        "command mode": 8,
        "column names": 8,
        "values method": 8,
        "age": 8,
        "color channels": 7,
        "math module": 7,
        "image function": 7,
        "web pages": 7,
        "outlier detection": 7,
        "unsupervised learning algorithms": 7,
        "matrix decomposition": 7,
        "linear models": 7,
        "density estimation": 7,
        "unsupervised learning": 7,
        "nearest neighbors": 7,
        "machine learning library": 7,
        "support vector machines": 7,
        "predictive models": 7,
        "learn": 7,
        "tutorial": 7,
        "scikit-learn": 7,
        "titanic survival dataset": 7,
        "sklearn library": 7,
        "categorical variables": 7,
        "exploratory data analysis": 7,
        "numerical variables": 7,
        "keyboard shortcuts": 6,
        "null matrix": 6,
        "3 x 3 identity matrix": 6,
        "maximum values": 6,
        "arithmetic operators": 6,
        "mathematical expressions": 5,
        "rocket icon": 5,
        "loops": 5,
        "lambdas": 5,
        "anonymous functions": 5,
        "ellipsis": 5,
        "code icon": 5,
        "credit dataset": 5,
        "donald knuth": 5,
        "string method lower": 5,
        "double100": 4,
        "integers": 4,
        "numpy library": 4,
        "docs": 4,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "non-zero elements": 4,
        "random matrices": 4,
        "random vector": 4,
        "random matrix": 4,
        "pandas introduction": 4,
        "data manipulation": 4,
        "data structures": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "selection": 4,
        "column headers": 4,
        "filtering": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "pandas exercises": 4,
        "edit mode": 4,
        "human eye": 3,
        "gaussian blurring function": 3,
        "image": 3,
        "dataset": 3,
        "square brackets": 3,
        "seaborn plot": 3,
        "python pic": 2,
        "ipython": 2,
        "numpy method": 2,
        "statistics table": 2,
        "attribute creditamount": 2,
        "partial derivative": 2,
        "berkeley bowl": 2,
        "cantaloupes": 2,
        "calls dataframe": 2,
        "vertical bar plot": 2,
        "noise violation calls": 2,
        "code cells": 2,
        "python code": 2,
        "stackoverflow": 1,
        "stack overflow": 1,
        "conversion function": 1,
        "len": 1,
        "latin alphabets": 1,
        "python 3": 1,
        "unicode strings": 1,
        "dictionaries": 1,
        "collection types": 1,
        "tab": 1,
        "question mark": 1,
        "control flow structure": 1,
        "matplotlib introduction": 1,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "matplotlib exercises": 1,
        "black coloured markers": 1,
        "font size": 1,
        "attributes duration": 1,
        "vector dot products": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "fruit prices": 1,
        "final costs": 1,
        "fruit baskets": 1,
        "cvdow field": 1,
        "rotation argument": 1,
        "coolindex": 1,
        "noise violation": 1,
        "cvlegend": 1,
        "total noise violations": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "fraud": 1,
        "calls reporting": 1,
        "reasoning": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1,
        "mysqrt": 1,
        "sqrt()": 1,
        "modulo operation": 1,
        "mysqrt()": 1,
        "internet": 1,
        "python sieve": 1,
        "sieve": 1,
        "eratosthenes": 1,
        "prime numbers": 1,
        "markdown cell": 1,
        "code cell": 1,
        "cell type menu": 1,
        "markdown cells": 1,
        "cells": 1,
        "print function": 1,
        "parentheses": 1,
        "ipython kernel": 1,
        "kernel": 1,
        "python interpreter": 1,
        "kernel state": 1,
        "magics": 1,
        "ipython commands": 1,
        "user interface tour": 1,
        "coding assignments": 1,
        "test cells": 1
    },
    "lsst": {
        "database": 48,
        "fake010": 36,
        "source fake010": 33,
        "svm model": 27,
        "rawphot table": 24,
        "raw photometric observations": 24,
        "cursor object": 20,
        "variable class": 12,
        "weighted mean flux": 12,
        "case excpetion": 12,
        "source class": 12,
        "mean colors": 12,
        "ideas conda environment": 12,
        "sqlite3": 12,
        "sqlite3 import": 12,
        "database connection object": 12,
        "brokerlc class": 12,
        "running index": 12,
        "mjd": 12,
        "table rawphot": 12,
        "uncertainty": 12,
        "fake001": 12,
        "uster": 12,
        "ipython": 12,
        "temporary databases": 12,
        "full light curve": 12,
        "individual observations": 12,
        "lview variable": 12,
        "directview access": 12,
        "seriel operations": 12,
        "cross validation": 10,
        "pdf": 10,
        "sqlite": 9,
        "rawphot": 9,
        "foreign": 9,
        "lcfeats": 9,
        "map reduce procedure": 9,
        "brokerlc features": 9,
        "lcfeats table": 9,
        "lsst light curves": 9,
        "seriel solution": 9,
        "feats": 9,
        "directview implemenation": 9,
        "light curves": 9,
        "training step": 9,
        "ml models": 9,
        "timing loop": 9,
        "broker": 9,
        "testphot database": 9,
        "middle aged men": 9,
        "first light curve file": 8,
        "filters": 8,
        "many": 8,
        "plotting method": 8,
        "light curve files": 8,
        "multiband light curve": 8,
        "image differencing": 8,
        "statistical distributions": 8,
        "brightness measurements": 8,
        "negative flux": 8,
        "lsst": 8,
        "type ia supernova": 8,
        "transient": 8,
        "secondary peaks": 8,
        "secondary maxima": 8,
        "multiband light curves": 8,
        "triple quotes": 8,
        "chinups": 7,
        "variable class attributes": 6,
        "density estimation": 6,
        "parallel operations": 4,
        "tophat kernel": 4,
        "histogram plots": 3,
        "database table": 3,
        "testfeats table": 3,
        "waist size": 2,
        "pulse": 2,
        "weight": 2,
        "situps": 2,
        "jumps": 2,
        "linnerud data set": 2,
        "default settings": 2,
        "bin centers": 2,
        "continuous distribution": 2,
        "bin width": 2,
        "variable width bins": 2,
        "bin edges": 2,
        "bin choices": 2,
        "rug plot": 2,
        "chinup measurements": 2,
        "transparency": 2,
        "bin grouping": 2,
        "user choices": 2,
        "bin centering": 2,
        "univariate data": 2,
        "bin": 2,
        "output histogram": 2,
        "ering": 2,
        "epanechnikov": 2,
        "kernel density estimation": 2,
        "minimal mean square error": 2,
        "inverted parabola": 2,
        "discrete data": 2,
        "normalized kernel function": 2,
        "iris data set": 2,
        "dbscan": 2,
        "continuous data": 1,
        "bandwidth selection": 1,
        "epanechnikov kernel": 1,
        "random state": 1,
        "iris": 1,
        "euclidean distance": 1,
        "cluster centers": 1,
        "clustering outcome": 1,
        "petal length": 1,
        "scaling": 1,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "training error": 1,
        "generalization error": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1
    },
    "age": {
        "age": 28,
        "income": 27,
        "bayes theorem": 23,
        "tinder": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "tab separated dataset": 12,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "bag of words": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "tinder users": 11,
        "safe harbor method": 11,
        "iterative approach": 10,
        "data cleaning": 10,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "icon array": 10,
        "specificity": 9,
        "sensitivity": 9,
        "10": 8,
        "log transforming": 8,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "plotting": 6,
        "axis labels": 6,
        "data visualization": 6,
        "outliers": 5,
        "log10": 5,
        "population": 5,
        "subtle outliers": 4,
        "data values": 4,
        "pregnancy": 4,
        "median remaining time": 4,
        "first marriage": 4,
        "sampling weights": 4,
        "divorce": 4,
        "survival curve": 4,
        "sampling error": 4,
        "resampling": 4,
        "testing": 4,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "incomes": 4,
        "parmaters": 4,
        "mean value": 3,
        "exponential decay function": 3,
        "valueerror": 3,
        "zero values": 3,
        "math domain error": 3,
        "standard deviations": 3,
        "zip code": 3,
        "diistribution": 3,
        "transformantion": 3,
        "green marble": 3,
        "full icon array": 3,
        "conditional probability": 3,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2,
        "missing": 2,
        "marbles": 2,
        "icon arrays": 2,
        "icon colors": 2,
        "income distribution": 1,
        "age mood": 1,
        "correlationship coefficient": 1,
        "stroger relationships": 1,
        "income graph": 1,
        "skewed data distributions": 1,
        "logbase10": 1,
        "logarithmic transforms": 1,
        "corrs variable": 1,
        "fare predictor": 1,
        "passenger class": 1,
        "precision stats": 1,
        "predictors": 1,
        "green marbles": 1,
        "chemotherapy": 1,
        "radiation": 1,
        "women": 1,
        "probability distributions": 1,
        "cancer screening": 1,
        "medical tests": 1,
        "breast cancer": 1,
        "false positives": 1,
        "basic cancer statistics": 1,
        "contingency table": 1,
        "pivot": 1,
        "status": 1,
        "sum function": 1,
        "cancer test": 1,
        "population members": 1,
        "dropna": 1,
        "pandas dataframes": 1,
        "labels": 1,
        "matplotlib visualizations": 1,
        "lambda expression": 1,
        "log transform": 1,
        "geometric means": 1,
        "log10 transformation": 1,
        "pand": 1,
        "log transforming data": 1,
        "log base 10": 1
    },
    "regression": {
        "mean salary": 27,
        "predictor variables": 18,
        "polynomial": 18,
        "cutpoint": 17,
        "training error": 15,
        "ridgecv": 13,
        "regularized regression": 12,
        "ridge regression": 12,
        "3rd degree polynomial": 12,
        "correlation": 10,
        "group exercise": 9,
        "equivalent regression tree": 9,
        "computer": 9,
        "splitting rule": 9,
        "decision trees": 9,
        "salary": 9,
        "linearregression object": 8,
        "kernel matrix": 7,
        "complexity parameter": 7,
        "trailing whitespace problem": 6,
        "map function": 6,
        "series objects": 6,
        "seaborn pairplot": 6,
        "multicollinearity": 6,
        "ordinary least squares regression": 6,
        "data matrices": 6,
        "middle table": 6,
        "regression statistics": 6,
        "confidence interval": 6,
        "predictors": 6,
        "correlation coefficient": 6,
        "residuals": 6,
        "residue plot": 6,
        "functional dependency": 6,
        "modeling": 6,
        "linear models": 6,
        "data preparation": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "lasso regression": 6,
        "response variables": 6,
        "automatic regular": 6,
        "sklearn pipeline": 6,
        "sin function": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "test sets": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "l2 norm term": 6,
        "estimator": 6,
        "intercept term": 6,
        "statistical community": 6,
        "linear regression model": 6,
        "regularization parameter": 6,
        "regularized linear regression model": 6,
        "shrinkage": 6,
        "smoothness constraint": 6,
        "coefficient loadings": 6,
        "ordinary least squares regression model": 6,
        "regularization term": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "test set error": 5,
        "validation error": 5,
        "kernel function": 4,
        "gaussian process regression": 4,
        "univariate problem": 4,
        "training points": 4,
        "distributions": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "best fit model": 4,
        "test risk": 4,
        "validation": 4,
        "variable name majors": 3,
        "fivethirtyeight": 3,
        "average unemployment rate": 3,
        "matplotlib plots": 3,
        "majors": 3,
        "low wage jobs": 3,
        "data vectors": 3,
        "marginal distribution": 3,
        "vectorization": 3,
        "covariance": 3,
        "inner loop": 3,
        "mean function": 3,
        "model uncertainty": 3,
        "bishop": 3,
        "sample mean functions": 3,
        "dashed line": 3,
        "theta values": 3,
        "uncertainty": 3,
        "predictive distribution": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "covariance matrix": 3,
        "generative process": 3,
        "conditional models": 3,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "validation set error": 3,
        "hypothesis set": 3,
        "polynomial degree": 3,
        "vectorised functions": 3,
        "execution time": 3,
        "employment rates": 2,
        "hyperparameters": 2,
        "target noise": 2,
        "periodic data generator": 2,
        "score()": 2,
        "0th order polynomials": 2,
        "test set errors": 2,
        "hyper": 2,
        "learner": 2,
        "test error": 2,
        "validation set errors": 2,
        "predicted probability": 2,
        "response variable": 2,
        "decision tree algorithm": 2,
        "classification error rate": 2,
        "gini index": 2,
        "20th order polynomials": 2,
        "trip duration minutes": 2,
        "testing sets": 2,
        "women": 1,
        "part time rate": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1,
        "mean response value": 1,
        "observation": 1,
        "tree diagram": 1,
        "predictive feature": 1,
        "high": 1,
        "high school graduation rate": 1,
        "high population density": 1,
        "maximum value": 1,
        "splitting criteria": 1,
        "classification trees": 1,
        "node purity": 1,
        "titanic": 1,
        "sex": 1,
        "age": 1,
        "random splits": 1,
        "prediction error": 1,
        "multiple": 1,
        "validation process": 1,
        "validation errors": 1,
        "sine curve": 1,
        "hypothesis space": 1,
        "kfold": 1,
        "fold errors": 1,
        "dual problem": 1,
        "wildly behaving pilynomials": 1,
        "lagrange multipliers": 1,
        "bias": 1,
        "penalty term": 1,
        "multi layer perceptron": 1,
        "trip duration class": 1,
        "k neighbors classifier": 1,
        "gaussian naive bayes": 1,
        "report classification results": 1,
        "recall": 1,
        "decision tree classifier": 1,
        "predict": 1,
        "implementation": 1,
        "loops": 1,
        "execution speed": 1,
        "linear regression implementation": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "tutorials": {
        "mathematical functions": 32,
        "broadcasting": 20,
        "logvar": 18,
        "tab completion": 16,
        "matlab": 16,
        "numpy module": 16,
        "dataframe structures": 16,
        "null vector": 15,
        "pytorch": 13,
        "slicing": 12,
        "random values": 12,
        "predictive distribution": 11,
        "vae": 11,
        "variational lower bound": 10,
        "reconstruction": 9,
        "flattened mnist image": 9,
        "minimize function": 8,
        "line magics": 8,
        "notebook kernel": 8,
        "help documentation": 8,
        "import packages": 8,
        "linear algebra": 8,
        "nonnegative integers": 8,
        "array indexing": 8,
        "boolean array indexing": 8,
        "array datatypes": 8,
        "numeric datatypes": 8,
        "array math": 8,
        "operator overloads": 8,
        "elementwise multiplication": 8,
        "array objects": 8,
        "matrix multiplication": 8,
        "inner products": 8,
        "dot function": 8,
        "arithmetic operations": 8,
        "elementwise maximum": 8,
        "numpy documentation": 8,
        "column names": 8,
        "values method": 8,
        "gp object": 6,
        "posterior distribution": 6,
        "time delays": 6,
        "jupyter": 6,
        "numerical differentiation": 6,
        "null matrix": 6,
        "3 x 3 identity matrix": 6,
        "maximum values": 6,
        "optimization": 5,
        "neg log likelihood": 5,
        "expectation maximization": 5,
        "objective function": 5,
        "log bernoulli loss": 5,
        "multivariate bernoulli distribution": 5,
        "negative log bernoulli loss": 5,
        "oulli loss": 5,
        "log": 5,
        "kl term": 5,
        "multivariate": 5,
        "datasets": 5,
        "credit dataset": 5,
        "ellipsis": 4,
        "cod": 4,
        "datadata": 4,
        "hyperparameter search": 4,
        "latent variables": 4,
        "non-zero elements": 4,
        "random matrices": 4,
        "random vector": 4,
        "random matrix": 4,
        "pandas introduction": 4,
        "data manipulation": 4,
        "data structures": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "observation": 4,
        "selection": 4,
        "column headers": 4,
        "filtering": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "pandas exercises": 4,
        "ball park values": 3,
        "white noise standard deviation": 3,
        "compute method": 3,
        "covariance matrix": 3,
        "george tutorial": 3,
        "neg log likelihood function": 3,
        "logarithms": 3,
        "log parameters": 3,
        "likelihood": 3,
        "maxim": 3,
        "parameter vector": 3,
        "grid locations": 3,
        "predictive mean": 3,
        "confidence intervals": 3,
        "the": 3,
        "emcee": 3,
        "gradient functions": 3,
        "agn reverberation mapping": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "double100": 3,
        "integers": 3,
        "function median": 3,
        "median element": 3,
        "numpy data type": 3,
        "math operations": 3,
        "docs": 3,
        "ys": 3,
        "sin": 3,
        "linspace function": 3,
        "np": 3,
        "xs": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "derivative": 3,
        "derivatives": 3,
        "function reparameterize": 3,
        "sgd": 3,
        "stochastic variable": 3,
        "stochasticity": 3,
        "dataset": 3,
        "kmeans": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "mcmc": 2,
        "gp hps": 2,
        "multidimensional array": 2,
        "matrices": 2,
        "column labels": 2,
        "50x50 array": 2,
        "indexing": 2,
        "x": 2,
        "file1": 2,
        "colors": 2,
        "numpy method": 2,
        "statistics table": 2,
        "attribute creditamount": 2,
        "forward": 2,
        "ened mnist image": 2,
        "forward pass": 2,
        "fl": 2,
        "latent space": 2,
        "mnist image": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "stackoverflow": 1,
        "stack overflow": 1,
        "python list": 1,
        "pixel triplets": 1,
        "image processing": 1,
        "image": 1,
        "image1": 1,
        "string method split": 1,
        "color intensity": 1,
        "text file": 1,
        "expanded image": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1,
        "summer images": 1,
        "latin alphabets": 1,
        "python 3": 1,
        "unicode strings": 1,
        "dictionaries": 1,
        "collection types": 1,
        "tab": 1,
        "question mark": 1,
        "ipython": 1,
        "control flow structure": 1,
        "matplotlib introduction": 1,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "matplotlib exercises": 1,
        "black coloured markers": 1,
        "font size": 1,
        "age": 1,
        "attributes duration": 1,
        "height": 1,
        "weight": 1,
        "dimensionality reduction": 1,
        "principal components analysis": 1,
        "optimizer": 1,
        "adam": 1,
        "hyperparameters": 1
    },
    "career choice": {
        "missing data": 55,
        "data scientist": 33,
        "unclean data": 33,
        "height data": 33,
        "column names": 31,
        "survey": 31,
        "majors": 31,
        "data columns": 24,
        "string methods": 23,
        "standardize": 23,
        "apply function": 22,
        "students": 22,
        "significance": 18,
        "ions": 17,
        "disributions": 17,
        "statistical tests": 17,
        "compsci": 15,
        "alpha significance value": 15,
        "null hypothesis": 15,
        "boolean values": 15,
        "missing": 12,
        "real world data": 12,
        "emojis": 12,
        "substring checking": 11,
        "missing gender information": 11,
        "unique responses": 11,
        "standard": 11,
        "hints": 11,
        "trailing whitespace": 11,
        "measurement systems": 11,
        "inches": 11,
        "scatter matrix": 11,
        "bar chart plot": 11,
        "design matrices": 11,
        "null value": 11,
        "interim conclusion": 10,
        "hypothesis": 10,
        "first pass analysis": 10,
        "confounding variables": 10,
        "ice cream flavour": 9,
        "cs students": 9,
        "ordinary least squares": 9,
        "linear models": 9,
        "unique favourite ice cream": 8,
        "test statistic": 8,
        "cogsci": 8,
        "values": 7,
        "cs data": 6,
        "confounding variable": 6,
        "patsy": 6,
        "cogs students": 5,
        "mean height": 5,
        "ols model": 5,
        "average heights": 4,
        "height distributions": 4,
        "alpha value": 4,
        "statistical test": 4,
        "women": 4,
        "df2": 4,
        "compsci majors": 4,
        "correlation": 4,
        "confounds": 4,
        "causation": 4,
        "pivot tables": 3,
        "average height values": 3,
        "pivot table": 3,
        "linearmodels": 3,
        "kmeans": 3,
        "advanced indexing": 2,
        "df dataframe": 2,
        "booleans": 2,
        "oleans": 2,
        "isnull": 2,
        "computer science majors": 2,
        "pandas array indexing": 1,
        "height": 1,
        "weight": 1,
        "dimensionality reduction": 1,
        "principal components analysis": 1,
        "boolean variables": 1,
        "normal distributions": 1,
        "testing distributions": 1,
        "array element": 1
    },
    "ridge regression": {
        "ridge regression": 32,
        "colored image": 24,
        "train set": 24,
        "ridgecv": 20,
        "lasso": 18,
        "idgecv": 18,
        "datatypes": 18,
        "info()": 18,
        "ols()": 18,
        "extrapolation": 16,
        "non-linear regression": 16,
        "forecasting techniques": 16,
        "atemp column": 15,
        "registered columns": 15,
        "instant column": 15,
        "columns": 15,
        "correlations": 15,
        "fit()": 15,
        "sine function": 14,
        "optimal plot": 14,
        "fine tuning": 12,
        "parameter tuning": 12,
        "width variable": 12,
        "linearregression object": 12,
        "ex": 12,
        "exercises": 12,
        "bike sharing dataset": 12,
        "ises": 12,
        "distributions": 12,
        "boxplots": 12,
        "relationships": 12,
        "humidity": 12,
        "polynomialfeatures": 11,
        "lassocv": 10,
        "boxplot": 9,
        "statsmodels model": 9,
        "summary()": 9,
        "()": 9,
        "season": 9,
        "linearregression": 9,
        "response vector": 9,
        "iloc": 9,
        "features data matrix": 9,
        "correlation": 8,
        "r formula syntax": 8,
        "ordinary least squares model": 8,
        "ols() function": 8,
        "nonlinear relationships": 8,
        "r formula": 8,
        "population": 6,
        "3rd degree polynomial": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "score()": 6,
        "polynomial model": 5,
        "design matrix": 5,
        "polynomial features": 5,
        "vandermonde matrix": 5,
        "toy vector": 5,
        "ridge method": 4,
        "alpha": 4,
        "weight": 4,
        "shrinking parameter": 4,
        "penalization parameter": 4,
        "regularization parameter": 4,
        "beta coefficients": 4,
        "ridge regressions": 4,
        "multilinear regression": 4,
        "random distribution": 3,
        "predictor": 3,
        "dataset": 3,
        "regression methods": 3,
        "true function value": 3,
        "numpy documentation": 3,
        "numpy sort method": 3,
        "testing sets": 3,
        "bootstrap": 3,
        "confidence intervals": 3,
        "betas": 3,
        "function documentation": 3,
        "bootstrapping": 3,
        "randomness": 3,
        "confidence interval": 3,
        "linearregression model": 3,
        "data matrix": 3,
        "random forest": 2,
        "estimators": 2,
        "ensembles": 2,
        "polynomial expansion": 2,
        "random forests": 2,
        "polynomial feature extraction": 2,
        "data scientist": 2,
        "polynomical models": 2,
        "indicator variables": 2,
        "lambda function": 2,
        "categorical attributes": 2,
        "corr()": 2,
        "order()": 2,
        "hours distribution": 2
    },
    "bayes theorem": {
        "bayes theorem": 46,
        "diabetes": 44,
        "immigration": 34,
        "gary johnson": 28,
        "jill stein": 28,
        "freedom": 26,
        "libertarian party": 22,
        "green party": 22,
        "posteriors": 20,
        "specificity": 18,
        "sensitivity": 18,
        "ity": 14,
        "final probabilities": 14,
        "test result": 14,
        "feature vectors": 14,
        "probabilities": 14,
        "stein": 14,
        "posterior probabilities": 14,
        "tab separated dataset": 12,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "bag of words": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "punctuation marks": 8,
        "spam detectors": 8,
        "search engine": 8,
        "naive bayes algorithm": 8,
        "scramento kings nba basketball team": 4,
        "sac": 4,
        "o kings": 4,
        "joint probabilities": 4,
        "tpr": 4,
        "positive test": 4,
        "conditional probabilities": 4,
        "priors": 4,
        "tnr": 4,
        "sacramento kings": 4,
        "nba basketball team": 4
    },
    "homework": {
        "income": 44,
        "age": 38,
        "id": 20,
        "data cleaning": 19,
        "income column": 19,
        "steps column": 18,
        "income10": 18,
        "zipfile": 18,
        "pandas method": 16,
        "average income": 16,
        "value iteration": 12,
        "population": 12,
        "numerical tests": 12,
        "data wrangling": 11,
        "pandas guide": 11,
        "data files": 11,
        "steps": 11,
        "postal code": 11,
        "id column": 10,
        "merged df dataframe": 10,
        "survey": 10,
        "presidential election": 10,
        "disk cleanup": 10,
        "nonresponse": 10,
        "utilities": 10,
        "sanity checks": 10,
        "data frames": 10,
        "businesses file": 10,
        "primary keys": 10,
        "granularity": 10,
        "missing incomes": 9,
        "plotting capabilities": 9,
        "andas": 9,
        "plotlib": 9,
        "plotting": 9,
        "data visualization": 9,
        "age column": 9,
        "missing data": 9,
        "income values": 9,
        "prediction ability": 9,
        "log transformation": 9,
        "polyfit": 9,
        "attributes": 9,
        "income10 data": 8,
        "data transformation": 8,
        "describe pandas method": 7,
        "head function": 7,
        "randomly generated mdp": 6,
        "corrs": 6,
        "pairwise correlations": 6,
        "quantile method": 6,
        "zip": 6,
        "zip code": 6,
        "boolean expressions": 6,
        "data variables": 6,
        "datasets": 6,
        "policy iteration": 5,
        "filenames": 5,
        "python docs": 5,
        "extended zip codes": 5,
        "extended postal codes": 5,
        "output parameters": 4,
        "zipped data": 4,
        "text editor": 4,
        "web browser": 4,
        "datahub": 4,
        "vio dataframes": 4,
        "floating point values": 4,
        "testing function": 4,
        "rounding error": 4,
        "bus dataframe": 4,
        "zip codes": 4,
        "bus data frame": 4,
        "business table": 4,
        "variable postal code": 4,
        "transition probability distribution": 3,
        "operations": 3,
        "markov decision processes": 3,
        "optimal policy": 3,
        "reward function": 3,
        "initial state distribution": 3,
        "value function": 3,
        "value iteration update": 3,
        "bellman backup operator value operator": 3,
        "optimal value function": 3,
        "m": 3,
        "3d arrays": 3,
        "randomly generated mdps": 3,
        "integer age": 3,
        "business dataframe": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "answer cell": 2,
        "test cell": 2,
        "nable code cell": 2,
        "automatic tests": 2,
        "automated tests": 2,
        "home burglaries": 2,
        "summer vacation period": 2,
        "adt security systems": 2,
        "burglaries": 2,
        "labor day": 2,
        "memorial day": 2,
        "python code": 2,
        "compound expression": 2,
        "subexpressions": 2,
        "missing expression": 2,
        "missing zip codes": 2,
        "linear system": 2,
        "linear equation": 2,
        "state value function": 2,
        "exact policy iteration": 2,
        "inspection": 2,
        "inspection dataframe": 2,
        "businesses": 1,
        "fillna": 1,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94602": 1,
        "94545": 1,
        "business name": 1,
        "search engine": 1,
        "prediction power": 1,
        "\\gamma": 1
    },
    "homework assignment": {
        "numerical labels": 52,
        "training samples": 52,
        "vm": 40,
        "test samples": 32,
        "testing samples": 32,
        "predicted labels": 32,
        "test data": 30,
        "nltk": 29,
        "string labels": 24,
        "svm classifier": 24,
        "tab separated raw text file": 22,
        "discriminative information": 22,
        "countvectorizer": 22,
        "array": 22,
        "vectorizer": 22,
        "custom sklearn objects": 22,
        "ndarray": 20,
        "np": 20,
        "training data samples": 20,
        "test data samples": 20,
        "test sets": 20,
        "learnt classifier": 20,
        "training labels": 20,
        "trained classifier": 20,
        "predict labels": 20,
        "tf scaling": 18,
        "review column": 16,
        "tfidf": 16,
        "vectors": 16,
        "svm": 12,
        "corpus data": 11,
        "natural language processing": 11,
        "nlp": 11,
        "natural language toolkit": 11,
        "customer review task": 10,
        "labels": 10,
        "header arguments": 10,
        "returned variable": 8,
        "tfidf vectorizer": 6,
        "returned object": 4,
        "predicted numerical labels": 2
    },
    "neural network": {
        "grokking deep learning": 44,
        "udacity lectures": 44,
        "negative reviews": 37,
        "learning rate": 32,
        "course reading material": 27,
        "stochastic gradient descent": 27,
        "noise reduction": 21,
        "logvar": 18,
        "postive reviews": 18,
        "positive reviews": 18,
        "hidden layer": 18,
        "pytorch": 13,
        "vae": 11,
        "variational lower bound": 10,
        "activation function": 10,
        "3 layer neural network": 9,
        "reconstruction": 9,
        "txt": 9,
        "project 1": 9,
        "quick theory validation": 9,
        "counter objects": 9,
        "split()": 9,
        "positive review": 9,
        "negative review": 9,
        "total words counter": 9,
        "total words": 9,
        "denominator": 9,
        "positive": 9,
        "word usage": 9,
        "logarithms": 9,
        "positive sentiment": 9,
        "sentiment": 9,
        "neutral words": 9,
        "project 2": 9,
        "vocab": 9,
        "vocabulary size": 9,
        "neural network": 9,
        "lookup table": 9,
        "flattened mnist image": 9,
        "negative words": 8,
        "postive words": 8,
        "oppositite signs": 8,
        "video": 8,
        "sentimentnetork": 8,
        "discount": 8,
        "sentimentnetwork": 8,
        "higher learning rate": 8,
        "expectation maximization": 5,
        "objective function": 5,
        "log bernoulli loss": 5,
        "multivariate bernoulli distribution": 5,
        "negative log bernoulli loss": 5,
        "oulli loss": 5,
        "log": 5,
        "kl term": 5,
        "multivariate": 5,
        "hyperparameter search": 4,
        "latent variables": 4,
        "polarity cutoff": 4,
        "l2 regularization": 4,
        "momentum term": 4,
        "mlp": 3,
        "derivatives": 3,
        "function reparameterize": 3,
        "sgd": 3,
        "stochastic variable": 3,
        "stochasticity": 3,
        "eucliean norm": 2,
        "ml": 2,
        "hidden layer width": 2,
        "cnn": 2,
        "face images": 2,
        "6": 2,
        "forward": 2,
        "ened mnist image": 2,
        "forward pass": 2,
        "fl": 2,
        "latent space": 2,
        "mnist image": 2,
        "weight update": 2,
        "l2 regularization term": 2,
        "regularizatino constant": 2,
        "batch size": 2,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "non-linear activation function": 1,
        "neural network models": 1,
        "drop out": 1,
        "dropout": 1,
        "multiple independent internal representations": 1,
        "randomly selected neurons": 1,
        "feature extraction": 1,
        "fixed weights": 1,
        "object dection": 1,
        "color histograms": 1,
        "convolutional layers": 1,
        "convolutional network": 1,
        "image classification": 1,
        "image processing": 1,
        "automatic image captioning": 1,
        "night scene": 1,
        "scene labeling": 1,
        "narrow networks": 1,
        "wide networks": 1,
        "pooling layer": 1,
        "convolutional layer": 1,
        "scaler": 1,
        "scaling": 1,
        "tensorflow": 1,
        "n": 1,
        "scikit learn": 1,
        "testing sets": 1,
        "optimizer": 1,
        "adam": 1,
        "hyperparameters": 1,
        "integers": 1,
        "maximum review length": 1,
        "feature vector": 1,
        "deep learning networks": 1,
        "words": 1,
        "matrix multiplications": 1,
        "traceback": 1,
        "matrix multiplication": 1,
        "size mismatch": 1,
        "runtimeerror": 1
    },
    "precision": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "bag of words": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "minority class": 6,
        "graphlab create": 6,
        "majority class classifier": 6,
        "machine learning algorithms": 5,
        "gradient descent": 5,
        "euclidean distance": 5,
        "objective functions": 5,
        "feature scaling": 5,
        "statistical summery table": 5,
        "feature distributions": 5,
        "standardize": 5,
        "false positives": 5,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "performance metric": 4,
        "correctly classified data points": 4,
        "total data points": 4,
        "false negatives": 4,
        "confusion matrix": 4,
        "true negatives": 4,
        "true positives": 4,
        "incorrect predictions": 4,
        "binary classification": 4,
        "quiz": 4,
        "logistic regression classifier": 3,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2,
        "negative sentiments": 2,
        "ratings": 2,
        "word counts": 2,
        "test sets": 2,
        "precision": 2,
        "recall": 2,
        "amazon dataset": 2,
        "sentiment": 2,
        "majority": 2,
        "baseline": 2,
        "majority classifier": 2,
        "majority class prediction": 2,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1,
        "correctly classified reviews": 1,
        "baby product": 1,
        "negative reviews": 1,
        "false alarms": 1
    },
    "feature engineering": {
        "numerical labels": 26,
        "training samples": 26,
        "nltk": 20,
        "vm": 20,
        "test samples": 16,
        "testing samples": 16,
        "predicted labels": 16,
        "test data": 15,
        "string labels": 12,
        "svm classifier": 12,
        "test sets": 12,
        "corpus data": 11,
        "natural language processing": 11,
        "nlp": 11,
        "natural language toolkit": 11,
        "tab separated raw text file": 11,
        "discriminative information": 11,
        "countvectorizer": 11,
        "array": 11,
        "vectorizer": 11,
        "custom sklearn objects": 11,
        "ndarray": 10,
        "np": 10,
        "training data samples": 10,
        "test data samples": 10,
        "learnt classifier": 10,
        "training labels": 10,
        "trained classifier": 10,
        "predict labels": 10,
        "tf scaling": 9,
        "probability": 9,
        "review column": 8,
        "tfidf": 8,
        "vectors": 8,
        "svm": 6,
        "gradient boosted trees": 6,
        "false positives": 6,
        "minority class": 6,
        "customer review task": 5,
        "labels": 5,
        "header arguments": 5,
        "risky loans": 5,
        "learning algorithm": 5,
        "validation data": 5,
        "model parameters": 5,
        "multiple decision trees": 5,
        "boosted trees": 5,
        "ensemble classifier": 5,
        "predictive power": 5,
        "sample validation data": 5,
        "safe loan": 5,
        "predict method": 5,
        "prediction probabilities": 5,
        "machine learning algorithms": 5,
        "gradient descent": 5,
        "euclidean distance": 5,
        "objective functions": 5,
        "feature scaling": 5,
        "statistical summery table": 5,
        "feature distributions": 5,
        "standardize": 5,
        "regular expressions": 4,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "returned variable": 4,
        "covariates": 4,
        "response vector": 4,
        "housing price": 4,
        "cross validation": 4,
        "radial highways": 3,
        "residential land z": 3,
        "weighted distances": 3,
        "charles river dummy variable": 3,
        "rad index": 3,
        "tract bounds river": 3,
        "boston employment centres": 3,
        "descr attribute": 3,
        "non-retail business acres": 3,
        "black": 3,
        "nox nitric oxides concentration": 3,
        "crime rate": 3,
        "root mean squared error": 3,
        "response variable": 3,
        "observation": 3,
        "false negatives": 3,
        "prediction accuracy": 3,
        "boosted trees model": 3,
        "decision trees": 3,
        "decision tree model": 3,
        "probabilities": 3,
        "prediction probability": 3,
        "tfidf vectorizer": 3,
        "numerical data": 3,
        "training error": 2,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "statistical test": 2,
        "significance level alpha": 2,
        "test statistic": 2,
        "hypothesis testing": 2,
        "alternative hypothesis": 2,
        "distribution means": 2,
        "returned object": 2,
        "drop columns": 2,
        "passengerid": 2,
        "datacamp": 2,
        "numeric variables": 2,
        "tree models": 2,
        "classification error": 2,
        "training errors": 2,
        "dictionary object": 2,
        "toy dataset": 2,
        "house prices": 2,
        "identity line": 2,
        "1": 2,
        "predicted responses": 2,
        "validation sets": 2,
        "validation error": 2,
        "split indices": 2,
        "cross validation function": 2,
        "feature sets": 2,
        "outlier": 1,
        "test error": 1,
        "average": 1,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "predicted numerical labels": 1,
        "check": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1,
        "housing prices": 1,
        "linear classifier": 1,
        "impute missing values": 1,
        "bin numerical data": 1,
        "pandas function qcut": 1
    },
    "vectors": {
        "training samples": 32,
        "numerical labels": 30,
        "test samples": 22,
        "testing samples": 22,
        "predicted labels": 22,
        "vectors": 22,
        "nltk": 21,
        "test data": 20,
        "vm": 20,
        "orthonormal basis": 20,
        "tf scaling": 18,
        "review column": 16,
        "tfidf": 16,
        "svm classifier": 14,
        "string labels": 13,
        "svm": 12,
        "dot product": 12,
        "standard basis": 12,
        "tab separated raw text file": 11,
        "discriminative information": 11,
        "countvectorizer": 11,
        "array": 11,
        "vectorizer": 11,
        "custom sklearn objects": 11,
        "ndarray": 10,
        "np": 10,
        "training data samples": 10,
        "test data samples": 10,
        "test sets": 10,
        "learnt classifier": 10,
        "training labels": 10,
        "trained classifier": 10,
        "predict labels": 10,
        "customer review task": 10,
        "labels": 10,
        "header arguments": 10,
        "unit vectors": 10,
        "returned variable": 8,
        "2d array": 8,
        "normality": 8,
        "orthogonality": 8,
        "\\ld": 8,
        "basis vectors": 8,
        "matrices": 6,
        "multiplication": 6,
        "tfidf vectorizer": 6,
        "2d vectors": 6,
        "cosine": 4,
        "matrices multiplication": 4,
        "special matrices": 4,
        "returned object": 4,
        "linear algebra": 4,
        "2d vector": 4,
        "3d vector": 4,
        "word dimension": 4,
        "array dimension": 4,
        "vector dimension": 4,
        "1d array": 4,
        "matrix": 4,
        "arrows": 4,
        "coordinate system": 4,
        "vector": 4,
        "ots": 4,
        "reconstruction": 4,
        "nonempty sentences": 3,
        "finite dimensional euclidean space": 2,
        "vector notation": 2,
        "numpy library": 2,
        "python list": 2,
        "one dimensional array": 2,
        "inverted": 2,
        "scalar": 2,
        "1d arrays": 2,
        "mathematical notation": 2,
        "inner product": 2,
        "norm": 2,
        "unit vector": 2,
        "arbitrary vector": 2,
        "orthogonal vectors": 2,
        "predicted numerical labels": 2,
        "stopwords": 2,
        "tokenized sentences": 2,
        "datahub": 2,
        "follwing code block": 2,
        "word vectors": 2,
        "word vector": 2,
        "leadership": 2,
        "scaling": 2,
        "word embeddings": 1,
        "empty cells": 1,
        "word relationships": 1,
        "gensim": 1,
        "cosine similarity": 1,
        "president": 1,
        "similarity score": 1,
        "smilarity score": 1,
        "cosine distance": 1,
        "mean vector": 1,
        "vector math": 1,
        "semantics": 1,
        "output vectors": 1,
        "queen": 1,
        "manliness": 1,
        "word vector king": 1,
        "feminine attribute": 1,
        "royalty": 1,
        "standardize x": 1
    },
    "data visualization": {
        "income": 95,
        "age": 59,
        "income data": 28,
        "10": 22,
        "log transforming": 22,
        "steps column": 22,
        "dummy variables": 21,
        "income10": 18,
        "countplot": 12,
        "color hue": 11,
        "interest rate": 11,
        "fico score": 11,
        "lmplots": 11,
        "categorical features": 11,
        "purpose column": 11,
        "pandas method": 11,
        "decisiontreeclassifier": 10,
        "decision tree model": 9,
        "dtree": 9,
        "decisiontreeclassifier()": 9,
        "confusion matrix": 9,
        "age column": 9,
        "income column": 9,
        "missing data": 9,
        "income values": 9,
        "prediction ability": 9,
        "log transformation": 9,
        "data transformation": 9,
        "polyfit": 9,
        "income10 data": 8,
        "describe pandas method": 7,
        "clustering algorithms": 6,
        "corrs": 6,
        "pairwise correlations": 6,
        "quantile method": 6,
        "average income": 6,
        "log10": 5,
        "steps data": 5,
        "outliers": 5,
        "randomforestclassifier": 4,
        "random forest model": 4,
        "output parameters": 4,
        "outlier": 4,
        "step values": 4,
        "age histogram": 4,
        "0 steps": 4,
        "step data": 4,
        "incomes": 4,
        "hierarchical clustering": 3,
        "plotting function": 3,
        "omerative": 3,
        "unsupervised techniques": 3,
        "clustering parameters": 3,
        "flame dataset": 3,
        "agg dataset": 3,
        "integer age": 3,
        "exponential decay function": 3,
        "valueerror": 3,
        "zero values": 3,
        "math domain error": 3,
        "standard deviations": 3,
        "diistribution": 3,
        "transformantion": 3,
        "gaussian curve": 3,
        "cryptocurrencies": 2,
        "ml problem": 2,
        "gradient descent": 2,
        "closing price": 2,
        "exercise": 2,
        "data points": 2,
        "quantity of interest": 2,
        "ethereum": 2,
        "bitcoin": 2,
        "scatterplots": 2,
        "student task": 2,
        "steps variable plot": 2,
        "default value": 2,
        "comp dataset": 2,
        "jain dataset": 2,
        "pathbased dataset": 2,
        "cvlegend": 2,
        "calls dataframe": 2,
        "vertical bar plot": 2,
        "income spectrum": 2,
        "income graph": 2,
        "0 incomes": 2,
        "income axis": 2,
        "replotting": 1,
        "income distribution": 1,
        "age mood": 1,
        "correlationship coefficient": 1,
        "stroger relationships": 1,
        "barh plot type": 1,
        "series class": 1,
        "value counts": 1,
        "seaborn library": 1,
        "countplot method": 1,
        "pandas plot": 1,
        "order parameter": 1,
        "cvdow field": 1,
        "coolindex": 1,
        "noise violation": 1,
        "seaborn plot": 1,
        "total noise violations": 1,
        "noise violation calls": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1,
        "prediction power": 1,
        "steps": 1,
        "mysqrt": 1,
        "sqrt()": 1,
        "modulo operation": 1,
        "mysqrt()": 1,
        "internet": 1,
        "python sieve": 1,
        "sieve": 1,
        "eratosthenes": 1,
        "prime numbers": 1,
        "skewed data distributions": 1,
        "logbase10": 1,
        "logarithmic transforms": 1,
        "corrs variable": 1,
        "r15 dataset": 1,
        "patients": 1,
        "liver disease": 1,
        "grouped bar chart": 1,
        "hue property": 1,
        "correlation heatmap": 1,
        "dimensionality": 1,
        "matplotlib visualizations": 1,
        "lambda expression": 1,
        "log transform": 1,
        "geometric means": 1,
        "log10 transformation": 1,
        "pand": 1,
        "log transforming data": 1,
        "log base 10": 1,
        "0 income": 1
    },
    "scientific computing": {
        "mathematical functions": 32,
        "broadcasting": 24,
        "slicing": 18,
        "tab completion": 16,
        "matlab": 16,
        "numpy module": 16,
        "dataframe structures": 16,
        "null vector": 15,
        "random values": 12,
        "enumerate": 12,
        "hamlettext": 11,
        "listy containers": 10,
        "dictionaries": 9,
        "line magics": 8,
        "notebook kernel": 8,
        "help documentation": 8,
        "import packages": 8,
        "linear algebra": 8,
        "nonnegative integers": 8,
        "array indexing": 8,
        "boolean array indexing": 8,
        "array datatypes": 8,
        "numeric datatypes": 8,
        "array math": 8,
        "operator overloads": 8,
        "elementwise multiplication": 8,
        "array objects": 8,
        "matrix multiplication": 8,
        "inner products": 8,
        "dot function": 8,
        "arithmetic operations": 8,
        "elementwise maximum": 8,
        "numpy documentation": 8,
        "column names": 8,
        "values method": 8,
        "large data sets": 7,
        "calculator": 7,
        "integer division": 7,
        "python data types": 7,
        "variables": 7,
        "floating point values": 7,
        "fluent python": 7,
        "python objects": 7,
        "comparison operations": 7,
        "arithmetic": 7,
        "null matrix": 6,
        "3 x 3 identity matrix": 6,
        "maximum values": 6,
        "len function": 6,
        "list slicing operations": 6,
        "iteration": 6,
        "iterator": 6,
        "list comprehension syntax": 6,
        "for loops": 6,
        "conditional if statements": 6,
        "hamletwords": 6,
        "credit dataset": 5,
        "iterators": 5,
        "lists": 5,
        "while loop": 5,
        "lavel astring": 5,
        "string operations": 5,
        "jane beth doe": 5,
        "last names": 5,
        "dictionary comprehension": 5,
        "non-zero elements": 4,
        "random matrices": 4,
        "random vector": 4,
        "random matrix": 4,
        "pandas introduction": 4,
        "data manipulation": 4,
        "data structures": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "selection": 4,
        "column headers": 4,
        "filtering": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "pandas exercises": 4,
        "course names": 4,
        "zip": 4,
        "constructor function dict": 4,
        "'s sequence protocol": 4,
        "umpy": 4,
        "specfic task": 4,
        "method": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "keyword arguments": 4,
        "positional properties": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "txt": 4,
        "dataset": 3,
        "numpy method": 2,
        "statistics table": 2,
        "attribute creditamount": 2,
        "string method count": 2,
        "string method lower": 2,
        "matplotlib introduction": 1,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "matplotlib exercises": 1,
        "black coloured markers": 1,
        "font size": 1,
        "age": 1,
        "attributes duration": 1,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1
    },
    "in": {
        "virtual environment": 32,
        "mathematical functions": 32,
        "broadcasting": 20,
        "tutorial": 16,
        "iaml": 16,
        "scientific computing": 16,
        "array objects": 16,
        "tab completion": 16,
        "matlab": 16,
        "numpy module": 16,
        "dataframe structures": 16,
        "null vector": 15,
        "data structures": 12,
        "slicing": 12,
        "random values": 12,
        "iaml course": 8,
        "working environment": 8,
        "virtual enviroments": 8,
        "virtual": 8,
        "virtual enviroment": 8,
        "shell prompt": 8,
        "home directory": 8,
        "git directory": 8,
        "version control": 8,
        "jupy": 8,
        "jupyter notebook session": 8,
        "upy": 8,
        "notebook": 8,
        "operating": 8,
        "seaborn package": 8,
        "anaconda distribution": 8,
        "bash source": 8,
        "command prompt": 8,
        "bash jupyter notebook": 8,
        "plotting library": 8,
        "data visualisation library": 8,
        "data analysis tools": 8,
        "machine learning library": 8,
        "line magics": 8,
        "notebook kernel": 8,
        "help documentation": 8,
        "import packages": 8,
        "linear algebra": 8,
        "nonnegative integers": 8,
        "array indexing": 8,
        "boolean array indexing": 8,
        "array datatypes": 8,
        "numeric datatypes": 8,
        "array math": 8,
        "operator overloads": 8,
        "elementwise multiplication": 8,
        "matrix multiplication": 8,
        "inner products": 8,
        "dot function": 8,
        "arithmetic operations": 8,
        "elementwise maximum": 8,
        "numpy documentation": 8,
        "column names": 8,
        "values method": 8,
        "null matrix": 6,
        "3 x 3 identity matrix": 6,
        "maximum values": 6,
        "credit dataset": 5,
        "non-zero elements": 4,
        "random matrices": 4,
        "random vector": 4,
        "random matrix": 4,
        "pandas introduction": 4,
        "data manipulation": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "selection": 4,
        "column headers": 4,
        "filtering": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "pandas exercises": 4,
        "dataset": 3,
        "numpy method": 2,
        "statistics table": 2,
        "attribute creditamount": 2,
        "matplotlib introduction": 1,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "matplotlib exercises": 1,
        "black coloured markers": 1,
        "font size": 1,
        "age": 1,
        "attributes duration": 1
    },
    "applied machine learning": {
        "virtual environment": 32,
        "mathematical functions": 32,
        "broadcasting": 20,
        "tutorial": 16,
        "iaml": 16,
        "scientific computing": 16,
        "array objects": 16,
        "tab completion": 16,
        "matlab": 16,
        "numpy module": 16,
        "dataframe structures": 16,
        "null vector": 15,
        "data structures": 12,
        "slicing": 12,
        "random values": 12,
        "iaml course": 8,
        "working environment": 8,
        "virtual enviroments": 8,
        "virtual": 8,
        "virtual enviroment": 8,
        "shell prompt": 8,
        "home directory": 8,
        "git directory": 8,
        "version control": 8,
        "jupy": 8,
        "jupyter notebook session": 8,
        "upy": 8,
        "notebook": 8,
        "operating": 8,
        "seaborn package": 8,
        "anaconda distribution": 8,
        "bash source": 8,
        "command prompt": 8,
        "bash jupyter notebook": 8,
        "plotting library": 8,
        "data visualisation library": 8,
        "data analysis tools": 8,
        "machine learning library": 8,
        "line magics": 8,
        "notebook kernel": 8,
        "help documentation": 8,
        "import packages": 8,
        "linear algebra": 8,
        "nonnegative integers": 8,
        "array indexing": 8,
        "boolean array indexing": 8,
        "array datatypes": 8,
        "numeric datatypes": 8,
        "array math": 8,
        "operator overloads": 8,
        "elementwise multiplication": 8,
        "matrix multiplication": 8,
        "inner products": 8,
        "dot function": 8,
        "arithmetic operations": 8,
        "elementwise maximum": 8,
        "numpy documentation": 8,
        "column names": 8,
        "values method": 8,
        "null matrix": 6,
        "3 x 3 identity matrix": 6,
        "maximum values": 6,
        "credit dataset": 5,
        "non-zero elements": 4,
        "random matrices": 4,
        "random vector": 4,
        "random matrix": 4,
        "pandas introduction": 4,
        "data manipulation": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "selection": 4,
        "column headers": 4,
        "filtering": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "pandas exercises": 4,
        "dataset": 3,
        "numpy method": 2,
        "statistics table": 2,
        "attribute creditamount": 2,
        "matplotlib introduction": 1,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "matplotlib exercises": 1,
        "black coloured markers": 1,
        "font size": 1,
        "age": 1,
        "attributes duration": 1
    },
    "data files": {
        "income": 105,
        "age": 77,
        "missing data": 35,
        "income data": 31,
        "tinder": 23,
        "10": 22,
        "log transforming": 22,
        "steps column": 22,
        "pandas method": 21,
        "id": 20,
        "income column": 19,
        "income10": 18,
        "average income": 16,
        "population": 14,
        "steps": 11,
        "tinder users": 11,
        "safe harbor method": 11,
        "id column": 10,
        "merged df dataframe": 10,
        "missing incomes": 9,
        "age column": 9,
        "income values": 9,
        "prediction ability": 9,
        "log transformation": 9,
        "data transformation": 9,
        "polyfit": 9,
        "income10 data": 8,
        "describe pandas method": 7,
        "corrs": 6,
        "pairwise correlations": 6,
        "quantile method": 6,
        "log10": 5,
        "steps data": 5,
        "outliers": 5,
        "output parameters": 4,
        "outlier": 4,
        "step values": 4,
        "age histogram": 4,
        "0 steps": 4,
        "step data": 4,
        "incomes": 4,
        "integer age": 3,
        "mean income": 3,
        "exponential decay function": 3,
        "valueerror": 3,
        "zero values": 3,
        "math domain error": 3,
        "standard deviations": 3,
        "zip code": 3,
        "diistribution": 3,
        "transformantion": 3,
        "gaussian curve": 3,
        "steps variable plot": 2,
        "default value": 2,
        "income spectrum": 2,
        "income graph": 2,
        "0 incomes": 2,
        "income axis": 2,
        "replotting": 1,
        "income distribution": 1,
        "age mood": 1,
        "correlationship coefficient": 1,
        "stroger relationships": 1,
        "prediction power": 1,
        "mathematical calculations": 1,
        "skewed data distributions": 1,
        "logbase10": 1,
        "logarithmic transforms": 1,
        "corrs variable": 1,
        "matplotlib visualizations": 1,
        "lambda expression": 1,
        "log transform": 1,
        "geometric means": 1,
        "log10 transformation": 1,
        "pand": 1,
        "dataset size": 1,
        "log transforming data": 1,
        "log base 10": 1,
        "0 income": 1
    },
    "residuals": {
        "residuals": 36,
        "sampling distribution": 26,
        "dependent variable": 18,
        "birth weight": 18,
        "resampling": 17,
        "rmse": 17,
        "confidence interval": 15,
        "ridgecv": 13,
        "regularized regression": 12,
        "3rd degree polynomial": 12,
        "average age": 12,
        "null hypothesis": 12,
        "correlation": 10,
        "linearregression object": 8,
        "standard error": 8,
        "modeling": 6,
        "linear models": 6,
        "data preparation": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "predictor variables": 6,
        "lasso regression": 6,
        "response variables": 6,
        "ridge regression": 6,
        "automatic regular": 6,
        "sklearn pipeline": 6,
        "sin function": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "percentiles": 6,
        "residual": 6,
        "cd": 6,
        "non-linear relationship": 6,
        "curvature": 6,
        "mean": 6,
        "resamplerows": 6,
        "mean birth weight": 6,
        "summarize": 6,
        "mother's age": 6,
        "mother": 6,
        "predictive power": 6,
        "iq": 6,
        "sat scores": 6,
        "estimated slope": 6,
        "mean birthweight": 6,
        "weights": 6,
        "strata": 6,
        "survey": 6,
        "brfss data": 6,
        "log weights": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "plot percentiles": 6,
        "compute coefficient of determination": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "height information": 5,
        "sampling distributions": 5,
        "distributions": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "resample rows": 2,
        "mean height": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1,
        "column": 1,
        "finalwt": 1
    },
    "sentiment analysis": {
        "numerical labels": 34,
        "training samples": 32,
        "test data": 25,
        "test samples": 22,
        "testing samples": 22,
        "predicted labels": 22,
        "vm": 20,
        "nltk": 18,
        "tf scaling": 18,
        "svm classifier": 17,
        "review column": 16,
        "tfidf": 16,
        "vectors": 16,
        "customer review task": 15,
        "labels": 15,
        "header arguments": 15,
        "string labels": 14,
        "test sets": 12,
        "svm": 12,
        "returned variable": 12,
        "tab separated raw text file": 11,
        "discriminative information": 11,
        "countvectorizer": 11,
        "array": 11,
        "vectorizer": 11,
        "custom sklearn objects": 11,
        "ndarray": 10,
        "np": 10,
        "training data samples": 10,
        "test data samples": 10,
        "learnt classifier": 10,
        "training labels": 10,
        "trained classifier": 10,
        "predict labels": 10,
        "tfidf vectorizer": 9,
        "word vector": 6,
        "nltk twitter corpus": 6,
        "returned object": 6,
        "word vectors": 5,
        "vocab": 4,
        "word2idx": 4,
        "tflearn": 4,
        "hyperparameters": 3,
        "batch size": 3,
        "consumer key consumer secret": 3,
        "twitter application": 3,
        "access token access token secret": 3,
        "api": 3,
        "credentials": 3,
        "twitter api": 3,
        "negative tweets": 3,
        "positive tweets": 3,
        "tfidfvectorizer": 3,
        "bigrams": 3,
        "default parameters": 3,
        "trigrams": 3,
        "unigrams": 3,
        "stop words": 3,
        "predicted numerical labels": 3,
        "lower case characters": 2,
        "pandas library": 2,
        "word frequency": 2,
        "review data": 2,
        "frame": 2,
        "count value": 2,
        "dictionary comprehension": 2,
        "key error": 2,
        "vocab dictionary": 2,
        "word2idx dictionary": 2,
        "function": 2,
        "review data set": 2,
        "network performance": 2,
        "softmax activation function": 2,
        "validation": 2,
        "learning rate loss": 2,
        "training method": 2,
        "network error": 2,
        "activation function": 2,
        "hidden layers": 2,
        "10000 element long vectors": 2,
        "stochastic gradient descent": 2,
        "connected layer": 2,
        "tensorflow": 2,
        "linearsvc": 2,
        "user timeline": 2,
        "tweepy's": 2,
        "randomforestclassifier": 2,
        "double": 1,
        "meanrdd": 1,
        "reducebykey": 1,
        "dummy data": 1,
        "nested loop": 1,
        "stopwords": 1,
        "counter class": 1,
        "collection package": 1,
        "standard library": 1,
        "embedding layers": 1,
        "neural network": 1,
        "data preprocessing": 1,
        "integers": 1,
        "maximum review length": 1,
        "feature vector": 1,
        "deep learning networks": 1,
        "validation accuracy": 1,
        "hyperparameter adjustments": 1,
        "set": 1,
        "credientials": 1
    },
    "learning goals": {
        "keyword arguments": 15,
        "enumerate": 12,
        "python functions": 11,
        "hamlettext": 11,
        "isprime": 10,
        "listy containers": 10,
        "iterators": 9,
        "dictionaries": 9,
        "iloc": 9,
        "lists": 8,
        "len function": 8,
        "iteration": 8,
        "positional arguments": 8,
        "method": 7,
        "lambda functions": 7,
        "mathematical functions": 7,
        "default argument values": 7,
        "libraries": 7,
        "numpy module functions": 7,
        "broadcasting": 7,
        "numpy module": 7,
        "numerical programming library": 7,
        "scientific computing": 7,
        "large data sets": 7,
        "calculator": 7,
        "integer division": 7,
        "python data types": 7,
        "variables": 7,
        "floating point values": 7,
        "fluent python": 7,
        "python objects": 7,
        "comparison operations": 7,
        "arithmetic": 7,
        "random numbers": 6,
        "numpy functions": 6,
        "slicing": 6,
        "list slicing operations": 6,
        "iterator": 6,
        "list comprehension syntax": 6,
        "for loops": 6,
        "conditional if statements": 6,
        "hamletwords": 6,
        "dfcars": 6,
        "listiness property": 6,
        "ridge regression": 5,
        "python lists": 5,
        "while loop": 5,
        "lavel astring": 5,
        "string operations": 5,
        "jane beth doe": 5,
        "last names": 5,
        "dictionary comprehension": 5,
        "automobile data": 5,
        "exploratory data analysis": 4,
        "course names": 4,
        "zip": 4,
        "constructor function dict": 4,
        "'s sequence protocol": 4,
        "umpy": 4,
        "specfic task": 4,
        "mathematical function": 4,
        "pr": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "positional properties": 4,
        "ate": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "txt": 4,
        "listiness": 4,
        "scraping": 3,
        "mathematical manipulation": 3,
        "homework 1": 3,
        "matplotlib libraries": 3,
        "function object": 3,
        "umpy module": 3,
        "prime numbers": 3,
        "list myprimes": 3,
        "numpy documention": 3,
        "scientific python": 3,
        "matlab": 3,
        "iterate": 3,
        "numpy array constructors": 3,
        "64 bit": 3,
        "floating point": 3,
        "random constructor": 3,
        "vector operations": 3,
        "readability": 3,
        "computer chips": 3,
        "2d arrays": 3,
        "matrix multiplication": 3,
        "mean": 3,
        "rear axle ratio": 3,
        "dictionary keys": 3,
        "population": 2,
        "one dimensional iteration": 2,
        "idiom": 2,
        "contiguous memory": 2,
        "floating": 2,
        "type conversion": 2,
        "lic": 2,
        "cs": 2,
        "spreadsheet": 2,
        "horsepower": 2,
        "displacement": 2,
        "biometrics": 2,
        "multiple regression models": 2,
        "automobile design": 2,
        "forward gears": 2,
        "carburetors": 2,
        "fuel consumption": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "dataframe structure": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "string method count": 2,
        "string method lower": 2,
        "random distribution": 1,
        "predictor": 1,
        "dataset": 1,
        "regression methods": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "testing sets": 1,
        "bootstrap": 1,
        "confidence intervals": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "confidence interval": 1,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "multilinear regression": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1,
        "sanity check": 1,
        "unique words": 1,
        "count method": 1,
        "dictionary key": 1,
        "boolean variable": 1,
        "ordered interpretation": 1,
        "cylinders": 1,
        "categorical data": 1,
        "dtypes attribute": 1,
        "op": 1,
        "garbage collector": 1,
        "functional programming": 1,
        "h": 1,
        "spark": 1,
        "small multiples": 1,
        "aggregation functions": 1,
        "group properties": 1,
        "atomic properties": 1,
        "global properties": 1,
        "mpg": 1,
        "global matplotlib plotting": 1,
        "seaborn package": 1,
        "notebook": 1,
        "frequency distribution": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "matlab": {
        "mathematical functions": 32,
        "broadcasting": 23,
        "matlab": 16,
        "numpy module": 16,
        "dataframe structures": 16,
        "null vector": 15,
        "slicing": 12,
        "random values": 12,
        "matrix multiplication": 11,
        "iloc": 9,
        "linear algebra": 8,
        "nonnegative integers": 8,
        "array indexing": 8,
        "boolean array indexing": 8,
        "array datatypes": 8,
        "numeric datatypes": 8,
        "array math": 8,
        "operator overloads": 8,
        "elementwise multiplication": 8,
        "array objects": 8,
        "inner products": 8,
        "dot function": 8,
        "arithmetic operations": 8,
        "elementwise maximum": 8,
        "numpy documentation": 8,
        "column names": 8,
        "values method": 8,
        "ica": 7,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "random numbers": 6,
        "numpy functions": 6,
        "null matrix": 6,
        "3 x 3 identity matrix": 6,
        "maximum values": 6,
        "series objects": 6,
        "dfcars": 6,
        "listiness property": 6,
        "python lists": 5,
        "credit dataset": 5,
        "non-zero elements": 4,
        "random matrices": 4,
        "random vector": 4,
        "random matrix": 4,
        "pandas introduction": 4,
        "data manipulation": 4,
        "data structures": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "selection": 4,
        "column headers": 4,
        "filtering": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "pandas exercises": 4,
        "listiness": 4,
        "iterate": 3,
        "numpy module functions": 3,
        "numpy array constructors": 3,
        "64 bit": 3,
        "floating point": 3,
        "random constructor": 3,
        "vector operations": 3,
        "readability": 3,
        "computer chips": 3,
        "2d arrays": 3,
        "lists": 3,
        "mean": 3,
        "kurtosis": 3,
        "dataset": 3,
        "rear axle ratio": 3,
        "numpy method": 2,
        "statistics table": 2,
        "attribute creditamount": 2,
        "demixing matrices": 2,
        "one dimensional iteration": 2,
        "idiom": 2,
        "contiguous memory": 2,
        "floating": 2,
        "type conversion": 2,
        "lic": 2,
        "iteration": 2,
        "horsepower": 2,
        "displacement": 2,
        "biometrics": 2,
        "multiple regression models": 2,
        "automobile design": 2,
        "forward gears": 2,
        "carburetors": 2,
        "fuel consumption": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "dataframe structure": 2,
        "automobile data": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "priors": 1,
        "symmetric": 1,
        "python program": 1,
        "united states": 1,
        "canada": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "matplotlib introduction": 1,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "matplotlib exercises": 1,
        "black coloured markers": 1,
        "font size": 1,
        "age": 1,
        "attributes duration": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "gaussian distributed": 1,
        "audio signals": 1,
        "dictionary key": 1,
        "boolean variable": 1,
        "ordered interpretation": 1,
        "cylinders": 1,
        "categorical data": 1,
        "dtypes attribute": 1,
        "op": 1,
        "garbage collector": 1,
        "functional programming": 1,
        "h": 1,
        "spark": 1,
        "global matplotlib plotting": 1,
        "seaborn package": 1,
        "notebook": 1,
        "frequency distribution": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "assertions": {
        "page views": 26,
        "constant term": 25,
        "cpu load": 23,
        "anomaly detection": 20,
        "web server": 19,
        "coefficient": 15,
        "total request rate": 15,
        "linear realationship": 13,
        "historical": 13,
        "total page views": 13,
        "predict method": 13,
        "multiple linear regression": 13,
        "train set": 12,
        "request rates": 12,
        "softplus function": 12,
        "x matrix": 11,
        "maximum": 10,
        "minmum": 10,
        "cpu": 10,
        "selection variable": 9,
        "backups": 9,
        "unseen data": 9,
        "shape shifts": 9,
        "seasonality": 9,
        "coefficients": 8,
        "page view": 8,
        "non-linear regression": 8,
        "random forests": 8,
        "support vector machines": 8,
        "cross products": 8,
        "polynomial features extraction": 8,
        "optimal weights": 8,
        "polynomal expansion function": 8,
        "axis variable": 8,
        "computation time": 7,
        "random noise": 7,
        "noise level": 7,
        "noisy sine function": 7,
        "noise samples": 7,
        "functions": 7,
        "width variable": 7,
        "variable model": 7,
        "sine function": 6,
        "ridge regression": 6,
        "optimal plot": 6,
        "exact indices": 6,
        "inspection": 6,
        "data import": 6,
        "data wrangling": 6,
        "web request": 6,
        "loaded data": 6,
        "head command": 6,
        "cpu column": 6,
        "numpy function": 6,
        "lassocv": 6,
        "nearest neighbor algorithm": 5,
        "unlabeled point": 4,
        "nearest neighbor": 4,
        "distance matrix": 4,
        "distance compuation": 4,
        "function pydistance": 4,
        "higher performance": 4,
        "pybatch": 4,
        "correct": 4,
        "distance function": 4,
        "python nearest neighbor search": 4,
        "optimized nearest neighbor function": 4,
        "digit recognition task": 4,
        "colored image": 4,
        "speedup": 3,
        "module utils": 3,
        "input vector": 3,
        "high precision float64": 3,
        "input": 3,
        "rounding": 3,
        "inner python loop": 3,
        "optimization": 2,
        "python based implementation": 2,
        "lattice": 2,
        "markov chain": 2,
        "exercise": 2,
        "deterministic results": 2,
        "random seed": 2,
        "simulation": 2,
        "relative frequencies": 2,
        "request": 2,
        "average cpu usage": 2,
        "single linear regression": 2,
        "width parameter": 2,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1,
        "exercise sheet": 1,
        "partition function": 1,
        "exponential function": 1,
        "parameter vectors": 1,
        "logarithm": 1,
        "list itertools": 1,
        "binary vectors": 1,
        "fine tuning": 1,
        "parameter tuning": 1,
        "multiple features": 1,
        "confidance intervals": 1,
        "gaussianprocess": 1,
        "ridgecv": 1
    },
    "data wrangling": {
        "income": 105,
        "age": 77,
        "missing data": 35,
        "income data": 31,
        "10": 22,
        "log transforming": 22,
        "steps column": 22,
        "pandas method": 21,
        "id": 20,
        "income column": 19,
        "income10": 18,
        "average income": 16,
        "steps": 11,
        "id column": 10,
        "merged df dataframe": 10,
        "population": 9,
        "missing incomes": 9,
        "age column": 9,
        "income values": 9,
        "prediction ability": 9,
        "log transformation": 9,
        "data transformation": 9,
        "polyfit": 9,
        "income10 data": 8,
        "describe pandas method": 7,
        "corrs": 6,
        "pairwise correlations": 6,
        "quantile method": 6,
        "log10": 5,
        "steps data": 5,
        "outliers": 5,
        "output parameters": 4,
        "outlier": 4,
        "step values": 4,
        "age histogram": 4,
        "0 steps": 4,
        "step data": 4,
        "incomes": 4,
        "integer age": 3,
        "mean income": 3,
        "exponential decay function": 3,
        "valueerror": 3,
        "zero values": 3,
        "math domain error": 3,
        "standard deviations": 3,
        "diistribution": 3,
        "transformantion": 3,
        "gaussian curve": 3,
        "steps variable plot": 2,
        "default value": 2,
        "income spectrum": 2,
        "income graph": 2,
        "0 incomes": 2,
        "income axis": 2,
        "replotting": 1,
        "income distribution": 1,
        "age mood": 1,
        "correlationship coefficient": 1,
        "stroger relationships": 1,
        "prediction power": 1,
        "mathematical calculations": 1,
        "skewed data distributions": 1,
        "logbase10": 1,
        "logarithmic transforms": 1,
        "corrs variable": 1,
        "matplotlib visualizations": 1,
        "lambda expression": 1,
        "log transform": 1,
        "geometric means": 1,
        "log10 transformation": 1,
        "pand": 1,
        "dataset size": 1,
        "log transforming data": 1,
        "log base 10": 1,
        "0 income": 1
    },
    "data cleaning": {
        "income": 88,
        "income10": 36,
        "steps column": 31,
        "age": 30,
        "income data": 28,
        "10": 22,
        "log transforming": 22,
        "average income": 22,
        "income column": 19,
        "missing data": 18,
        "income values": 18,
        "prediction ability": 18,
        "log transformation": 18,
        "polyfit": 18,
        "data transformation": 17,
        "pandas method": 17,
        "income10 data": 16,
        "describe pandas method": 14,
        "corrs": 12,
        "pairwise correlations": 12,
        "quantile method": 12,
        "population": 9,
        "missing incomes": 9,
        "age column": 9,
        "output parameters": 8,
        "integer age": 6,
        "steps data": 5,
        "log10": 4,
        "outlier": 4,
        "step values": 4,
        "age histogram": 4,
        "0 steps": 4,
        "step data": 4,
        "outliers": 4,
        "valueerror": 3,
        "zero values": 3,
        "math domain error": 3,
        "standard deviations": 3,
        "diistribution": 3,
        "transformantion": 3,
        "gaussian curve": 3,
        "steps variable plot": 2,
        "default value": 2,
        "prediction power": 2,
        "steps": 2,
        "income spectrum": 2,
        "data files": 2,
        "0 incomes": 2,
        "income axis": 2,
        "replotting": 1,
        "age mood": 1,
        "correlationship coefficient": 1,
        "stroger relationships": 1,
        "mysqrt": 1,
        "sqrt()": 1,
        "modulo operation": 1,
        "mysqrt()": 1,
        "internet": 1,
        "python sieve": 1,
        "sieve": 1,
        "eratosthenes": 1,
        "prime numbers": 1,
        "skewed data distributions": 1,
        "logbase10": 1,
        "incomes": 1,
        "logarithmic transforms": 1,
        "corrs variable": 1,
        "census bureau website": 1,
        "irs": 1,
        "irs tax migration": 1,
        "fips codes": 1,
        "python modules": 1,
        "encoding specification": 1,
        "total outflows": 1,
        "fips designators": 1,
        "single": 1,
        "stateoutflows": 1,
        "pandas data frame": 1,
        "matplotlib visualizations": 1,
        "lambda expression": 1,
        "log transform": 1,
        "geometric means": 1,
        "log10 transformation": 1,
        "pand": 1,
        "log transforming data": 1,
        "log base 10": 1,
        "0 income": 1,
        "income graph": 1
    },
    "paraview": {
        "paraview": 57,
        "structured grid": 24,
        "temperature": 24,
        "vtk": 22,
        "pyevtk": 18,
        "rectilinear grid": 12,
        "unstructured grid": 12,
        "polygonal data": 12,
        "mesh dimensions": 12,
        "vtk files": 12,
        "point data": 12,
        "pressure": 12,
        "pvpython": 10,
        "filters": 8,
        "python interpreter": 8,
        "layout panel": 8,
        "setproperties": 8,
        "setdisplayproperties": 8,
        "mesh cells": 8,
        "rendering": 6,
        "pipeline browser": 6,
        "astronomical data": 6,
        "binary files": 6,
        "3d rendering programs": 6,
        "cells data": 6,
        "topology": 6,
        "structured points": 6,
        "data set properties": 6,
        "cell dimensions": 6,
        "<img style": 6,
        "representational freedom": 6,
        "cell data": 6,
        "python package": 6,
        "density": 6,
        "independent gaussian distributions": 6,
        "random draws": 6,
        "imentions": 6,
        "point gaussian": 6,
        "gaia data": 6,
        "random data": 6,
        "volume renderings": 6,
        "cell widths": 6,
        "tempurature": 6,
        "temparture": 6,
        "vtk file": 6,
        "volume rendering": 6,
        "3d arrays": 6,
        "vtk binary files": 6,
        "utilities": 6,
        "3d rendering": 6,
        "statistical analysis": 6,
        "iris machine learning": 6,
        "data sets": 6,
        "discovery": 4,
        "dsfp conda environment": 4,
        "internal python interpreter": 4,
        "sphere1": 4,
        "shrink": 4,
        "geometric represenation": 4,
        "object oriented approach": 4,
        "shrinkfactor": 4,
        "opacity": 4,
        "sphere": 4,
        "sphereinstance": 4,
        "spheredisplay": 4,
        "interactive commands": 4,
        "break out problem": 4,
        "size": 4,
        "iris data": 3,
        "spatial coordinates": 3,
        "gaia": 2,
        "3d representations": 2,
        "minor planet": 2,
        "spatial representation": 2,
        "giant molecular cloud": 2,
        "interactivity": 2,
        "science": 2,
        "amatuers": 2,
        "domain expertise": 2,
        "integrals": 2,
        "understaning": 2,
        "multiple processors": 2,
        "scripting": 2,
        "visualization toolkit": 2,
        "intermediate algorithms": 2,
        "output ports": 2,
        "algorithms": 2,
        "input": 2,
        "visual renderings": 2,
        "paraview guide": 2,
        "visual exploration": 2,
        "3d object": 2,
        "interactive sphere": 2,
        "properties panel": 2,
        "layout": 2,
        "pipeline module": 2,
        "data ingestion": 2,
        "ta resolution": 2,
        "filters menu": 2,
        "shrunken mesh cells": 2,
        "reproducibility": 2,
        "python scripting interface": 2,
        "automated analysis": 2,
        "python script": 2,
        "gui": 2,
        "interactive session": 2,
        "font size": 1
    },
    "dictionaries": {
        "keyword arguments": 24,
        "hamlettext": 22,
        "positional arguments": 16,
        "python functions": 15,
        "iterators": 13,
        "dictionaries": 13,
        "enumerate": 12,
        "hamletwords": 12,
        "bfs": 10,
        "listy containers": 10,
        "dictionary comprehension": 10,
        "breadth first search": 8,
        "course names": 8,
        "zip": 8,
        "constructor function dict": 8,
        "'s sequence protocol": 8,
        "umpy": 8,
        "specfic task": 8,
        "method": 8,
        "mathematical function": 8,
        "lambda functions": 8,
        "mathematical functions": 8,
        "pr": 8,
        "isprime": 8,
        "default argument values": 8,
        "libraries": 8,
        "multiple default values": 8,
        "default argument": 8,
        "double": 8,
        "positional properties": 8,
        "ate": 8,
        "numpy module functions": 8,
        "standard deviation 1": 8,
        "distribution": 8,
        "broadcasting": 8,
        "txt": 8,
        "numpy module": 7,
        "numerical programming library": 7,
        "scientific computing": 7,
        "large data sets": 7,
        "calculator": 7,
        "integer division": 7,
        "python data types": 7,
        "variables": 7,
        "floating point values": 7,
        "fluent python": 7,
        "python objects": 7,
        "comparison operations": 7,
        "arithmetic": 7,
        "len function": 6,
        "slicing": 6,
        "list slicing operations": 6,
        "iteration": 6,
        "iterator": 6,
        "list comprehension syntax": 6,
        "for loops": 6,
        "conditional if statements": 6,
        "lists": 5,
        "while loop": 5,
        "lavel astring": 5,
        "string operations": 5,
        "jane beth doe": 5,
        "last names": 5,
        "json file": 4,
        "vertex names": 4,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "string method count": 4,
        "string method lower": 4,
        "json": 3,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3,
        "dist array": 3,
        "prev array": 3,
        "depth first search": 3,
        "tihs dataset": 2,
        "connected components": 2,
        "lambdas": 2,
        "anonymous functions": 2,
        "graph cycles": 2,
        "lambda expression": 2,
        "ellipses": 2,
        "recursion": 2,
        "sanity check": 2,
        "unique words": 2,
        "dictionary keys": 2,
        "count method": 2,
        "tab": 1,
        "question mark": 1,
        "ipython": 1,
        "control flow structure": 1,
        "python program": 1,
        "united states": 1,
        "canada": 1,
        "adjacency matrix": 1,
        "algebraic connectivity": 1,
        "laplacian matrix": 1,
        "double100": 1,
        "integers": 1,
        "stack overflow": 1,
        "stackoverflow": 1,
        "working email addresses": 1,
        "test cell": 1
    },
    "uci machine learning repository": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "tab separated dataset": 12,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "bag of words": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2,
        "multivariate data set": 1,
        "iris flower data set": 1,
        "multiple measurements": 1,
        "taxonomic problems": 1,
        "linear discriminant analysis": 1,
        "list comprehensions": 1
    },
    "anomaly detection": {
        "request rates": 24,
        "cpu": 20,
        "sigmoid function": 19,
        "axis variable": 18,
        "total request rate": 18,
        "variable model": 16,
        "error functions": 15,
        "width parameter": 14,
        "exact indices": 12,
        "data wrangling": 12,
        "web request": 12,
        "web server": 12,
        "loaded data": 12,
        "head command": 12,
        "cpu column": 12,
        "constant term": 12,
        "error function": 12,
        "student performance": 10,
        "study times": 10,
        "exam output variable": 10,
        "random number": 10,
        "uniform distribution": 10,
        "decision boundary": 10,
        "predicted class": 10,
        "width variable": 9,
        "lassocv()": 9,
        "ridgecv()": 9,
        "coefficient": 8,
        "modelling function": 8,
        "logistic function": 8,
        "multiple features": 7,
        "linear classifier": 7,
        "predict method": 6,
        "x matrix": 6,
        "confidance intervals": 6,
        "lassocv": 6,
        "gaussianprocess()": 5,
        "gradient descent": 5,
        "oneclasssvm": 5,
        "request": 4,
        "cpu load": 4,
        "noise level estimation": 4,
        "validation": 4,
        "colored image": 4,
        "train set": 4,
        "machine learning algorithms": 4,
        "humans": 4,
        "pelvis": 4,
        "vertebral column data set": 4,
        "uci machine learning repository": 4,
        "spinal cord": 4,
        "pelvic tilt": 4,
        "sacral slope": 4,
        "lumbar spine": 4,
        "patients": 4,
        "pelvic incidence": 4,
        "pelvic radius": 4,
        "lumbar lordosis angle": 4,
        "spondylolisthesis": 4,
        "nervous system": 4,
        "biomechanical features": 4,
        "gausssian distributions": 4,
        "pca": 4,
        "zero mean": 4,
        "function scale": 4,
        "unit variance": 4,
        "standardize()": 4,
        "principal components analysis": 4,
        "multiindex": 3,
        "polynomial expansion": 3,
        "non-linear classification": 3,
        "non-linear classifier": 3,
        "polynomials": 3,
        "linear decision boundary": 3,
        "oneclass svm": 3,
        "code cell": 3,
        "visualize outliers": 2,
        "inliers pluts outliers": 2,
        "iers": 2,
        "resholding": 2,
        "total cost function": 2,
        "last function approximation": 2,
        "learning rate": 2,
        "learning curve": 2,
        "decision trees": 2,
        "double spiral problem": 2,
        "voting mechanism": 2,
        "random forests": 2,
        "matical representation": 2,
        "regularization": 1,
        "predict()": 1,
        "correct guesses": 1,
        "guessed classes": 1,
        "predicted exam results": 1,
        "fine tuning": 1,
        "parameter tuning": 1,
        "anomaly detection": 1,
        "gaussianprocess": 1,
        "ridgecv": 1,
        "data point": 1,
        "inliers": 1,
        "bivariate distribution": 1,
        "outlier": 1,
        "outliers": 1,
        "noise points": 1,
        "dbscan algorithm": 1,
        "cluster analysis": 1
    },
    "probabilistic inference algorithms": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "tab separated dataset": 12,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "bag of words": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "naive bayes theorem": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "tab separated dataset": 12,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "bag of words": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "nervousness": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "tab separated dataset": 12,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "bag of words": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "democratic presidential nominee": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "tab separated dataset": 12,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "bag of words": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "secret service": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "tab separated dataset": 12,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "bag of words": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "sex": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "tab separated dataset": 12,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "bag of words": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "sms message": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "tab separated dataset": 12,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "bag of words": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "text content": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "tab separated dataset": 12,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "bag of words": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "data preprocessing": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "bag of words": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2,
        "integers": 1,
        "maximum review length": 1,
        "feature vector": 1,
        "deep learning networks": 1
    },
    "recall scores": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "bag of words": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "performance metrics": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "bag of words": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "binary variables": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "map method": 12,
        "numerical values": 12,
        "bow": 12,
        "countvector": 12,
        "vectorizer": 12,
        "sklearns": 12,
        "frequency distribution matrix": 12,
        "ml algorithms": 12,
        "bag of words": 12,
        "w": 12,
        "countvectorizer": 12,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "inverse document frequency": {
        "numerical labels": 26,
        "training samples": 26,
        "nltk": 20,
        "vm": 20,
        "test samples": 16,
        "testing samples": 16,
        "predicted labels": 16,
        "test data": 15,
        "string labels": 12,
        "svm classifier": 12,
        "corpus data": 11,
        "natural language processing": 11,
        "nlp": 11,
        "natural language toolkit": 11,
        "tab separated raw text file": 11,
        "discriminative information": 11,
        "countvectorizer": 11,
        "array": 11,
        "vectorizer": 11,
        "custom sklearn objects": 11,
        "ndarray": 10,
        "np": 10,
        "training data samples": 10,
        "test data samples": 10,
        "test sets": 10,
        "learnt classifier": 10,
        "training labels": 10,
        "trained classifier": 10,
        "predict labels": 10,
        "tf scaling": 9,
        "review column": 8,
        "tfidf": 8,
        "vectors": 8,
        "bayes theorem": 8,
        "diabetes": 8,
        "svm": 6,
        "immigration": 6,
        "customer review task": 5,
        "labels": 5,
        "header arguments": 5,
        "returned variable": 4,
        "posteriors": 4,
        "naive bayes implementation": 4,
        "gary johnson": 4,
        "probabilities": 4,
        "libertarian party": 4,
        "jill stein": 4,
        "green party": 4,
        "freedom": 4,
        "tfidf vectorizer": 3,
        "returned object": 2,
        "testing sets": 2,
        "bag of words problem": 2,
        "countvectorizer()": 2,
        "bag of words processing": 2,
        "bayes theorem implementation": 2,
        "bayes formula": 2,
        "true negative rate": 2,
        "true positive rate": 2,
        "medical field": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "specificity": 2,
        "priors": 2,
        "tnr": 2,
        "sensitivity": 2,
        "final probabilities": 2,
        "test result": 2,
        "feature vectors": 2,
        "stein": 2,
        "posterior probabilities": 2,
        "sacramento kings": 2,
        "nba basketball team": 2,
        "spam detectors": 2,
        "search engine": 2,
        "naive bayes algorithm": 2,
        "random categorical variable": 2,
        "orical": 2,
        "mutually exclusive outcomes": 2,
        "binomial distribution": 2,
        "word counts": 2,
        "laplace smoothing": 2,
        "categorical random variable": 2,
        "multinomial distribution": 2,
        "occurrence counts": 2,
        "naive bayes implementations": 2,
        "multin": 2,
        "mult": 2,
        "bernoulli variable": 2,
        "nb": 2,
        "probability distribution": 2,
        "discrete data": 2,
        "text classification": 2,
        "outcome probabilities": 2,
        "bern": 2,
        "predicted numerical labels": 1
    },
    "plotting": {
        "income": 94,
        "age": 57,
        "10": 22,
        "log transforming": 22,
        "dummy variables": 21,
        "steps column": 18,
        "income10": 18,
        "data use pandas": 12,
        "color hue": 11,
        "countplot": 11,
        "interest rate": 11,
        "fico score": 11,
        "lmplots": 11,
        "categorical features": 11,
        "purpose column": 11,
        "pandas method": 11,
        "decisiontreeclassifier": 9,
        "decision tree model": 9,
        "dtree": 9,
        "decisiontreeclassifier()": 9,
        "confusion matrix": 9,
        "age column": 9,
        "income column": 9,
        "missing data": 9,
        "income values": 9,
        "prediction ability": 9,
        "log transformation": 9,
        "polyfit": 9,
        "income10 data": 8,
        "data transformation": 8,
        "describe pandas method": 7,
        "corrs": 6,
        "pairwise correlations": 6,
        "quantile method": 6,
        "average income": 6,
        "log10": 5,
        "randomforestclassifier": 4,
        "random forest model": 4,
        "output parameters": 4,
        "incomes": 4,
        "integer age": 3,
        "exponential decay function": 3,
        "valueerror": 3,
        "zero values": 3,
        "math domain error": 3,
        "standard deviations": 3,
        "diistribution": 3,
        "transformantion": 3,
        "outliers": 1,
        "income distribution": 1,
        "age mood": 1,
        "correlationship coefficient": 1,
        "stroger relationships": 1,
        "prediction power": 1,
        "steps": 1,
        "income graph": 1,
        "skewed data distributions": 1,
        "logbase10": 1,
        "logarithmic transforms": 1,
        "corrs variable": 1,
        "matplotlib visualizations": 1,
        "lambda expression": 1,
        "log transform": 1,
        "geometric means": 1,
        "log10 transformation": 1,
        "pand": 1,
        "log transforming data": 1,
        "log base 10": 1
    },
    "sine function": {
        "train set": 39,
        "colored image": 36,
        "sine function": 28,
        "ridge regression": 28,
        "optimal plot": 28,
        "cross products": 24,
        "polynomial features extraction": 24,
        "optimal weights": 24,
        "multiple linear regression": 24,
        "polynomal expansion function": 24,
        "extrapolation": 24,
        "non-linear regression": 24,
        "forecasting techniques": 24,
        "random noise": 19,
        "noise level": 19,
        "noisy sine function": 18,
        "noise samples": 18,
        "fine tuning": 18,
        "parameter tuning": 18,
        "width variable": 18,
        "functions": 17,
        "lassocv": 15,
        "math module": 7,
        "image function": 7,
        "web pages": 7,
        "arithmetic operators": 6,
        "donald knuth": 5,
        "string method lower": 5,
        "random forest": 3,
        "estimators": 3,
        "ensembles": 3,
        "polynomial expansion": 3,
        "random forests": 3,
        "polynomial feature extraction": 3,
        "square brackets": 3
    },
    "regularized regression": {
        "ridge regression": 21,
        "ridgecv": 19,
        "linearregression object": 16,
        "polynomialfeatures": 15,
        "3rd degree polynomial": 12,
        "plotting function": 12,
        "3rd degree polynomial regression": 12,
        "polynomial": 12,
        "test sets": 12,
        "training error": 12,
        "polynomial approximation": 12,
        "testing error": 12,
        "lasso": 12,
        "idgecv": 12,
        "datatypes": 12,
        "info()": 12,
        "ols()": 12,
        "atemp column": 10,
        "registered columns": 10,
        "instant column": 10,
        "columns": 10,
        "correlations": 10,
        "fit()": 10,
        "distributions": 8,
        "boxplots": 8,
        "relationships": 8,
        "humidity": 8,
        "population": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "predictor variables": 6,
        "regularized regression": 6,
        "lasso regression": 6,
        "response variables": 6,
        "automatic regular": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "boxplot": 6,
        "statsmodels model": 6,
        "summary()": 6,
        "()": 6,
        "season": 6,
        "linearregression": 6,
        "response vector": 6,
        "iloc": 6,
        "features data matrix": 6,
        "score()": 4,
        "random distribution": 3,
        "predictor": 3,
        "dataset": 3,
        "regression methods": 3,
        "true function value": 3,
        "numpy documentation": 3,
        "numpy sort method": 3,
        "testing sets": 3,
        "bootstrap": 3,
        "confidence intervals": 3,
        "betas": 3,
        "function documentation": 3,
        "bootstrapping": 3,
        "randomness": 3,
        "confidence interval": 3,
        "ridge method": 3,
        "alpha": 3,
        "weight": 3,
        "shrinking parameter": 3,
        "penalization parameter": 3,
        "regularization parameter": 3,
        "beta coefficients": 3,
        "ridge regressions": 3,
        "multilinear regression": 3,
        "polynomial model": 3,
        "design matrix": 3,
        "polynomial features": 3,
        "vandermonde matrix": 3,
        "toy vector": 3,
        "linearregression model": 2,
        "data matrix": 2,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "hours distribution": 1
    },
    "internet": {
        "zipfile": 18,
        "granularity": 17,
        "head function": 14,
        "postal code": 13,
        "numerical tests": 12,
        "zip codes": 11,
        "pandas data frames": 10,
        "character encoding issues": 10,
        "utilities": 10,
        "sanity checks": 10,
        "data frames": 10,
        "businesses file": 10,
        "primary keys": 10,
        "94602": 10,
        "attributes": 9,
        "businesses": 9,
        "zip code": 8,
        "item price type": 8,
        "zip file": 7,
        "csv formatted": 7,
        "data directory": 7,
        "longitude": 7,
        "latitude": 7,
        "zip": 6,
        "bus data frame": 6,
        "business table": 6,
        "zip code values": 6,
        "counts": 6,
        "boolean expressions": 6,
        "data variables": 6,
        "datasets": 6,
        "bad data": 6,
        "internet": 6,
        "business dataframe": 6,
        "population": 6,
        "nonmissing values": 6,
        "zip files": 5,
        "filenames": 5,
        "python docs": 5,
        "fillna": 5,
        "extended zip codes": 5,
        "extended postal codes": 5,
        "94545": 5,
        "zipped data": 4,
        "text editor": 4,
        "web browser": 4,
        "datahub": 4,
        "vio dataframes": 4,
        "floating point values": 4,
        "testing function": 4,
        "rounding error": 4,
        "bus dataframe": 4,
        "longitude values": 4,
        "lambda function": 4,
        "item price": 4,
        "businesses data frame": 4,
        "variable postal code": 4,
        "iloc": 4,
        "missing zipcode values": 4,
        "94609": 4,
        "san francisco": 4,
        "inspection": 4,
        "inspection dataframe": 4,
        "html": 4,
        "restaurant names": 4,
        "jointplot": 4,
        "age": 4,
        "tweet list": 4,
        "positive sentiment list": 4,
        "scatterplot": 3,
        "missing zip codes": 3,
        "validzip variable": 3,
        "python type command": 2,
        "search engine": 2,
        "restaurant number of bookings": 2,
        "web scraper": 2,
        "restaurant prices": 2,
        "soup object": 2,
        "html objct": 2,
        "bs4": 2,
        "html page": 2,
        "google chrome": 2,
        "inspect": 2,
        "commas": 2,
        "tag objects": 2,
        "python string": 2,
        "beautiful soup": 2,
        "tag object": 2,
        "restaurant locations": 2,
        "barmini": 2,
        "search results": 2,
        "area income": 2,
        "kde distributions": 2,
        "pairplot": 2,
        "university of pittsburgh": 2,
        "google scholar": 2,
        "positive sentiment": 2,
        "negative sentiment": 2,
        "positive polarity words": 2,
        "word stems": 2,
        "web address": 2,
        "file name": 2,
        "current directory": 2,
        "quotation marks": 2,
        "url path": 2,
        "string object": 2,
        "windows computer": 2,
        "operating system": 2,
        "positive words": 2,
        "positive texts": 2,
        "positive counts": 2,
        "uci machine learning": 1,
        "file contents": 1,
        "decision tree learning": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "series isnull method": 1,
        "binary array": 1,
        "incorrect zip codes": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "business name": 1,
        "kmeans clusterer": 1,
        "itens": 1,
        "presidential election": 1,
        "measurement": 1,
        "caluclation": 1
    },
    "tutorials notebooks": {
        "income": 58,
        "age": 53,
        "id": 20,
        "data cleaning": 19,
        "income column": 19,
        "steps column": 18,
        "income10": 18,
        "pandas method": 16,
        "average income": 16,
        "data wrangling": 11,
        "pandas guide": 11,
        "data files": 11,
        "steps": 11,
        "id column": 10,
        "merged df dataframe": 10,
        "survey": 10,
        "presidential election": 10,
        "disk cleanup": 10,
        "nonresponse": 10,
        "population": 9,
        "missing incomes": 9,
        "plotting capabilities": 9,
        "andas": 9,
        "plotlib": 9,
        "plotting": 9,
        "data visualization": 9,
        "age column": 9,
        "missing data": 9,
        "income values": 9,
        "prediction ability": 9,
        "log transformation": 9,
        "polyfit": 9,
        "income10 data": 8,
        "data transformation": 8,
        "describe pandas method": 7,
        "corrs": 6,
        "pairwise correlations": 6,
        "quantile method": 6,
        "log10": 5,
        "output parameters": 4,
        "incomes": 4,
        "integer age": 3,
        "mean income": 3,
        "income data": 3,
        "exponential decay function": 3,
        "valueerror": 3,
        "zero values": 3,
        "math domain error": 3,
        "standard deviations": 3,
        "diistribution": 3,
        "transformantion": 3,
        "outliers": 1,
        "income distribution": 1,
        "age mood": 1,
        "correlationship coefficient": 1,
        "stroger relationships": 1,
        "prediction power": 1,
        "income graph": 1,
        "mathematical calculations": 1,
        "skewed data distributions": 1,
        "logbase10": 1,
        "logarithmic transforms": 1,
        "corrs variable": 1,
        "matplotlib visualizations": 1,
        "lambda expression": 1,
        "log transform": 1,
        "geometric means": 1,
        "log10 transformation": 1,
        "pand": 1,
        "dataset size": 1,
        "log transforming data": 1,
        "log base 10": 1
    },
    "coding": {
        "income": 58,
        "age": 53,
        "id": 20,
        "data cleaning": 19,
        "income column": 19,
        "steps column": 18,
        "income10": 18,
        "pandas method": 16,
        "average income": 16,
        "data wrangling": 11,
        "pandas guide": 11,
        "data files": 11,
        "steps": 11,
        "id column": 10,
        "merged df dataframe": 10,
        "survey": 10,
        "presidential election": 10,
        "disk cleanup": 10,
        "nonresponse": 10,
        "population": 9,
        "missing incomes": 9,
        "plotting capabilities": 9,
        "andas": 9,
        "plotlib": 9,
        "plotting": 9,
        "data visualization": 9,
        "age column": 9,
        "missing data": 9,
        "income values": 9,
        "prediction ability": 9,
        "log transformation": 9,
        "polyfit": 9,
        "income10 data": 8,
        "data transformation": 8,
        "describe pandas method": 7,
        "corrs": 6,
        "pairwise correlations": 6,
        "quantile method": 6,
        "log10": 5,
        "output parameters": 4,
        "incomes": 4,
        "integer age": 3,
        "mean income": 3,
        "income data": 3,
        "exponential decay function": 3,
        "valueerror": 3,
        "zero values": 3,
        "math domain error": 3,
        "standard deviations": 3,
        "diistribution": 3,
        "transformantion": 3,
        "outliers": 1,
        "income distribution": 1,
        "age mood": 1,
        "correlationship coefficient": 1,
        "stroger relationships": 1,
        "prediction power": 1,
        "income graph": 1,
        "mathematical calculations": 1,
        "skewed data distributions": 1,
        "logbase10": 1,
        "logarithmic transforms": 1,
        "corrs variable": 1,
        "matplotlib visualizations": 1,
        "lambda expression": 1,
        "log transform": 1,
        "geometric means": 1,
        "log10 transformation": 1,
        "pand": 1,
        "dataset size": 1,
        "log transforming data": 1,
        "log base 10": 1
    },
    "sentiment classification": {
        "grokking deep learning": 44,
        "udacity lectures": 44,
        "negative reviews": 37,
        "learning rate": 32,
        "course reading material": 27,
        "stochastic gradient descent": 27,
        "noise reduction": 21,
        "postive reviews": 18,
        "positive reviews": 18,
        "hidden layer": 17,
        "3 layer neural network": 9,
        "txt": 9,
        "project 1": 9,
        "quick theory validation": 9,
        "counter objects": 9,
        "split()": 9,
        "positive review": 9,
        "negative review": 9,
        "total words counter": 9,
        "total words": 9,
        "denominator": 9,
        "positive": 9,
        "word usage": 9,
        "logarithms": 9,
        "positive sentiment": 9,
        "sentiment": 9,
        "neutral words": 9,
        "project 2": 9,
        "vocab": 9,
        "vocabulary size": 9,
        "neural network": 9,
        "lookup table": 9,
        "negative words": 8,
        "postive words": 8,
        "oppositite signs": 8,
        "video": 8,
        "sentimentnetork": 8,
        "activation function": 8,
        "discount": 8,
        "sentimentnetwork": 8,
        "higher learning rate": 8,
        "polarity cutoff": 4,
        "6": 2,
        "words": 1
    },
    "survey data": {
        "predictor variables": 18,
        "polynomial": 18,
        "ridgecv": 13,
        "regularized regression": 12,
        "ridge regression": 12,
        "3rd degree polynomial": 12,
        "correlation": 10,
        "linearregression object": 8,
        "trailing whitespace problem": 6,
        "map function": 6,
        "series objects": 6,
        "seaborn pairplot": 6,
        "multicollinearity": 6,
        "ordinary least squares regression": 6,
        "data matrices": 6,
        "middle table": 6,
        "regression statistics": 6,
        "confidence interval": 6,
        "predictors": 6,
        "correlation coefficient": 6,
        "residuals": 6,
        "residue plot": 6,
        "functional dependency": 6,
        "modeling": 6,
        "linear models": 6,
        "data preparation": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "lasso regression": 6,
        "response variables": 6,
        "automatic regular": 6,
        "sklearn pipeline": 6,
        "sin function": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "l2 norm term": 6,
        "estimator": 6,
        "intercept term": 6,
        "statistical community": 6,
        "linear regression model": 6,
        "regularization parameter": 6,
        "regularized linear regression model": 6,
        "shrinkage": 6,
        "smoothness constraint": 6,
        "coefficient loadings": 6,
        "ordinary least squares regression model": 6,
        "regularization term": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "testing": 4,
        "distributions": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "pand": {
        "predictor variables": 18,
        "polynomial": 18,
        "ridgecv": 13,
        "regularized regression": 12,
        "ridge regression": 12,
        "3rd degree polynomial": 12,
        "correlation": 10,
        "linearregression object": 8,
        "trailing whitespace problem": 6,
        "map function": 6,
        "series objects": 6,
        "seaborn pairplot": 6,
        "multicollinearity": 6,
        "ordinary least squares regression": 6,
        "data matrices": 6,
        "middle table": 6,
        "regression statistics": 6,
        "confidence interval": 6,
        "predictors": 6,
        "correlation coefficient": 6,
        "residuals": 6,
        "residue plot": 6,
        "functional dependency": 6,
        "modeling": 6,
        "linear models": 6,
        "data preparation": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "lasso regression": 6,
        "response variables": 6,
        "automatic regular": 6,
        "sklearn pipeline": 6,
        "sin function": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "l2 norm term": 6,
        "estimator": 6,
        "intercept term": 6,
        "statistical community": 6,
        "linear regression model": 6,
        "regularization parameter": 6,
        "regularized linear regression model": 6,
        "shrinkage": 6,
        "smoothness constraint": 6,
        "coefficient loadings": 6,
        "ordinary least squares regression model": 6,
        "regularization term": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "question": {
        "predictor variables": 18,
        "polynomial": 18,
        "ridgecv": 13,
        "regularized regression": 12,
        "ridge regression": 12,
        "3rd degree polynomial": 12,
        "correlation": 10,
        "linearregression object": 8,
        "trailing whitespace problem": 6,
        "map function": 6,
        "series objects": 6,
        "seaborn pairplot": 6,
        "multicollinearity": 6,
        "ordinary least squares regression": 6,
        "data matrices": 6,
        "middle table": 6,
        "regression statistics": 6,
        "confidence interval": 6,
        "predictors": 6,
        "correlation coefficient": 6,
        "residuals": 6,
        "residue plot": 6,
        "functional dependency": 6,
        "modeling": 6,
        "linear models": 6,
        "data preparation": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "lasso regression": 6,
        "response variables": 6,
        "automatic regular": 6,
        "sklearn pipeline": 6,
        "sin function": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "l2 norm term": 6,
        "estimator": 6,
        "intercept term": 6,
        "statistical community": 6,
        "linear regression model": 6,
        "regularization parameter": 6,
        "regularized linear regression model": 6,
        "shrinkage": 6,
        "smoothness constraint": 6,
        "coefficient loadings": 6,
        "ordinary least squares regression model": 6,
        "regularization term": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "numeric dependent variable": {
        "predictor variables": 18,
        "polynomial": 18,
        "ridgecv": 13,
        "regularized regression": 12,
        "ridge regression": 12,
        "3rd degree polynomial": 12,
        "correlation": 10,
        "linearregression object": 8,
        "trailing whitespace problem": 6,
        "map function": 6,
        "series objects": 6,
        "seaborn pairplot": 6,
        "multicollinearity": 6,
        "ordinary least squares regression": 6,
        "data matrices": 6,
        "middle table": 6,
        "regression statistics": 6,
        "confidence interval": 6,
        "predictors": 6,
        "correlation coefficient": 6,
        "residuals": 6,
        "residue plot": 6,
        "functional dependency": 6,
        "modeling": 6,
        "linear models": 6,
        "data preparation": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "lasso regression": 6,
        "response variables": 6,
        "automatic regular": 6,
        "sklearn pipeline": 6,
        "sin function": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "l2 norm term": 6,
        "estimator": 6,
        "intercept term": 6,
        "statistical community": 6,
        "linear regression model": 6,
        "regularization parameter": 6,
        "regularized linear regression model": 6,
        "shrinkage": 6,
        "smoothness constraint": 6,
        "coefficient loadings": 6,
        "ordinary least squares regression model": 6,
        "regularization term": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "data science workflow": {
        "predictor variables": 18,
        "polynomial": 18,
        "ridgecv": 13,
        "regularized regression": 12,
        "ridge regression": 12,
        "3rd degree polynomial": 12,
        "correlation": 10,
        "linearregression object": 8,
        "trailing whitespace problem": 6,
        "map function": 6,
        "series objects": 6,
        "seaborn pairplot": 6,
        "multicollinearity": 6,
        "ordinary least squares regression": 6,
        "data matrices": 6,
        "middle table": 6,
        "regression statistics": 6,
        "confidence interval": 6,
        "predictors": 6,
        "correlation coefficient": 6,
        "residuals": 6,
        "residue plot": 6,
        "functional dependency": 6,
        "modeling": 6,
        "linear models": 6,
        "data preparation": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "lasso regression": 6,
        "response variables": 6,
        "automatic regular": 6,
        "sklearn pipeline": 6,
        "sin function": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "l2 norm term": 6,
        "estimator": 6,
        "intercept term": 6,
        "statistical community": 6,
        "linear regression model": 6,
        "regularization parameter": 6,
        "regularized linear regression model": 6,
        "shrinkage": 6,
        "smoothness constraint": 6,
        "coefficient loadings": 6,
        "ordinary least squares regression model": 6,
        "regularization term": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "response": {
        "predictor variables": 18,
        "polynomial": 18,
        "ridgecv": 13,
        "regularized regression": 12,
        "ridge regression": 12,
        "3rd degree polynomial": 12,
        "correlation": 10,
        "linearregression object": 8,
        "trailing whitespace problem": 6,
        "map function": 6,
        "series objects": 6,
        "seaborn pairplot": 6,
        "multicollinearity": 6,
        "ordinary least squares regression": 6,
        "data matrices": 6,
        "middle table": 6,
        "regression statistics": 6,
        "confidence interval": 6,
        "predictors": 6,
        "correlation coefficient": 6,
        "residuals": 6,
        "residue plot": 6,
        "functional dependency": 6,
        "modeling": 6,
        "linear models": 6,
        "data preparation": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "lasso regression": 6,
        "response variables": 6,
        "automatic regular": 6,
        "sklearn pipeline": 6,
        "sin function": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "l2 norm term": 6,
        "estimator": 6,
        "intercept term": 6,
        "statistical community": 6,
        "linear regression model": 6,
        "regularization parameter": 6,
        "regularized linear regression model": 6,
        "shrinkage": 6,
        "smoothness constraint": 6,
        "coefficient loadings": 6,
        "ordinary least squares regression model": 6,
        "regularization term": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "web server": {
        "constant term": 46,
        "train set": 30,
        "coefficient": 26,
        "predict method": 24,
        "multiple linear regression": 23,
        "x matrix": 21,
        "selection variable": 20,
        "backups": 20,
        "cpu load": 20,
        "coefficients": 18,
        "page view": 18,
        "cross products": 18,
        "polynomial features extraction": 18,
        "optimal weights": 18,
        "polynomal expansion function": 18,
        "random noise": 17,
        "noise level": 17,
        "total request rate": 16,
        "colored image": 12,
        "request rates": 12,
        "cpu": 11,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "width variable": 7,
        "fine tuning": 6,
        "parameter tuning": 6,
        "inspection": 6,
        "data import": 6,
        "data wrangling": 6,
        "web request": 6,
        "web server": 6,
        "loaded data": 6,
        "head command": 6,
        "cpu column": 6,
        "numpy function": 6,
        "lassocv": 6,
        "request": 2,
        "average cpu usage": 2,
        "single linear regression": 2,
        "width parameter": 2,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1,
        "individual timeseries": 1,
        "individual pageviews": 1,
        "pageview format": 1,
        "multiple features": 1,
        "confidance intervals": 1,
        "anomaly detection": 1,
        "gaussianprocess": 1,
        "ridgecv": 1
    },
    "table of contents": {
        "keyword arguments": 13,
        "enumerate": 12,
        "python functions": 11,
        "hamlettext": 11,
        "listy containers": 10,
        "folium": 9,
        "searchable map": 9,
        "iterators": 9,
        "dictionaries": 9,
        "positional arguments": 9,
        "numpy module": 7,
        "numerical programming library": 7,
        "scientific computing": 7,
        "large data sets": 7,
        "calculator": 7,
        "integer division": 7,
        "python data types": 7,
        "variables": 7,
        "floating point values": 7,
        "fluent python": 7,
        "python objects": 7,
        "comparison operations": 7,
        "arithmetic": 7,
        "datahub": 6,
        "len function": 6,
        "slicing": 6,
        "list slicing operations": 6,
        "iteration": 6,
        "iterator": 6,
        "list comprehension syntax": 6,
        "for loops": 6,
        "conditional if statements": 6,
        "hamletwords": 6,
        "search function": 5,
        "united states": 5,
        "search object": 5,
        "constructor function": 5,
        "whole geographic areas": 5,
        "search map": 5,
        "rome": 5,
        "map coordinates": 5,
        "lists": 5,
        "while loop": 5,
        "lavel astring": 5,
        "string operations": 5,
        "jane beth doe": 5,
        "last names": 5,
        "dictionary comprehension": 5,
        "leaflet": 4,
        "geojson": 4,
        "draw tool": 4,
        "course names": 4,
        "zip": 4,
        "constructor function dict": 4,
        "'s sequence protocol": 4,
        "umpy": 4,
        "specfic task": 4,
        "method": 4,
        "mathematical function": 4,
        "lambda functions": 4,
        "mathematical functions": 4,
        "pr": 4,
        "isprime": 4,
        "default argument values": 4,
        "libraries": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "positional properties": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "draw object": 3,
        "polygon": 3,
        "deepwater horizon oil spill": 3,
        "gulf of mexico": 3,
        "bermuda triangle": 3,
        "nltk": 3,
        "nonempty sentences": 3,
        "edinburgh": 2,
        "scotland": 2,
        "nashville": 2,
        "help message": 2,
        "stopwords": 2,
        "tokenized sentences": 2,
        "follwing code block": 2,
        "string method count": 2,
        "string method lower": 2,
        "word vectors": 2,
        "word vector": 2,
        "leadership": 2,
        "answer key": 1,
        "print function": 1,
        "rectangle area": 1,
        "jupyter notebooks": 1,
        "ipython": 1,
        "function type": 1,
        "double equals sign": 1,
        "single equals sign": 1,
        "boolean": 1,
        "bool": 1,
        "boolean comparisons": 1,
        "indentation": 1,
        "conditional statement": 1,
        "python observation": 1,
        "variable observation": 1,
        "str()": 1,
        "str() function": 1,
        "typecasting": 1,
        "year": 1,
        "mathematical operators": 1,
        "leap year": 1,
        "conditional statements": 1,
        "variable year": 1,
        "arguments": 1,
        "online resources": 1,
        "stack overflow": 1,
        "google search": 1,
        "python workflow": 1,
        "python documentation": 1,
        "function call": 1,
        "input": 1,
        "default input values": 1,
        "default values": 1,
        "docstring": 1,
        "source code": 1,
        "fahrenheit": 1,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1,
        "word embeddings": 1,
        "empty cells": 1,
        "word relationships": 1,
        "gensim": 1,
        "cosine similarity": 1,
        "president": 1,
        "similarity score": 1,
        "smilarity score": 1,
        "cosine distance": 1,
        "mean vector": 1,
        "vector math": 1,
        "semantics": 1,
        "output vectors": 1,
        "queen": 1,
        "manliness": 1,
        "word vector king": 1,
        "feminine attribute": 1,
        "royalty": 1,
        "standardize x": 1,
        "python dictionary": 1,
        "python dictionaries": 1,
        "berkeley police department": 1,
        "call location data": 1,
        "barrows": 1,
        "call coordinates": 1,
        "polyline": 1,
        "heatmap": 1
    },
    "test sets": {
        "numerical labels": 26,
        "training samples": 26,
        "vm": 20,
        "test samples": 16,
        "testing samples": 16,
        "predicted labels": 16,
        "test data": 15,
        "string labels": 12,
        "svm classifier": 12,
        "tab separated raw text file": 11,
        "discriminative information": 11,
        "countvectorizer": 11,
        "array": 11,
        "vectorizer": 11,
        "custom sklearn objects": 11,
        "ndarray": 10,
        "np": 10,
        "training data samples": 10,
        "test data samples": 10,
        "test sets": 10,
        "learnt classifier": 10,
        "training labels": 10,
        "trained classifier": 10,
        "predict labels": 10,
        "nltk": 9,
        "tf scaling": 9,
        "tfidfvectorizer": 9,
        "default parameters": 9,
        "unigrams": 9,
        "stop words": 9,
        "review column": 8,
        "tfidf": 8,
        "vectors": 8,
        "minimum feature term": 7,
        "bigrams": 7,
        "maximum frequency": 7,
        "linearsvc": 7,
        "trigrams": 7,
        "svm": 6,
        "customer review task": 5,
        "labels": 5,
        "header arguments": 5,
        "returned variable": 4,
        "code cell": 3,
        "tokenize method": 3,
        "porter stemmer": 3,
        "kmeans": 3,
        "tfidf vectorizer": 3,
        "train set": 3,
        "cross products": 3,
        "polynomial features extraction": 3,
        "optimal weights": 3,
        "multiple linear regression": 3,
        "polynomal expansion function": 3,
        "training error": 2,
        "clustering analysis": 2,
        "learning rate loss": 2,
        "training method": 2,
        "network error": 2,
        "activation function": 2,
        "hidden layers": 2,
        "batch size": 2,
        "10000 element long vectors": 2,
        "stochastic gradient descent": 2,
        "connected layer": 2,
        "returned object": 2,
        "performance metric": 2,
        "correctly classified data points": 2,
        "total data points": 2,
        "graphlab create": 2,
        "majority class classifier": 2,
        "false negatives": 2,
        "confusion matrix": 2,
        "true negatives": 2,
        "true positives": 2,
        "incorrect predictions": 2,
        "binary classification": 2,
        "false positives": 2,
        "quiz": 2,
        "outlier": 1,
        "test error": 1,
        "root mean squared error": 1,
        "average": 1,
        "cluster labels": 1,
        "predicted numerical labels": 1,
        "memory requirements": 1,
        "numpy email arrays": 1,
        "random noise": 1,
        "noise level": 1
    },
    "svm": {
        "numerical labels": 34,
        "training samples": 32,
        "test data": 25,
        "test samples": 22,
        "testing samples": 22,
        "predicted labels": 22,
        "vm": 20,
        "nltk": 18,
        "tf scaling": 18,
        "svm classifier": 16,
        "review column": 16,
        "tfidf": 16,
        "vectors": 16,
        "customer review task": 15,
        "labels": 15,
        "header arguments": 15,
        "string labels": 14,
        "svm": 14,
        "returned variable": 12,
        "tab separated raw text file": 11,
        "discriminative information": 11,
        "countvectorizer": 11,
        "array": 11,
        "vectorizer": 11,
        "custom sklearn objects": 11,
        "ndarray": 10,
        "np": 10,
        "training data samples": 10,
        "test data samples": 10,
        "test sets": 10,
        "learnt classifier": 10,
        "training labels": 10,
        "trained classifier": 10,
        "predict labels": 10,
        "tfidf vectorizer": 9,
        "returned object": 6,
        "predicted numerical labels": 3,
        "accuracy score": 2,
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "project notebook": {
        "missing data": 43,
        "data scientist": 33,
        "unclean data": 33,
        "column names": 31,
        "survey": 31,
        "data columns": 24,
        "string methods": 23,
        "standardize": 23,
        "majors": 19,
        "significance": 14,
        "missing": 12,
        "real world data": 12,
        "emojis": 12,
        "substring checking": 11,
        "missing gender information": 11,
        "measurement systems": 11,
        "inches": 11,
        "height data": 11,
        "null value": 11,
        "ordinary least squares": 9,
        "linear models": 9,
        "design matrices": 9,
        "alpha significance value": 8,
        "null hypothesis": 8,
        "boolean values": 8,
        "values": 7,
        "cs data": 6,
        "confounding variable": 6,
        "patsy": 6,
        "interim conclusion": 6,
        "hypothesis": 6,
        "first pass analysis": 6,
        "confounding variables": 6,
        "average heights": 4,
        "alpha value": 4,
        "statistical test": 4,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "correlation": 4,
        "confounds": 4,
        "causation": 4,
        "average height values": 3,
        "pivot table": 3,
        "linearmodels": 3,
        "advanced indexing": 2,
        "df dataframe": 2,
        "booleans": 2,
        "oleans": 2,
        "isnull": 2,
        "computer science majors": 2,
        "pandas array indexing": 1,
        "kmeans": 1,
        "array element": 1
    },
    "polynomial": {
        "ridgecv": 14,
        "lasso": 12,
        "idgecv": 12,
        "ex": 12,
        "exercises": 12,
        "bike sharing dataset": 12,
        "ises": 12,
        "datatypes": 12,
        "info()": 12,
        "ols()": 12,
        "atemp column": 10,
        "registered columns": 10,
        "instant column": 10,
        "columns": 10,
        "correlations": 10,
        "fit()": 10,
        "time delays": 9,
        "polynomial": 9,
        "distributions": 8,
        "correlation": 8,
        "r formula syntax": 8,
        "ordinary least squares model": 8,
        "boxplots": 8,
        "relationships": 8,
        "humidity": 8,
        "ols() function": 8,
        "nonlinear relationships": 8,
        "r formula": 8,
        "crsdeptime": 8,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "boxplot": 6,
        "statsmodels model": 6,
        "summary()": 6,
        "()": 6,
        "season": 6,
        "linearregression": 6,
        "response vector": 6,
        "iloc": 6,
        "features data matrix": 6,
        "neg log likelihood": 5,
        "minimize function": 5,
        "predictive distribution": 5,
        "gp": 5,
        "linear regression model": 5,
        "likelihood function": 4,
        "mcmc": 4,
        "score()": 4,
        "linearregression object": 4,
        "component kernel": 3,
        "gp object": 3,
        "overal kernel": 3,
        "joint model": 3,
        "gradient functions": 3,
        "predictive means": 3,
        "predictive mean": 3,
        "covariance matrix": 3,
        "individual components": 3,
        "agn reverberation mapping": 3,
        "posterior distribution": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "white noise standard deviation": 3,
        "likelihood surface": 3,
        "depdelay": 3,
        "unit tests": 3,
        "instructor grades": 3,
        "ridge regression model": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "boolean variable": 2,
        "delayed times": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "optimization": 2,
        "gp hps": 2,
        "uncertainty estimates": 2,
        "posterior probability": 2,
        "confidence intervals": 2,
        "posterior function": 2,
        "data scientist": 2,
        "polynomical models": 2,
        "indicator variables": 2,
        "lambda function": 2,
        "categorical attributes": 2,
        "corr()": 2,
        "order()": 2,
        "linearregression model": 2,
        "data matrix": 2,
        "hours distribution": 2,
        "delay": 2,
        "del": 2,
        "ridge regresion model": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1,
        "implementation": 1,
        "setdefault method": 1,
        "dictionaries": 1
    },
    "yelp": {
        "text length": 56,
        "yelp": 51,
        "data visualization libraries": 28,
        "data imports": 28,
        "seaborn documentation": 28,
        "seaborn library": 28,
        "facetgrid": 28,
        "star ratings": 28,
        "box": 26,
        "countplot": 24,
        "star rating": 24,
        "numerical columns": 24,
        "mean values": 24,
        "groupby dataframe": 22,
        "heatmap": 20,
        "countvectorizer": 20,
        "countvectorizer object": 14,
        "train test split": 10,
        "confusion matrix": 10,
        "nlp classification": 9,
        "multinomialnb": 8,
        "pipeline": 6,
        "estimator": 4,
        "tfidftransformer": 4,
        "mrwordfreqcount": 1,
        "hadoop mode": 1,
        "hadoop streaming": 1,
        "mrjob": 1
    },
    "natural language processing": {
        "numerical labels": 26,
        "training samples": 26,
        "nltk": 22,
        "vm": 20,
        "test samples": 16,
        "testing samples": 16,
        "predicted labels": 16,
        "test data": 15,
        "string labels": 12,
        "svm classifier": 12,
        "corpus data": 11,
        "natural language processing": 11,
        "nlp": 11,
        "natural language toolkit": 11,
        "tab separated raw text file": 11,
        "discriminative information": 11,
        "countvectorizer": 11,
        "array": 11,
        "vectorizer": 11,
        "custom sklearn objects": 11,
        "ndarray": 10,
        "np": 10,
        "training data samples": 10,
        "test data samples": 10,
        "test sets": 10,
        "learnt classifier": 10,
        "training labels": 10,
        "trained classifier": 10,
        "predict labels": 10,
        "tf scaling": 9,
        "review column": 8,
        "tfidf": 8,
        "vectors": 8,
        "svm": 6,
        "customer review task": 5,
        "labels": 5,
        "header arguments": 5,
        "returned variable": 4,
        "tweet list": 4,
        "positive sentiment list": 4,
        "tfidf vectorizer": 3,
        "sentiment analysis classification": 2,
        "movie reviews corpus": 2,
        "twitter": 2,
        "nltk corpora": 2,
        "fileids method": 2,
        "returned object": 2,
        "university of pittsburgh": 2,
        "google scholar": 2,
        "positive sentiment": 2,
        "negative sentiment": 2,
        "internet": 2,
        "positive polarity words": 2,
        "word stems": 2,
        "web address": 2,
        "file name": 2,
        "current directory": 2,
        "quotation marks": 2,
        "url path": 2,
        "string object": 2,
        "windows computer": 2,
        "operating system": 2,
        "positive words": 2,
        "positive texts": 2,
        "positive counts": 2,
        "machine learning algorithm": 1,
        "sentiment analysis": 1,
        "nested loop": 1,
        "stopwords": 1,
        "counter class": 1,
        "collection package": 1,
        "standard library": 1,
        "predicted numerical labels": 1,
        "presidential election": 1,
        "measurement": 1,
        "caluclation": 1
    },
    "loops": {
        "enumerate": 12,
        "keyword arguments": 12,
        "python functions": 11,
        "hamlettext": 11,
        "bfs": 10,
        "listy containers": 10,
        "iterators": 9,
        "dictionaries": 9,
        "jupyter": 8,
        "breadth first search": 8,
        "positional arguments": 8,
        "numpy module": 7,
        "numerical programming library": 7,
        "scientific computing": 7,
        "large data sets": 7,
        "calculator": 7,
        "integer division": 7,
        "python data types": 7,
        "variables": 7,
        "floating point values": 7,
        "fluent python": 7,
        "python objects": 7,
        "comparison operations": 7,
        "arithmetic": 7,
        "len function": 6,
        "slicing": 6,
        "list slicing operations": 6,
        "iteration": 6,
        "iterator": 6,
        "list comprehension syntax": 6,
        "for loops": 6,
        "conditional if statements": 6,
        "hamletwords": 6,
        "execution time": 6,
        "ellipsis": 5,
        "code icon": 5,
        "lists": 5,
        "while loop": 5,
        "lavel astring": 5,
        "string operations": 5,
        "jane beth doe": 5,
        "last names": 5,
        "dictionary comprehension": 5,
        "vectorised functions": 5,
        "docs": 4,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "list comprehensions": 4,
        "vertex names": 4,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "course names": 4,
        "zip": 4,
        "constructor function dict": 4,
        "'s sequence protocol": 4,
        "umpy": 4,
        "specfic task": 4,
        "method": 4,
        "mathematical function": 4,
        "lambda functions": 4,
        "mathematical functions": 4,
        "pr": 4,
        "isprime": 4,
        "default argument values": 4,
        "libraries": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "positional properties": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3,
        "dist array": 3,
        "prev array": 3,
        "depth first search": 3,
        "cantaloupes": 2,
        "connected components": 2,
        "string method count": 2,
        "string method lower": 2,
        "execution speed": 2,
        "linear regression implementation": 2,
        "vector dot products": 1,
        "berkeley bowl": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "adjacency matrix": 1,
        "algebraic connectivity": 1,
        "laplacian matrix": 1,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1,
        "implementation": 1,
        "loops": 1
    },
    "virtual environment": {
        "mathematical functions": 24,
        "iaml": 16,
        "virtual environment": 16,
        "scientific computing": 16,
        "array objects": 16,
        "matlab": 16,
        "numpy module": 16,
        "data structures": 12,
        "slicing": 12,
        "dataframe structures": 12,
        "home directory": 8,
        "git directory": 8,
        "version control": 8,
        "jupy": 8,
        "jupyter notebook session": 8,
        "upy": 8,
        "notebook": 8,
        "operating": 8,
        "seaborn package": 8,
        "anaconda distribution": 8,
        "bash source": 8,
        "command prompt": 8,
        "bash jupyter notebook": 8,
        "plotting library": 8,
        "data visualisation library": 8,
        "tutorial": 8,
        "data analysis tools": 8,
        "machine learning library": 8,
        "notebook kernel": 8,
        "tab completion": 8,
        "help documentation": 8,
        "linear algebra": 8,
        "nonnegative integers": 8,
        "boolean array indexing": 8,
        "numeric datatypes": 8,
        "operator overloads": 8,
        "elementwise multiplication": 8,
        "matrix multiplication": 8,
        "inner products": 8,
        "dot function": 8,
        "arithmetic operations": 8,
        "broadcasting": 8,
        "elementwise maximum": 8,
        "column names": 8,
        "values method": 8,
        "data manipulation": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "column headers": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "mysqrt": 1,
        "sqrt()": 1,
        "modulo operation": 1,
        "mysqrt()": 1,
        "internet": 1,
        "python sieve": 1,
        "sieve": 1,
        "eratosthenes": 1,
        "prime numbers": 1
    },
    "test data": {
        "numerical labels": 26,
        "training samples": 26,
        "nltk": 20,
        "vm": 20,
        "test data": 17,
        "test samples": 16,
        "testing samples": 16,
        "predicted labels": 16,
        "string labels": 12,
        "svm classifier": 12,
        "corpus data": 11,
        "natural language processing": 11,
        "nlp": 11,
        "natural language toolkit": 11,
        "tab separated raw text file": 11,
        "discriminative information": 11,
        "countvectorizer": 11,
        "array": 11,
        "vectorizer": 11,
        "custom sklearn objects": 11,
        "ndarray": 10,
        "np": 10,
        "training data samples": 10,
        "test data samples": 10,
        "test sets": 10,
        "learnt classifier": 10,
        "training labels": 10,
        "trained classifier": 10,
        "predict labels": 10,
        "tf scaling": 9,
        "review column": 8,
        "tfidf": 8,
        "vectors": 8,
        "svm": 6,
        "customer review task": 5,
        "labels": 5,
        "header arguments": 5,
        "standardize function": 4,
        "returned variable": 4,
        "tfidf vectorizer": 3,
        "feature vectors": 2,
        "training examples": 2,
        "wikipedia feature scaling article": 2,
        "distribution mean": 2,
        "returned object": 2,
        "neural network": 1,
        "of variable tensors": 1,
        "list of variable tensors": 1,
        "truncated normal distribution": 1,
        "placeholder tensor": 1,
        "random numbers": 1,
        "weights": 1,
        "tf variables": 1,
        "biases": 1,
        "mini batch": 1,
        "tf graph": 1,
        "tf placeholders": 1,
        "helper function": 1,
        "bias dictionary": 1,
        "learnable parameters": 1,
        "bias matrices": 1,
        "network model": 1,
        "weights dictionary": 1,
        "training time": 1,
        "tensorflow": 1,
        "feedforward network model": 1,
        "hidden layers": 1,
        "output layer": 1,
        "sigmoid activation function": 1,
        "predicted numerical labels": 1,
        "extratree": 1,
        "decision rules": 1,
        "decisiontreeregression": 1,
        "decision trees": 1,
        "decisiontreeregressor": 1,
        "important features": 1,
        "importance weight": 1,
        "validation data": 1
    },
    "virtual": {
        "mathematical functions": 24,
        "iaml": 16,
        "virtual environment": 16,
        "scientific computing": 16,
        "array objects": 16,
        "matlab": 16,
        "numpy module": 16,
        "data structures": 12,
        "slicing": 12,
        "dataframe structures": 12,
        "home directory": 8,
        "git directory": 8,
        "version control": 8,
        "jupy": 8,
        "jupyter notebook session": 8,
        "upy": 8,
        "notebook": 8,
        "operating": 8,
        "seaborn package": 8,
        "anaconda distribution": 8,
        "bash source": 8,
        "command prompt": 8,
        "bash jupyter notebook": 8,
        "plotting library": 8,
        "data visualisation library": 8,
        "tutorial": 8,
        "data analysis tools": 8,
        "machine learning library": 8,
        "notebook kernel": 8,
        "tab completion": 8,
        "help documentation": 8,
        "linear algebra": 8,
        "nonnegative integers": 8,
        "boolean array indexing": 8,
        "numeric datatypes": 8,
        "operator overloads": 8,
        "elementwise multiplication": 8,
        "matrix multiplication": 8,
        "inner products": 8,
        "dot function": 8,
        "arithmetic operations": 8,
        "broadcasting": 8,
        "elementwise maximum": 8,
        "column names": 8,
        "values method": 8,
        "data manipulation": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "column headers": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1
    },
    "virtual enviroment": {
        "mathematical functions": 24,
        "iaml": 16,
        "virtual environment": 16,
        "scientific computing": 16,
        "array objects": 16,
        "matlab": 16,
        "numpy module": 16,
        "data structures": 12,
        "slicing": 12,
        "dataframe structures": 12,
        "home directory": 8,
        "git directory": 8,
        "version control": 8,
        "jupy": 8,
        "jupyter notebook session": 8,
        "upy": 8,
        "notebook": 8,
        "operating": 8,
        "seaborn package": 8,
        "anaconda distribution": 8,
        "bash source": 8,
        "command prompt": 8,
        "bash jupyter notebook": 8,
        "plotting library": 8,
        "data visualisation library": 8,
        "tutorial": 8,
        "data analysis tools": 8,
        "machine learning library": 8,
        "notebook kernel": 8,
        "tab completion": 8,
        "help documentation": 8,
        "linear algebra": 8,
        "nonnegative integers": 8,
        "boolean array indexing": 8,
        "numeric datatypes": 8,
        "operator overloads": 8,
        "elementwise multiplication": 8,
        "matrix multiplication": 8,
        "inner products": 8,
        "dot function": 8,
        "arithmetic operations": 8,
        "broadcasting": 8,
        "elementwise maximum": 8,
        "column names": 8,
        "values method": 8,
        "data manipulation": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "column headers": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1
    },
    "shell prompt": {
        "mathematical functions": 24,
        "iaml": 16,
        "virtual environment": 16,
        "scientific computing": 16,
        "array objects": 16,
        "matlab": 16,
        "numpy module": 16,
        "data structures": 12,
        "slicing": 12,
        "dataframe structures": 12,
        "home directory": 8,
        "git directory": 8,
        "version control": 8,
        "jupy": 8,
        "jupyter notebook session": 8,
        "upy": 8,
        "notebook": 8,
        "operating": 8,
        "seaborn package": 8,
        "anaconda distribution": 8,
        "bash source": 8,
        "command prompt": 8,
        "bash jupyter notebook": 8,
        "plotting library": 8,
        "data visualisation library": 8,
        "tutorial": 8,
        "data analysis tools": 8,
        "machine learning library": 8,
        "notebook kernel": 8,
        "tab completion": 8,
        "help documentation": 8,
        "linear algebra": 8,
        "nonnegative integers": 8,
        "boolean array indexing": 8,
        "numeric datatypes": 8,
        "operator overloads": 8,
        "elementwise multiplication": 8,
        "matrix multiplication": 8,
        "inner products": 8,
        "dot function": 8,
        "arithmetic operations": 8,
        "broadcasting": 8,
        "elementwise maximum": 8,
        "column names": 8,
        "values method": 8,
        "data manipulation": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "column headers": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1
    },
    "correlation": {
        "ridgecv": 14,
        "regularized regression": 12,
        "3rd degree polynomial": 12,
        "ols()": 12,
        "linearregression object": 10,
        "fit()": 10,
        "linear models": 9,
        "boxplots": 8,
        "relationships": 8,
        "humidity": 8,
        "sampling distribution": 7,
        "modeling": 6,
        "data preparation": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "predictor variables": 6,
        "lasso regression": 6,
        "response variables": 6,
        "ridge regression": 6,
        "automatic regular": 6,
        "sklearn pipeline": 6,
        "sin function": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "boxplot": 6,
        "statsmodels model": 6,
        "summary()": 6,
        "()": 6,
        "season": 6,
        "linearregression": 6,
        "response vector": 6,
        "iloc": 6,
        "features data matrix": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "permutation": 4,
        "student t distribution": 4,
        "analytic distribution": 4,
        "central limit theorem": 4,
        "distributions": 4,
        "score()": 4,
        "birth weight": 3,
        "null hypothesis": 3,
        "standard error": 3,
        "ordinary least squares": 3,
        "linearmodels": 3,
        "design matrices": 3,
        "train set": 3,
        "cross products": 3,
        "polynomial features extraction": 3,
        "optimal weights": 3,
        "multiple linear regression": 3,
        "polynomal expansion function": 3,
        "hypothesistest": 2,
        "cdf": 2,
        "simulation": 2,
        "lognormal distribution": 2,
        "birth weights": 2,
        "multiplicative factors": 2,
        "random value": 2,
        "adult weights": 2,
        "difference in means": 2,
        "confidence intervals": 2,
        "confidence interval": 2,
        "indicator variables": 2,
        "lambda function": 2,
        "categorical attributes": 2,
        "linearregression model": 2,
        "data matrix": 2,
        "hours distribution": 2,
        "sampling distributions": 1,
        "gender gap": 1,
        "student engineering teams": 1,
        "class projects": 1,
        "standard errors": 1,
        "age": 1,
        "correlation": 1,
        "first babies": 1,
        "statistical significance": 1,
        "false negative rate": 1,
        "nsfg data": 1,
        "hypothesis test": 1,
        "random noise": 1,
        "noise level": 1
    },
    "functions": {
        "colored image": 12,
        "train set": 12,
        "enumerate": 12,
        "keyword arguments": 12,
        "python functions": 11,
        "hamlettext": 11,
        "listy containers": 10,
        "iterators": 9,
        "dictionaries": 9,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "positional arguments": 8,
        "numpy module": 7,
        "numerical programming library": 7,
        "scientific computing": 7,
        "large data sets": 7,
        "calculator": 7,
        "integer division": 7,
        "python data types": 7,
        "variables": 7,
        "floating point values": 7,
        "fluent python": 7,
        "python objects": 7,
        "comparison operations": 7,
        "arithmetic": 7,
        "fine tuning": 6,
        "parameter tuning": 6,
        "width variable": 6,
        "len function": 6,
        "slicing": 6,
        "list slicing operations": 6,
        "iteration": 6,
        "iterator": 6,
        "list comprehension syntax": 6,
        "for loops": 6,
        "conditional if statements": 6,
        "hamletwords": 6,
        "lassocv": 5,
        "lists": 5,
        "while loop": 5,
        "lavel astring": 5,
        "string operations": 5,
        "jane beth doe": 5,
        "last names": 5,
        "dictionary comprehension": 5,
        "course names": 4,
        "zip": 4,
        "constructor function dict": 4,
        "'s sequence protocol": 4,
        "umpy": 4,
        "specfic task": 4,
        "method": 4,
        "mathematical function": 4,
        "lambda functions": 4,
        "mathematical functions": 4,
        "pr": 4,
        "isprime": 4,
        "default argument values": 4,
        "libraries": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "positional properties": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "print function": 2,
        "test expression": 2,
        "string method count": 2,
        "string method lower": 2,
        "img": 1,
        "keyword return": 1,
        "assignment statements": 1,
        "parentheses": 1,
        "closed parenthesis": 1,
        "function call expression": 1,
        "name expression": 1,
        "abs": 1,
        "boolean value": 1,
        "numerical arguments": 1,
        "feedback": 1,
        "print": 1,
        "assignment statement": 1,
        "conditional statements": 1,
        "if statement": 1,
        "condition expression": 1,
        "test expressions": 1,
        "programming": 1,
        "remainder operator": 1,
        "modulus operator": 1,
        "fizzbuzz": 1,
        "twitter dataset": 1,
        "twitter data": 1,
        "apply function": 1,
        "addition": 1,
        "total": 1,
        "addition function": 1,
        "total connections": 1,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1,
        "tab": 1,
        "question mark": 1,
        "ipython": 1,
        "control flow structure": 1,
        "python program": 1,
        "united states": 1,
        "canada": 1,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1
    },
    "jupyter": {
        "jupyter": 32,
        "latent space": 15,
        "numpy library": 13,
        "small integers": 11,
        "docs": 11,
        "mixing coefficients": 10,
        "command mode": 10,
        "keyboard shortcuts": 10,
        "recursion": 10,
        "ellipsis": 9,
        "image values": 8,
        "image files": 8,
        "pixel value": 8,
        "image formats": 8,
        "ar": 8,
        "binarized image": 7,
        "color channels": 7,
        "spark": 7,
        "programming": 6,
        "integers": 6,
        "list comprehensions": 6,
        "boolean values": 5,
        "handwriting styles": 5,
        "multivariate bernoulli distribution": 5,
        "misclassifications": 5,
        "data labels": 5,
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "mathematical expressions": 5,
        "rocket icon": 5,
        "loops": 5,
        "lambdas": 5,
        "anonymous functions": 5,
        "code icon": 5,
        "if statement": 4,
        "docstring": 4,
        "keyword arguments": 4,
        "submission system": 4,
        "double100": 4,
        "map reduce job": 4,
        "math operations": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "numerical differentiation": 3,
        "human eye": 3,
        "gaussian blurring function": 3,
        "image": 3,
        "bike share": 3,
        "vm": 3,
        "scikit learn": 3,
        "python pipeline": 3,
        "axis argument": 3,
        "python dictionary": 3,
        "if code block": 2,
        "assignment": 2,
        "<div style": 2,
        "boolean value": 2,
        "boolean": 2,
        "else blocks": 2,
        "elif": 2,
        "continue statements": 2,
        "if block": 2,
        "nested indentation": 2,
        "variable word": 2,
        "value word": 2,
        "iterators": 2,
        "enumerate()": 2,
        "loop iteration": 2,
        "multiple assignment": 2,
        "items()": 2,
        "even valued perfect squares": 2,
        "if statements": 2,
        "functions": 2,
        "code execution": 2,
        "code duplication": 2,
        "programming languages": 2,
        "print() function": 2,
        "python interpreter": 2,
        "exception": 2,
        "variable names": 2,
        "large programs": 2,
        "control flow structures": 2,
        "local scoping": 2,
        "variable scope": 2,
        "nameerror": 2,
        "variable": 2,
        "nested list": 2,
        "code block": 2,
        "hash map": 2,
        "phonebook": 2,
        "python pic": 2,
        "vector dot products": 2,
        "partial derivative": 2,
        "berkeley bowl": 2,
        "cantaloupes": 2,
        "filter filter": 2,
        "caltrain station": 2,
        "reducebykey method": 2,
        "second": 2,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "colors": 1,
        "bar chart": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "fruit prices": 1,
        "final costs": 1,
        "fruit baskets": 1,
        "combinebykey method": 1,
        "inebykey": 1,
        "red": 1,
        "sort df": 1,
        "mysqrt": 1,
        "sqrt()": 1,
        "modulo operation": 1,
        "mysqrt()": 1,
        "internet": 1,
        "python sieve": 1,
        "sieve": 1,
        "eratosthenes": 1,
        "prime numbers": 1,
        "hyperparameters": 1
    },
    "jupyterhub server": {
        "list comprehensions": 16,
        "departure delay": 13,
        "code cell": 11,
        "depdelay": 10,
        "dayofweek": 6,
        "airtime": 6,
        "unit tests": 5,
        "tokenize": 5,
        "normalized weight": 5,
        "uniquecarrier": 4,
        "datapath": 4,
        "subject line": 4,
        "assertion test": 4,
        "iata airport code": 4,
        "scheduled arrival time": 4,
        "crsarrtime": 4,
        "crsdeptime": 4,
        "scheduled departure time": 4,
        "ord": 4,
        "faa": 4,
        "int64": 4,
        "map()": 4,
        "leaf specimens": 3,
        "csv data file": 3,
        "digital images": 3,
        "plant species": 3,
        "specimen number": 3,
        "punctuation marks": 3,
        "alphanumerical characters": 3,
        "fileid": 3,
        "nltk corpus": 3,
        "iata codes": 3,
        "brown university": 3,
        "corpus": 3,
        "nltk brown corpus": 3,
        "docs": 3,
        "1d numpy arrays": 3,
        "brown corpus": 3,
        "data preprocessing": 3,
        "base directory": 3,
        "integers": 3,
        "spam label array": 3,
        "scikit learn": 3,
        "spam arrays": 3,
        "ham label array": 3,
        "tfidfvectorizer": 3,
        "bigrams": 3,
        "trigrams": 3,
        "unigrams": 3,
        "wordnet synset": 3,
        "default parameters": 3,
        "minimum count": 3,
        "networkx graph": 3,
        "int value": 3,
        "python dictionary": 3,
        "linear regression model": 3,
        "arrdelay": 3,
        "testing sets": 3,
        "hyperparameters": 3,
        "split function": 3,
        "returned dataframes": 3,
        "returned values": 3,
        "normalized value": 3,
        "machine learning technique": 3,
        "maximum values": 3,
        "float64": 3,
        "trained model": 3,
        "validation": 3,
        "pandas dataframes": 3,
        "map function": 3,
        "2001 flight data": 2,
        "air carriers": 2,
        "uniquecarrier depdelay": 2,
        "assertion tests": 2,
        "uniquecarrier columns": 2,
        "cutoff parameter": 2,
        "uniquecarrier depdelay origin": 2,
        "binary indicator variables": 2,
        "categorical variables": 2,
        "dummy indicator variables": 2,
        "randomforestclassifier": 2,
        "random forest classifier": 2,
        "docstring": 2,
        "rug plot": 2,
        "english stop words": 2,
        "minimum feature term": 2,
        "maximum frequency": 2,
        "snowball": 2,
        "nowball": 2,
        "kneighborsclassifier": 2,
        "stemming algorithm": 2,
        "tokenize function": 2,
        "lexical diversity": 2,
        "arrdealy": 2,
        "rdd code": 2,
        "labeledpoint": 2,
        "arrival delay": 2,
        "iterations": 2,
        "cumulative distribution function": 2,
        "selection": 2,
        "counting": 2,
        "spring layout": 2,
        "dictionaries": 2,
        "multivariate regresion model": 2,
        "predictor variable": 2,
        "regression model": 2,
        "cruising speed": 2,
        "tail height": 2,
        "json file": 2,
        "python 3 notebook": 2,
        "course docker image": 2,
        "ipython notebooks": 2,
        "test case": 2,
        "double for loop": 2,
        "nested list": 2,
        "functional programming": 2,
        "inner loop": 2,
        "outer loop": 2,
        "long words": 2,
        "return value": 2,
        "zeroto1": 2,
        "pivot table": 2,
        "book recommendations": 2,
        "recommender system": 2,
        "ratings matrix": 2,
        "cosine similarity": 2,
        "single user recommendations": 2,
        "intercept": 2,
        "current temperature": 1,
        "functoin": 1,
        "pandas data frame": 1,
        "pipeline anova rfc": 1,
        "anova filter": 1,
        "random forest classification": 1,
        "score function": 1,
        "airtime column": 1,
        "willard airport": 1,
        "plot rug plots": 1,
        "random jitter": 1,
        "lesson notebook": 1,
        "plot histograms": 1,
        "test cases": 1,
        "encoding option": 1,
        "flight cancellations": 1,
        "figure object": 1,
        "bar chart": 1,
        "axes object": 1,
        "axis labels": 1,
        "census csv file": 1,
        "most common words": 1,
        "most": 1,
        "hapaxes": 1,
        "acy airpot": 1,
        "logisticregression": 1,
        "probability mass function": 1,
        "plot probability mass function": 1,
        "empirical": 1,
        "unbiased estimator": 1,
        "wikipedia": 1,
        "empirical distibution functions": 1,
        "depdelay column": 1,
        "json string": 1,
        "json strings": 1,
        "iata": 1,
        "output file": 1,
        "delta airline": 1,
        "airbus": 1,
        "accommodation": 1,
        "categorical data": 1,
        "aircraft physical characteristics": 1,
        "attributes": 1,
        "wingspan": 1,
        "categorical variable": 1,
        "dimensionality reduction techniques": 1,
        "principal components analysis": 1,
        "frame": 1,
        "number count": 1,
        "cell type": 1,
        "common movie interests": 1,
        "common movie interest": 1,
        "common": 1,
        "random number generator": 1,
        "test sets": 1,
        "multiple independent variables": 1,
        "dependent variable": 1,
        "patsy formula": 1,
        "multivariate regression model": 1,
        "filter()": 1,
        "hashtags": 1,
        "actualelapsedtime": 1,
        "optional parameter bandwidth": 1,
        "kernel density estimation": 1,
        "x axis label": 1,
        "kernal density estimation": 1,
        "string type": 1,
        "str()": 1,
        "conditionals": 1,
        "spam classification": 1,
        "linearsvc": 1,
        "stop words": 1,
        "matrix": 1,
        "gaussian distribution": 1,
        "probabilities": 1,
        "2d array": 1,
        "pivot dataframe": 1,
        "masked array": 1,
        "books dataframe": 1,
        "nltk": 1,
        "pointwise mutual information": 1,
        "pmi": 1,
        "speech tagging": 1,
        "default tagger": 1,
        "pos tagging": 1,
        "universal tagger": 1,
        "binary indicators": 1,
        "maximum likelihood": 1
    },
    "autograder": {
        "list comprehensions": 16,
        "departure delay": 13,
        "code cell": 11,
        "depdelay": 10,
        "dayofweek": 6,
        "airtime": 6,
        "unit tests": 5,
        "tokenize": 5,
        "normalized weight": 5,
        "uniquecarrier": 4,
        "datapath": 4,
        "subject line": 4,
        "assertion test": 4,
        "iata airport code": 4,
        "scheduled arrival time": 4,
        "crsarrtime": 4,
        "crsdeptime": 4,
        "scheduled departure time": 4,
        "ord": 4,
        "faa": 4,
        "int64": 4,
        "map()": 4,
        "leaf specimens": 3,
        "csv data file": 3,
        "digital images": 3,
        "plant species": 3,
        "specimen number": 3,
        "punctuation marks": 3,
        "alphanumerical characters": 3,
        "fileid": 3,
        "nltk corpus": 3,
        "iata codes": 3,
        "brown university": 3,
        "corpus": 3,
        "nltk brown corpus": 3,
        "docs": 3,
        "1d numpy arrays": 3,
        "brown corpus": 3,
        "data preprocessing": 3,
        "base directory": 3,
        "integers": 3,
        "spam label array": 3,
        "scikit learn": 3,
        "spam arrays": 3,
        "ham label array": 3,
        "tfidfvectorizer": 3,
        "bigrams": 3,
        "trigrams": 3,
        "unigrams": 3,
        "wordnet synset": 3,
        "default parameters": 3,
        "minimum count": 3,
        "networkx graph": 3,
        "int value": 3,
        "python dictionary": 3,
        "linear regression model": 3,
        "arrdelay": 3,
        "testing sets": 3,
        "hyperparameters": 3,
        "split function": 3,
        "returned dataframes": 3,
        "returned values": 3,
        "normalized value": 3,
        "machine learning technique": 3,
        "maximum values": 3,
        "float64": 3,
        "trained model": 3,
        "validation": 3,
        "pandas dataframes": 3,
        "map function": 3,
        "2001 flight data": 2,
        "air carriers": 2,
        "uniquecarrier depdelay": 2,
        "assertion tests": 2,
        "uniquecarrier columns": 2,
        "cutoff parameter": 2,
        "uniquecarrier depdelay origin": 2,
        "binary indicator variables": 2,
        "categorical variables": 2,
        "dummy indicator variables": 2,
        "randomforestclassifier": 2,
        "random forest classifier": 2,
        "docstring": 2,
        "rug plot": 2,
        "english stop words": 2,
        "minimum feature term": 2,
        "maximum frequency": 2,
        "snowball": 2,
        "nowball": 2,
        "kneighborsclassifier": 2,
        "stemming algorithm": 2,
        "tokenize function": 2,
        "lexical diversity": 2,
        "arrdealy": 2,
        "rdd code": 2,
        "labeledpoint": 2,
        "arrival delay": 2,
        "iterations": 2,
        "cumulative distribution function": 2,
        "selection": 2,
        "counting": 2,
        "spring layout": 2,
        "dictionaries": 2,
        "multivariate regresion model": 2,
        "predictor variable": 2,
        "regression model": 2,
        "cruising speed": 2,
        "tail height": 2,
        "json file": 2,
        "python 3 notebook": 2,
        "course docker image": 2,
        "ipython notebooks": 2,
        "test case": 2,
        "double for loop": 2,
        "nested list": 2,
        "functional programming": 2,
        "inner loop": 2,
        "outer loop": 2,
        "long words": 2,
        "return value": 2,
        "zeroto1": 2,
        "pivot table": 2,
        "book recommendations": 2,
        "recommender system": 2,
        "ratings matrix": 2,
        "cosine similarity": 2,
        "single user recommendations": 2,
        "intercept": 2,
        "current temperature": 1,
        "functoin": 1,
        "pandas data frame": 1,
        "pipeline anova rfc": 1,
        "anova filter": 1,
        "random forest classification": 1,
        "score function": 1,
        "airtime column": 1,
        "willard airport": 1,
        "plot rug plots": 1,
        "random jitter": 1,
        "lesson notebook": 1,
        "plot histograms": 1,
        "test cases": 1,
        "encoding option": 1,
        "flight cancellations": 1,
        "figure object": 1,
        "bar chart": 1,
        "axes object": 1,
        "axis labels": 1,
        "census csv file": 1,
        "most common words": 1,
        "most": 1,
        "hapaxes": 1,
        "acy airpot": 1,
        "logisticregression": 1,
        "probability mass function": 1,
        "plot probability mass function": 1,
        "empirical": 1,
        "unbiased estimator": 1,
        "wikipedia": 1,
        "empirical distibution functions": 1,
        "depdelay column": 1,
        "json string": 1,
        "json strings": 1,
        "iata": 1,
        "output file": 1,
        "delta airline": 1,
        "airbus": 1,
        "accommodation": 1,
        "categorical data": 1,
        "aircraft physical characteristics": 1,
        "attributes": 1,
        "wingspan": 1,
        "categorical variable": 1,
        "dimensionality reduction techniques": 1,
        "principal components analysis": 1,
        "frame": 1,
        "number count": 1,
        "cell type": 1,
        "common movie interests": 1,
        "common movie interest": 1,
        "common": 1,
        "random number generator": 1,
        "test sets": 1,
        "multiple independent variables": 1,
        "dependent variable": 1,
        "patsy formula": 1,
        "multivariate regression model": 1,
        "filter()": 1,
        "hashtags": 1,
        "actualelapsedtime": 1,
        "optional parameter bandwidth": 1,
        "kernel density estimation": 1,
        "x axis label": 1,
        "kernal density estimation": 1,
        "string type": 1,
        "str()": 1,
        "conditionals": 1,
        "spam classification": 1,
        "linearsvc": 1,
        "stop words": 1,
        "matrix": 1,
        "gaussian distribution": 1,
        "probabilities": 1,
        "2d array": 1,
        "pivot dataframe": 1,
        "masked array": 1,
        "books dataframe": 1,
        "nltk": 1,
        "pointwise mutual information": 1,
        "pmi": 1,
        "speech tagging": 1,
        "default tagger": 1,
        "pos tagging": 1,
        "universal tagger": 1,
        "binary indicators": 1,
        "maximum likelihood": 1
    },
    "movie review data": {
        "numerical labels": 26,
        "training samples": 26,
        "vm": 20,
        "test samples": 16,
        "testing samples": 16,
        "predicted labels": 16,
        "test data": 15,
        "string labels": 12,
        "svm classifier": 12,
        "test sets": 12,
        "tab separated raw text file": 11,
        "discriminative information": 11,
        "countvectorizer": 11,
        "array": 11,
        "vectorizer": 11,
        "custom sklearn objects": 11,
        "ndarray": 10,
        "np": 10,
        "training data samples": 10,
        "test data samples": 10,
        "learnt classifier": 10,
        "training labels": 10,
        "trained classifier": 10,
        "predict labels": 10,
        "nltk": 9,
        "tf scaling": 9,
        "review column": 8,
        "tfidf": 8,
        "vectors": 8,
        "svm": 6,
        "word vector": 6,
        "customer review task": 5,
        "labels": 5,
        "header arguments": 5,
        "word vectors": 5,
        "vocab": 4,
        "word2idx": 4,
        "tflearn": 4,
        "returned variable": 4,
        "hyperparameters": 3,
        "batch size": 3,
        "tfidf vectorizer": 3,
        "lower case characters": 2,
        "pandas library": 2,
        "word frequency": 2,
        "review data": 2,
        "frame": 2,
        "count value": 2,
        "dictionary comprehension": 2,
        "key error": 2,
        "vocab dictionary": 2,
        "word2idx dictionary": 2,
        "function": 2,
        "review data set": 2,
        "network performance": 2,
        "softmax activation function": 2,
        "validation": 2,
        "learning rate loss": 2,
        "training method": 2,
        "network error": 2,
        "activation function": 2,
        "hidden layers": 2,
        "10000 element long vectors": 2,
        "stochastic gradient descent": 2,
        "connected layer": 2,
        "tensorflow": 2,
        "returned object": 2,
        "predicted numerical labels": 1,
        "validation accuracy": 1,
        "hyperparameter adjustments": 1,
        "set": 1
    },
    "dimensionality reduction": {
        "pca": 18,
        "eigenvectors": 16,
        "correlation matrix": 16,
        "covariance matrix": 12,
        "lsi": 11,
        "eigendecomposition": 10,
        "newsgroups": 8,
        "principal components": 7,
        "docs": 7,
        "timeseries": 7,
        "complexity parameter": 7,
        "pipeline": 6,
        "lsi space": 6,
        "document vectors": 6,
        "projection matrix": 6,
        "eigenvalues": 6,
        "reuters 21578": 5,
        "unstructured text": 5,
        "test set error": 5,
        "validation error": 5,
        "iris data": 4,
        "target": 4,
        "randomforestregressor model": 4,
        "reuters dataset": 4,
        "series object": 4,
        "mic": 4,
        "m": 4,
        "term frequency inverse document frequency": 4,
        "entropy function": 4,
        "term frequency": 4,
        "inverse document frequency components": 4,
        "gridsearchcv": 4,
        "best fit model": 4,
        "test risk": 4,
        "validation": 4,
        "computational efficiency": 4,
        "singular vector decomposition": 4,
        "second principal components": 3,
        "point cloud": 3,
        "succeding component": 3,
        "residual noise": 3,
        "dimensionality reduction": 3,
        "principal component analysis": 3,
        "2d vectors": 3,
        "linear coefficients": 3,
        "pca space": 3,
        "tdmatrix": 3,
        "lasso": 3,
        "sklearn object": 3,
        "scaler object": 3,
        "validation set error": 3,
        "hypothesis set": 3,
        "polynomial degree": 3,
        "document space": 2,
        "final matrix": 2,
        "linalg svd function": 2,
        "sigma matrix": 2,
        "tdm": 2,
        "term space": 2,
        "svd": 2,
        "diagonal matrix": 2,
        "plotting function": 2,
        "data matrix x": 2,
        "containers": 2,
        "physical nodes": 2,
        "real user monitoring": 2,
        "cassandra cluster": 2,
        "rumdatareceiver": 2,
        "elasticsearch cluster": 2,
        "node names": 2,
        "visual check": 2,
        "randomforestregressor": 2,
        "model parameters": 2,
        "0th order polynomials": 2,
        "test set errors": 2,
        "hyper": 2,
        "learner": 2,
        "test error": 2,
        "validation set errors": 2,
        "training error": 2,
        "20th order polynomials": 2,
        "cosine similarity": 2,
        "distance metric": 2,
        "e": 2,
        "ctors": 2,
        "eigen": 2,
        "petal width": 2,
        "uci machine learning repository": 2,
        "tutorial": 2,
        "petal length": 2,
        "sepal length": 2,
        "python library": 2,
        "uci repository": 2,
        "flower sample": 2,
        "flower classes": 2,
        "standard": 2,
        "components": 2,
        "mean vector": 2,
        "numpy cov function": 2,
        "ance matrix": 2,
        "normalized covariance matrix": 2,
        "finance": 2,
        "standardized data": 2,
        "eigenvalue pairs": 2,
        "standardizing": 2,
        "pca implementations": 2,
        "axes": 2,
        "lowest eigenvalues": 2,
        "eigenpairs": 2,
        "explained variance": 2,
        "information": 2,
        "first principal component": 2,
        "second principal component": 2,
        "concatenated top k eigenvectors": 2,
        "covariance": 1,
        "eigenvalue problem": 1,
        "selectkbest": 1,
        "shufflesplit": 1,
        "scaler": 1,
        "preprocessing steps": 1,
        "optimal pipeline": 1,
        "optimal preprocessing": 1,
        "pipelines": 1,
        "model selection": 1,
        "pre": 1,
        "hyperparameter tuning": 1,
        "sql query": 1,
        "random splits": 1,
        "prediction error": 1,
        "multiple": 1,
        "validation process": 1,
        "validation errors": 1,
        "sine curve": 1,
        "hypothesis space": 1,
        "kfold": 1,
        "fold errors": 1,
        "dual problem": 1,
        "wildly behaving pilynomials": 1,
        "lagrange multipliers": 1,
        "bias": 1,
        "penalty term": 1,
        "correlations": 1,
        "linear operations": 1,
        "graph lasso": 1,
        "numpy method": 1,
        "normalized data": 1,
        "diagonal pattern": 1,
        "affinity propagation": 1,
        "similarity scores": 1,
        "correlation coefficients": 1,
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "cosine similarity score": 1,
        "reuters documents": 1,
        "predicted category": 1,
        "knn classifier": 1,
        "reuters document categorization": 1,
        "training document": 1,
        "reuters text categorization": 1,
        "emmed test": 1,
        "maximum variance": 1,
        "machine learning algorithms": 1,
        "computer hardware": 1,
        "linear transformation methods": 1,
        "pattern classification problem": 1,
        "linear discriminant analysis": 1
    },
    "bow": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "countvector": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "vectorizer": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "sklearns": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "frequency distribution matrix": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "ml algorithms": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "w": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "countvectorizer": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "delimiter": 12,
        "document set": 12,
        "tokenization": 12,
        "python collections library": 12,
        "counter method": 12,
        "bag of words process": 11,
        "frequency distribution dictionary": 11,
        "countvectorizer method": 11,
        "alphanumeric strings": 11,
        "countvectorizer()": 11,
        "data preprocessing": 11,
        "document dataset": 11,
        "countvectorizer object": 11,
        "libertarian party": 11,
        "green party": 11,
        "vocabulary": 10,
        "documents": 10,
        "toarray": 10,
        "transform() method": 10,
        "numpy integers": 10,
        "frequency distribution": 10,
        "word names": 10,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "punctuation marks": 8,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "multicollinearity": {
        "ridgecv": 13,
        "regularized regression": 12,
        "3rd degree polynomial": 12,
        "helper function": 8,
        "gpa": 8,
        "linearregression object": 8,
        "modeling": 6,
        "linear models": 6,
        "data preparation": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "predictor variables": 6,
        "lasso regression": 6,
        "response variables": 6,
        "ridge regression": 6,
        "automatic regular": 6,
        "sklearn pipeline": 6,
        "sin function": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "odds ratio": 4,
        "ucla": 4,
        "admission rate": 4,
        "confidence interval": 4,
        "uncertainty": 4,
        "predicted probability": 4,
        "maximum value": 4,
        "cartesian()": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "prestige": 4,
        "logisticregression": 4,
        "dummified prestige": 4,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "flight delay prediction": 3,
        "delayed flights": 3,
        "flight status column": 3,
        "predictive analytics": 3,
        "flight statuses": 3,
        "explantory variables": 3,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2,
        "categorical variables": 2,
        "dummified variables": 2,
        "dummy variables": 2,
        "combinatorial explosion": 2,
        "data preprocessing": 2,
        "airport codes": 2,
        "numeric variables": 2,
        "logisticregressioncv": 2,
        "dummy variable predictors": 2,
        "output variable": 2,
        "flight status variable": 2,
        "score()": 2,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "api": {
        "requests library": 12,
        "twitter": 12,
        "predictive distribution": 11,
        "minimize function": 8,
        "tweepy": 8,
        "authentication keys": 8,
        "complexity parameter": 7,
        "gp object": 6,
        "posterior distribution": 6,
        "time delays": 6,
        "api": 6,
        "http get request": 6,
        "nyt article api": 6,
        "ridge regression": 5,
        "optimization": 5,
        "neg log likelihood": 5,
        "test set error": 5,
        "validation error": 5,
        "tweetdeck": 5,
        "confidence intervals": 4,
        "best fit model": 4,
        "test risk": 4,
        "validation": 4,
        "conda environment": 4,
        "twitter developer account": 4,
        "web site": 4,
        "access token secret": 4,
        "access token": 4,
        "consumer secret": 4,
        "developer account": 4,
        "twitter account": 4,
        "templates": 4,
        "coordinates": 4,
        "pandas documentation": 4,
        "null hypothesis": 4,
        "bootstrap": 3,
        "confidence interval": 3,
        "ball park values": 3,
        "white noise standard deviation": 3,
        "compute method": 3,
        "covariance matrix": 3,
        "george tutorial": 3,
        "neg log likelihood function": 3,
        "logarithms": 3,
        "log parameters": 3,
        "likelihood": 3,
        "maxim": 3,
        "parameter vector": 3,
        "grid locations": 3,
        "predictive mean": 3,
        "the": 3,
        "emcee": 3,
        "gradient functions": 3,
        "agn reverberation mapping": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "results page": 3,
        "search parameters": 3,
        "negative tweets": 3,
        "positive tweets": 3,
        "nltk twitter corpus": 3,
        "tfidfvectorizer": 3,
        "bigrams": 3,
        "default parameters": 3,
        "trigrams": 3,
        "unigrams": 3,
        "stop words": 3,
        "validation set error": 3,
        "hypothesis set": 3,
        "json": 3,
        "string method": 3,
        "polynomial degree": 3,
        "population": 2,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "mcmc": 2,
        "gp hps": 2,
        "unstable equilibrium state vector": 2,
        "python libraries": 2,
        "authorization code": 2,
        "new york times api": 2,
        "get request": 2,
        "base url": 2,
        "linearsvc": 2,
        "user timeline": 2,
        "tweepy's": 2,
        "0th order polynomials": 2,
        "test set errors": 2,
        "hyper": 2,
        "learner": 2,
        "test error": 2,
        "validation set errors": 2,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "twitter client usage": 2,
        "statistical test": 2,
        "numpy functions": 2,
        "hypothesis test": 2,
        "table": 2,
        "datascience": 2,
        "data 8": 2,
        "twitter web client": 2,
        "searchable command palette": 2,
        "training error": 2,
        "20th order polynomials": 2,
        "random distribution": 1,
        "predictor": 1,
        "dataset": 1,
        "regression methods": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "testing sets": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "multilinear regression": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1,
        "lqr solver": 1,
        "q": 1,
        "lqr": 1,
        "trump tweets": 1,
        "random splits": 1,
        "prediction error": 1,
        "multiple": 1,
        "validation process": 1,
        "validation errors": 1,
        "sine curve": 1,
        "hypothesis space": 1,
        "kfold": 1,
        "fold errors": 1,
        "dual problem": 1,
        "wildly behaving pilynomials": 1,
        "lagrange multipliers": 1,
        "bias": 1,
        "penalty term": 1,
        "python dictionary": 1,
        "python dictionaries": 1,
        "markdown": 1,
        "jupyter": 1,
        "colab": 1,
        "os x": 1,
        "randomforestclassifier": 1
    },
    "mathematical functions": {
        "broadcasting": 19,
        "mathematical functions": 16,
        "dataframe structures": 16,
        "null vector": 15,
        "random values": 12,
        "hamlettext": 11,
        "iloc": 9,
        "arithmetic operations": 8,
        "elementwise maximum": 8,
        "column names": 8,
        "values method": 8,
        "keyword arguments": 7,
        "numpy module functions": 7,
        "random numbers": 6,
        "numpy functions": 6,
        "null matrix": 6,
        "3 x 3 identity matrix": 6,
        "maximum values": 6,
        "series objects": 6,
        "hamletwords": 6,
        "dfcars": 6,
        "listiness property": 6,
        "credit dataset": 5,
        "non-zero elements": 4,
        "random matrices": 4,
        "random vector": 4,
        "random matrix": 4,
        "data manipulation": 4,
        "data structures": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "selection": 4,
        "column headers": 4,
        "slicing": 4,
        "filtering": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "positional properties": 4,
        "ate": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "txt": 4,
        "listiness": 4,
        "isprime": 3,
        "iterate": 3,
        "numpy array constructors": 3,
        "64 bit": 3,
        "floating point": 3,
        "random constructor": 3,
        "python lists": 3,
        "vector operations": 3,
        "readability": 3,
        "computer chips": 3,
        "lists": 3,
        "matrix multiplication": 3,
        "mean": 3,
        "dataset": 3,
        "dictionary keys": 3,
        "numpy method": 2,
        "statistics table": 2,
        "attribute creditamount": 2,
        "one dimensional iteration": 2,
        "idiom": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "string method count": 2,
        "string method lower": 2,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "black coloured markers": 1,
        "font size": 1,
        "age": 1,
        "attributes duration": 1,
        "sanity check": 1,
        "unique words": 1,
        "count method": 1,
        "dictionary comprehension": 1,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "python syntax": {
        "mathematical functions": 32,
        "broadcasting": 20,
        "tab completion": 16,
        "matlab": 16,
        "numpy module": 16,
        "dataframe structures": 16,
        "null vector": 15,
        "slicing": 12,
        "random values": 12,
        "line magics": 8,
        "notebook kernel": 8,
        "help documentation": 8,
        "import packages": 8,
        "linear algebra": 8,
        "nonnegative integers": 8,
        "array indexing": 8,
        "boolean array indexing": 8,
        "array datatypes": 8,
        "numeric datatypes": 8,
        "array math": 8,
        "operator overloads": 8,
        "elementwise multiplication": 8,
        "array objects": 8,
        "matrix multiplication": 8,
        "inner products": 8,
        "dot function": 8,
        "arithmetic operations": 8,
        "elementwise maximum": 8,
        "numpy documentation": 8,
        "column names": 8,
        "values method": 8,
        "null matrix": 6,
        "3 x 3 identity matrix": 6,
        "maximum values": 6,
        "credit dataset": 5,
        "non-zero elements": 4,
        "random matrices": 4,
        "random vector": 4,
        "random matrix": 4,
        "pandas introduction": 4,
        "data manipulation": 4,
        "data structures": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "selection": 4,
        "column headers": 4,
        "filtering": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "pandas exercises": 4,
        "dataset": 3,
        "numpy method": 2,
        "statistics table": 2,
        "attribute creditamount": 2,
        "matplotlib introduction": 1,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "matplotlib exercises": 1,
        "black coloured markers": 1,
        "font size": 1,
        "age": 1,
        "attributes duration": 1
    },
    "jupyter environment": {
        "mathematical functions": 32,
        "broadcasting": 20,
        "tab completion": 16,
        "matlab": 16,
        "numpy module": 16,
        "dataframe structures": 16,
        "null vector": 15,
        "slicing": 12,
        "random values": 12,
        "line magics": 8,
        "notebook kernel": 8,
        "help documentation": 8,
        "import packages": 8,
        "linear algebra": 8,
        "nonnegative integers": 8,
        "array indexing": 8,
        "boolean array indexing": 8,
        "array datatypes": 8,
        "numeric datatypes": 8,
        "array math": 8,
        "operator overloads": 8,
        "elementwise multiplication": 8,
        "array objects": 8,
        "matrix multiplication": 8,
        "inner products": 8,
        "dot function": 8,
        "arithmetic operations": 8,
        "elementwise maximum": 8,
        "numpy documentation": 8,
        "column names": 8,
        "values method": 8,
        "null matrix": 6,
        "3 x 3 identity matrix": 6,
        "maximum values": 6,
        "credit dataset": 5,
        "non-zero elements": 4,
        "random matrices": 4,
        "random vector": 4,
        "random matrix": 4,
        "pandas introduction": 4,
        "data manipulation": 4,
        "data structures": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "selection": 4,
        "column headers": 4,
        "filtering": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "pandas exercises": 4,
        "dataset": 3,
        "numpy method": 2,
        "statistics table": 2,
        "attribute creditamount": 2,
        "matplotlib introduction": 1,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "matplotlib exercises": 1,
        "black coloured markers": 1,
        "font size": 1,
        "age": 1,
        "attributes duration": 1
    },
    "sampling distribution": {
        "sampling distribution": 46,
        "confidence interval": 23,
        "birth weight": 22,
        "null hypothesis": 20,
        "dependent variable": 18,
        "residuals": 18,
        "resampling": 17,
        "rmse": 17,
        "standard error": 14,
        "sampling distributions": 9,
        "permutation": 8,
        "student t distribution": 8,
        "analytic distribution": 8,
        "central limit theorem": 8,
        "lognormal distribution": 6,
        "mean": 6,
        "resamplerows": 6,
        "mean birth weight": 6,
        "summarize": 6,
        "mother's age": 6,
        "mother": 6,
        "predictive power": 6,
        "iq": 6,
        "sat scores": 6,
        "estimated slope": 6,
        "mean birthweight": 6,
        "weights": 6,
        "strata": 6,
        "survey": 6,
        "brfss data": 6,
        "log weights": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "plot percentiles": 6,
        "correlation": 6,
        "compute coefficient of determination": 6,
        "height information": 5,
        "clt": 4,
        "hypothesistest": 4,
        "cdf": 4,
        "simulation": 4,
        "birth weights": 4,
        "multiplicative factors": 4,
        "random value": 4,
        "adult weights": 4,
        "difference in means": 4,
        "confidence intervals": 4,
        "estimated mean": 2,
        "arithmetic operations": 2,
        "normal class": 2,
        "normal distributions": 2,
        "normal probability plots": 2,
        "exponential variates": 2,
        "pareto distribution": 2,
        "infinite variance": 2,
        "correlated normal values": 2,
        "random variates": 2,
        "correlated values": 2,
        "probabilities": 2,
        "gender gap": 2,
        "student engineering teams": 2,
        "class projects": 2,
        "standard errors": 2,
        "resample rows": 2,
        "mean height": 2,
        "column": 1,
        "finalwt": 1
    },
    "text analysis": {
        "hamlettext": 22,
        "enumerate": 12,
        "keyword arguments": 12,
        "hamletwords": 12,
        "python functions": 11,
        "listy containers": 10,
        "iterators": 9,
        "dictionaries": 9,
        "positional arguments": 8,
        "txt": 8,
        "numpy module": 7,
        "numerical programming library": 7,
        "scientific computing": 7,
        "large data sets": 7,
        "calculator": 7,
        "integer division": 7,
        "python data types": 7,
        "variables": 7,
        "floating point values": 7,
        "fluent python": 7,
        "python objects": 7,
        "comparison operations": 7,
        "arithmetic": 7,
        "lexical diversity": 6,
        "len function": 6,
        "slicing": 6,
        "list slicing operations": 6,
        "iteration": 6,
        "iterator": 6,
        "list comprehension syntax": 6,
        "for loops": 6,
        "conditional if statements": 6,
        "dictionary comprehension": 6,
        "nltk corpus": 5,
        "tokenize": 5,
        "lists": 5,
        "while loop": 5,
        "lavel astring": 5,
        "string operations": 5,
        "jane beth doe": 5,
        "last names": 5,
        "course names": 4,
        "zip": 4,
        "constructor function dict": 4,
        "'s sequence protocol": 4,
        "umpy": 4,
        "specfic task": 4,
        "method": 4,
        "mathematical function": 4,
        "lambda functions": 4,
        "mathematical functions": 4,
        "pr": 4,
        "isprime": 4,
        "default argument values": 4,
        "libraries": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "positional properties": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "string method count": 4,
        "string method lower": 4,
        "tokens": 3,
        "puntuation tokens": 3,
        "alphanumeric characters": 3,
        "punctuation marks": 3,
        "alphanumerical characters": 3,
        "fileid": 3,
        "nltk reuters corpus": 2,
        "non-alphanumeric characters": 2,
        "reuters object": 2,
        "sanity check": 2,
        "unique words": 2,
        "dictionary keys": 2,
        "count method": 2,
        "most common words": 1,
        "most": 1,
        "hapaxes": 1,
        "nltk": 1,
        "pointwise mutual information": 1,
        "pmi": 1,
        "trigrams": 1,
        "speech tagging": 1,
        "default tagger": 1,
        "pos tagging": 1,
        "universal tagger": 1
    },
    "data preparation": {
        "ridgecv": 13,
        "test sets": 9,
        "linearregression object": 8,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "predictor variables": 6,
        "regularized regression": 6,
        "lasso regression": 6,
        "response variables": 6,
        "ridge regression": 6,
        "automatic regular": 6,
        "3rd degree polynomial": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "dependent variable": 6,
        "http requests": 5,
        "weather underground": 5,
        "terms of service": 5,
        "api": 5,
        "weather": 5,
        "apis": 5,
        "weather underground api": 5,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "independent variables": 5,
        "json": 4,
        "parse time": 4,
        "history": 4,
        "visibilities": 4,
        "embarkation ports": 4,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "iata airport code": 3,
        "carrier code": 3,
        "departure delay": 3,
        "crsdeptime": 3,
        "depdelay": 3,
        "uniquecarrier": 3,
        "scheduled departure time": 3,
        "ord": 3,
        "american airlines": 3,
        "departure": 3,
        "frame": 3,
        "time visibility": 3,
        "code cell": 3,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "dependent variables": 3,
        "multicollinearity": 3,
        "linear relationship": 3,
        "linear regression model": 3,
        "average night light": 3,
        "mpi": 3,
        "vectorized way": 2,
        "big data": 2,
        "numerical operations": 2,
        "iterrows()": 2,
        "missing ages": 2,
        "column mean": 2,
        "missing embarkation ports": 2,
        "embarkation port": 2,
        "ticket number": 2,
        "score()": 2,
        "avgnightlight": 2,
        "passenger class": 2,
        "returned dataframes": 1,
        "decision trees model": 1,
        "default parameters": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1,
        "women": 1,
        "wealth": 1,
        "age distributions": 1,
        "hypothesis testing": 1,
        "statistical method": 1,
        "internet": 1,
        "statistical hypothesis": 1,
        "null hypothesis": 1,
        "hypothesis test": 1,
        "age": 1,
        "alternative hypothesis": 1,
        "sex": 1,
        "embarked columns": 1
    },
    "confidence interval": {
        "rmse": 17,
        "ridgecv": 13,
        "regularized regression": 12,
        "3rd degree polynomial": 12,
        "linearregression object": 8,
        "sampling distribution": 8,
        "modeling": 6,
        "linear models": 6,
        "data preparation": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "predictor variables": 6,
        "lasso regression": 6,
        "response variables": 6,
        "ridge regression": 6,
        "automatic regular": 6,
        "sklearn pipeline": 6,
        "sin function": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "brfss data": 6,
        "log weights": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "residuals": 6,
        "plot percentiles": 6,
        "correlation": 6,
        "compute coefficient of determination": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "height information": 5,
        "sampling distributions": 5,
        "resampling": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "confidence interval interpretations": 3,
        "credible interval": 3,
        "bayesian analysis": 3,
        "credible": 3,
        "bayesian basic stats test process": 3,
        "matplotlib graph": 3,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "confidence interval": 3,
        "score()": 2,
        "standard error": 2,
        "resample rows": 2,
        "mean height": 2,
        "finger exercises": 1,
        "bayesian computing library": 1,
        "normal likelihood": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1,
        "column": 1,
        "finalwt": 1
    },
    "feature vectors": {
        "numerical labels": 26,
        "training samples": 26,
        "nltk": 20,
        "vm": 20,
        "test samples": 16,
        "testing samples": 16,
        "predicted labels": 16,
        "test data": 15,
        "string labels": 12,
        "svm classifier": 12,
        "corpus data": 11,
        "natural language processing": 11,
        "nlp": 11,
        "natural language toolkit": 11,
        "tab separated raw text file": 11,
        "discriminative information": 11,
        "countvectorizer": 11,
        "array": 11,
        "vectorizer": 11,
        "custom sklearn objects": 11,
        "ndarray": 10,
        "np": 10,
        "training data samples": 10,
        "test data samples": 10,
        "test sets": 10,
        "learnt classifier": 10,
        "training labels": 10,
        "trained classifier": 10,
        "predict labels": 10,
        "tf scaling": 9,
        "review column": 8,
        "tfidf": 8,
        "vectors": 8,
        "svm": 6,
        "customer review task": 5,
        "labels": 5,
        "header arguments": 5,
        "returned variable": 4,
        "tfidf vectorizer": 3,
        "returned object": 2,
        "predicted numerical labels": 1
    },
    "weight parameters": {
        "numerical labels": 26,
        "training samples": 26,
        "nltk": 20,
        "vm": 20,
        "test samples": 16,
        "testing samples": 16,
        "predicted labels": 16,
        "test data": 15,
        "string labels": 12,
        "svm classifier": 12,
        "corpus data": 11,
        "natural language processing": 11,
        "nlp": 11,
        "natural language toolkit": 11,
        "tab separated raw text file": 11,
        "discriminative information": 11,
        "countvectorizer": 11,
        "array": 11,
        "vectorizer": 11,
        "custom sklearn objects": 11,
        "ndarray": 10,
        "np": 10,
        "training data samples": 10,
        "test data samples": 10,
        "test sets": 10,
        "learnt classifier": 10,
        "training labels": 10,
        "trained classifier": 10,
        "predict labels": 10,
        "tf scaling": 9,
        "review column": 8,
        "tfidf": 8,
        "vectors": 8,
        "svm": 6,
        "customer review task": 5,
        "labels": 5,
        "header arguments": 5,
        "returned variable": 4,
        "tfidf vectorizer": 3,
        "returned object": 2,
        "predicted numerical labels": 1
    },
    "movie review dataset": {
        "numerical labels": 26,
        "training samples": 26,
        "nltk": 20,
        "vm": 20,
        "test samples": 16,
        "testing samples": 16,
        "predicted labels": 16,
        "test data": 15,
        "string labels": 12,
        "svm classifier": 12,
        "corpus data": 11,
        "natural language processing": 11,
        "nlp": 11,
        "natural language toolkit": 11,
        "tab separated raw text file": 11,
        "discriminative information": 11,
        "countvectorizer": 11,
        "array": 11,
        "vectorizer": 11,
        "custom sklearn objects": 11,
        "ndarray": 10,
        "np": 10,
        "training data samples": 10,
        "test data samples": 10,
        "test sets": 10,
        "learnt classifier": 10,
        "training labels": 10,
        "trained classifier": 10,
        "predict labels": 10,
        "tf scaling": 9,
        "review column": 8,
        "tfidf": 8,
        "vectors": 8,
        "svm": 6,
        "customer review task": 5,
        "labels": 5,
        "header arguments": 5,
        "returned variable": 4,
        "tfidf vectorizer": 3,
        "returned object": 2,
        "predicted numerical labels": 1
    },
    "numerical vectors": {
        "numerical labels": 26,
        "training samples": 26,
        "nltk": 20,
        "vm": 20,
        "test samples": 16,
        "testing samples": 16,
        "predicted labels": 16,
        "test data": 15,
        "string labels": 12,
        "svm classifier": 12,
        "corpus data": 11,
        "natural language processing": 11,
        "nlp": 11,
        "natural language toolkit": 11,
        "tab separated raw text file": 11,
        "discriminative information": 11,
        "countvectorizer": 11,
        "array": 11,
        "vectorizer": 11,
        "custom sklearn objects": 11,
        "ndarray": 10,
        "np": 10,
        "training data samples": 10,
        "test data samples": 10,
        "test sets": 10,
        "learnt classifier": 10,
        "training labels": 10,
        "trained classifier": 10,
        "predict labels": 10,
        "tf scaling": 9,
        "review column": 8,
        "tfidf": 8,
        "vectors": 8,
        "svm": 6,
        "customer review task": 5,
        "labels": 5,
        "header arguments": 5,
        "returned variable": 4,
        "tfidf vectorizer": 3,
        "returned object": 2,
        "predicted numerical labels": 1
    },
    "negative reviews": {
        "numerical labels": 26,
        "training samples": 26,
        "nltk": 20,
        "vm": 20,
        "test samples": 16,
        "testing samples": 16,
        "predicted labels": 16,
        "test data": 15,
        "string labels": 12,
        "svm classifier": 12,
        "corpus data": 11,
        "natural language processing": 11,
        "nlp": 11,
        "natural language toolkit": 11,
        "tab separated raw text file": 11,
        "discriminative information": 11,
        "countvectorizer": 11,
        "array": 11,
        "vectorizer": 11,
        "custom sklearn objects": 11,
        "ndarray": 10,
        "np": 10,
        "training data samples": 10,
        "test data samples": 10,
        "test sets": 10,
        "learnt classifier": 10,
        "training labels": 10,
        "trained classifier": 10,
        "predict labels": 10,
        "tf scaling": 9,
        "review column": 8,
        "tfidf": 8,
        "vectors": 8,
        "svm": 6,
        "customer review task": 5,
        "labels": 5,
        "header arguments": 5,
        "returned variable": 4,
        "tfidf vectorizer": 3,
        "returned object": 2,
        "predicted numerical labels": 1
    },
    "trained svm": {
        "numerical labels": 26,
        "training samples": 26,
        "nltk": 20,
        "vm": 20,
        "test samples": 16,
        "testing samples": 16,
        "predicted labels": 16,
        "test data": 15,
        "string labels": 12,
        "svm classifier": 12,
        "corpus data": 11,
        "natural language processing": 11,
        "nlp": 11,
        "natural language toolkit": 11,
        "tab separated raw text file": 11,
        "discriminative information": 11,
        "countvectorizer": 11,
        "array": 11,
        "vectorizer": 11,
        "custom sklearn objects": 11,
        "ndarray": 10,
        "np": 10,
        "training data samples": 10,
        "test data samples": 10,
        "test sets": 10,
        "learnt classifier": 10,
        "training labels": 10,
        "trained classifier": 10,
        "predict labels": 10,
        "tf scaling": 9,
        "review column": 8,
        "tfidf": 8,
        "vectors": 8,
        "svm": 6,
        "customer review task": 5,
        "labels": 5,
        "header arguments": 5,
        "returned variable": 4,
        "tfidf vectorizer": 3,
        "returned object": 2,
        "predicted numerical labels": 1
    },
    "document of interest": {
        "numerical labels": 26,
        "training samples": 26,
        "nltk": 20,
        "vm": 20,
        "test samples": 16,
        "testing samples": 16,
        "predicted labels": 16,
        "test data": 15,
        "string labels": 12,
        "svm classifier": 12,
        "corpus data": 11,
        "natural language processing": 11,
        "nlp": 11,
        "natural language toolkit": 11,
        "tab separated raw text file": 11,
        "discriminative information": 11,
        "countvectorizer": 11,
        "array": 11,
        "vectorizer": 11,
        "custom sklearn objects": 11,
        "ndarray": 10,
        "np": 10,
        "training data samples": 10,
        "test data samples": 10,
        "test sets": 10,
        "learnt classifier": 10,
        "training labels": 10,
        "trained classifier": 10,
        "predict labels": 10,
        "tf scaling": 9,
        "review column": 8,
        "tfidf": 8,
        "vectors": 8,
        "svm": 6,
        "customer review task": 5,
        "labels": 5,
        "header arguments": 5,
        "returned variable": 4,
        "tfidf vectorizer": 3,
        "returned object": 2,
        "predicted numerical labels": 1
    },
    "positive reviews": {
        "numerical labels": 26,
        "training samples": 26,
        "nltk": 20,
        "vm": 20,
        "test samples": 16,
        "testing samples": 16,
        "predicted labels": 16,
        "test data": 15,
        "string labels": 12,
        "svm classifier": 12,
        "corpus data": 11,
        "natural language processing": 11,
        "nlp": 11,
        "natural language toolkit": 11,
        "tab separated raw text file": 11,
        "discriminative information": 11,
        "countvectorizer": 11,
        "array": 11,
        "vectorizer": 11,
        "custom sklearn objects": 11,
        "ndarray": 10,
        "np": 10,
        "training data samples": 10,
        "test data samples": 10,
        "test sets": 10,
        "learnt classifier": 10,
        "training labels": 10,
        "trained classifier": 10,
        "predict labels": 10,
        "tf scaling": 9,
        "review column": 8,
        "tfidf": 8,
        "vectors": 8,
        "svm": 6,
        "customer review task": 5,
        "labels": 5,
        "header arguments": 5,
        "returned variable": 4,
        "tfidf vectorizer": 3,
        "returned object": 2,
        "predicted numerical labels": 1
    },
    "covariance matrix": {
        "covariance matrix": 17,
        "pca": 15,
        "eigenvectors": 14,
        "correlation matrix": 11,
        "eigendecomposition": 10,
        "ica": 8,
        "augmented vector": 8,
        "outer product": 8,
        "integral calculator": 7,
        "numerical approximation": 7,
        "exact expression": 7,
        "gaussian random variable": 7,
        "peakedness": 7,
        "wolfram alpha": 7,
        "online service": 7,
        "matrices": 7,
        "principal components": 6,
        "time delays": 6,
        "covariance": 6,
        "tickerinfo": 6,
        "ticker names": 6,
        "covariant algorithm": 5,
        "eigenvalues": 5,
        "projection matrix": 4,
        "lower left matrix": 4,
        "outer product average": 4,
        "average": 4,
        "n x n matrix": 4,
        "1 x n matrix": 4,
        "x n matrix": 4,
        "x": 4,
        "nansum": 4,
        "n x": 4,
        "second principal components": 3,
        "point cloud": 3,
        "succeding component": 3,
        "residual noise": 3,
        "dimensionality reduction": 3,
        "principal component analysis": 3,
        "2d vectors": 3,
        "linear coefficients": 3,
        "pca space": 3,
        "iris data": 3,
        "agn reverberation mapping": 3,
        "posterior distribution": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "kurtosis": 3,
        "computational efficiency": 3,
        "singular vector decomposition": 3,
        "tickers": 3,
        "company name": 3,
        "sector ids": 3,
        "sector id": 3,
        "rdd": 3,
        "arithmetic operations": 3,
        "associated gradient functions": 2,
        "predictive distribution": 2,
        "neg log likelihood": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "minimize function": 2,
        "posterior uncertainties": 2,
        "optimization": 2,
        "mcmc": 2,
        "gp hps": 2,
        "covariance matrices": 2,
        "eigenvalue decomposition": 2,
        "sawtooth": 2,
        "sinewave": 2,
        "bias": 2,
        "scale changes": 2,
        "demixing matrices": 2,
        "plotting function": 2,
        "data matrix x": 2,
        "consistent algorithm": 2,
        "sound clip": 2,
        "ambient sounds": 2,
        "mean vector": 2,
        "numpy cov function": 2,
        "ance matrix": 2,
        "normalized covariance matrix": 2,
        "finance": 2,
        "standardized data": 2,
        "eigenvalue pairs": 2,
        "standardizing": 2,
        "pca implementations": 2,
        "axes": 2,
        "lowest eigenvalues": 2,
        "eigenpairs": 2,
        "explained variance": 2,
        "information": 2,
        "first principal component": 2,
        "second principal component": 2,
        "concatenated top k eigenvectors": 2,
        "kernel matrix": 2,
        "linear kernel": 2,
        "2d dataset": 2,
        "xw plot": 1,
        "circular pattern": 1,
        "learning algorithm": 1,
        "matrix inversions": 1,
        "priors": 1,
        "symmetric": 1,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1,
        "gray boxes": 1,
        "boxes": 1,
        "diagonal matrix": 1,
        "alogrithm": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "gamma": 1,
        "ma": 1,
        "whitening process": 1,
        "gaussian distributed": 1,
        "audio signals": 1,
        "maximum variance": 1,
        "machine learning algorithms": 1,
        "computer hardware": 1,
        "linear transformation methods": 1,
        "pattern classification problem": 1,
        "linear discriminant analysis": 1,
        "e": 1,
        "ctors": 1,
        "eigen": 1,
        "petal width": 1,
        "uci machine learning repository": 1,
        "tutorial": 1,
        "petal length": 1,
        "sepal length": 1,
        "python library": 1,
        "uci repository": 1,
        "flower sample": 1,
        "flower classes": 1,
        "standard": 1,
        "components": 1,
        "analysis": 1,
        "eigenvector decomposition": 1,
        "homework": 1,
        "data vectors": 1
    },
    "collaboration policy": {
        "jupyter": 19,
        "zipfile": 18,
        "numerical tests": 12,
        "postal code": 11,
        "utilities": 10,
        "sanity checks": 10,
        "data frames": 10,
        "businesses file": 10,
        "primary keys": 10,
        "granularity": 10,
        "attributes": 9,
        "docs": 7,
        "datasets": 7,
        "head function": 7,
        "zip": 7,
        "cvlegend": 6,
        "zip code": 6,
        "boolean expressions": 6,
        "data variables": 6,
        "text editor": 5,
        "command mode": 5,
        "keyboard shortcuts": 5,
        "filenames": 5,
        "python docs": 5,
        "extended zip codes": 5,
        "extended postal codes": 5,
        "submission system": 4,
        "ellipsis": 4,
        "compressed files": 4,
        "zip archive": 4,
        "uncompressed files": 4,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "zipped data": 4,
        "web browser": 4,
        "datahub": 4,
        "vio dataframes": 4,
        "floating point values": 4,
        "testing function": 4,
        "rounding error": 4,
        "bus dataframe": 4,
        "zip codes": 4,
        "bus data frame": 4,
        "business table": 4,
        "variable postal code": 4,
        "math operations": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "numerical differentiation": 3,
        "crime events": 3,
        "regular bar plot": 3,
        "countplot": 3,
        "noise violation": 3,
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "training error": 2,
        "missing zip codes": 2,
        "calls dataframe": 2,
        "vertical bar plot": 2,
        "inspection": 2,
        "inspection dataframe": 2,
        "answer3b": 2,
        "radial highways": 1,
        "residential land z": 1,
        "weighted distances": 1,
        "charles river dummy variable": 1,
        "rad index": 1,
        "tract bounds river": 1,
        "boston employment centres": 1,
        "descr attribute": 1,
        "non-retail business acres": 1,
        "black": 1,
        "nox nitric oxides concentration": 1,
        "crime rate": 1,
        "outlier": 1,
        "test error": 1,
        "root mean squared error": 1,
        "average": 1,
        "text files": 1,
        "summer scene": 1,
        "winter scene": 1,
        "colors": 1,
        "bar chart": 1,
        "businesses": 1,
        "fillna": 1,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94602": 1,
        "94545": 1,
        "business name": 1,
        "search engine": 1,
        "squared loss function": 1,
        "loss calculation": 1,
        "vector dot products": 1,
        "data directory": 1,
        "lib": 1,
        "pathlib": 1,
        "glob": 1,
        "cvdow": 1,
        "offense type": 1,
        "case number": 1,
        "numerical columns": 1,
        "type information": 1,
        "barh plot type": 1,
        "series class": 1,
        "value counts": 1,
        "seaborn library": 1,
        "countplot method": 1,
        "pandas plot": 1,
        "order parameter": 1,
        "cvdow field": 1,
        "coolindex": 1,
        "seaborn plot": 1,
        "total noise violations": 1,
        "noise violation calls": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "english stop words": {
        "bayes theorem": 32,
        "diabetes": 31,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "libertarian party": 11,
        "green party": 11,
        "testing sets": 10,
        "bag of words problem": 10,
        "countvectorizer()": 10,
        "bag of words processing": 10,
        "posteriors": 10,
        "bayes theorem implementation": 9,
        "bayes formula": 9,
        "true negative rate": 9,
        "true positive rate": 9,
        "medical field": 9,
        "specificity": 9,
        "sensitivity": 9,
        "naive bayes implementation": 9,
        "probabilities": 9,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "naive bayes implementations": 4,
        "word counts": 4,
        "text classification": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "gaussian naive bayes": 2,
        "na": 2,
        "bayes implementation": 2,
        "integer word counts": 2,
        "discrete": 2,
        "multinomial naive bayes implementation": 2,
        "term frequency": 2,
        "inverse document frequency": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2,
        "random categorical variable": 2,
        "orical": 2,
        "mutually exclusive outcomes": 2,
        "binomial distribution": 2,
        "laplace smoothing": 2,
        "categorical random variable": 2,
        "multinomial distribution": 2,
        "occurrence counts": 2,
        "multin": 2,
        "mult": 2,
        "bernoulli variable": 2,
        "nb": 2,
        "probability distribution": 2,
        "discrete data": 2,
        "outcome probabilities": 2,
        "bern": 2,
        "tfidfvectorizer": 2,
        "english stop words": 2,
        "minimum feature term": 2,
        "bigrams": 2,
        "maximum frequency": 2,
        "snowball": 2,
        "trigrams": 2,
        "nowball": 2,
        "kneighborsclassifier": 2,
        "stemming algorithm": 2,
        "unigrams": 2,
        "tokenize function": 2
    },
    "presidential election": {
        "income": 34,
        "income column": 19,
        "steps column": 18,
        "age": 18,
        "income10": 18,
        "average income": 16,
        "twitter": 16,
        "population": 9,
        "missing incomes": 9,
        "age column": 9,
        "missing data": 9,
        "income values": 9,
        "prediction ability": 9,
        "log transformation": 9,
        "polyfit": 9,
        "income10 data": 8,
        "data transformation": 8,
        "api": 8,
        "tweepy": 8,
        "authentication keys": 8,
        "describe pandas method": 7,
        "corrs": 6,
        "pairwise correlations": 6,
        "pandas method": 6,
        "quantile method": 6,
        "tweetdeck": 5,
        "output parameters": 4,
        "academic statisticians": 4,
        "r": 4,
        "data analysts": 4,
        "programming language": 4,
        "automatic tests": 4,
        "imports": 4,
        "tweepy package": 4,
        "conda environment": 4,
        "twitter developer account": 4,
        "web site": 4,
        "access token secret": 4,
        "access token": 4,
        "consumer secret": 4,
        "developer account": 4,
        "twitter account": 4,
        "templates": 4,
        "coordinates": 4,
        "status object": 4,
        "pandas table json": 4,
        "twitter api": 4,
        "python object": 4,
        "tweetsourcing": 4,
        "pandas documentation": 4,
        "null hypothesis": 4,
        "integer age": 3,
        "json": 3,
        "string method": 3,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "statistical test": 2,
        "numpy functions": 2,
        "hypothesis test": 2,
        "table": 2,
        "datascience": 2,
        "data 8": 2,
        "twitter web client": 2,
        "prediction power": 1,
        "steps": 1,
        "trump tweets": 1
    },
    "exploratory data visualization": {
        "height data": 22,
        "students": 22,
        "majors": 20,
        "significance": 18,
        "ions": 17,
        "disributions": 17,
        "statistical tests": 17,
        "compsci": 15,
        "alpha significance value": 15,
        "null hypothesis": 15,
        "boolean values": 15,
        "scatter matrix": 11,
        "bar chart plot": 11,
        "design matrices": 11,
        "interim conclusion": 10,
        "hypothesis": 10,
        "first pass analysis": 10,
        "confounding variables": 10,
        "ice cream flavour": 9,
        "cs students": 9,
        "ordinary least squares": 9,
        "linear models": 9,
        "unique favourite ice cream": 8,
        "test statistic": 8,
        "cogsci": 8,
        "values": 7,
        "cs data": 6,
        "confounding variable": 6,
        "patsy": 6,
        "cogs students": 5,
        "mean height": 5,
        "ols model": 5,
        "average heights": 4,
        "height distributions": 4,
        "alpha value": 4,
        "statistical test": 4,
        "women": 4,
        "df2": 4,
        "compsci majors": 4,
        "correlation": 4,
        "confounds": 4,
        "causation": 4,
        "pivot tables": 3,
        "average height values": 3,
        "pivot table": 3,
        "linearmodels": 3,
        "kmeans": 3,
        "computer science majors": 2,
        "height": 1,
        "weight": 1,
        "dimensionality reduction": 1,
        "principal components analysis": 1,
        "boolean variables": 1,
        "normal distributions": 1,
        "testing distributions": 1
    },
    "exploratory data vizualization": {
        "height data": 22,
        "students": 22,
        "majors": 20,
        "significance": 18,
        "ions": 17,
        "disributions": 17,
        "statistical tests": 17,
        "compsci": 15,
        "alpha significance value": 15,
        "null hypothesis": 15,
        "boolean values": 15,
        "scatter matrix": 11,
        "bar chart plot": 11,
        "design matrices": 11,
        "interim conclusion": 10,
        "hypothesis": 10,
        "first pass analysis": 10,
        "confounding variables": 10,
        "ice cream flavour": 9,
        "cs students": 9,
        "ordinary least squares": 9,
        "linear models": 9,
        "unique favourite ice cream": 8,
        "test statistic": 8,
        "cogsci": 8,
        "values": 7,
        "cs data": 6,
        "confounding variable": 6,
        "patsy": 6,
        "cogs students": 5,
        "mean height": 5,
        "ols model": 5,
        "average heights": 4,
        "height distributions": 4,
        "alpha value": 4,
        "statistical test": 4,
        "women": 4,
        "df2": 4,
        "compsci majors": 4,
        "correlation": 4,
        "confounds": 4,
        "causation": 4,
        "pivot tables": 3,
        "average height values": 3,
        "pivot table": 3,
        "linearmodels": 3,
        "kmeans": 3,
        "computer science majors": 2,
        "height": 1,
        "weight": 1,
        "dimensionality reduction": 1,
        "principal components analysis": 1,
        "boolean variables": 1,
        "normal distributions": 1,
        "testing distributions": 1
    },
    "automatic tests": {
        "zipfile": 18,
        "granularity": 13,
        "postal code": 13,
        "numerical tests": 12,
        "utilities": 10,
        "sanity checks": 10,
        "data frames": 10,
        "businesses file": 10,
        "primary keys": 10,
        "attributes": 9,
        "zip code": 8,
        "head function": 7,
        "zip": 6,
        "bus data frame": 6,
        "business table": 6,
        "presidentialelections": 6,
        "boolean expressions": 6,
        "data variables": 6,
        "datasets": 6,
        "internet": 5,
        "python file system libraries": 5,
        "web address": 5,
        "caching": 5,
        "food safety data": 5,
        "portability": 5,
        "zip files": 5,
        "filenames": 5,
        "python docs": 5,
        "extended zip codes": 5,
        "extended postal codes": 5,
        "homework": 5,
        "elections table": 5,
        "ahs": 5,
        "zipped data": 4,
        "text editor": 4,
        "web browser": 4,
        "datahub": 4,
        "pandas data frames": 4,
        "character encoding issues": 4,
        "vio dataframes": 4,
        "floating point values": 4,
        "testing function": 4,
        "rounding error": 4,
        "bus dataframe": 4,
        "restaurants": 4,
        "local autograder tests": 4,
        "automated tests": 4,
        "zip codes": 4,
        "longitude": 4,
        "latitude": 4,
        "cali table": 4,
        "democratic presidential candidate": 4,
        "variable postal code": 4,
        "missing zip codes": 3,
        "voting": 3,
        "programming question": 3,
        "test cell": 3,
        "democrat column": 3,
        "percentages": 3,
        "business dataframe": 3,
        "population": 3,
        "nonmissing values": 3,
        "home burglaries": 2,
        "summer vacation period": 2,
        "adt security systems": 2,
        "burglaries": 2,
        "labor day": 2,
        "memorial day": 2,
        "python code": 2,
        "compound expression": 2,
        "subexpressions": 2,
        "missing expression": 2,
        "python type command": 2,
        "zip code values": 2,
        "counts": 2,
        "businesses": 2,
        "94602": 2,
        "search engine": 2,
        "elections": 2,
        "dem states column": 2,
        "democratic votes": 2,
        "inspection": 2,
        "inspection dataframe": 2,
        "data file": 2,
        "american housing survey": 2,
        "ahs dataset": 2,
        "housing unit": 2,
        "population column": 2,
        "year column": 2,
        "quantitative data": 2,
        "integer": 2,
        "fillna": 1,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "series isnull method": 1,
        "binary array": 1,
        "incorrect zip codes": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94545": 1,
        "business name": 1,
        "longitude values": 1,
        "spread function": 1,
        "call to group": 1,
        "democrat spread column": 1,
        "southern states": 1,
        "world population": 1,
        "standard metropolitan statistical area": 1,
        "join method": 1,
        "smsa": 1,
        "bar chart": 1
    },
    "predictive theory": {
        "negative reviews": 37,
        "learning rate": 32,
        "postive reviews": 18,
        "positive reviews": 18,
        "udacity lectures": 17,
        "grokking deep learning": 17,
        "hidden layer": 17,
        "3 layer neural network": 9,
        "project 1": 9,
        "quick theory validation": 9,
        "counter objects": 9,
        "split()": 9,
        "positive review": 9,
        "negative review": 9,
        "total words counter": 9,
        "total words": 9,
        "denominator": 9,
        "positive": 9,
        "word usage": 9,
        "logarithms": 9,
        "positive sentiment": 9,
        "sentiment": 9,
        "neutral words": 9,
        "project 2": 9,
        "vocab": 9,
        "vocabulary size": 9,
        "neural network": 9,
        "lookup table": 9,
        "negative words": 8,
        "postive words": 8,
        "oppositite signs": 8,
        "video": 8,
        "sentimentnetork": 8,
        "activation function": 8,
        "discount": 8,
        "sentimentnetwork": 8,
        "higher learning rate": 8,
        "polarity cutoff": 4,
        "noise reduction": 3,
        "6": 2,
        "words": 1
    },
    "gaussian process regression": {
        "predictive distribution": 22,
        "minimize function": 16,
        "mcmc": 15,
        "gp object": 15,
        "time delays": 15,
        "emcee": 12,
        "posterior distribution": 12,
        "gp": 11,
        "optimization": 10,
        "neg log likelihood": 10,
        "white noise standard deviation": 9,
        "covariance matrix": 9,
        "predictive mean": 9,
        "confidence intervals": 8,
        "delays": 7,
        "posterior probabilities": 6,
        "george": 6,
        "ball park values": 6,
        "compute method": 6,
        "george tutorial": 6,
        "neg log likelihood function": 6,
        "logarithms": 6,
        "log parameters": 6,
        "likelihood": 6,
        "maxim": 6,
        "parameter vector": 6,
        "grid locations": 6,
        "the": 6,
        "gradient functions": 6,
        "agn reverberation mapping": 6,
        "shifted inputs": 6,
        "observational noise": 6,
        "likelihood function": 6,
        "associated gradient functions": 4,
        "xcorr": 4,
        "lags": 4,
        "gradient descent optimizer": 4,
        "log likelihood": 4,
        "ip": 4,
        "posterior uncertainties": 4,
        "gp hps": 4,
        "tutorial": 3,
        "gps": 3,
        "george package": 3,
        "api": 3,
        "gpy": 3,
        "correlated noise": 3,
        "george documentation": 3,
        "tutorials": 3,
        "gaussian process regression": 3,
        "mean function": 3,
        "white noise": 3,
        "squared exponential gp": 3,
        "expsquaredkernel": 3,
        "parametrisation": 3,
        "kernelname": 3,
        "squared exponential kernel": 3,
        "length scale": 3,
        "output variance": 3,
        "gp model": 3,
        "probability distribution": 3,
        "k2sc pipeline": 3,
        "polynomial": 3,
        "component kernel": 3,
        "overal kernel": 3,
        "joint model": 3,
        "predictive means": 3,
        "individual components": 3,
        "likelihood surface": 3,
        "boolean variable": 2,
        "delayed times": 2,
        "uncertainty estimates": 2,
        "posterior probability": 2,
        "posterior function": 2,
        "sampler": 2,
        "second george tutorial": 2,
        "random offset": 2,
        "maximum likelihood estimates": 2,
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "line magics": {
        "mathematical functions": 32,
        "broadcasting": 20,
        "matlab": 16,
        "numpy module": 16,
        "dataframe structures": 16,
        "null vector": 15,
        "slicing": 12,
        "random values": 12,
        "notebook kernel": 8,
        "tab completion": 8,
        "help documentation": 8,
        "linear algebra": 8,
        "nonnegative integers": 8,
        "array indexing": 8,
        "boolean array indexing": 8,
        "array datatypes": 8,
        "numeric datatypes": 8,
        "array math": 8,
        "operator overloads": 8,
        "elementwise multiplication": 8,
        "array objects": 8,
        "matrix multiplication": 8,
        "inner products": 8,
        "dot function": 8,
        "arithmetic operations": 8,
        "elementwise maximum": 8,
        "numpy documentation": 8,
        "column names": 8,
        "values method": 8,
        "null matrix": 6,
        "3 x 3 identity matrix": 6,
        "maximum values": 6,
        "credit dataset": 5,
        "non-zero elements": 4,
        "random matrices": 4,
        "random vector": 4,
        "random matrix": 4,
        "data manipulation": 4,
        "data structures": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "selection": 4,
        "column headers": 4,
        "filtering": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "pandas exercises": 4,
        "dataset": 3,
        "numpy method": 2,
        "statistics table": 2,
        "attribute creditamount": 2,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "matplotlib exercises": 1,
        "black coloured markers": 1,
        "font size": 1,
        "age": 1,
        "attributes duration": 1
    },
    "bernoulli mixture model": {
        "latent space": 54,
        "mixing coefficients": 30,
        "logvar": 28,
        "multivariate bernoulli distribution": 20,
        "em algorithm": 17,
        "handwriting styles": 15,
        "misclassifications": 15,
        "data labels": 15,
        "vector representation": 15,
        "multivariate": 15,
        "bernoulli mixture model": 14,
        "binarized image": 14,
        "pytorch": 13,
        "vae": 11,
        "variational lower bound": 10,
        "reconstruction": 9,
        "flattened mnist image": 9,
        "function binarize": 7,
        "binary images": 7,
        "mnist data": 7,
        "input training images": 7,
        "return statement": 7,
        "reconstructed digits": 5,
        "expectation maximization": 5,
        "objective function": 5,
        "log bernoulli loss": 5,
        "negative log bernoulli loss": 5,
        "oulli loss": 5,
        "log": 5,
        "kl term": 5,
        "hyperparameter search": 4,
        "latent variables": 4,
        "derivatives": 3,
        "function reparameterize": 3,
        "sgd": 3,
        "stochastic variable": 3,
        "stochasticity": 3,
        "hyperparameters": 3,
        "forward": 2,
        "ened mnist image": 2,
        "forward pass": 2,
        "fl": 2,
        "mnist image": 2,
        "optimizer": 1,
        "adam": 1
    },
    "data privacy": {
        "tinder": 36,
        "web scraping": 32,
        "safe harbor method": 27,
        "id": 16,
        "student id number": 16,
        "tritoned": 16,
        "anonymized datasets": 16,
        "onymization": 16,
        "dataprivacy": 16,
        "datagathering": 16,
        "individuals privacy": 16,
        "safe harbour method": 16,
        "beautiful soup library": 16,
        "conda package manager": 16,
        "zip code": 16,
        "employee information": 13,
        "email addresses": 13,
        "ip address": 13,
        "last name": 13,
        "age": 13,
        "data scientist": 13,
        "data files": 13,
        "tinder users": 11,
        "anonymize data": 11,
        "population": 5,
        "sslerror": 3,
        "ssl module": 3,
        "https": 3,
        "error message": 2
    },
    "tab completion": {
        "mathematical functions": 32,
        "broadcasting": 20,
        "matlab": 16,
        "numpy module": 16,
        "dataframe structures": 16,
        "null vector": 15,
        "slicing": 12,
        "random values": 12,
        "tab completion": 8,
        "help documentation": 8,
        "linear algebra": 8,
        "nonnegative integers": 8,
        "array indexing": 8,
        "boolean array indexing": 8,
        "array datatypes": 8,
        "numeric datatypes": 8,
        "array math": 8,
        "operator overloads": 8,
        "elementwise multiplication": 8,
        "array objects": 8,
        "matrix multiplication": 8,
        "inner products": 8,
        "dot function": 8,
        "arithmetic operations": 8,
        "elementwise maximum": 8,
        "numpy documentation": 8,
        "column names": 8,
        "values method": 8,
        "null matrix": 6,
        "3 x 3 identity matrix": 6,
        "maximum values": 6,
        "credit dataset": 5,
        "non-zero elements": 4,
        "random matrices": 4,
        "random vector": 4,
        "random matrix": 4,
        "data manipulation": 4,
        "data structures": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "selection": 4,
        "column headers": 4,
        "filtering": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "pandas exercises": 4,
        "dataset": 3,
        "numpy method": 2,
        "statistics table": 2,
        "attribute creditamount": 2,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "matplotlib exercises": 1,
        "black coloured markers": 1,
        "font size": 1,
        "age": 1,
        "attributes duration": 1
    },
    "linear realationship": {
        "constant term": 40,
        "train set": 30,
        "coefficient": 22,
        "predict method": 21,
        "selection variable": 20,
        "backups": 20,
        "x matrix": 18,
        "coefficients": 18,
        "page view": 18,
        "cpu load": 18,
        "cross products": 18,
        "polynomial features extraction": 18,
        "optimal weights": 18,
        "multiple linear regression": 18,
        "polynomal expansion function": 18,
        "random noise": 17,
        "noise level": 17,
        "colored image": 12,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "fine tuning": 6,
        "parameter tuning": 6,
        "width variable": 6,
        "lassocv": 5,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "historical": {
        "constant term": 40,
        "train set": 30,
        "coefficient": 22,
        "predict method": 21,
        "selection variable": 20,
        "backups": 20,
        "x matrix": 18,
        "coefficients": 18,
        "page view": 18,
        "cpu load": 18,
        "cross products": 18,
        "polynomial features extraction": 18,
        "optimal weights": 18,
        "multiple linear regression": 18,
        "polynomal expansion function": 18,
        "random noise": 17,
        "noise level": 17,
        "colored image": 12,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "fine tuning": 6,
        "parameter tuning": 6,
        "width variable": 6,
        "lassocv": 5,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "grokking deep learning": {
        "learning rate": 64,
        "negative reviews": 37,
        "postive reviews": 18,
        "positive reviews": 18,
        "hidden layer": 17,
        "sentimentnetwork": 16,
        "higher learning rate": 16,
        "3 layer neural network": 9,
        "txt": 9,
        "counter objects": 9,
        "split()": 9,
        "positive review": 9,
        "negative review": 9,
        "total words counter": 9,
        "total words": 9,
        "denominator": 9,
        "positive": 9,
        "word usage": 9,
        "logarithms": 9,
        "positive sentiment": 9,
        "sentiment": 9,
        "neutral words": 9,
        "vocabulary size": 9,
        "neural network": 9,
        "lookup table": 9,
        "negative words": 8,
        "postive words": 8,
        "oppositite signs": 8,
        "video": 8,
        "sentimentnetork": 8,
        "activation function": 8,
        "polarity cutoff": 8,
        "noise reduction": 3,
        "6": 2,
        "words": 1
    },
    "udacity lectures": {
        "learning rate": 64,
        "negative reviews": 37,
        "postive reviews": 18,
        "positive reviews": 18,
        "hidden layer": 17,
        "sentimentnetwork": 16,
        "higher learning rate": 16,
        "3 layer neural network": 9,
        "txt": 9,
        "counter objects": 9,
        "split()": 9,
        "positive review": 9,
        "negative review": 9,
        "total words counter": 9,
        "total words": 9,
        "denominator": 9,
        "positive": 9,
        "word usage": 9,
        "logarithms": 9,
        "positive sentiment": 9,
        "sentiment": 9,
        "neutral words": 9,
        "vocabulary size": 9,
        "neural network": 9,
        "lookup table": 9,
        "negative words": 8,
        "postive words": 8,
        "oppositite signs": 8,
        "video": 8,
        "sentimentnetork": 8,
        "activation function": 8,
        "polarity cutoff": 8,
        "noise reduction": 3,
        "6": 2,
        "words": 1
    },
    "grammatical contructs": {
        "bayes theorem": 32,
        "diabetes": 31,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "libertarian party": 11,
        "green party": 11,
        "testing sets": 10,
        "bag of words problem": 10,
        "countvectorizer()": 10,
        "bag of words processing": 10,
        "posteriors": 10,
        "bayes theorem implementation": 9,
        "bayes formula": 9,
        "true negative rate": 9,
        "true positive rate": 9,
        "medical field": 9,
        "specificity": 9,
        "sensitivity": 9,
        "naive bayes implementation": 9,
        "probabilities": 9,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "naive bayes implementations": 4,
        "word counts": 4,
        "text classification": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "gaussian naive bayes": 2,
        "na": 2,
        "bayes implementation": 2,
        "integer word counts": 2,
        "discrete": 2,
        "multinomial naive bayes implementation": 2,
        "term frequency": 2,
        "inverse document frequency": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2,
        "random categorical variable": 2,
        "orical": 2,
        "mutually exclusive outcomes": 2,
        "binomial distribution": 2,
        "laplace smoothing": 2,
        "categorical random variable": 2,
        "multinomial distribution": 2,
        "occurrence counts": 2,
        "multin": 2,
        "mult": 2,
        "bernoulli variable": 2,
        "nb": 2,
        "probability distribution": 2,
        "discrete data": 2,
        "outcome probabilities": 2,
        "bern": 2
    },
    "pronouns": {
        "bayes theorem": 32,
        "diabetes": 31,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "libertarian party": 11,
        "green party": 11,
        "testing sets": 10,
        "bag of words problem": 10,
        "countvectorizer()": 10,
        "bag of words processing": 10,
        "posteriors": 10,
        "bayes theorem implementation": 9,
        "bayes formula": 9,
        "true negative rate": 9,
        "true positive rate": 9,
        "medical field": 9,
        "specificity": 9,
        "sensitivity": 9,
        "naive bayes implementation": 9,
        "probabilities": 9,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "naive bayes implementations": 4,
        "word counts": 4,
        "text classification": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "gaussian naive bayes": 2,
        "na": 2,
        "bayes implementation": 2,
        "integer word counts": 2,
        "discrete": 2,
        "multinomial naive bayes implementation": 2,
        "term frequency": 2,
        "inverse document frequency": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2,
        "random categorical variable": 2,
        "orical": 2,
        "mutually exclusive outcomes": 2,
        "binomial distribution": 2,
        "laplace smoothing": 2,
        "categorical random variable": 2,
        "multinomial distribution": 2,
        "occurrence counts": 2,
        "multin": 2,
        "mult": 2,
        "bernoulli variable": 2,
        "nb": 2,
        "probability distribution": 2,
        "discrete data": 2,
        "outcome probabilities": 2,
        "bern": 2
    },
    "document dataset": {
        "bayes theorem": 32,
        "diabetes": 31,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "libertarian party": 11,
        "green party": 11,
        "testing sets": 10,
        "bag of words problem": 10,
        "countvectorizer()": 10,
        "bag of words processing": 10,
        "posteriors": 10,
        "bayes theorem implementation": 9,
        "bayes formula": 9,
        "true negative rate": 9,
        "true positive rate": 9,
        "medical field": 9,
        "specificity": 9,
        "sensitivity": 9,
        "naive bayes implementation": 9,
        "probabilities": 9,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "naive bayes implementations": 4,
        "word counts": 4,
        "text classification": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "gaussian naive bayes": 2,
        "na": 2,
        "bayes implementation": 2,
        "integer word counts": 2,
        "discrete": 2,
        "multinomial naive bayes implementation": 2,
        "term frequency": 2,
        "inverse document frequency": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2,
        "random categorical variable": 2,
        "orical": 2,
        "mutually exclusive outcomes": 2,
        "binomial distribution": 2,
        "laplace smoothing": 2,
        "categorical random variable": 2,
        "multinomial distribution": 2,
        "occurrence counts": 2,
        "multin": 2,
        "mult": 2,
        "bernoulli variable": 2,
        "nb": 2,
        "probability distribution": 2,
        "discrete data": 2,
        "outcome probabilities": 2,
        "bern": 2
    },
    "of words problem": {
        "bayes theorem": 32,
        "diabetes": 31,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "libertarian party": 11,
        "green party": 11,
        "testing sets": 10,
        "bag of words problem": 10,
        "countvectorizer()": 10,
        "bag of words processing": 10,
        "posteriors": 10,
        "bayes theorem implementation": 9,
        "bayes formula": 9,
        "true negative rate": 9,
        "true positive rate": 9,
        "medical field": 9,
        "specificity": 9,
        "sensitivity": 9,
        "naive bayes implementation": 9,
        "probabilities": 9,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "naive bayes implementations": 4,
        "word counts": 4,
        "text classification": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "gaussian naive bayes": 2,
        "na": 2,
        "bayes implementation": 2,
        "integer word counts": 2,
        "discrete": 2,
        "multinomial naive bayes implementation": 2,
        "term frequency": 2,
        "inverse document frequency": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2,
        "random categorical variable": 2,
        "orical": 2,
        "mutually exclusive outcomes": 2,
        "binomial distribution": 2,
        "laplace smoothing": 2,
        "categorical random variable": 2,
        "multinomial distribution": 2,
        "occurrence counts": 2,
        "multin": 2,
        "mult": 2,
        "bernoulli variable": 2,
        "nb": 2,
        "probability distribution": 2,
        "discrete data": 2,
        "outcome probabilities": 2,
        "bern": 2
    },
    "coscale 1": {
        "page views": 24,
        "cpu load": 22,
        "constant term": 21,
        "non-linear regression": 18,
        "train set": 18,
        "linear realationship": 12,
        "historical": 12,
        "web server": 12,
        "total page views": 12,
        "coefficient": 11,
        "predict method": 11,
        "selection variable": 11,
        "backups": 11,
        "random forests": 11,
        "x matrix": 10,
        "coefficients": 10,
        "page view": 10,
        "support vector machines": 10,
        "cross products": 10,
        "polynomial features extraction": 10,
        "optimal weights": 10,
        "multiple linear regression": 10,
        "polynomal expansion function": 10,
        "random noise": 10,
        "noise level": 10,
        "noisy sine function": 10,
        "noise samples": 10,
        "functions": 10,
        "sine function": 8,
        "ridge regression": 8,
        "optimal plot": 8,
        "extrapolation": 8,
        "forecasting techniques": 8,
        "colored image": 8,
        "fine tuning": 5,
        "parameter tuning": 5,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "polynomial feature extraction": 1
    },
    "departure delays": {
        "crsdeptime": 31,
        "scheduled departure time": 17,
        "hyperparameters": 16,
        "departure delay": 15,
        "depdelay": 12,
        "iata airport code": 11,
        "svm": 11,
        "scheduled arrival time": 10,
        "crsarrtime": 10,
        "code cell": 8,
        "test sets": 8,
        "carrier code": 7,
        "uniquecarrier": 7,
        "ord": 7,
        "american airlines": 7,
        "diminishing returns": 7,
        "random forest classifier": 7,
        "roc curve": 7,
        "weather information": 6,
        "month dayofmonth": 6,
        "random forests classifier": 6,
        "performance": 6,
        "unit tests": 6,
        "http requests": 5,
        "weather underground": 5,
        "terms of service": 5,
        "api": 5,
        "weather": 5,
        "apis": 5,
        "weather underground api": 5,
        "linear regression model": 5,
        "json": 4,
        "parse time": 4,
        "history": 4,
        "visibilities": 4,
        "returned dataframes": 4,
        "delayed flights": 4,
        "non-delayed": 4,
        "classifer performance": 4,
        "randomforestclassifier": 4,
        "default values": 4,
        "paremeters": 4,
        "faa": 4,
        "departure": 3,
        "frame": 3,
        "time visibility": 3,
        "probabilistic predictions": 3,
        "validation data": 3,
        "auc score": 3,
        "code cells": 3,
        "optimal hypermater": 3,
        "departure delays": 3,
        "split function": 3,
        "returned values": 3,
        "int64": 3,
        "normalized value": 3,
        "machine learning technique": 3,
        "maximum values": 3,
        "float64": 3,
        "trained model": 3,
        "validation": 3,
        "polynomial": 3,
        "instructor grades": 3,
        "ridge regression model": 3,
        "vectorized way": 2,
        "big data": 2,
        "numerical operations": 2,
        "iterrows()": 2,
        "poisson distribution": 2,
        "delay": 2,
        "del": 2,
        "ridge regresion model": 2,
        "decision trees model": 1,
        "default parameters": 1,
        "average auc": 1,
        "final random forest model": 1,
        "probabilistic preditions": 1,
        "true positive rate": 1,
        "false positive rate": 1,
        "axis labels": 1,
        "central illinois regional airport": 1,
        "accuracy score": 1,
        "confusion matrix plot": 1,
        "colored heatmap": 1,
        "flight delays": 1
    },
    "web address": {
        "zipfile": 18,
        "granularity": 17,
        "head function": 14,
        "postal code": 13,
        "numerical tests": 12,
        "pandas data frames": 10,
        "character encoding issues": 10,
        "utilities": 10,
        "sanity checks": 10,
        "data frames": 10,
        "businesses file": 10,
        "primary keys": 10,
        "94602": 10,
        "attributes": 9,
        "businesses": 9,
        "zip code": 8,
        "zip codes": 8,
        "zip file": 7,
        "csv formatted": 7,
        "data directory": 7,
        "zip": 6,
        "bus data frame": 6,
        "business table": 6,
        "zip code values": 6,
        "counts": 6,
        "boolean expressions": 6,
        "data variables": 6,
        "datasets": 6,
        "bad data": 6,
        "zip files": 5,
        "filenames": 5,
        "python docs": 5,
        "fillna": 5,
        "extended zip codes": 5,
        "extended postal codes": 5,
        "94545": 5,
        "zipped data": 4,
        "text editor": 4,
        "web browser": 4,
        "datahub": 4,
        "vio dataframes": 4,
        "floating point values": 4,
        "testing function": 4,
        "rounding error": 4,
        "bus dataframe": 4,
        "longitude values": 4,
        "longitude": 4,
        "latitude": 4,
        "businesses data frame": 4,
        "variable postal code": 4,
        "iloc": 4,
        "missing zipcode values": 4,
        "internet": 4,
        "94609": 4,
        "san francisco": 4,
        "missing zip codes": 3,
        "business dataframe": 3,
        "population": 3,
        "nonmissing values": 3,
        "validzip variable": 3,
        "python type command": 2,
        "search engine": 2,
        "inspection": 2,
        "inspection dataframe": 2,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "series isnull method": 1,
        "binary array": 1,
        "incorrect zip codes": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "business name": 1
    },
    "scientific computing library": {
        "mathematical functions": 32,
        "broadcasting": 20,
        "matlab": 16,
        "numpy module": 16,
        "dataframe structures": 16,
        "null vector": 15,
        "slicing": 12,
        "random values": 12,
        "linear algebra": 8,
        "nonnegative integers": 8,
        "array indexing": 8,
        "boolean array indexing": 8,
        "array datatypes": 8,
        "numeric datatypes": 8,
        "array math": 8,
        "operator overloads": 8,
        "elementwise multiplication": 8,
        "array objects": 8,
        "matrix multiplication": 8,
        "inner products": 8,
        "dot function": 8,
        "arithmetic operations": 8,
        "elementwise maximum": 8,
        "numpy documentation": 8,
        "column names": 8,
        "values method": 8,
        "null matrix": 6,
        "3 x 3 identity matrix": 6,
        "maximum values": 6,
        "credit dataset": 5,
        "non-zero elements": 4,
        "random matrices": 4,
        "random vector": 4,
        "random matrix": 4,
        "pandas introduction": 4,
        "data manipulation": 4,
        "data structures": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "selection": 4,
        "column headers": 4,
        "filtering": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "pandas exercises": 4,
        "dataset": 3,
        "numpy method": 2,
        "statistics table": 2,
        "attribute creditamount": 2,
        "matplotlib introduction": 1,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "matplotlib exercises": 1,
        "black coloured markers": 1,
        "font size": 1,
        "age": 1,
        "attributes duration": 1
    },
    "fund": {
        "mathematical functions": 32,
        "broadcasting": 20,
        "matlab": 16,
        "numpy module": 16,
        "dataframe structures": 16,
        "null vector": 15,
        "slicing": 12,
        "random values": 12,
        "linear algebra": 8,
        "nonnegative integers": 8,
        "array indexing": 8,
        "boolean array indexing": 8,
        "array datatypes": 8,
        "numeric datatypes": 8,
        "array math": 8,
        "operator overloads": 8,
        "elementwise multiplication": 8,
        "array objects": 8,
        "matrix multiplication": 8,
        "inner products": 8,
        "dot function": 8,
        "arithmetic operations": 8,
        "elementwise maximum": 8,
        "numpy documentation": 8,
        "column names": 8,
        "values method": 8,
        "null matrix": 6,
        "3 x 3 identity matrix": 6,
        "maximum values": 6,
        "credit dataset": 5,
        "non-zero elements": 4,
        "random matrices": 4,
        "random vector": 4,
        "random matrix": 4,
        "pandas introduction": 4,
        "data manipulation": 4,
        "data structures": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "selection": 4,
        "column headers": 4,
        "filtering": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "pandas exercises": 4,
        "dataset": 3,
        "numpy method": 2,
        "statistics table": 2,
        "attribute creditamount": 2,
        "matplotlib introduction": 1,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "matplotlib exercises": 1,
        "black coloured markers": 1,
        "font size": 1,
        "age": 1,
        "attributes duration": 1
    },
    "linear regression model": {
        "gre score": 13,
        "linear regression model": 10,
        "airtime": 9,
        "dependent variable": 8,
        "pandas function": 7,
        "pivot table": 7,
        "bar chart": 7,
        "undergraduate schools": 7,
        "score": 7,
        "map() function": 7,
        "ridgecv": 7,
        "admission": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "code cell": 6,
        "random number generator": 6,
        "ols()": 6,
        "arrdelay": 5,
        "unit tests": 5,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "independent variables": 5,
        "admission rate": 4,
        "confidence interval": 4,
        "uncertainty": 4,
        "helper function": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "gpa": 4,
        "prestige": 4,
        "test sets": 4,
        "distributions": 4,
        "correlation": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "response variable": 3,
        "observation": 3,
        "multivariate regresion model": 3,
        "predictor variable": 3,
        "regression model": 3,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "dependent variables": 3,
        "multicollinearity": 3,
        "linear relationship": 3,
        "average night light": 3,
        "mpi": 3,
        "polynomial": 3,
        "instructor grades": 3,
        "training error": 2,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2,
        "multiple independent variables": 2,
        "patsy formula": 2,
        "stats": 2,
        "multivariate regression model": 2,
        "score()": 2,
        "linearregression object": 2,
        "avgnightlight": 2,
        "outlier": 1,
        "test error": 1,
        "root mean squared error": 1,
        "average": 1,
        "distance": 1,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "integers": {
        "jupyter": 14,
        "enumerate": 12,
        "keyword arguments": 12,
        "hamlettext": 11,
        "listy containers": 10,
        "iterators": 9,
        "dictionaries": 9,
        "positional arguments": 8,
        "docs": 7,
        "len function": 6,
        "slicing": 6,
        "list slicing operations": 6,
        "iteration": 6,
        "iterator": 6,
        "list comprehension syntax": 6,
        "for loops": 6,
        "conditional if statements": 6,
        "coding practice": 6,
        "hamletwords": 6,
        "lists": 5,
        "while loop": 5,
        "lavel astring": 5,
        "string operations": 5,
        "jane beth doe": 5,
        "last names": 5,
        "dictionary comprehension": 5,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "course names": 4,
        "zip": 4,
        "constructor function dict": 4,
        "'s sequence protocol": 4,
        "umpy": 4,
        "specfic task": 4,
        "method": 4,
        "mathematical function": 4,
        "lambda functions": 4,
        "mathematical functions": 4,
        "pr": 4,
        "isprime": 4,
        "default argument values": 4,
        "libraries": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "positional properties": 4,
        "python functions": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "symbolic math": 4,
        "math operations": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "numerical differentiation": 3,
        "integer division": 3,
        "cantaloupes": 2,
        "integer addition": 2,
        "integer subtraction": 2,
        "subtraction": 2,
        "integer multiplication": 2,
        "multiplication": 2,
        "mathematical operations": 2,
        "string method count": 2,
        "string method lower": 2,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "colors": 1,
        "bar chart": 1,
        "vector dot products": 1,
        "berkeley bowl": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "fractional component": 1,
        "code cell": 1,
        "integer addition operations": 1,
        "integer subtraction operations": 1,
        "integer multiplication operations": 1,
        "integer division operations": 1,
        "integer operations": 1,
        "fractions": 1,
        "decimals": 1,
        "non-integer numbers": 1,
        "division": 1,
        "floating point numbers": 1,
        "boolean list": 1,
        "integer arithmetic": 1,
        "integer argument": 1,
        "sqrt": 1,
        "float": 1,
        "arbitrary integer": 1,
        "integers": 1,
        "large integers": 1,
        "compute time": 1,
        "maximum review length": 1,
        "feature vector": 1,
        "deep learning networks": 1,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1
    },
    "import packages": {
        "mathematical functions": 32,
        "broadcasting": 20,
        "matlab": 16,
        "numpy module": 16,
        "dataframe structures": 16,
        "null vector": 15,
        "slicing": 12,
        "random values": 12,
        "linear algebra": 8,
        "nonnegative integers": 8,
        "array indexing": 8,
        "boolean array indexing": 8,
        "array datatypes": 8,
        "numeric datatypes": 8,
        "array math": 8,
        "operator overloads": 8,
        "elementwise multiplication": 8,
        "array objects": 8,
        "matrix multiplication": 8,
        "inner products": 8,
        "dot function": 8,
        "arithmetic operations": 8,
        "elementwise maximum": 8,
        "numpy documentation": 8,
        "column names": 8,
        "values method": 8,
        "null matrix": 6,
        "3 x 3 identity matrix": 6,
        "maximum values": 6,
        "credit dataset": 5,
        "non-zero elements": 4,
        "random matrices": 4,
        "random vector": 4,
        "random matrix": 4,
        "data manipulation": 4,
        "data structures": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "selection": 4,
        "column headers": 4,
        "filtering": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "pandas exercises": 4,
        "dataset": 3,
        "numpy method": 2,
        "statistics table": 2,
        "attribute creditamount": 2,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "matplotlib exercises": 1,
        "black coloured markers": 1,
        "font size": 1,
        "age": 1,
        "attributes duration": 1
    },
    "resampling": {
        "sampling distribution": 26,
        "dependent variable": 18,
        "residuals": 18,
        "birth weight": 18,
        "resampling": 17,
        "rmse": 17,
        "confidence interval": 15,
        "null hypothesis": 12,
        "standard error": 8,
        "exponentially weighted functions": 6,
        "mean": 6,
        "resamplerows": 6,
        "mean birth weight": 6,
        "summarize": 6,
        "mother's age": 6,
        "mother": 6,
        "predictive power": 6,
        "iq": 6,
        "sat scores": 6,
        "estimated slope": 6,
        "mean birthweight": 6,
        "weights": 6,
        "strata": 6,
        "survey": 6,
        "brfss data": 6,
        "log weights": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "plot percentiles": 6,
        "correlation": 6,
        "compute coefficient of determination": 6,
        "height information": 5,
        "sampling distributions": 5,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "resample rows": 2,
        "mean height": 2,
        "autoregressive model": 1,
        "column": 1,
        "finalwt": 1
    },
    "random forests": {
        "train set": 33,
        "cross products": 21,
        "polynomial features extraction": 21,
        "optimal weights": 21,
        "multiple linear regression": 21,
        "polynomal expansion function": 21,
        "random noise": 18,
        "noise level": 18,
        "colored image": 12,
        "fine tuning": 12,
        "parameter tuning": 12,
        "crsdeptime": 12,
        "hyperparameters": 9,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "diminishing returns": 7,
        "random forest classifier": 7,
        "roc curve": 7,
        "width variable": 6,
        "weather information": 6,
        "month dayofmonth": 6,
        "scheduled arrival time": 6,
        "crsarrtime": 6,
        "random forests classifier": 6,
        "scheduled departure time": 6,
        "performance": 6,
        "test sets": 5,
        "lassocv": 5,
        "wine quality dataset": 4,
        "classifer performance": 4,
        "randomforestclassifier": 4,
        "default values": 4,
        "paremeters": 4,
        "random forest": 3,
        "probabilistic predictions": 3,
        "validation data": 3,
        "auc score": 3,
        "code cells": 3,
        "optimal hypermater": 3,
        "define folds": 2,
        "estimators": 2,
        "ensembles": 2,
        "polynomial expansion": 2,
        "random forests": 2,
        "polynomial feature extraction": 2,
        "average auc": 1,
        "final random forest model": 1,
        "probabilistic preditions": 1,
        "code cell": 1,
        "true positive rate": 1,
        "false positive rate": 1,
        "axis labels": 1,
        "decision trees": 1,
        "predictors": 1
    },
    "python programming": {
        "enumerate": 12,
        "keyword arguments": 12,
        "python functions": 11,
        "hamlettext": 11,
        "listy containers": 10,
        "iterators": 9,
        "dictionaries": 9,
        "positional arguments": 8,
        "numpy module": 7,
        "numerical programming library": 7,
        "scientific computing": 7,
        "large data sets": 7,
        "calculator": 7,
        "integer division": 7,
        "python data types": 7,
        "variables": 7,
        "floating point values": 7,
        "fluent python": 7,
        "python objects": 7,
        "comparison operations": 7,
        "arithmetic": 7,
        "len function": 6,
        "slicing": 6,
        "list slicing operations": 6,
        "iteration": 6,
        "iterator": 6,
        "list comprehension syntax": 6,
        "for loops": 6,
        "conditional if statements": 6,
        "hamletwords": 6,
        "lists": 5,
        "while loop": 5,
        "lavel astring": 5,
        "string operations": 5,
        "jane beth doe": 5,
        "last names": 5,
        "dictionary comprehension": 5,
        "regex": 4,
        "course names": 4,
        "zip": 4,
        "constructor function dict": 4,
        "'s sequence protocol": 4,
        "umpy": 4,
        "specfic task": 4,
        "method": 4,
        "mathematical function": 4,
        "lambda functions": 4,
        "mathematical functions": 4,
        "pr": 4,
        "isprime": 4,
        "default argument values": 4,
        "libraries": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "positional properties": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "low quality reads": 2,
        "read quality string": 2,
        "mean score": 2,
        "low quality read": 2,
        "mean scores": 2,
        "file objects": 2,
        "score cutoff": 2,
        "ph": 2,
        "reads": 2,
        "dollar sign": 2,
        "string method count": 2,
        "string method lower": 2,
        "dollars": 1,
        "square paranthesis": 1,
        "uppercase letters": 1,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1
    },
    "least squares": {
        "residuals": 36,
        "sampling distribution": 26,
        "birth weight": 24,
        "dependent variable": 18,
        "resampling": 17,
        "rmse": 17,
        "confidence interval": 15,
        "intercept": 12,
        "average age": 12,
        "null hypothesis": 12,
        "standard error": 8,
        "least squares fit": 6,
        "slope": 6,
        "independent variable": 6,
        "scatterplot": 6,
        "percentiles": 6,
        "residual": 6,
        "cd": 6,
        "non-linear relationship": 6,
        "curvature": 6,
        "mean": 6,
        "resamplerows": 6,
        "mean birth weight": 6,
        "summarize": 6,
        "mother's age": 6,
        "mother": 6,
        "predictive power": 6,
        "iq": 6,
        "sat scores": 6,
        "estimated slope": 6,
        "mean birthweight": 6,
        "weights": 6,
        "strata": 6,
        "survey": 6,
        "brfss data": 6,
        "log weights": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "plot percentiles": 6,
        "correlation": 6,
        "compute coefficient of determination": 6,
        "height information": 5,
        "sampling distributions": 5,
        "resample rows": 2,
        "mean height": 2,
        "column": 1,
        "finalwt": 1
    },
    "nsfg data": {
        "residuals": 36,
        "sampling distribution": 26,
        "birth weight": 24,
        "dependent variable": 18,
        "resampling": 17,
        "rmse": 17,
        "confidence interval": 15,
        "intercept": 12,
        "average age": 12,
        "null hypothesis": 12,
        "standard error": 8,
        "least squares fit": 6,
        "slope": 6,
        "independent variable": 6,
        "scatterplot": 6,
        "percentiles": 6,
        "residual": 6,
        "cd": 6,
        "non-linear relationship": 6,
        "curvature": 6,
        "mean": 6,
        "resamplerows": 6,
        "mean birth weight": 6,
        "summarize": 6,
        "mother's age": 6,
        "mother": 6,
        "predictive power": 6,
        "iq": 6,
        "sat scores": 6,
        "estimated slope": 6,
        "mean birthweight": 6,
        "weights": 6,
        "strata": 6,
        "survey": 6,
        "brfss data": 6,
        "log weights": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "plot percentiles": 6,
        "correlation": 6,
        "compute coefficient of determination": 6,
        "height information": 5,
        "sampling distributions": 5,
        "resample rows": 2,
        "mean height": 2,
        "column": 1,
        "finalwt": 1
    },
    "imports": {
        "page views": 26,
        "cpu load": 21,
        "constant term": 19,
        "train set": 15,
        "arithmetical operations": 14,
        "linear realationship": 13,
        "historical": 13,
        "web server": 13,
        "total page views": 13,
        "coefficient": 11,
        "cross products": 11,
        "polynomial features extraction": 11,
        "optimal weights": 11,
        "multiple linear regression": 11,
        "polynomal expansion function": 11,
        "predict method": 10,
        "selection variable": 9,
        "backups": 9,
        "x matrix": 8,
        "coefficients": 8,
        "page view": 8,
        "non-linear regression": 8,
        "random forests": 8,
        "support vector machines": 8,
        "random noise": 8,
        "noise level": 8,
        "noisy sine function": 7,
        "noise samples": 7,
        "functions": 7,
        "sine function": 6,
        "ridge regression": 6,
        "optimal plot": 6,
        "width variable": 6,
        "lassocv": 5,
        "state column": 4,
        "colored image": 4,
        "first babies": 2,
        "national survey of family growth": 2,
        "df2": 2,
        "df3": 2,
        "animals": 2,
        "horse": 2,
        "first pregnancies": 1,
        "variable outcome": 1,
        "variable pregordr": 1,
        "df5": 1,
        "integer valued count": 1,
        "default english corpus": 1,
        "spacy": 1,
        "tokens": 1,
        "word vectors": 1,
        "python dict": 1,
        "wordvecs": 1,
        "ndarray word vectors": 1,
        "np": 1,
        "string names": 1,
        "fine tuning": 1,
        "parameter tuning": 1
    },
    "quick theory validation": {
        "negative reviews": 37,
        "learning rate": 32,
        "postive reviews": 18,
        "positive reviews": 18,
        "udacity lectures": 17,
        "grokking deep learning": 17,
        "hidden layer": 17,
        "3 layer neural network": 9,
        "counter objects": 9,
        "split()": 9,
        "positive review": 9,
        "negative review": 9,
        "total words counter": 9,
        "total words": 9,
        "denominator": 9,
        "positive": 9,
        "word usage": 9,
        "logarithms": 9,
        "positive sentiment": 9,
        "sentiment": 9,
        "neutral words": 9,
        "vocabulary size": 9,
        "neural network": 9,
        "lookup table": 9,
        "negative words": 8,
        "postive words": 8,
        "oppositite signs": 8,
        "video": 8,
        "sentimentnetork": 8,
        "activation function": 8,
        "discount": 8,
        "sentimentnetwork": 8,
        "higher learning rate": 8,
        "polarity cutoff": 4,
        "noise reduction": 3,
        "6": 2,
        "words": 1
    },
    "imdb website": {
        "numerical labels": 26,
        "training samples": 26,
        "vm": 20,
        "test samples": 16,
        "testing samples": 16,
        "predicted labels": 16,
        "test data": 15,
        "string labels": 12,
        "svm classifier": 12,
        "tab separated raw text file": 11,
        "discriminative information": 11,
        "countvectorizer": 11,
        "array": 11,
        "vectorizer": 11,
        "custom sklearn objects": 11,
        "ndarray": 10,
        "np": 10,
        "training data samples": 10,
        "test data samples": 10,
        "test sets": 10,
        "learnt classifier": 10,
        "training labels": 10,
        "trained classifier": 10,
        "predict labels": 10,
        "nltk": 9,
        "tf scaling": 9,
        "review column": 8,
        "tfidf": 8,
        "vectors": 8,
        "svm": 6,
        "customer review task": 5,
        "labels": 5,
        "header arguments": 5,
        "returned variable": 4,
        "tfidf vectorizer": 3,
        "returned object": 2,
        "predicted numerical labels": 1
    },
    "bow encoding method": {
        "numerical labels": 26,
        "training samples": 26,
        "vm": 20,
        "test samples": 16,
        "testing samples": 16,
        "predicted labels": 16,
        "test data": 15,
        "string labels": 12,
        "svm classifier": 12,
        "tab separated raw text file": 11,
        "discriminative information": 11,
        "countvectorizer": 11,
        "array": 11,
        "vectorizer": 11,
        "custom sklearn objects": 11,
        "ndarray": 10,
        "np": 10,
        "training data samples": 10,
        "test data samples": 10,
        "test sets": 10,
        "learnt classifier": 10,
        "training labels": 10,
        "trained classifier": 10,
        "predict labels": 10,
        "nltk": 9,
        "tf scaling": 9,
        "review column": 8,
        "tfidf": 8,
        "vectors": 8,
        "svm": 6,
        "customer review task": 5,
        "labels": 5,
        "header arguments": 5,
        "returned variable": 4,
        "tfidf vectorizer": 3,
        "returned object": 2,
        "predicted numerical labels": 1
    },
    "ordinary least squares regression": {
        "ridgecv": 13,
        "regularized regression": 12,
        "3rd degree polynomial": 12,
        "linearregression object": 8,
        "middle table": 6,
        "regression statistics": 6,
        "confidence interval": 6,
        "predictors": 6,
        "correlation coefficient": 6,
        "modeling": 6,
        "linear models": 6,
        "data preparation": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "predictor variables": 6,
        "lasso regression": 6,
        "response variables": 6,
        "ridge regression": 6,
        "automatic regular": 6,
        "sklearn pipeline": 6,
        "sin function": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "correlation": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "data matrices": {
        "ridgecv": 13,
        "regularized regression": 12,
        "3rd degree polynomial": 12,
        "linearregression object": 8,
        "middle table": 6,
        "regression statistics": 6,
        "confidence interval": 6,
        "predictors": 6,
        "correlation coefficient": 6,
        "modeling": 6,
        "linear models": 6,
        "data preparation": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "predictor variables": 6,
        "lasso regression": 6,
        "response variables": 6,
        "ridge regression": 6,
        "automatic regular": 6,
        "sklearn pipeline": 6,
        "sin function": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "correlation": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "polynomialfeatures": {
        "cross products": 21,
        "polynomial features extraction": 21,
        "optimal weights": 21,
        "multiple linear regression": 21,
        "polynomal expansion function": 21,
        "random noise": 18,
        "noise level": 18,
        "noisy sine function": 18,
        "noise samples": 18,
        "functions": 17,
        "sine function": 14,
        "ridge regression": 14,
        "optimal plot": 14,
        "colored image": 12,
        "train set": 12,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "complexity parameter": 7,
        "fine tuning": 6,
        "parameter tuning": 6,
        "width variable": 6,
        "lassocv": 5,
        "test set error": 5,
        "validation error": 5,
        "best fit model": 4,
        "test risk": 4,
        "validation": 4,
        "validation set error": 3,
        "hypothesis set": 3,
        "polynomial degree": 3,
        "0th order polynomials": 2,
        "test set errors": 2,
        "hyper": 2,
        "learner": 2,
        "test error": 2,
        "validation set errors": 2,
        "training error": 2,
        "20th order polynomials": 2,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1,
        "random splits": 1,
        "prediction error": 1,
        "multiple": 1,
        "validation process": 1,
        "validation errors": 1,
        "sine curve": 1,
        "hypothesis space": 1,
        "kfold": 1,
        "fold errors": 1,
        "dual problem": 1,
        "wildly behaving pilynomials": 1,
        "lagrange multipliers": 1,
        "bias": 1,
        "penalty term": 1
    },
    "stochastic gradient descent": {
        "negative reviews": 37,
        "learning rate": 32,
        "postive reviews": 18,
        "positive reviews": 18,
        "hidden layer": 18,
        "3 layer neural network": 9,
        "txt": 9,
        "counter objects": 9,
        "split()": 9,
        "positive review": 9,
        "negative review": 9,
        "total words counter": 9,
        "total words": 9,
        "denominator": 9,
        "positive": 9,
        "word usage": 9,
        "logarithms": 9,
        "positive sentiment": 9,
        "sentiment": 9,
        "neutral words": 9,
        "vocabulary size": 9,
        "neural network": 9,
        "lookup table": 9,
        "negative words": 8,
        "postive words": 8,
        "oppositite signs": 8,
        "video": 8,
        "sentimentnetork": 8,
        "activation function": 8,
        "sentimentnetwork": 8,
        "higher learning rate": 8,
        "polarity cutoff": 4,
        "stochastic gradient descent": 2,
        "validation": 1,
        "trainingset": 1,
        "sgd iterations": 1,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "mlp": 1,
        "non-linear activation function": 1,
        "oblicz gradienty": 1,
        "derivatives": 1,
        "sgd minibash": 1,
        "cent": 1,
        "tensorflow": 1,
        "tutorials": 1,
        "words": 1
    },
    "exponential distribution": {
        "normal probability plot": 30,
        "exponential distribution": 19,
        "pareto world": 16,
        "ccdf": 15,
        "adult weights": 12,
        "sampling distribution": 11,
        "pareto distribution": 10,
        "normal model": 10,
        "lognormal model": 10,
        "straight": 10,
        "pareto variate": 10,
        "blue man group": 10,
        "stats": 10,
        "analytic distributions": 10,
        "scipy": 10,
        "frozen random variable": 10,
        "human height": 8,
        "mean height": 8,
        "birth weights": 7,
        "null hypothesis": 6,
        "analytic distribution": 6,
        "birth times": 5,
        "interarrival times": 5,
        "nsfg": 5,
        "observed cdf": 5,
        "model": 5,
        "normality": 5,
        "visual test": 5,
        "preterm babies": 5,
        "full term births": 5,
        "adult weight": 5,
        "log weights": 5,
        "pareto model": 5,
        "lognormal distribution": 4,
        "clt": 4,
        "permutation": 4,
        "student t distribution": 4,
        "cdf": 4,
        "central limit theorem": 4,
        "weibull distribution": 4,
        "sampling distributions": 3,
        "standard error": 3,
        "normal probability plots": 2,
        "exponential variates": 2,
        "infinite variance": 2,
        "correlated normal values": 2,
        "random variates": 2,
        "correlated values": 2,
        "probabilities": 2,
        "hypothesistest": 2,
        "simulation": 2,
        "birth weight": 2,
        "multiplicative factors": 2,
        "random value": 2,
        "difference in means": 2,
        "confidence intervals": 2,
        "confidence interval": 2,
        "failure analysis": 2,
        "empirical distribution": 2,
        "random values": 2,
        "gender gap": 1,
        "student engineering teams": 1,
        "class projects": 1,
        "standard errors": 1
    },
    "if statements": {
        "enumerate": 12,
        "keyword arguments": 12,
        "python functions": 11,
        "hamlettext": 11,
        "listy containers": 10,
        "iterators": 9,
        "dictionaries": 9,
        "positional arguments": 8,
        "numpy module": 7,
        "numerical programming library": 7,
        "scientific computing": 7,
        "large data sets": 7,
        "calculator": 7,
        "integer division": 7,
        "python data types": 7,
        "variables": 7,
        "floating point values": 7,
        "fluent python": 7,
        "python objects": 7,
        "comparison operations": 7,
        "arithmetic": 7,
        "len function": 6,
        "slicing": 6,
        "list slicing operations": 6,
        "iteration": 6,
        "iterator": 6,
        "list comprehension syntax": 6,
        "for loops": 6,
        "conditional if statements": 6,
        "hamletwords": 6,
        "lists": 5,
        "while loop": 5,
        "lavel astring": 5,
        "string operations": 5,
        "jane beth doe": 5,
        "last names": 5,
        "dictionary comprehension": 5,
        "course names": 4,
        "zip": 4,
        "constructor function dict": 4,
        "'s sequence protocol": 4,
        "umpy": 4,
        "specfic task": 4,
        "method": 4,
        "mathematical function": 4,
        "lambda functions": 4,
        "mathematical functions": 4,
        "pr": 4,
        "isprime": 4,
        "default argument values": 4,
        "libraries": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "positional properties": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "integers": 2,
        "python syntax": 2,
        "diter method": 2,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1
    },
    "pandas objects": {
        "majors": 20,
        "significance": 18,
        "ions": 17,
        "disributions": 17,
        "statistical tests": 17,
        "alpha significance value": 15,
        "null hypothesis": 15,
        "boolean values": 15,
        "design matrices": 11,
        "interim conclusion": 10,
        "hypothesis": 10,
        "first pass analysis": 10,
        "confounding variables": 10,
        "ice cream flavour": 9,
        "cs students": 9,
        "ordinary least squares": 9,
        "linear models": 9,
        "unique favourite ice cream": 8,
        "test statistic": 8,
        "values": 8,
        "cogsci": 8,
        "cs data": 6,
        "confounding variable": 6,
        "patsy": 6,
        "cogs students": 5,
        "mean height": 5,
        "df2": 5,
        "ols model": 5,
        "average heights": 4,
        "height distributions": 4,
        "alpha value": 4,
        "statistical test": 4,
        "women": 4,
        "compsci": 4,
        "compsci majors": 4,
        "correlation": 4,
        "confounds": 4,
        "causation": 4,
        "pivot tables": 3,
        "average height values": 3,
        "pivot table": 3,
        "linearmodels": 3,
        "kmeans": 3,
        "computer science majors": 2,
        "gender column": 2,
        "height": 1,
        "weight": 1,
        "dimensionality reduction": 1,
        "principal components analysis": 1,
        "boolean variables": 1,
        "normal distributions": 1,
        "testing distributions": 1,
        "uppercase letters": 1,
        "indexer": 1,
        "iloc indexer": 1,
        "df1": 1,
        "random ages": 1,
        "age column": 1,
        "randomly": 1,
        "randomly sampled categorical values": 1,
        "profit": 1,
        "income": 1,
        "expenses": 1,
        "age": 1,
        "lowercase letters": 1
    },
    "python functions": {
        "hamlettext": 22,
        "python function": 20,
        "enumerate": 12,
        "hamletwords": 12,
        "listy containers": 10,
        "dictionaries": 9,
        "ate": 8,
        "numpy module functions": 8,
        "standard deviation 1": 8,
        "distribution": 8,
        "broadcasting": 8,
        "txt": 8,
        "large data sets": 7,
        "calculator": 7,
        "integer division": 7,
        "python data types": 7,
        "variables": 7,
        "floating point values": 7,
        "fluent python": 7,
        "python objects": 7,
        "comparison operations": 7,
        "arithmetic": 7,
        "slicing": 7,
        "len function": 6,
        "list slicing operations": 6,
        "iteration": 6,
        "iterator": 6,
        "list comprehension syntax": 6,
        "for loops": 6,
        "conditional if statements": 6,
        "dictionary comprehension": 6,
        "iterators": 5,
        "lists": 5,
        "while loop": 5,
        "lavel astring": 5,
        "string operations": 5,
        "jane beth doe": 5,
        "last names": 5,
        "course names": 4,
        "zip": 4,
        "constructor function dict": 4,
        "'s sequence protocol": 4,
        "umpy": 4,
        "specfic task": 4,
        "method": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "keyword arguments": 4,
        "positional properties": 4,
        "string method count": 4,
        "string method lower": 4,
        "python program": 3,
        "execution time": 3,
        "sanity check": 2,
        "unique words": 2,
        "dictionary keys": 2,
        "count method": 2,
        "vectorised functions": 2,
        "local variables": 1,
        "centered difference": 1,
        "relative error": 1,
        "execution speed": 1,
        "linear regression implementation": 1
    },
    "bayesian inference tutorial": {
        "probability distribution": 28,
        "probability distributions": 16,
        "cream cheese": 16,
        "joint probability": 12,
        "conditional probability": 12,
        "model parameters": 12,
        "bayes rule": 12,
        "probability theory": 8,
        "tutorial": 8,
        "continuous variables": 8,
        "discrete variables": 8,
        "marginal probability": 8,
        "probability": 8,
        "product rule": 8,
        "fully marginalized likelihood": 8,
        "gaussian likelihood function": 8,
        "gaussian distribution": 8,
        "log likelihood": 6,
        "hierarchical bayesian models": 4,
        "probabilistic graphical models": 4,
        "numerical implementation": 4,
        "bayesian inference": 4,
        "analytic implementation": 4,
        "command line": 4,
        "hierarchical model": 4,
        "frequentist statistics": 4,
        "observ": 4,
        "coin tosses": 4,
        "outcome": 4,
        "integrals": 4,
        "conditional probabilities": 4,
        "breakfast sandwiches": 4,
        "bagels": 4,
        "temperature": 4,
        "rain probability distribution": 4,
        "marginalizing": 4,
        "weather prediction algorithm": 4,
        "humidity probability distribution": 4,
        "wind": 4,
        "pressure probability distribution": 4,
        "marginalization": 4,
        "bagel": 4,
        "bread": 4,
        "physics": 4,
        "statistics": 4,
        "conditionals": 4,
        "posterior probability distribution": 4,
        "a posterior probability distribution": 4,
        "gaussian probability distribution": 4,
        "python lambda function": 4,
        "nested models": 4,
        "model": 4,
        "posterior pdf": 4,
        "normalization": 4,
        "probabilistic graphical model": 4,
        "noise property": 4,
        "deterministic process": 4,
        "inference problem": 4,
        "straight line": 4,
        "mean model": 4,
        "likelihood": 4,
        "lambda function": 2,
        "2d distribution": 2
    },
    "introductory tutorials": {
        "enumerate": 12,
        "keyword arguments": 12,
        "python functions": 11,
        "hamlettext": 11,
        "listy containers": 10,
        "iterators": 9,
        "dictionaries": 9,
        "positional arguments": 8,
        "numpy module": 7,
        "numerical programming library": 7,
        "scientific computing": 7,
        "large data sets": 7,
        "calculator": 7,
        "integer division": 7,
        "python data types": 7,
        "variables": 7,
        "floating point values": 7,
        "fluent python": 7,
        "python objects": 7,
        "comparison operations": 7,
        "arithmetic": 7,
        "len function": 6,
        "slicing": 6,
        "list slicing operations": 6,
        "iteration": 6,
        "iterator": 6,
        "list comprehension syntax": 6,
        "for loops": 6,
        "conditional if statements": 6,
        "hamletwords": 6,
        "lists": 5,
        "while loop": 5,
        "lavel astring": 5,
        "string operations": 5,
        "jane beth doe": 5,
        "last names": 5,
        "dictionary comprehension": 5,
        "course names": 4,
        "zip": 4,
        "constructor function dict": 4,
        "'s sequence protocol": 4,
        "umpy": 4,
        "specfic task": 4,
        "method": 4,
        "mathematical function": 4,
        "lambda functions": 4,
        "mathematical functions": 4,
        "pr": 4,
        "isprime": 4,
        "default argument values": 4,
        "libraries": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "positional properties": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1
    },
    "python documentation": {
        "enumerate": 12,
        "keyword arguments": 12,
        "python functions": 11,
        "hamlettext": 11,
        "listy containers": 10,
        "iterators": 9,
        "dictionaries": 9,
        "positional arguments": 8,
        "numpy module": 7,
        "numerical programming library": 7,
        "scientific computing": 7,
        "large data sets": 7,
        "calculator": 7,
        "integer division": 7,
        "python data types": 7,
        "variables": 7,
        "floating point values": 7,
        "fluent python": 7,
        "python objects": 7,
        "comparison operations": 7,
        "arithmetic": 7,
        "len function": 6,
        "slicing": 6,
        "list slicing operations": 6,
        "iteration": 6,
        "iterator": 6,
        "list comprehension syntax": 6,
        "for loops": 6,
        "conditional if statements": 6,
        "hamletwords": 6,
        "lists": 5,
        "while loop": 5,
        "lavel astring": 5,
        "string operations": 5,
        "jane beth doe": 5,
        "last names": 5,
        "dictionary comprehension": 5,
        "course names": 4,
        "zip": 4,
        "constructor function dict": 4,
        "'s sequence protocol": 4,
        "umpy": 4,
        "specfic task": 4,
        "method": 4,
        "mathematical function": 4,
        "lambda functions": 4,
        "mathematical functions": 4,
        "pr": 4,
        "isprime": 4,
        "default argument values": 4,
        "libraries": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "positional properties": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1
    },
    "r formula syntax": {
        "ridgecv": 13,
        "ols()": 12,
        "linearregression object": 10,
        "fit()": 10,
        "boxplots": 8,
        "relationships": 8,
        "humidity": 8,
        "trailing whitespace problem": 6,
        "map function": 6,
        "series objects": 6,
        "modeling": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "predictor variables": 6,
        "regularized regression": 6,
        "lasso regression": 6,
        "response variables": 6,
        "ridge regression": 6,
        "automatic regular": 6,
        "3rd degree polynomial": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "boxplot": 6,
        "statsmodels model": 6,
        "summary()": 6,
        "()": 6,
        "season": 6,
        "linearregression": 6,
        "response vector": 6,
        "iloc": 6,
        "features data matrix": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "distributions": 4,
        "score()": 4,
        "indicator variables": 2,
        "lambda function": 2,
        "categorical attributes": 2,
        "linearregression model": 2,
        "data matrix": 2,
        "hours distribution": 1
    },
    "project 1": {
        "negative reviews": 37,
        "learning rate": 32,
        "postive reviews": 18,
        "positive reviews": 18,
        "hidden layer": 17,
        "counter objects": 9,
        "split()": 9,
        "positive review": 9,
        "negative review": 9,
        "total words counter": 9,
        "total words": 9,
        "denominator": 9,
        "positive": 9,
        "word usage": 9,
        "logarithms": 9,
        "positive sentiment": 9,
        "sentiment": 9,
        "neutral words": 9,
        "vocabulary size": 9,
        "neural network": 9,
        "lookup table": 9,
        "negative words": 8,
        "postive words": 8,
        "oppositite signs": 8,
        "video": 8,
        "sentimentnetork": 8,
        "activation function": 8,
        "discount": 8,
        "udacity lectures": 8,
        "grokking deep learning": 8,
        "sentimentnetwork": 8,
        "higher learning rate": 8,
        "polarity cutoff": 4,
        "noise reduction": 3,
        "6": 2,
        "words": 1
    },
    "mnist dataset": {
        "latent space": 39,
        "logvar": 23,
        "mixing coefficients": 20,
        "em algorithm": 17,
        "multivariate bernoulli distribution": 15,
        "binarized image": 14,
        "bernoulli mixture model": 14,
        "pytorch": 13,
        "vae": 11,
        "handwriting styles": 10,
        "misclassifications": 10,
        "data labels": 10,
        "vector representation": 10,
        "multivariate": 10,
        "variational lower bound": 10,
        "reconstruction": 9,
        "flattened mnist image": 9,
        "function binarize": 7,
        "binary images": 7,
        "mnist data": 7,
        "input training images": 7,
        "return statement": 7,
        "reconstructed digits": 5,
        "expectation maximization": 5,
        "objective function": 5,
        "log bernoulli loss": 5,
        "negative log bernoulli loss": 5,
        "oulli loss": 5,
        "log": 5,
        "kl term": 5,
        "hyperparameter search": 4,
        "latent variables": 4,
        "derivatives": 3,
        "function reparameterize": 3,
        "sgd": 3,
        "stochastic variable": 3,
        "stochasticity": 3,
        "forward": 2,
        "ened mnist image": 2,
        "forward pass": 2,
        "fl": 2,
        "mnist image": 2,
        "hyperparameters": 2,
        "kmeans clusterer": 1,
        "optimizer": 1,
        "adam": 1,
        "mnist sequence dataset": 1,
        "deep learning model": 1,
        "python variable": 1,
        "optical character recognition": 1
    },
    "python class": {
        "fake010": 16,
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "computational graph": 5,
        "first light curve file": 4,
        "filters": 4,
        "many": 4,
        "plotting method": 4,
        "light curve files": 4,
        "multiband light curve": 4,
        "image differencing": 4,
        "statistical distributions": 4,
        "brightness measurements": 4,
        "negative flux": 4,
        "lsst": 4,
        "type ia supernova": 4,
        "transient": 4,
        "secondary peaks": 4,
        "secondary maxima": 4,
        "multiband light curves": 4,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "variable naming convention": 4,
        "l2 regularization": 4,
        "momentum term": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "plus layer": 2,
        "square layer": 2,
        "local gradients": 2,
        "exact variable names": 2,
        "xor gate": 2,
        "neural network": 2,
        "partiular architecture": 2,
        "weight update": 2,
        "activation function": 2,
        "biases": 2,
        "weights": 2,
        "l2 regularization term": 2,
        "regularizatino constant": 2,
        "batch size": 2,
        "gradients": 1,
        "stateless": 1,
        "stateful layer": 1,
        "output gradient": 1,
        "computational graphs": 1,
        "python builtin locals() function": 1,
        "backward pass": 1,
        "affine layer tasks": 1,
        "affine white box": 1,
        "affine layer": 1,
        "affine black box": 1,
        "affine layers": 1,
        "backpropagation": 1,
        "squared loss layer tasks": 1,
        "squared loss white box": 1,
        "squared loss black box": 1,
        "forward pass tasks": 1,
        "database table": 1,
        "testfeats table": 1
    },
    "linear models": {
        "ridgecv": 13,
        "linearregression object": 8,
        "predictive models": 7,
        "learn": 7,
        "tutorial": 7,
        "scikit-learn": 7,
        "titanic survival dataset": 7,
        "sklearn library": 7,
        "categorical variables": 7,
        "exploratory data analysis": 7,
        "age": 7,
        "numerical variables": 7,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "predictor variables": 6,
        "regularized regression": 6,
        "lasso regression": 6,
        "response variables": 6,
        "ridge regression": 6,
        "automatic regular": 6,
        "3rd degree polynomial": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "computer science majors": 2,
        "score()": 2,
        "kmeans": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "course reading material": {
        "negative reviews": 37,
        "learning rate": 32,
        "postive reviews": 18,
        "positive reviews": 18,
        "hidden layer": 17,
        "3 layer neural network": 9,
        "txt": 9,
        "counter objects": 9,
        "split()": 9,
        "positive review": 9,
        "negative review": 9,
        "total words counter": 9,
        "total words": 9,
        "denominator": 9,
        "positive": 9,
        "word usage": 9,
        "logarithms": 9,
        "positive sentiment": 9,
        "sentiment": 9,
        "neutral words": 9,
        "vocabulary size": 9,
        "neural network": 9,
        "lookup table": 9,
        "negative words": 8,
        "postive words": 8,
        "oppositite signs": 8,
        "video": 8,
        "sentimentnetork": 8,
        "activation function": 8,
        "sentimentnetwork": 8,
        "higher learning rate": 8,
        "polarity cutoff": 4,
        "words": 1
    },
    "ds 100 repository": {
        "zipfile": 28,
        "granularity": 14,
        "numerical tests": 12,
        "postal code": 11,
        "inline matploblib plots": 10,
        "automatic tests": 10,
        "utilities": 10,
        "sanity checks": 10,
        "data frames": 10,
        "businesses file": 10,
        "primary keys": 10,
        "attributes": 9,
        "94602": 9,
        "businesses": 8,
        "zip codes": 8,
        "head function": 7,
        "zip": 6,
        "zip code": 6,
        "boolean expressions": 6,
        "data variables": 6,
        "datasets": 6,
        "filenames": 5,
        "python docs": 5,
        "fillna": 5,
        "extended zip codes": 5,
        "extended postal codes": 5,
        "94545": 5,
        "zipped data": 4,
        "text editor": 4,
        "web browser": 4,
        "datahub": 4,
        "vio dataframes": 4,
        "floating point values": 4,
        "testing function": 4,
        "rounding error": 4,
        "bus dataframe": 4,
        "businesses data frame": 4,
        "bus data frame": 4,
        "business table": 4,
        "variable postal code": 4,
        "zip code values": 4,
        "counts": 4,
        "iloc": 4,
        "missing zipcode values": 4,
        "internet": 4,
        "94609": 4,
        "san francisco": 4,
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "longitude values": 3,
        "validzip variable": 3,
        "missing zip codes": 2,
        "inspection": 2,
        "inspection dataframe": 2,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "business name": 1,
        "search engine": 1
    },
    "restaurant food safety scores": {
        "zipfile": 28,
        "granularity": 14,
        "numerical tests": 12,
        "postal code": 11,
        "inline matploblib plots": 10,
        "automatic tests": 10,
        "utilities": 10,
        "sanity checks": 10,
        "data frames": 10,
        "businesses file": 10,
        "primary keys": 10,
        "attributes": 9,
        "94602": 9,
        "businesses": 8,
        "zip codes": 8,
        "head function": 7,
        "zip": 6,
        "zip code": 6,
        "boolean expressions": 6,
        "data variables": 6,
        "datasets": 6,
        "filenames": 5,
        "python docs": 5,
        "fillna": 5,
        "extended zip codes": 5,
        "extended postal codes": 5,
        "94545": 5,
        "zipped data": 4,
        "text editor": 4,
        "web browser": 4,
        "datahub": 4,
        "vio dataframes": 4,
        "floating point values": 4,
        "testing function": 4,
        "rounding error": 4,
        "bus dataframe": 4,
        "businesses data frame": 4,
        "bus data frame": 4,
        "business table": 4,
        "variable postal code": 4,
        "zip code values": 4,
        "counts": 4,
        "iloc": 4,
        "missing zipcode values": 4,
        "internet": 4,
        "94609": 4,
        "san francisco": 4,
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "longitude values": 3,
        "validzip variable": 3,
        "missing zip codes": 2,
        "inspection": 2,
        "inspection dataframe": 2,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "business name": 1,
        "search engine": 1
    },
    "residue plot": {
        "ridgecv": 13,
        "regularized regression": 12,
        "3rd degree polynomial": 12,
        "linearregression object": 8,
        "modeling": 6,
        "linear models": 6,
        "data preparation": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "predictor variables": 6,
        "lasso regression": 6,
        "response variables": 6,
        "ridge regression": 6,
        "automatic regular": 6,
        "sklearn pipeline": 6,
        "sin function": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "correlation": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "functional dependency": {
        "ridgecv": 13,
        "regularized regression": 12,
        "3rd degree polynomial": 12,
        "linearregression object": 8,
        "modeling": 6,
        "linear models": 6,
        "data preparation": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "predictor variables": 6,
        "lasso regression": 6,
        "response variables": 6,
        "ridge regression": 6,
        "automatic regular": 6,
        "sklearn pipeline": 6,
        "sin function": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "correlation": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "non-linear regression": {
        "train set": 37,
        "cross products": 21,
        "polynomial features extraction": 21,
        "optimal weights": 21,
        "multiple linear regression": 21,
        "polynomal expansion function": 21,
        "random noise": 18,
        "noise level": 18,
        "colored image": 16,
        "width variable": 12,
        "width parameter": 12,
        "lassocv": 10,
        "lassocv()": 9,
        "ridgecv()": 9,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "fine tuning": 7,
        "parameter tuning": 7,
        "linear classifier": 7,
        "multiple features": 6,
        "gaussianprocess()": 5,
        "confidance intervals": 5,
        "polynomial expansion": 4,
        "noise level estimation": 4,
        "validation": 4,
        "machine learning algorithms": 4,
        "random forests": 3,
        "non-linear classification": 3,
        "non-linear classifier": 3,
        "polynomials": 3,
        "linear decision boundary": 3,
        "decision trees": 2,
        "double spiral problem": 2,
        "voting mechanism": 2,
        "matical representation": 2,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial feature extraction": 1
    },
    "missing data": {
        "majors": 15,
        "age": 15,
        "income": 14,
        "substring checking": 11,
        "missing gender information": 11,
        "data columns": 11,
        "string methods": 11,
        "standardize": 11,
        "measurement systems": 11,
        "inches": 11,
        "height data": 11,
        "values": 7,
        "cs data": 6,
        "pystan": 6,
        "log10": 5,
        "average heights": 4,
        "alpha value": 4,
        "statistical test": 4,
        "significance": 4,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "incomes": 4,
        "inclusion indicator": 4,
        "pymc": 4,
        "average height values": 3,
        "pivot table": 3,
        "confounding variable": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3,
        "mean income": 3,
        "income data": 3,
        "exponential decay function": 3,
        "valueerror": 3,
        "zero values": 3,
        "math domain error": 3,
        "standard deviations": 3,
        "diistribution": 3,
        "transformantion": 3,
        "categorical data": 3,
        "outliers": 2,
        "count()": 2,
        "dropna()": 2,
        "numerical data": 2,
        "average": 2,
        "random forest": 2,
        "relative performance": 2,
        "knn": 2,
        "statistical exposition": 2,
        "distribution": 2,
        "distributions": 2,
        "pymc model": 2,
        "bayesian logistic regression": 2,
        "bayesian logistic regression form": 2,
        "bernoulli method": 2,
        "univariate logistic regression": 2,
        "sigmoid function": 2,
        "bayesian model": 2,
        "computation segment": 2,
        "mcmc procedure": 2,
        "roc scores": 2,
        "non-bayesian logistic": 2,
        "missing data": 2,
        "photometric redshifts": 2,
        "machine learning model": 2,
        "income distribution": 1,
        "age mood": 1,
        "correlationship coefficient": 1,
        "stroger relationships": 1,
        "income graph": 1,
        "mathematical calculations": 1,
        "skewed data distributions": 1,
        "logbase10": 1,
        "logarithmic transforms": 1,
        "corrs variable": 1,
        "passengers": 1,
        "age regression model": 1,
        "age estimates": 1,
        "passenger survival": 1,
        "titanic": 1,
        "age feature": 1,
        "child feature": 1,
        "le": 1,
        "blind data": 1,
        "k": 1,
        "astro machine learning model": 1,
        "lsst": 1,
        "astronomical problem": 1,
        "galaxies": 1,
        "spectroscopic measurements": 1,
        "photometry": 1,
        "sdss casjobs": 1,
        "specobjid": 1,
        "psf mag": 1,
        "psfmag": 1,
        "modelmag": 1,
        "ds": 1,
        "sfd extinction estimate": 1,
        "sdss identifier": 1,
        "sdss photometric type": 1,
        "upper": 1,
        "sdss source": 1,
        "wise filters": 1,
        "categorical features": 1,
        "categorical variable": 1,
        "nearest neighbors regression model": 1,
        "sdss dataframe": 1,
        "matplotlib visualizations": 1,
        "lambda expression": 1,
        "log transform": 1,
        "geometric means": 1,
        "log10 transformation": 1,
        "pand": 1,
        "median": 1,
        "dataset size": 1,
        "log transforming data": 1,
        "log base 10": 1
    },
    "astronomy": {
        "database": 16,
        "source fake010": 11,
        "pdf": 10,
        "svm model": 9,
        "middle aged men": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "chinups": 7,
        "density estimation": 6,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "fake010": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "cross validation": 4,
        "tophat kernel": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "broker": 3,
        "testphot database": 3,
        "histogram plots": 3,
        "waist size": 2,
        "pulse": 2,
        "weight": 2,
        "situps": 2,
        "jumps": 2,
        "linnerud data set": 2,
        "default settings": 2,
        "bin centers": 2,
        "continuous distribution": 2,
        "bin width": 2,
        "variable width bins": 2,
        "bin edges": 2,
        "bin choices": 2,
        "rug plot": 2,
        "chinup measurements": 2,
        "transparency": 2,
        "bin grouping": 2,
        "user choices": 2,
        "bin centering": 2,
        "univariate data": 2,
        "bin": 2,
        "output histogram": 2,
        "ering": 2,
        "epanechnikov": 2,
        "kernel density estimation": 2,
        "minimal mean square error": 2,
        "inverted parabola": 2,
        "discrete data": 2,
        "normalized kernel function": 2,
        "iris data set": 2,
        "dbscan": 2,
        "continuous data": 1,
        "bandwidth selection": 1,
        "epanechnikov kernel": 1,
        "random state": 1,
        "iris": 1,
        "euclidean distance": 1,
        "cluster centers": 1,
        "clustering outcome": 1,
        "petal length": 1,
        "scaling": 1,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "training error": 1,
        "generalization error": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1,
        "database table": 1,
        "testfeats table": 1
    },
    "minimum node size": {
        "prediction path": 48,
        "classification error": 45,
        "early stopping conditions": 33,
        "validation error": 24,
        "validation data": 20,
        "intermediate node": 18,
        "tree learning algorithm": 18,
        "lowest classification error": 14,
        "tree model": 12,
        "function classify": 12,
        "predicted class": 12,
        "error reduction": 9,
        "risky loans": 9,
        "safe loans": 9,
        "misclassified examples": 9,
        "majority class": 9,
        "minimum node size": 9,
        "minimum error reduction": 9,
        "if condition": 9,
        "lowest": 6,
        "qu": 4,
        "complexity": 4
    },
    "pandas guide": {
        "income": 44,
        "age": 38,
        "id": 20,
        "income column": 19,
        "steps column": 18,
        "income10": 18,
        "pandas method": 16,
        "average income": 16,
        "steps": 11,
        "id column": 10,
        "merged df dataframe": 10,
        "population": 9,
        "missing incomes": 9,
        "age column": 9,
        "missing data": 9,
        "income values": 9,
        "prediction ability": 9,
        "log transformation": 9,
        "polyfit": 9,
        "income10 data": 8,
        "data transformation": 8,
        "describe pandas method": 7,
        "corrs": 6,
        "pairwise correlations": 6,
        "quantile method": 6,
        "output parameters": 4,
        "integer age": 3,
        "prediction power": 1
    },
    "plotlib": {
        "income": 34,
        "steps column": 18,
        "age": 18,
        "income10": 18,
        "cvlegend": 14,
        "age column": 9,
        "income column": 9,
        "missing data": 9,
        "income values": 9,
        "prediction ability": 9,
        "log transformation": 9,
        "polyfit": 9,
        "income10 data": 8,
        "data transformation": 8,
        "describe pandas method": 7,
        "corrs": 6,
        "pairwise correlations": 6,
        "pandas method": 6,
        "quantile method": 6,
        "average income": 6,
        "offense": 5,
        "output parameters": 4,
        "compressed files": 4,
        "zip archive": 4,
        "uncompressed files": 4,
        "larceny": 4,
        "barh plot type": 4,
        "value counts": 4,
        "calls dataframe": 4,
        "vertical bar plot": 4,
        "integer age": 3,
        "pathlib functionality": 3,
        "crime": 3,
        "groupby method": 3,
        "crime events": 3,
        "pandas plotting": 3,
        "regular bar plot": 3,
        "countplot": 3,
        "cvdow field": 3,
        "seaborn plot": 3,
        "noise violation": 3,
        "noise violation calls": 2,
        "answer3b": 2,
        "zip": 1,
        "data directory": 1,
        "lib": 1,
        "pathlib": 1,
        "glob": 1,
        "cvdow": 1,
        "offense type": 1,
        "case number": 1,
        "numerical columns": 1,
        "type information": 1,
        "ense": 1,
        "seaborn documentation": 1,
        "orn": 1,
        "series": 1,
        "pandas documentation": 1,
        "high level plotting library": 1,
        "matplotlib commands": 1,
        "plotting pandas": 1,
        "data visualization": 1,
        "se": 1,
        "series class": 1,
        "seaborn library": 1,
        "countplot method": 1,
        "pandas plot": 1,
        "order parameter": 1,
        "rotation argument": 1,
        "coolindex": 1,
        "total noise violations": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "fraud": 1,
        "calls reporting": 1,
        "reasoning": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1,
        "prediction power": 1,
        "steps": 1
    },
    "mathematica": {
        "constant term": 25,
        "arithmetical operations": 24,
        "coefficient": 15,
        "predict method": 13,
        "train set": 12,
        "request rates": 12,
        "x matrix": 11,
        "cpu load": 10,
        "anomaly detection": 10,
        "maximum": 10,
        "minmum": 10,
        "cpu": 10,
        "selection variable": 9,
        "backups": 9,
        "total request rate": 9,
        "coefficients": 8,
        "page view": 8,
        "cross products": 8,
        "polynomial features extraction": 8,
        "optimal weights": 8,
        "multiple linear regression": 8,
        "polynomal expansion function": 8,
        "axis variable": 8,
        "random noise": 7,
        "noise level": 7,
        "width variable": 7,
        "variable model": 7,
        "exact indices": 6,
        "data wrangling": 6,
        "web request": 6,
        "web server": 6,
        "loaded data": 6,
        "head command": 6,
        "cpu column": 6,
        "lassocv": 5,
        "colored image": 4,
        "request": 2,
        "fine tuning": 1,
        "parameter tuning": 1
    },
    "visual output": {
        "constant term": 25,
        "arithmetical operations": 24,
        "coefficient": 15,
        "predict method": 13,
        "train set": 12,
        "request rates": 12,
        "x matrix": 11,
        "cpu load": 10,
        "anomaly detection": 10,
        "maximum": 10,
        "minmum": 10,
        "cpu": 10,
        "selection variable": 9,
        "backups": 9,
        "total request rate": 9,
        "coefficients": 8,
        "page view": 8,
        "cross products": 8,
        "polynomial features extraction": 8,
        "optimal weights": 8,
        "multiple linear regression": 8,
        "polynomal expansion function": 8,
        "axis variable": 8,
        "random noise": 7,
        "noise level": 7,
        "width variable": 7,
        "variable model": 7,
        "exact indices": 6,
        "data wrangling": 6,
        "web request": 6,
        "web server": 6,
        "loaded data": 6,
        "head command": 6,
        "cpu column": 6,
        "lassocv": 5,
        "colored image": 4,
        "request": 2,
        "fine tuning": 1,
        "parameter tuning": 1
    },
    "data scientists": {
        "constant term": 25,
        "arithmetical operations": 24,
        "coefficient": 15,
        "predict method": 13,
        "train set": 12,
        "request rates": 12,
        "x matrix": 11,
        "cpu load": 10,
        "anomaly detection": 10,
        "maximum": 10,
        "minmum": 10,
        "cpu": 10,
        "selection variable": 9,
        "backups": 9,
        "total request rate": 9,
        "coefficients": 8,
        "page view": 8,
        "cross products": 8,
        "polynomial features extraction": 8,
        "optimal weights": 8,
        "multiple linear regression": 8,
        "polynomal expansion function": 8,
        "axis variable": 8,
        "random noise": 7,
        "noise level": 7,
        "width variable": 7,
        "variable model": 7,
        "exact indices": 6,
        "data wrangling": 6,
        "web request": 6,
        "web server": 6,
        "loaded data": 6,
        "head command": 6,
        "cpu column": 6,
        "lassocv": 5,
        "colored image": 4,
        "request": 2,
        "fine tuning": 1,
        "parameter tuning": 1
    },
    "inline matploblib plots": {
        "zipfile": 18,
        "granularity": 13,
        "postal code": 13,
        "numerical tests": 12,
        "utilities": 10,
        "sanity checks": 10,
        "data frames": 10,
        "businesses file": 10,
        "primary keys": 10,
        "attributes": 9,
        "zip code": 8,
        "head function": 7,
        "zip": 6,
        "bus data frame": 6,
        "business table": 6,
        "boolean expressions": 6,
        "data variables": 6,
        "datasets": 6,
        "internet": 5,
        "python file system libraries": 5,
        "web address": 5,
        "caching": 5,
        "food safety data": 5,
        "portability": 5,
        "zip files": 5,
        "filenames": 5,
        "python docs": 5,
        "extended zip codes": 5,
        "extended postal codes": 5,
        "zipped data": 4,
        "text editor": 4,
        "web browser": 4,
        "datahub": 4,
        "pandas data frames": 4,
        "character encoding issues": 4,
        "vio dataframes": 4,
        "floating point values": 4,
        "testing function": 4,
        "rounding error": 4,
        "bus dataframe": 4,
        "restaurants": 4,
        "local autograder tests": 4,
        "automated tests": 4,
        "zip codes": 4,
        "longitude": 4,
        "latitude": 4,
        "variable postal code": 4,
        "missing zip codes": 3,
        "business dataframe": 3,
        "population": 3,
        "nonmissing values": 3,
        "python type command": 2,
        "zip code values": 2,
        "counts": 2,
        "businesses": 2,
        "94602": 2,
        "search engine": 2,
        "inspection": 2,
        "inspection dataframe": 2,
        "fillna": 1,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "series isnull method": 1,
        "binary array": 1,
        "incorrect zip codes": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94545": 1,
        "business name": 1,
        "longitude values": 1
    },
    "zipfile": {
        "zipfile": 18,
        "granularity": 13,
        "postal code": 13,
        "numerical tests": 12,
        "utilities": 10,
        "sanity checks": 10,
        "data frames": 10,
        "businesses file": 10,
        "primary keys": 10,
        "attributes": 9,
        "zip code": 8,
        "head function": 7,
        "zip": 6,
        "bus data frame": 6,
        "business table": 6,
        "boolean expressions": 6,
        "data variables": 6,
        "datasets": 6,
        "internet": 5,
        "python file system libraries": 5,
        "web address": 5,
        "caching": 5,
        "food safety data": 5,
        "portability": 5,
        "zip files": 5,
        "filenames": 5,
        "python docs": 5,
        "extended zip codes": 5,
        "extended postal codes": 5,
        "zipped data": 4,
        "text editor": 4,
        "web browser": 4,
        "datahub": 4,
        "pandas data frames": 4,
        "character encoding issues": 4,
        "vio dataframes": 4,
        "floating point values": 4,
        "testing function": 4,
        "rounding error": 4,
        "bus dataframe": 4,
        "restaurants": 4,
        "local autograder tests": 4,
        "automated tests": 4,
        "zip codes": 4,
        "longitude": 4,
        "latitude": 4,
        "variable postal code": 4,
        "missing zip codes": 3,
        "business dataframe": 3,
        "population": 3,
        "nonmissing values": 3,
        "python type command": 2,
        "zip code values": 2,
        "counts": 2,
        "businesses": 2,
        "94602": 2,
        "search engine": 2,
        "inspection": 2,
        "inspection dataframe": 2,
        "fillna": 1,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "series isnull method": 1,
        "binary array": 1,
        "incorrect zip codes": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94545": 1,
        "business name": 1,
        "longitude values": 1
    },
    "stock prices": {
        "google finance": 24,
        "pandas datareader": 24,
        "morgan stanley": 17,
        "bank of america": 16,
        "tick": 13,
        "banks": 12,
        "symbol": 12,
        "goldman sachs": 12,
        "jpmorgan chase": 12,
        "wells fargo": 12,
        "stock information": 12,
        "bank": 9,
        "ticker symbols": 8,
        "alphabetical": 8,
        "distplot": 8,
        "single data frame": 7,
        "tickers list": 7,
        "close price": 7,
        "column name levels": 6,
        "returns": 6,
        "empty": 6,
        "bank stock ticker": 6,
        "returns column": 6,
        "close column": 6,
        "pairplot": 6,
        "returns dataframe": 6,
        "single day returns": 6,
        "worst": 6,
        "ly": 3,
        "visualization libraries": 3,
        "cufflinks": 3,
        "tickers": 3,
        "ticker names": 3,
        "covariance matrix": 3,
        "moving averages": 2,
        "heatmap": 2,
        "eigenvalues": 2,
        "eigenvectors": 2,
        "tickerinfo": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "bollinger band plot": 1,
        "spark context": 1,
        "import dependencies": 1,
        "spark dataframe": 1,
        "stock price": 1,
        "sp500": 1,
        "partition columns": 1,
        "test lists": 1,
        "training examples": 1,
        "test list": 1,
        "test examples": 1,
        "train example": 1,
        "numpy vectors": 1,
        "diff rolumns": 1,
        "eigenval": 1,
        "eigh function": 1,
        "computecov function": 1,
        "cov key": 1,
        "spectral analysis": 1,
        "directory figs": 1,
        "holiday shopping": 1,
        "income distribution": 1,
        "company name": 1,
        "sector ids": 1,
        "sector id": 1
    },
    "array indexing": {
        "mathematical functions": 24,
        "numpy module": 16,
        "dataframe structures": 16,
        "null vector": 15,
        "slicing": 12,
        "broadcasting": 12,
        "random values": 12,
        "boolean array indexing": 8,
        "numeric datatypes": 8,
        "operator overloads": 8,
        "elementwise multiplication": 8,
        "array objects": 8,
        "matrix multiplication": 8,
        "matlab": 8,
        "inner products": 8,
        "dot function": 8,
        "arithmetic operations": 8,
        "elementwise maximum": 8,
        "column names": 8,
        "values method": 8,
        "null matrix": 6,
        "3 x 3 identity matrix": 6,
        "maximum values": 6,
        "credit dataset": 5,
        "non-zero elements": 4,
        "random matrices": 4,
        "random vector": 4,
        "random matrix": 4,
        "data manipulation": 4,
        "data structures": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "selection": 4,
        "column headers": 4,
        "filtering": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "dataset": 3,
        "numpy method": 2,
        "statistics table": 2,
        "attribute creditamount": 2,
        "array indexing": 2,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "black coloured markers": 1,
        "font size": 1,
        "age": 1,
        "attributes duration": 1,
        "18": 1,
        "indexing": 1,
        "sorted elements": 1,
        "integers": 1,
        "boolean indexing": 1,
        "index 26": 1,
        "participant names": 1,
        "participant id": 1,
        "average": 1
    },
    "bayesian inference": {
        "probability distribution": 28,
        "cream cheese": 16,
        "probability distributions": 12,
        "joint probability": 12,
        "conditional probability": 12,
        "model parameters": 12,
        "bayes rule": 12,
        "continuous variables": 8,
        "discrete variables": 8,
        "marginal probability": 8,
        "probability": 8,
        "product rule": 8,
        "fully marginalized likelihood": 8,
        "gaussian likelihood function": 8,
        "gaussian distribution": 8,
        "log likelihood": 6,
        "hierarchical model": 4,
        "frequentist statistics": 4,
        "observ": 4,
        "coin tosses": 4,
        "outcome": 4,
        "integrals": 4,
        "conditional probabilities": 4,
        "breakfast sandwiches": 4,
        "bagels": 4,
        "temperature": 4,
        "rain probability distribution": 4,
        "marginalizing": 4,
        "weather prediction algorithm": 4,
        "humidity probability distribution": 4,
        "wind": 4,
        "pressure probability distribution": 4,
        "marginalization": 4,
        "bagel": 4,
        "bread": 4,
        "physics": 4,
        "statistics": 4,
        "conditionals": 4,
        "probability theory": 4,
        "posterior probability distribution": 4,
        "a posterior probability distribution": 4,
        "gaussian probability distribution": 4,
        "python lambda function": 4,
        "tutorial": 4,
        "nested models": 4,
        "model": 4,
        "posterior pdf": 4,
        "normalization": 4,
        "probabilistic graphical model": 4,
        "noise property": 4,
        "deterministic process": 4,
        "inference problem": 4,
        "straight line": 4,
        "mean model": 4,
        "likelihood": 4,
        "lambda function": 2,
        "2d distribution": 2
    },
    "polynomial expansion": {
        "cross products": 21,
        "polynomial features extraction": 21,
        "optimal weights": 21,
        "multiple linear regression": 21,
        "polynomal expansion function": 21,
        "random noise": 18,
        "noise level": 18,
        "noisy sine function": 18,
        "noise samples": 18,
        "functions": 17,
        "sine function": 14,
        "ridge regression": 14,
        "optimal plot": 14,
        "colored image": 12,
        "train set": 12,
        "fine tuning": 12,
        "parameter tuning": 12,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "width variable": 6,
        "lassocv": 5,
        "random forest": 2,
        "estimators": 2,
        "ensembles": 2,
        "polynomial expansion": 2,
        "random forests": 2,
        "polynomial feature extraction": 2
    },
    "tensorflow": {
        "tensorflow": 24,
        "attributes": 8,
        "gradient descent": 7,
        "word vector": 6,
        "word vectors": 5,
        "deep learning": 5,
        "tutorials": 5,
        "attribute values": 4,
        "train file": 4,
        "test file": 4,
        "test data": 4,
        "training examples": 4,
        "standardize function": 4,
        "neural network": 4,
        "stochastic gradient descent": 4,
        "vocab": 4,
        "word2idx": 4,
        "tflearn": 4,
        "test sets": 4,
        "validation": 4,
        "activation function": 4,
        "learning rate": 4,
        "cross entropy loss function": 4,
        "hidden layers": 3,
        "hyperparameters": 3,
        "batch size": 3,
        "true labels": 3,
        "trained model": 3,
        "input variable": 3,
        "mnist dataset": 3,
        "bias vectors": 3,
        "gradient descent training": 3,
        "softmax regression function": 3,
        "softmax implementation": 3,
        "negative log probability": 3,
        "softmax regression": 3,
        "classification function": 3,
        "cross entropy loss": 3,
        "input data pipeline": 2,
        "sampled data": 2,
        "particle detectors": 2,
        "higgs dataset": 2,
        "background": 2,
        "monte carlo simulations": 2,
        "kinematic properties": 2,
        "signal process": 2,
        "higgs bosons": 2,
        "local testing": 2,
        "edx": 2,
        "test datasets": 2,
        "network training": 2,
        "configuration file": 2,
        "debugging purposes": 2,
        "config file": 2,
        "yaml file": 2,
        "file": 2,
        "feature vectors": 2,
        "wikipedia feature scaling article": 2,
        "distribution mean": 2,
        "lower case characters": 2,
        "pandas library": 2,
        "word frequency": 2,
        "review data": 2,
        "frame": 2,
        "count value": 2,
        "dictionary comprehension": 2,
        "key error": 2,
        "vocab dictionary": 2,
        "word2idx dictionary": 2,
        "function": 2,
        "review data set": 2,
        "network performance": 2,
        "softmax activation function": 2,
        "learning rate loss": 2,
        "training method": 2,
        "network error": 2,
        "10000 element long vectors": 2,
        "connected layer": 2,
        "artificial neural networks": 2,
        "weighted inputs": 2,
        "tensors": 2,
        "pytorch": 2,
        "matrices": 2,
        "linear algebra operations": 2,
        "rgb color images": 2,
        "training example": 2,
        "x28": 2,
        "multiclass classification": 2,
        "softmax loss function": 2,
        "searchable command palette": 2,
        "weights": 1,
        "tf variables": 1,
        "biases": 1,
        "mini batch": 1,
        "tf graph": 1,
        "tf placeholders": 1,
        "helper function": 1,
        "bias dictionary": 1,
        "learnable parameters": 1,
        "bias matrices": 1,
        "network model": 1,
        "weights dictionary": 1,
        "training time": 1,
        "feedforward network model": 1,
        "output layer": 1,
        "sigmoid activation function": 1,
        "keras layer": 1,
        "neural network model": 1,
        "layer": 1,
        "max pool": 1,
        "keras sequential model": 1,
        "flatten layer": 1,
        "evaluation() function": 1,
        "activation model": 1,
        "metrics history": 1,
        "sequential model": 1,
        "loss functions": 1,
        "metrics": 1,
        "learning process": 1,
        "keras": 1,
        "fit() function": 1,
        "training loss": 1,
        "matplolib": 1,
        "standard scaling": 1,
        "standardize": 1,
        "scaler": 1,
        "scaling": 1,
        "scaled feature values": 1,
        "labels": 1,
        "n": 1,
        "scikit learn": 1,
        "testing sets": 1,
        "validation accuracy": 1,
        "hyperparameter adjustments": 1,
        "set": 1,
        "optimization": 1,
        "python object": 1,
        "matrix multiplications": 1,
        "traceback": 1,
        "matrix multiplication": 1,
        "size mismatch": 1,
        "runtimeerror": 1,
        "markdown": 1,
        "jupyter": 1,
        "colab": 1,
        "os x": 1,
        "tensorflow optimizer": 1,
        "tensor init": 1
    },
    "support vector machines": {
        "train set": 33,
        "cross products": 21,
        "polynomial features extraction": 21,
        "optimal weights": 21,
        "multiple linear regression": 21,
        "polynomal expansion function": 21,
        "random noise": 18,
        "noise level": 18,
        "colored image": 12,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "predictive models": 7,
        "learn": 7,
        "tutorial": 7,
        "scikit-learn": 7,
        "titanic survival dataset": 7,
        "sklearn library": 7,
        "categorical variables": 7,
        "exploratory data analysis": 7,
        "age": 7,
        "numerical variables": 7,
        "fine tuning": 6,
        "parameter tuning": 6,
        "width variable": 6,
        "lassocv": 5,
        "2d toy dataset": 2,
        "linearly separable dataset": 2,
        "covariance matrix": 2,
        "multivariate gaussian distribution": 2,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1,
        "optimization problem": 1,
        "maximum margin problem": 1,
        "quadratic programming problem": 1,
        "support vectors": 1,
        "quadratic function": 1,
        "svm": 1,
        "decision boundary": 1,
        "lagrange multipliers": 1,
        "inequality constraints": 1,
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "email": {
        "email": 10,
        "bayes theorem": 8,
        "diabetes": 8,
        "spam": 8,
        "immigration": 6,
        "filtering rate": 6,
        "beautifulsoup": 6,
        "spam mails": 6,
        "filter rate": 6,
        "spammy words": 6,
        "characterstics": 6,
        "html table": 6,
        "data parsing": 6,
        "web crawling": 6,
        "datahub": 6,
        "contour plot": 6,
        "testing sets": 5,
        "predction model": 5,
        "zero predictor": 5,
        "false negatives": 5,
        "cutoff probability": 5,
        "final classifier": 5,
        "cancer screenings": 5,
        "false positives": 5,
        "datapath": 4,
        "subject line": 4,
        "posteriors": 4,
        "naive bayes implementation": 4,
        "gary johnson": 4,
        "probabilities": 4,
        "libertarian party": 4,
        "jill stein": 4,
        "green party": 4,
        "freedom": 4,
        "base directory": 3,
        "integers": 3,
        "spam label array": 3,
        "scikit learn": 3,
        "spam arrays": 3,
        "ham label array": 3,
        "text file": 3,
        "memory requirements": 3,
        "numpy email arrays": 3,
        "term frequency": 2,
        "inverse document frequency": 2,
        "bag of words problem": 2,
        "countvectorizer()": 2,
        "bag of words processing": 2,
        "bayes theorem implementation": 2,
        "bayes formula": 2,
        "true negative rate": 2,
        "true positive rate": 2,
        "medical field": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "specificity": 2,
        "priors": 2,
        "tnr": 2,
        "sensitivity": 2,
        "final probabilities": 2,
        "test result": 2,
        "feature vectors": 2,
        "stein": 2,
        "posterior probabilities": 2,
        "sacramento kings": 2,
        "nba basketball team": 2,
        "spam detectors": 2,
        "search engine": 2,
        "naive bayes algorithm": 2,
        "random categorical variable": 2,
        "orical": 2,
        "mutually exclusive outcomes": 2,
        "binomial distribution": 2,
        "word counts": 2,
        "laplace smoothing": 2,
        "categorical random variable": 2,
        "multinomial distribution": 2,
        "occurrence counts": 2,
        "naive bayes implementations": 2,
        "multin": 2,
        "mult": 2,
        "bernoulli variable": 2,
        "nb": 2,
        "probability distribution": 2,
        "discrete data": 2,
        "text classification": 2,
        "outcome probabilities": 2,
        "bern": 2,
        "path parameter": 2,
        "ham": 2,
        "test sets": 2,
        "labels": 2,
        "spam classification": 2,
        "tfidfvectorizer": 2,
        "bigrams": 2,
        "linearsvc": 2,
        "default parameters": 2,
        "unigrams": 2,
        "stop words": 2
    },
    "predictors": {
        "ridgecv": 13,
        "regularized regression": 12,
        "3rd degree polynomial": 12,
        "linearregression object": 8,
        "modeling": 6,
        "linear models": 6,
        "data preparation": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "predictor variables": 6,
        "lasso regression": 6,
        "response variables": 6,
        "ridge regression": 6,
        "automatic regular": 6,
        "sklearn pipeline": 6,
        "sin function": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "fare predictor": 1,
        "passenger class": 1,
        "precision stats": 1,
        "predictors": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "probability distributions": {
        "probability distribution": 28,
        "cream cheese": 16,
        "joint probability": 12,
        "conditional probability": 12,
        "model parameters": 12,
        "bayes rule": 12,
        "continuous variables": 8,
        "discrete variables": 8,
        "marginal probability": 8,
        "probability distributions": 8,
        "probability": 8,
        "product rule": 8,
        "fully marginalized likelihood": 8,
        "gaussian likelihood function": 8,
        "gaussian distribution": 8,
        "log likelihood": 6,
        "coin tosses": 4,
        "outcome": 4,
        "integrals": 4,
        "conditional probabilities": 4,
        "breakfast sandwiches": 4,
        "bagels": 4,
        "temperature": 4,
        "rain probability distribution": 4,
        "marginalizing": 4,
        "weather prediction algorithm": 4,
        "humidity probability distribution": 4,
        "wind": 4,
        "pressure probability distribution": 4,
        "marginalization": 4,
        "bagel": 4,
        "bread": 4,
        "physics": 4,
        "statistics": 4,
        "conditionals": 4,
        "probability theory": 4,
        "posterior probability distribution": 4,
        "a posterior probability distribution": 4,
        "gaussian probability distribution": 4,
        "python lambda function": 4,
        "tutorial": 4,
        "nested models": 4,
        "model": 4,
        "posterior pdf": 4,
        "normalization": 4,
        "probabilistic graphical model": 4,
        "noise property": 4,
        "deterministic process": 4,
        "inference problem": 4,
        "straight line": 4,
        "mean model": 4,
        "likelihood": 4,
        "lambda function": 2,
        "2d distribution": 2,
        "contingency table": 1,
        "pivot": 1,
        "status": 1,
        "sum function": 1,
        "cancer test": 1,
        "population members": 1,
        "icon array": 1
    },
    "helper function": {
        "head function": 14,
        "numerical tests": 12,
        "granularity": 10,
        "attributes": 9,
        "zipfile": 9,
        "postal code": 8,
        "94602": 8,
        "zip file": 7,
        "csv formatted": 7,
        "data directory": 7,
        "businesses": 7,
        "zip codes": 7,
        "boolean expressions": 6,
        "pandas data frames": 6,
        "character encoding issues": 6,
        "utilities": 6,
        "sanity checks": 6,
        "data frames": 6,
        "data variables": 6,
        "datasets": 6,
        "bad data": 6,
        "businesses file": 6,
        "primary keys": 6,
        "helper function": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "gpa": 4,
        "prestige": 4,
        "businesses data frame": 4,
        "bus data frame": 4,
        "zip code": 4,
        "business table": 4,
        "variable postal code": 4,
        "zip code values": 4,
        "counts": 4,
        "fillna": 4,
        "extended zip codes": 4,
        "extended postal codes": 4,
        "iloc": 4,
        "missing zipcode values": 4,
        "internet": 4,
        "94545": 4,
        "94609": 4,
        "san francisco": 4,
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "longitude values": 3,
        "validzip variable": 3,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2,
        "inspection": 2,
        "inspection dataframe": 2,
        "correlation matrix": 2,
        "rdd": 1,
        "countries": 1,
        "periodicities": 1,
        "aggregation methods": 1,
        "indicators": 1,
        "wdidata": 1,
        "correlations": 1,
        "linear operations": 1,
        "graph lasso": 1,
        "numpy method": 1,
        "normalized data": 1,
        "diagonal pattern": 1,
        "timeseries": 1,
        "affinity propagation": 1,
        "similarity scores": 1,
        "correlation coefficients": 1
    },
    "seaborn pairplot": {
        "ridgecv": 13,
        "regularized regression": 12,
        "3rd degree polynomial": 12,
        "linearregression object": 8,
        "modeling": 6,
        "linear models": 6,
        "data preparation": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "predictor variables": 6,
        "lasso regression": 6,
        "response variables": 6,
        "ridge regression": 6,
        "automatic regular": 6,
        "sklearn pipeline": 6,
        "sin function": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "middle table": {
        "ridgecv": 13,
        "regularized regression": 12,
        "3rd degree polynomial": 12,
        "linearregression object": 8,
        "modeling": 6,
        "linear models": 6,
        "data preparation": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "predictor variables": 6,
        "lasso regression": 6,
        "response variables": 6,
        "ridge regression": 6,
        "automatic regular": 6,
        "sklearn pipeline": 6,
        "sin function": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "regression statistics": {
        "ridgecv": 13,
        "regularized regression": 12,
        "3rd degree polynomial": 12,
        "linearregression object": 8,
        "modeling": 6,
        "linear models": 6,
        "data preparation": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "predictor variables": 6,
        "lasso regression": 6,
        "response variables": 6,
        "ridge regression": 6,
        "automatic regular": 6,
        "sklearn pipeline": 6,
        "sin function": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "correlation coefficient": {
        "ridgecv": 13,
        "regularized regression": 12,
        "3rd degree polynomial": 12,
        "linearregression object": 8,
        "modeling": 6,
        "linear models": 6,
        "data preparation": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "predictor variables": 6,
        "lasso regression": 6,
        "response variables": 6,
        "ridge regression": 6,
        "automatic regular": 6,
        "sklearn pipeline": 6,
        "sin function": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "pca": {
        "pca": 38,
        "eigenvectors": 21,
        "principal components": 13,
        "covariance matrix": 12,
        "correlation matrix": 12,
        "iris data": 10,
        "residual noise": 10,
        "dimensionality reduction": 10,
        "eigendecomposition": 10,
        "data matrix x": 8,
        "second principal components": 6,
        "point cloud": 6,
        "succeding component": 6,
        "principal component analysis": 6,
        "2d vectors": 6,
        "linear coefficients": 6,
        "pca space": 6,
        "plotting function": 6,
        "eigenvalues": 6,
        "projection matrix": 5,
        "principal component": 4,
        "singular vector decomposition": 4,
        "labeled faces": 4,
        "lfw exercise": 4,
        "eigenfaces": 4,
        "eigendigits": 4,
        "facial recognition exercise": 4,
        "pca eigenvectors": 3,
        "orient": 3,
        "pca axes": 3,
        "pca components": 3,
        "computational efficiency": 3,
        "dimensionality reduction techniques": 2,
        "alternate pca": 2,
        "randomizedpca": 2,
        "handwritten digits": 2,
        "data standardization": 2,
        "ctors": 2,
        "eigen": 2,
        "petal width": 2,
        "uci machine learning repository": 2,
        "tutorial": 2,
        "petal length": 2,
        "sepal length": 2,
        "python library": 2,
        "uci repository": 2,
        "flower sample": 2,
        "flower classes": 2,
        "standard": 2,
        "components": 2,
        "mean vector": 2,
        "numpy cov function": 2,
        "ance matrix": 2,
        "normalized covariance matrix": 2,
        "finance": 2,
        "standardized data": 2,
        "eigenvalue pairs": 2,
        "standardizing": 2,
        "pca implementations": 2,
        "axes": 2,
        "lowest eigenvalues": 2,
        "eigenpairs": 2,
        "explained variance": 2,
        "information": 2,
        "first principal component": 2,
        "second principal component": 2,
        "concatenated top k eigenvectors": 2,
        "redundant": 1,
        "covariance": 1,
        "eigenvalue problem": 1,
        "standardize x": 1,
        "e": 1,
        "bar plot": 1
    },
    "handwritten digits": {
        "latent space": 24,
        "logvar": 18,
        "em algorithm": 17,
        "bernoulli mixture model": 14,
        "pytorch": 13,
        "vae": 11,
        "mixing coefficients": 10,
        "multivariate bernoulli distribution": 10,
        "variational lower bound": 10,
        "reconstruction": 9,
        "flattened mnist image": 9,
        "function binarize": 7,
        "binary images": 7,
        "mnist data": 7,
        "binarized image": 7,
        "input training images": 7,
        "return statement": 7,
        "reconstructed digits": 5,
        "handwriting styles": 5,
        "misclassifications": 5,
        "data labels": 5,
        "vector representation": 5,
        "expectation maximization": 5,
        "objective function": 5,
        "log bernoulli loss": 5,
        "negative log bernoulli loss": 5,
        "oulli loss": 5,
        "log": 5,
        "kl term": 5,
        "multivariate": 5,
        "hyperparameter search": 4,
        "latent variables": 4,
        "decision boundaries": 4,
        "derivatives": 3,
        "function reparameterize": 3,
        "sgd": 3,
        "stochastic variable": 3,
        "stochasticity": 3,
        "data matrix x": 2,
        "iris object": 2,
        "feature names": 2,
        "target data": 2,
        "flower class": 2,
        "knn": 2,
        "kneighborsclassifier": 2,
        "classification rate": 2,
        "predicted class": 2,
        "knn model": 2,
        "pandas manipulations": 2,
        "data format": 2,
        "forward": 2,
        "ened mnist image": 2,
        "forward pass": 2,
        "fl": 2,
        "mnist image": 2,
        "optimizer": 1,
        "adam": 1,
        "hyperparameters": 1,
        "test data": 1
    },
    "machine learning technique": {
        "cross products": 21,
        "polynomial features extraction": 21,
        "optimal weights": 21,
        "multiple linear regression": 21,
        "polynomal expansion function": 21,
        "random noise": 18,
        "noise level": 18,
        "noisy sine function": 18,
        "noise samples": 18,
        "functions": 17,
        "sine function": 14,
        "ridge regression": 14,
        "optimal plot": 14,
        "colored image": 12,
        "train set": 12,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "fine tuning": 6,
        "parameter tuning": 6,
        "width variable": 6,
        "lassocv": 5,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "taylor expansion": {
        "cross products": 21,
        "polynomial features extraction": 21,
        "optimal weights": 21,
        "multiple linear regression": 21,
        "polynomal expansion function": 21,
        "random noise": 18,
        "noise level": 18,
        "noisy sine function": 18,
        "noise samples": 18,
        "functions": 17,
        "sine function": 14,
        "ridge regression": 14,
        "optimal plot": 14,
        "colored image": 12,
        "train set": 12,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "fine tuning": 6,
        "parameter tuning": 6,
        "width variable": 6,
        "lassocv": 5,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "sql": {
        "chinook database": 18,
        "musclehub": 16,
        "chinookdatabase": 11,
        "genre table": 10,
        "sql database": 9,
        "codecademy library": 9,
        "frame": 9,
        "gym customers": 9,
        "sqlite database": 9,
        "uk": 8,
        "left join commands": 8,
        "email": 8,
        "pyplot": 7,
        "hypothesis tests": 7,
        "scipy": 7,
        "sql queries": 7,
        "music": 7,
        "sqlalchemy engine": 7,
        "sql select statement": 7,
        "limit": 7,
        "character classes": 6,
        "regexr": 6,
        "track table": 6,
        "sanity check": 5,
        "autopct": 5,
        "pie cart": 5,
        "pie chart": 5,
        "fitness": 5,
        "fitness test": 5,
        "github": 4,
        "portugal": 4,
        "mediatype table": 3,
        "population": 3,
        "foreign key constraints": 3,
        "sqlite3 library": 3,
        "literals": 2,
        "basic regular expression syntax": 2,
        "character class negation": 2,
        "solution breakdown": 2,
        "brackets": 2,
        "text snippet": 2,
        "shorthand character classes": 2,
        "anchor": 2,
        "character class": 2,
        "regex": 2,
        "customer id": 2,
        "invoice amount": 2,
        "memberships": 2,
        "significance test": 2,
        "bar chart": 2,
        "t4": 2,
        "t5": 2,
        "else statement": 2,
        "t6": 1,
        "sql query": 1,
        "unitprice": 1,
        "t7": 1,
        "j1": 1,
        "average track length": 1,
        "genre tables": 1,
        "genreid": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1,
        "sql alchemy library": 1,
        "schema": 1,
        "sql subqueries": 1,
        "table information": 1,
        "character name": 1,
        "lead actor name": 1,
        "movie character names": 1,
        "stella": 1,
        "sqlite function": 1,
        "strftime": 1,
        "invoicedate": 1,
        "support rep": 1,
        "table employee": 1
    },
    "libraries": {
        "hamlettext": 11,
        "iloc": 9,
        "keyword arguments": 7,
        "numpy module functions": 7,
        "broadcasting": 7,
        "random numbers": 6,
        "numpy functions": 6,
        "hamletwords": 6,
        "dependent variable": 6,
        "dfcars": 6,
        "listiness property": 6,
        "independent variables": 5,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "positional properties": 4,
        "ate": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "txt": 4,
        "listiness": 4,
        "tweet list": 4,
        "positive sentiment list": 4,
        "iterate": 3,
        "numpy array constructors": 3,
        "64 bit": 3,
        "floating point": 3,
        "random constructor": 3,
        "python lists": 3,
        "vector operations": 3,
        "readability": 3,
        "computer chips": 3,
        "lists": 3,
        "matrix multiplication": 3,
        "mean": 3,
        "datetime64": 3,
        "dependent variables": 3,
        "multicollinearity": 3,
        "linear relationship": 3,
        "linear regression model": 3,
        "average night light": 3,
        "mpi": 3,
        "dictionary keys": 3,
        "bar plot": 2,
        "one dimensional iteration": 2,
        "idiom": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "string method count": 2,
        "string method lower": 2,
        "internet": 2,
        "positive polarity words": 2,
        "word stems": 2,
        "web address": 2,
        "file name": 2,
        "current directory": 2,
        "quotation marks": 2,
        "url path": 2,
        "string object": 2,
        "windows computer": 2,
        "operating system": 2,
        "positive words": 2,
        "positive texts": 2,
        "positive counts": 2,
        "avgnightlight": 2,
        "population column number": 1,
        "exploratory data analysis": 1,
        "deceased passengers": 1,
        "sanity check": 1,
        "unique words": 1,
        "count method": 1,
        "dictionary comprehension": 1,
        "presidential election": 1,
        "measurement": 1,
        "caluclation": 1,
        "spirit consumption": 1,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "latex style formatting": {
        "ica": 17,
        "latent space": 10,
        "mixing coefficients": 10,
        "receiving node": 10,
        "marginalizing": 9,
        "learning algorithms": 8,
        "mixing matrix": 8,
        "information theory": 8,
        "binarized image": 7,
        "independent component analysis algorithm": 6,
        "source matrix": 6,
        "activation function": 6,
        "data matrix": 6,
        "elementwise non-linearity": 6,
        "source signal values": 6,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "marginals": 6,
        "joint distributions": 6,
        "function marginalize": 6,
        "covariant algorithm": 5,
        "handwriting styles": 5,
        "multivariate bernoulli distribution": 5,
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "sending": 5,
        "functional programming": 5,
        "1d numpy arrays": 5,
        "sawtooth": 4,
        "tensor representations": 4,
        "numpy broadcasting": 4,
        "kurtosis": 3,
        "priors": 2,
        "gaussian distribution": 2,
        "random wave": 2,
        "independent random variables": 2,
        "covariance matrices": 2,
        "gaussian noise source": 2,
        "block wave": 2,
        "sine wave": 2,
        "rotation": 2,
        "eigenvalue decomposition": 2,
        "sinewave": 2,
        "bias": 2,
        "scale changes": 2,
        "demixing matrices": 2,
        "ize": 1,
        "normalizing constant": 1,
        "gaussian function": 1,
        "triangle histogram": 1,
        "square wave": 1,
        "xw plot": 1,
        "circular pattern": 1,
        "learning algorithm": 1,
        "matrix inversions": 1,
        "symmetric": 1,
        "source signals": 1,
        "central limit theorem": 1,
        "signal": 1,
        "gaussian distributions": 1,
        "signals sawtooth": 1,
        "historgrams": 1,
        "triangle wave": 1,
        "gray boxes": 1,
        "boxes": 1,
        "diagonal matrix": 1,
        "alogrithm": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "measurement": 1,
        "gaussian noise": 1,
        "covariance": 1,
        "consistent algorithm": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "hyperparameters": 1,
        "gamma": 1,
        "ma": 1,
        "i": 1,
        "whitening process": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "array datatypes": {
        "mathematical functions": 24,
        "numpy module": 16,
        "dataframe structures": 16,
        "null vector": 15,
        "broadcasting": 12,
        "random values": 12,
        "numeric datatypes": 8,
        "operator overloads": 8,
        "elementwise multiplication": 8,
        "array objects": 8,
        "matrix multiplication": 8,
        "matlab": 8,
        "inner products": 8,
        "dot function": 8,
        "arithmetic operations": 8,
        "elementwise maximum": 8,
        "column names": 8,
        "values method": 8,
        "null matrix": 6,
        "3 x 3 identity matrix": 6,
        "maximum values": 6,
        "credit dataset": 5,
        "non-zero elements": 4,
        "random matrices": 4,
        "random vector": 4,
        "random matrix": 4,
        "data manipulation": 4,
        "data structures": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "selection": 4,
        "column headers": 4,
        "slicing": 4,
        "filtering": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "dataset": 3,
        "numpy method": 2,
        "statistics table": 2,
        "attribute creditamount": 2,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "black coloured markers": 1,
        "font size": 1,
        "age": 1,
        "attributes duration": 1
    },
    "numpy module": {
        "enumerate": 12,
        "hamlettext": 11,
        "listy containers": 10,
        "dictionaries": 9,
        "large data sets": 7,
        "calculator": 7,
        "integer division": 7,
        "python data types": 7,
        "variables": 7,
        "floating point values": 7,
        "fluent python": 7,
        "python objects": 7,
        "comparison operations": 7,
        "arithmetic": 7,
        "len function": 6,
        "slicing": 6,
        "list slicing operations": 6,
        "iteration": 6,
        "iterator": 6,
        "list comprehension syntax": 6,
        "for loops": 6,
        "conditional if statements": 6,
        "hamletwords": 6,
        "vectorised functions": 6,
        "execution time": 6,
        "iterators": 5,
        "lists": 5,
        "while loop": 5,
        "lavel astring": 5,
        "string operations": 5,
        "jane beth doe": 5,
        "last names": 5,
        "dictionary comprehension": 5,
        "course names": 4,
        "zip": 4,
        "constructor function dict": 4,
        "'s sequence protocol": 4,
        "umpy": 4,
        "specfic task": 4,
        "method": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "keyword arguments": 4,
        "positional properties": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "string method count": 2,
        "string method lower": 2,
        "implementation": 2,
        "loops": 2,
        "execution speed": 2,
        "linear regression implementation": 2,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1
    },
    "asets": {
        "ridgecv": 12,
        "linearregression object": 8,
        "trailing whitespace problem": 6,
        "map function": 6,
        "series objects": 6,
        "modeling": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "predictor variables": 6,
        "regularized regression": 6,
        "lasso regression": 6,
        "response variables": 6,
        "ridge regression": 6,
        "automatic regular": 6,
        "3rd degree polynomial": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1
    },
    "variable preprocessing": {
        "ridgecv": 12,
        "linearregression object": 8,
        "trailing whitespace problem": 6,
        "map function": 6,
        "series objects": 6,
        "modeling": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "predictor variables": 6,
        "regularized regression": 6,
        "lasso regression": 6,
        "response variables": 6,
        "ridge regression": 6,
        "automatic regular": 6,
        "3rd degree polynomial": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1
    },
    "functional relationships": {
        "ridgecv": 12,
        "linearregression object": 8,
        "trailing whitespace problem": 6,
        "map function": 6,
        "series objects": 6,
        "modeling": 6,
        "model performance": 6,
        "nom": 6,
        "ression": 6,
        "asso regression": 6,
        "cost function": 6,
        "idge regression": 6,
        "predictor variables": 6,
        "regularized regression": 6,
        "lasso regression": 6,
        "response variables": 6,
        "ridge regression": 6,
        "automatic regular": 6,
        "3rd degree polynomial": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1
    },
    "activation function": {
        "ica": 31,
        "integral calculator": 12,
        "numerical approximation": 12,
        "exact expression": 12,
        "gaussian random variable": 12,
        "peakedness": 12,
        "wolfram alpha": 12,
        "online service": 12,
        "covariant algorithm": 10,
        "kurtosis": 9,
        "whitened measurements": 6,
        "covariance matrix": 6,
        "sawtooth": 6,
        "demixing matrices": 6,
        "priors": 5,
        "covariance matrices": 4,
        "eigenvalue decomposition": 4,
        "sinewave": 4,
        "bias": 4,
        "scale changes": 4,
        "symmetric": 3,
        "random wave": 3,
        "generated signals": 3,
        "recovered audio sources": 3,
        "normalization constant": 3,
        "sound clip": 3,
        "ambient sounds": 3,
        "gamma": 3,
        "ma": 3,
        "gaussian distributed": 3,
        "audio signals": 3,
        "ize": 2,
        "normalizing constant": 2,
        "gaussian function": 2,
        "triangle histogram": 2,
        "square wave": 2,
        "xw plot": 2,
        "circular pattern": 2,
        "learning algorithm": 2,
        "matrix inversions": 2,
        "gaussian distribution": 2,
        "independent random variables": 2,
        "signals sawtooth": 2,
        "historgrams": 2,
        "triangle wave": 2,
        "gray boxes": 2,
        "boxes": 2,
        "diagonal matrix": 2,
        "alogrithm": 2,
        "gaussian noise source": 2,
        "learning algorithms": 2,
        "block wave": 2,
        "mixing matrix": 2,
        "sine wave": 2,
        "information theory": 2,
        "rotation": 2,
        "covariance": 2,
        "consistent algorithm": 2,
        "matrix multiplications": 2,
        "traceback": 2,
        "matrix multiplication": 2,
        "size mismatch": 2,
        "runtimeerror": 2,
        "whitening process": 2,
        "momentum term": 2,
        "l2 regularization term": 2,
        "l2 regularization": 2,
        "regularizatino constant": 2,
        "batch size": 2,
        "source signals": 1,
        "central limit theorem": 1,
        "signal": 1,
        "gaussian distributions": 1,
        "measurement": 1,
        "gaussian noise": 1,
        "i": 1
    },
    "array math": {
        "mathematical functions": 24,
        "numpy module": 16,
        "dataframe structures": 16,
        "null vector": 15,
        "broadcasting": 12,
        "random values": 12,
        "operator overloads": 8,
        "elementwise multiplication": 8,
        "array objects": 8,
        "matrix multiplication": 8,
        "matlab": 8,
        "inner products": 8,
        "dot function": 8,
        "arithmetic operations": 8,
        "elementwise maximum": 8,
        "column names": 8,
        "values method": 8,
        "null matrix": 6,
        "3 x 3 identity matrix": 6,
        "maximum values": 6,
        "credit dataset": 5,
        "non-zero elements": 4,
        "random matrices": 4,
        "random vector": 4,
        "random matrix": 4,
        "data manipulation": 4,
        "data structures": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "selection": 4,
        "column headers": 4,
        "slicing": 4,
        "filtering": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "dataset": 3,
        "numpy method": 2,
        "statistics table": 2,
        "attribute creditamount": 2,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "black coloured markers": 1,
        "font size": 1,
        "age": 1,
        "attributes duration": 1
    },
    "google collaboratory": {
        "fake010": 16,
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "parallel operations": 4,
        "first light curve file": 4,
        "filters": 4,
        "many": 4,
        "plotting method": 4,
        "light curve files": 4,
        "multiband light curve": 4,
        "image differencing": 4,
        "statistical distributions": 4,
        "brightness measurements": 4,
        "negative flux": 4,
        "lsst": 4,
        "type ia supernova": 4,
        "transient": 4,
        "secondary peaks": 4,
        "secondary maxima": 4,
        "multiband light curves": 4,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "expectation maximization": {
        "latent space": 24,
        "logvar": 23,
        "em algorithm": 17,
        "bernoulli mixture model": 14,
        "pytorch": 13,
        "vae": 11,
        "mixing coefficients": 10,
        "multivariate bernoulli distribution": 10,
        "variational lower bound": 10,
        "multivariate": 10,
        "reconstruction": 9,
        "flattened mnist image": 9,
        "function binarize": 7,
        "binary images": 7,
        "mnist data": 7,
        "binarized image": 7,
        "input training images": 7,
        "return statement": 7,
        "reconstructed digits": 5,
        "handwriting styles": 5,
        "misclassifications": 5,
        "data labels": 5,
        "vector representation": 5,
        "expectation maximization": 5,
        "objective function": 5,
        "log bernoulli loss": 5,
        "negative log bernoulli loss": 5,
        "oulli loss": 5,
        "log": 5,
        "kl term": 5,
        "hyperparameter search": 4,
        "latent variables": 4,
        "derivatives": 3,
        "function reparameterize": 3,
        "sgd": 3,
        "stochastic variable": 3,
        "stochasticity": 3,
        "forward": 2,
        "ened mnist image": 2,
        "forward pass": 2,
        "fl": 2,
        "mnist image": 2,
        "hyperparameters": 2,
        "optimizer": 1,
        "adam": 1
    },
    "cost function": {
        "error functions": 15,
        "error function": 14,
        "predicted class": 10,
        "sigmoid function": 9,
        "linearregression object": 8,
        "3rd degree polynomial": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ridgecv": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "lqr": 5,
        "gradient descent": 5,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "total cost function": 4,
        "last function approximation": 4,
        "learning rate": 4,
        "learning curve": 4,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "gains matrix": 2,
        "algebraic riccati equation solution": 2,
        "algebraic ricatti equation": 2,
        "qr": 2,
        "linear algebra operations": 2,
        "api": 2,
        "algebraic riccati equation": 2,
        "feedback control law": 2,
        "quadratic cost function": 2,
        "unstable equilibrium state vector": 2,
        "control system": 2,
        "cost function": 2,
        "r cost matrices": 2,
        "lqr solver": 2,
        "q": 2,
        "score()": 2,
        "regularization": 2,
        "predict()": 2,
        "correct guesses": 2,
        "guessed classes": 2,
        "predicted exam results": 2,
        "linearization": 1,
        "pend": 1,
        "small": 1,
        "angular speed": 1,
        "goal state": 1,
        "fixed goal state": 1,
        "initial values": 1,
        "nonlinear system": 1,
        "fixed end goal state": 1,
        "linearregression model": 1,
        "data matrix": 1
    },
    "light curve data": {
        "fake010": 16,
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "first light curve file": 4,
        "filters": 4,
        "many": 4,
        "plotting method": 4,
        "light curve files": 4,
        "multiband light curve": 4,
        "image differencing": 4,
        "statistical distributions": 4,
        "brightness measurements": 4,
        "negative flux": 4,
        "lsst": 4,
        "type ia supernova": 4,
        "transient": 4,
        "secondary peaks": 4,
        "secondary maxima": 4,
        "multiband light curves": 4,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "real multiband data": {
        "fake010": 16,
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "first light curve file": 4,
        "filters": 4,
        "many": 4,
        "plotting method": 4,
        "light curve files": 4,
        "multiband light curve": 4,
        "image differencing": 4,
        "statistical distributions": 4,
        "brightness measurements": 4,
        "negative flux": 4,
        "lsst": 4,
        "type ia supernova": 4,
        "transient": 4,
        "secondary peaks": 4,
        "secondary maxima": 4,
        "multiband light curves": 4,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "running index": {
        "fake010": 16,
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "first light curve file": 4,
        "filters": 4,
        "many": 4,
        "plotting method": 4,
        "light curve files": 4,
        "multiband light curve": 4,
        "image differencing": 4,
        "statistical distributions": 4,
        "brightness measurements": 4,
        "negative flux": 4,
        "lsst": 4,
        "type ia supernova": 4,
        "transient": 4,
        "secondary peaks": 4,
        "secondary maxima": 4,
        "multiband light curves": 4,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "full light curves": {
        "fake010": 16,
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "first light curve file": 4,
        "filters": 4,
        "many": 4,
        "plotting method": 4,
        "light curve files": 4,
        "multiband light curve": 4,
        "image differencing": 4,
        "statistical distributions": 4,
        "brightness measurements": 4,
        "negative flux": 4,
        "lsst": 4,
        "type ia supernova": 4,
        "transient": 4,
        "secondary peaks": 4,
        "secondary maxima": 4,
        "multiband light curves": 4,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "fakex": {
        "fake010": 16,
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "first light curve file": 4,
        "filters": 4,
        "many": 4,
        "plotting method": 4,
        "light curve files": 4,
        "multiband light curve": 4,
        "image differencing": 4,
        "statistical distributions": 4,
        "brightness measurements": 4,
        "negative flux": 4,
        "lsst": 4,
        "type ia supernova": 4,
        "transient": 4,
        "secondary peaks": 4,
        "secondary maxima": 4,
        "multiband light curves": 4,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "data project": {
        "google finance": 24,
        "pandas datareader": 24,
        "morgan stanley": 17,
        "bank of america": 16,
        "banks": 12,
        "symbol": 12,
        "goldman sachs": 12,
        "jpmorgan chase": 12,
        "tick": 12,
        "wells fargo": 12,
        "stock information": 12,
        "bank": 9,
        "ticker symbols": 8,
        "alphabetical": 8,
        "distplot": 8,
        "single data frame": 7,
        "tickers list": 7,
        "close price": 7,
        "column name levels": 6,
        "returns": 6,
        "empty": 6,
        "bank stock ticker": 6,
        "returns column": 6,
        "close column": 6,
        "pairplot": 6,
        "returns dataframe": 6,
        "single day returns": 6,
        "worst": 6,
        "ly": 3,
        "visualization libraries": 3,
        "cufflinks": 3,
        "moving averages": 2,
        "heatmap": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "bollinger band plot": 1
    },
    "bank stocks": {
        "google finance": 24,
        "pandas datareader": 24,
        "morgan stanley": 17,
        "bank of america": 16,
        "banks": 12,
        "symbol": 12,
        "goldman sachs": 12,
        "jpmorgan chase": 12,
        "tick": 12,
        "wells fargo": 12,
        "stock information": 12,
        "bank": 9,
        "ticker symbols": 8,
        "alphabetical": 8,
        "distplot": 8,
        "single data frame": 7,
        "tickers list": 7,
        "close price": 7,
        "column name levels": 6,
        "returns": 6,
        "empty": 6,
        "bank stock ticker": 6,
        "returns column": 6,
        "close column": 6,
        "pairplot": 6,
        "returns dataframe": 6,
        "single day returns": 6,
        "worst": 6,
        "ly": 3,
        "visualization libraries": 3,
        "cufflinks": 3,
        "moving averages": 2,
        "heatmap": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "bollinger band plot": 1
    },
    "financial crisis": {
        "google finance": 24,
        "pandas datareader": 24,
        "morgan stanley": 17,
        "bank of america": 16,
        "banks": 12,
        "symbol": 12,
        "goldman sachs": 12,
        "jpmorgan chase": 12,
        "tick": 12,
        "wells fargo": 12,
        "stock information": 12,
        "bank": 9,
        "ticker symbols": 8,
        "alphabetical": 8,
        "distplot": 8,
        "single data frame": 7,
        "tickers list": 7,
        "close price": 7,
        "column name levels": 6,
        "returns": 6,
        "empty": 6,
        "bank stock ticker": 6,
        "returns column": 6,
        "close column": 6,
        "pairplot": 6,
        "returns dataframe": 6,
        "single day returns": 6,
        "worst": 6,
        "ly": 3,
        "visualization libraries": 3,
        "cufflinks": 3,
        "moving averages": 2,
        "heatmap": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "bollinger band plot": 1
    },
    "financial analysis": {
        "google finance": 24,
        "pandas datareader": 24,
        "morgan stanley": 17,
        "bank of america": 16,
        "banks": 12,
        "symbol": 12,
        "goldman sachs": 12,
        "jpmorgan chase": 12,
        "tick": 12,
        "wells fargo": 12,
        "stock information": 12,
        "bank": 9,
        "ticker symbols": 8,
        "alphabetical": 8,
        "distplot": 8,
        "single data frame": 7,
        "tickers list": 7,
        "close price": 7,
        "column name levels": 6,
        "returns": 6,
        "empty": 6,
        "bank stock ticker": 6,
        "returns column": 6,
        "close column": 6,
        "pairplot": 6,
        "returns dataframe": 6,
        "single day returns": 6,
        "worst": 6,
        "ly": 3,
        "visualization libraries": 3,
        "cufflinks": 3,
        "moving averages": 2,
        "heatmap": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "bollinger band plot": 1
    },
    "finance data project": {
        "google finance": 24,
        "pandas datareader": 24,
        "morgan stanley": 17,
        "bank of america": 16,
        "banks": 12,
        "symbol": 12,
        "goldman sachs": 12,
        "jpmorgan chase": 12,
        "tick": 12,
        "wells fargo": 12,
        "stock information": 12,
        "bank": 9,
        "ticker symbols": 8,
        "alphabetical": 8,
        "distplot": 8,
        "single data frame": 7,
        "tickers list": 7,
        "close price": 7,
        "column name levels": 6,
        "returns": 6,
        "empty": 6,
        "bank stock ticker": 6,
        "returns column": 6,
        "close column": 6,
        "pairplot": 6,
        "returns dataframe": 6,
        "single day returns": 6,
        "worst": 6,
        "ly": 3,
        "visualization libraries": 3,
        "cufflinks": 3,
        "moving averages": 2,
        "heatmap": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "bollinger band plot": 1
    },
    "financial advice": {
        "google finance": 24,
        "pandas datareader": 24,
        "morgan stanley": 17,
        "bank of america": 16,
        "banks": 12,
        "symbol": 12,
        "goldman sachs": 12,
        "jpmorgan chase": 12,
        "tick": 12,
        "wells fargo": 12,
        "stock information": 12,
        "bank": 9,
        "ticker symbols": 8,
        "alphabetical": 8,
        "distplot": 8,
        "single data frame": 7,
        "tickers list": 7,
        "close price": 7,
        "column name levels": 6,
        "returns": 6,
        "empty": 6,
        "bank stock ticker": 6,
        "returns column": 6,
        "close column": 6,
        "pairplot": 6,
        "returns dataframe": 6,
        "single day returns": 6,
        "worst": 6,
        "ly": 3,
        "visualization libraries": 3,
        "cufflinks": 3,
        "moving averages": 2,
        "heatmap": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "bollinger band plot": 1
    },
    "polynomial function": {
        "cross products": 18,
        "polynomial features extraction": 18,
        "optimal weights": 18,
        "multiple linear regression": 18,
        "polynomal expansion function": 18,
        "random noise": 17,
        "noise level": 17,
        "noisy sine function": 17,
        "noise samples": 17,
        "functions": 17,
        "sine function": 14,
        "ridge regression": 14,
        "optimal plot": 14,
        "colored image": 12,
        "train set": 12,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "fine tuning": 6,
        "parameter tuning": 6,
        "width variable": 6,
        "lassocv": 5,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "math class": {
        "cross products": 18,
        "polynomial features extraction": 18,
        "optimal weights": 18,
        "multiple linear regression": 18,
        "polynomal expansion function": 18,
        "random noise": 17,
        "noise level": 17,
        "noisy sine function": 17,
        "noise samples": 17,
        "functions": 17,
        "sine function": 14,
        "ridge regression": 14,
        "optimal plot": 14,
        "colored image": 12,
        "train set": 12,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "fine tuning": 6,
        "parameter tuning": 6,
        "width variable": 6,
        "lassocv": 5,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "handwritten": {
        "latent space": 24,
        "logvar": 18,
        "em algorithm": 17,
        "bernoulli mixture model": 14,
        "pytorch": 13,
        "vae": 11,
        "mixing coefficients": 10,
        "multivariate bernoulli distribution": 10,
        "variational lower bound": 10,
        "reconstruction": 9,
        "flattened mnist image": 9,
        "function binarize": 7,
        "binary images": 7,
        "mnist data": 7,
        "binarized image": 7,
        "input training images": 7,
        "return statement": 7,
        "reconstructed digits": 5,
        "handwriting styles": 5,
        "misclassifications": 5,
        "data labels": 5,
        "vector representation": 5,
        "expectation maximization": 5,
        "objective function": 5,
        "log bernoulli loss": 5,
        "negative log bernoulli loss": 5,
        "oulli loss": 5,
        "log": 5,
        "kl term": 5,
        "multivariate": 5,
        "hyperparameter search": 4,
        "latent variables": 4,
        "derivatives": 3,
        "function reparameterize": 3,
        "sgd": 3,
        "stochastic variable": 3,
        "stochasticity": 3,
        "forward": 2,
        "ened mnist image": 2,
        "forward pass": 2,
        "fl": 2,
        "mnist image": 2,
        "permutation": 1,
        "adjusted rand index": 1,
        "rand index": 1,
        "ari score": 1,
        "random labeling": 1,
        "true clusterings": 1,
        "optimizer": 1,
        "adam": 1,
        "hyperparameters": 1
    },
    "conjugate priors": {
        "bayesian analysis": 30,
        "beta function": 24,
        "counts": 20,
        "beta distribution": 12,
        "computational bayesian exercise": 12,
        "scaling term": 12,
        "math library": 12,
        "probability model": 12,
        "dirchilet distribution": 12,
        "binomial model": 12,
        "election": 12,
        "case study": 12,
        "grand old party": 12,
        "election88": 12,
        "age variable": 10,
        "binomial distribution": 8,
        "age": 8,
        "polling data": 8,
        "poisson distributed events": 6,
        "waiting time": 6,
        "lecture finger": 6,
        "nlp": 6,
        "bush support": 6,
        "groupby method": 6,
        "polling": 2,
        "electoral data": 2,
        "bayesian computation": 2,
        "closed form equation": 2,
        "bayesian formula": 2,
        "probability": 2,
        "gamma function": 2,
        "gamma funciton": 2,
        "gammafunction": 2
    },
    "programming language": {
        "jupyter": 14,
        "recursion": 12,
        "ellipsis": 9,
        "double100": 8,
        "integers": 8,
        "docs": 7,
        "lambdas": 7,
        "anonymous functions": 7,
        "color channels": 7,
        "numerical differentiation": 6,
        "coding practice": 6,
        "mathematical expressions": 5,
        "rocket icon": 5,
        "loops": 5,
        "code icon": 5,
        "cod": 4,
        "datadata": 4,
        "image": 4,
        "numpy library": 4,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "symbolic math": 4,
        "function median": 3,
        "median element": 3,
        "numpy data type": 3,
        "math operations": 3,
        "ys": 3,
        "sin": 3,
        "linspace function": 3,
        "np": 3,
        "xs": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "derivative": 3,
        "human eye": 3,
        "gaussian blurring function": 3,
        "integer division": 3,
        "multidimensional array": 2,
        "matrices": 2,
        "column labels": 2,
        "50x50 array": 2,
        "indexing": 2,
        "x": 2,
        "file1": 2,
        "colors": 2,
        "python pic": 2,
        "partial derivative": 2,
        "berkeley bowl": 2,
        "cantaloupes": 2,
        "integer addition": 2,
        "integer subtraction": 2,
        "subtraction": 2,
        "integer multiplication": 2,
        "multiplication": 2,
        "mathematical operations": 2,
        "graph cycles": 2,
        "lambda expression": 2,
        "ellipses": 2,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "stackoverflow": 1,
        "stack overflow": 1,
        "python list": 1,
        "pixel triplets": 1,
        "image processing": 1,
        "image1": 1,
        "string method split": 1,
        "color intensity": 1,
        "text file": 1,
        "expanded image": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1,
        "summer images": 1,
        "vector dot products": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "fruit prices": 1,
        "final costs": 1,
        "fruit baskets": 1,
        "fractional component": 1,
        "code cell": 1,
        "integer addition operations": 1,
        "integer subtraction operations": 1,
        "integer multiplication operations": 1,
        "integer division operations": 1,
        "integer operations": 1,
        "fractions": 1,
        "decimals": 1,
        "non-integer numbers": 1,
        "division": 1,
        "floating point numbers": 1
    },
    "waveform data": {
        "instrument response": 15,
        "international standard exchange format": 12,
        "station metadata": 12,
        "event metadata": 11,
        "instrument correction": 11,
        "obspy documentation": 11,
        "range": 10,
        "depth range": 10,
        "magnitude range": 10,
        "matching channels": 10,
        "matching stations": 10,
        "waveform requests": 10,
        "instrument response information": 10,
        "narrow angular distance": 8,
        "search criteria": 8,
        "trace objects": 6,
        "ainformation": 6,
        "nested obspy inventory class": 6,
        "large datasets": 6,
        "internal repeated webservice requests": 6,
        "local files": 5,
        "xml": 4,
        "fdsn web services": 3,
        "seismological data centers": 3,
        "protocols": 3,
        "nested obspy event class structure": 3,
        "event objects": 3,
        "catalog object": 3,
        "station objects": 3,
        "network objects": 3,
        "channel objects": 3,
        "fdsn stationxml": 3,
        "nested obspy inventory": 3,
        "inventory object": 3,
        "filetype": 3,
        "waveform data": 3,
        "array analysis": 3,
        "estimate travel times": 3,
        "seismic phases": 3,
        "cross correlation routines": 3,
        "event detection": 3,
        "plot ray paths": 3,
        "manipulation filtering": 3,
        "utcdatetime": 2,
        "timestamps": 2,
        "pling": 2,
        "command line utilities": 2,
        "wave": 2,
        "vertical 1 hz stream": 2,
        "stationxml": 2,
        "fdsn server": 2,
        "wildcard": 2,
        "channel code": 2,
        "stationxml files": 1,
        "official schema": 1,
        "channel codes": 1,
        "seismometer time series": 1,
        "digitizer": 1,
        "amplitude": 1,
        "phase response": 1,
        "epicentral range": 1,
        "instrument corrected waveforms": 1,
        "interactive ipython help": 1,
        "ipython tab completion": 1,
        "ampling": 1,
        "inventory": 1
    },
    "data management": {
        "fake010": 16,
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "web browser": 4,
        "parallel operations": 4,
        "first light curve file": 4,
        "filters": 4,
        "many": 4,
        "plotting method": 4,
        "light curve files": 4,
        "multiband light curve": 4,
        "image differencing": 4,
        "statistical distributions": 4,
        "brightness measurements": 4,
        "negative flux": 4,
        "lsst": 4,
        "type ia supernova": 4,
        "transient": 4,
        "secondary peaks": 4,
        "secondary maxima": 4,
        "multiband light curves": 4,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "cursor object": 4,
        "database connection object": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "discovery": {
        "fake010": 16,
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "web browser": 4,
        "parallel operations": 4,
        "first light curve file": 4,
        "filters": 4,
        "many": 4,
        "plotting method": 4,
        "light curve files": 4,
        "multiband light curve": 4,
        "image differencing": 4,
        "statistical distributions": 4,
        "brightness measurements": 4,
        "negative flux": 4,
        "lsst": 4,
        "type ia supernova": 4,
        "transient": 4,
        "secondary peaks": 4,
        "secondary maxima": 4,
        "multiband light curves": 4,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "cursor object": 4,
        "database connection object": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "docstrings": {
        "fake010": 16,
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "parallel operations": 4,
        "first light curve file": 4,
        "filters": 4,
        "many": 4,
        "plotting method": 4,
        "light curve files": 4,
        "multiband light curve": 4,
        "image differencing": 4,
        "statistical distributions": 4,
        "brightness measurements": 4,
        "negative flux": 4,
        "lsst": 4,
        "type ia supernova": 4,
        "transient": 4,
        "secondary peaks": 4,
        "secondary maxima": 4,
        "multiband light curves": 4,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "cursor object": 4,
        "database connection object": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "metropolitans": 2,
        "medoids": 1,
        "database table": 1,
        "testfeats table": 1
    },
    "random variables": {
        "sigmoid function": 19,
        "error functions": 15,
        "error function": 12,
        "study times": 10,
        "exam output variable": 10,
        "random number": 10,
        "uniform distribution": 10,
        "decision boundary": 10,
        "pdf": 10,
        "predicted class": 10,
        "middle aged men": 9,
        "modelling function": 8,
        "logistic function": 8,
        "chinups": 7,
        "eigenvectors": 6,
        "pca": 6,
        "density estimation": 6,
        "gradient descent": 5,
        "tophat kernel": 4,
        "second principal components": 3,
        "point cloud": 3,
        "succeding component": 3,
        "residual noise": 3,
        "dimensionality reduction": 3,
        "principal component analysis": 3,
        "principal components": 3,
        "2d vectors": 3,
        "linear coefficients": 3,
        "pca space": 3,
        "iris data": 3,
        "histogram plots": 3,
        "waist size": 2,
        "pulse": 2,
        "weight": 2,
        "situps": 2,
        "jumps": 2,
        "linnerud data set": 2,
        "default settings": 2,
        "bin centers": 2,
        "continuous distribution": 2,
        "bin width": 2,
        "variable width bins": 2,
        "bin edges": 2,
        "bin choices": 2,
        "rug plot": 2,
        "chinup measurements": 2,
        "transparency": 2,
        "bin grouping": 2,
        "user choices": 2,
        "bin centering": 2,
        "univariate data": 2,
        "bin": 2,
        "output histogram": 2,
        "ering": 2,
        "epanechnikov": 2,
        "kernel density estimation": 2,
        "minimal mean square error": 2,
        "inverted parabola": 2,
        "discrete data": 2,
        "normalized kernel function": 2,
        "plotting function": 2,
        "data matrix x": 2,
        "resholding": 2,
        "total cost function": 2,
        "last function approximation": 2,
        "learning rate": 2,
        "learning curve": 2,
        "continuous data": 1,
        "bandwidth selection": 1,
        "epanechnikov kernel": 1,
        "regularization": 1,
        "predict()": 1,
        "correct guesses": 1,
        "guessed classes": 1,
        "predicted exam results": 1
    },
    "linear algebra": {
        "softplus function": 15,
        "vectors": 12,
        "matrices": 12,
        "matrix": 11,
        "orthonormal basis": 10,
        "2d array": 8,
        "dot product": 8,
        "uppercase": 7,
        "helper function": 6,
        "vector print": 6,
        "multiplication": 6,
        "2d vectors": 6,
        "unit vectors": 6,
        "standard basis": 6,
        "cosine": 4,
        "matrices multiplication": 4,
        "special matrices": 4,
        "linear algebra": 4,
        "2d vector": 4,
        "3d vector": 4,
        "python list": 4,
        "word dimension": 4,
        "array dimension": 4,
        "vector dimension": 4,
        "1d array": 4,
        "arrows": 4,
        "normality": 4,
        "orthogonality": 4,
        "\\ld": 4,
        "basis vectors": 4,
        "elementary computation": 3,
        "module utils": 3,
        "input vector": 3,
        "high precision float64": 3,
        "input": 3,
        "rounding": 3,
        "inner python loop": 3,
        "partial derivative": 2,
        "berkeley bowl": 2,
        "cantaloupes": 2,
        "lambdas": 2,
        "anonymous functions": 2,
        "graph cycles": 2,
        "lambda expression": 2,
        "ellipses": 2,
        "recursion": 2,
        "finite dimensional euclidean space": 2,
        "vector notation": 2,
        "numpy library": 2,
        "one dimensional array": 2,
        "inverted": 2,
        "scalar": 2,
        "1d arrays": 2,
        "mathematical notation": 2,
        "inner product": 2,
        "norm": 2,
        "unit vector": 2,
        "arbitrary vector": 2,
        "orthogonal vectors": 2,
        "coordinate system": 2,
        "vector": 2,
        "ots": 2,
        "reconstruction": 2,
        "partition function": 2,
        "parameter vectors": 2,
        "scaling": 2,
        "exercise sheet": 1,
        "python program": 1,
        "united states": 1,
        "canada": 1,
        "matrix multiplication": 1,
        "linear algebra knowledge": 1,
        "numpy matrices": 1,
        "vector dot products": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "fruit prices": 1,
        "final costs": 1,
        "fruit baskets": 1,
        "covariance": 1,
        "eigenvalue problem": 1,
        "double100": 1,
        "integers": 1,
        "probability distribution": 1,
        "discrete probability distribution": 1,
        "exponential function": 1,
        "logarithm": 1,
        "list itertools": 1,
        "binary vectors": 1
    },
    "object attributes": {
        "fake010": 16,
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "parallel operations": 4,
        "first light curve file": 4,
        "filters": 4,
        "many": 4,
        "plotting method": 4,
        "light curve files": 4,
        "multiband light curve": 4,
        "image differencing": 4,
        "statistical distributions": 4,
        "brightness measurements": 4,
        "negative flux": 4,
        "lsst": 4,
        "type ia supernova": 4,
        "transient": 4,
        "secondary peaks": 4,
        "secondary maxima": 4,
        "multiband light curves": 4,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "cursor object": 4,
        "database connection object": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "brokers": {
        "fake010": 16,
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "parallel operations": 4,
        "first light curve file": 4,
        "filters": 4,
        "many": 4,
        "plotting method": 4,
        "light curve files": 4,
        "multiband light curve": 4,
        "image differencing": 4,
        "statistical distributions": 4,
        "brightness measurements": 4,
        "negative flux": 4,
        "lsst": 4,
        "type ia supernova": 4,
        "transient": 4,
        "secondary peaks": 4,
        "secondary maxima": 4,
        "multiband light curves": 4,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "cursor object": 4,
        "database connection object": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "individual photometric measurements": {
        "fake010": 16,
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "parallel operations": 4,
        "first light curve file": 4,
        "filters": 4,
        "many": 4,
        "plotting method": 4,
        "light curve files": 4,
        "multiband light curve": 4,
        "image differencing": 4,
        "statistical distributions": 4,
        "brightness measurements": 4,
        "negative flux": 4,
        "lsst": 4,
        "type ia supernova": 4,
        "transient": 4,
        "secondary peaks": 4,
        "secondary maxima": 4,
        "multiband light curves": 4,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "cursor object": 4,
        "database connection object": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "broadcasting": {
        "dataframe structures": 28,
        "column names": 16,
        "values method": 16,
        "null vector": 15,
        "broadcasting": 12,
        "random values": 12,
        "arithmetic operations": 8,
        "elementwise maximum": 8,
        "data manipulation": 8,
        "data structures": 8,
        "series objects": 8,
        "tabular data structure": 8,
        "empty dataframe": 8,
        "datasets": 8,
        "observation": 8,
        "column headers": 8,
        "slicing": 8,
        "mmax value": 8,
        "attributes": 8,
        "positional indexing": 8,
        "feature extraction": 8,
        "null matrix": 6,
        "3 x 3 identity matrix": 6,
        "maximum values": 6,
        "credit dataset": 5,
        "non-zero elements": 4,
        "random matrices": 4,
        "random vector": 4,
        "random matrix": 4,
        "selection": 4,
        "filtering": 4,
        "dataset": 3,
        "numpy method": 2,
        "statistics table": 2,
        "attribute creditamount": 2,
        "2d python plotting library": 2,
        "lib": 2,
        "plotting functions": 2,
        "web search": 2,
        "black coloured markers": 1,
        "font size": 1,
        "age": 1,
        "attributes duration": 1
    },
    "george package": {
        "mcmc": 13,
        "predictive distribution": 11,
        "emcee": 9,
        "gp object": 9,
        "time delays": 9,
        "minimize function": 8,
        "gp": 8,
        "posterior probabilities": 6,
        "george": 6,
        "white noise standard deviation": 6,
        "covariance matrix": 6,
        "predictive mean": 6,
        "posterior distribution": 6,
        "optimization": 5,
        "confidence intervals": 5,
        "neg log likelihood": 5,
        "delays": 5,
        "likelihood function": 4,
        "tutorial": 3,
        "gps": 3,
        "george package": 3,
        "api": 3,
        "gpy": 3,
        "correlated noise": 3,
        "george documentation": 3,
        "tutorials": 3,
        "gaussian process regression": 3,
        "mean function": 3,
        "white noise": 3,
        "squared exponential gp": 3,
        "expsquaredkernel": 3,
        "parametrisation": 3,
        "kernelname": 3,
        "squared exponential kernel": 3,
        "length scale": 3,
        "output variance": 3,
        "gp model": 3,
        "ball park values": 3,
        "compute method": 3,
        "george tutorial": 3,
        "neg log likelihood function": 3,
        "logarithms": 3,
        "log parameters": 3,
        "likelihood": 3,
        "maxim": 3,
        "parameter vector": 3,
        "grid locations": 3,
        "the": 3,
        "probability distribution": 3,
        "k2sc pipeline": 3,
        "polynomial": 3,
        "component kernel": 3,
        "overal kernel": 3,
        "joint model": 3,
        "gradient functions": 3,
        "predictive means": 3,
        "individual components": 3,
        "agn reverberation mapping": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "likelihood surface": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "boolean variable": 2,
        "delayed times": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "gp hps": 2,
        "uncertainty estimates": 2,
        "posterior probability": 2,
        "posterior function": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "gps": {
        "mcmc": 13,
        "predictive distribution": 11,
        "emcee": 9,
        "gp object": 9,
        "time delays": 9,
        "minimize function": 8,
        "gp": 8,
        "posterior probabilities": 6,
        "george": 6,
        "white noise standard deviation": 6,
        "covariance matrix": 6,
        "predictive mean": 6,
        "posterior distribution": 6,
        "optimization": 5,
        "confidence intervals": 5,
        "neg log likelihood": 5,
        "delays": 5,
        "likelihood function": 4,
        "tutorial": 3,
        "gps": 3,
        "george package": 3,
        "api": 3,
        "gpy": 3,
        "correlated noise": 3,
        "george documentation": 3,
        "tutorials": 3,
        "gaussian process regression": 3,
        "mean function": 3,
        "white noise": 3,
        "squared exponential gp": 3,
        "expsquaredkernel": 3,
        "parametrisation": 3,
        "kernelname": 3,
        "squared exponential kernel": 3,
        "length scale": 3,
        "output variance": 3,
        "gp model": 3,
        "ball park values": 3,
        "compute method": 3,
        "george tutorial": 3,
        "neg log likelihood function": 3,
        "logarithms": 3,
        "log parameters": 3,
        "likelihood": 3,
        "maxim": 3,
        "parameter vector": 3,
        "grid locations": 3,
        "the": 3,
        "probability distribution": 3,
        "k2sc pipeline": 3,
        "polynomial": 3,
        "component kernel": 3,
        "overal kernel": 3,
        "joint model": 3,
        "gradient functions": 3,
        "predictive means": 3,
        "individual components": 3,
        "agn reverberation mapping": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "likelihood surface": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "boolean variable": 2,
        "delayed times": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "gp hps": 2,
        "uncertainty estimates": 2,
        "posterior probability": 2,
        "posterior function": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "python harvard university": {
        "enumerate": 12,
        "hamlettext": 11,
        "listy containers": 10,
        "dictionaries": 9,
        "large data sets": 7,
        "calculator": 7,
        "integer division": 7,
        "python data types": 7,
        "variables": 7,
        "floating point values": 7,
        "fluent python": 7,
        "python objects": 7,
        "comparison operations": 7,
        "arithmetic": 7,
        "len function": 6,
        "slicing": 6,
        "list slicing operations": 6,
        "iteration": 6,
        "iterator": 6,
        "list comprehension syntax": 6,
        "for loops": 6,
        "conditional if statements": 6,
        "hamletwords": 6,
        "iterators": 5,
        "lists": 5,
        "while loop": 5,
        "lavel astring": 5,
        "string operations": 5,
        "jane beth doe": 5,
        "last names": 5,
        "dictionary comprehension": 5,
        "course names": 4,
        "zip": 4,
        "constructor function dict": 4,
        "'s sequence protocol": 4,
        "umpy": 4,
        "specfic task": 4,
        "method": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "keyword arguments": 4,
        "positional properties": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1
    },
    "numerical programming library": {
        "enumerate": 12,
        "hamlettext": 11,
        "listy containers": 10,
        "dictionaries": 9,
        "large data sets": 7,
        "calculator": 7,
        "integer division": 7,
        "python data types": 7,
        "variables": 7,
        "floating point values": 7,
        "fluent python": 7,
        "python objects": 7,
        "comparison operations": 7,
        "arithmetic": 7,
        "len function": 6,
        "slicing": 6,
        "list slicing operations": 6,
        "iteration": 6,
        "iterator": 6,
        "list comprehension syntax": 6,
        "for loops": 6,
        "conditional if statements": 6,
        "hamletwords": 6,
        "iterators": 5,
        "lists": 5,
        "while loop": 5,
        "lavel astring": 5,
        "string operations": 5,
        "jane beth doe": 5,
        "last names": 5,
        "dictionary comprehension": 5,
        "course names": 4,
        "zip": 4,
        "constructor function dict": 4,
        "'s sequence protocol": 4,
        "umpy": 4,
        "specfic task": 4,
        "method": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "keyword arguments": 4,
        "positional properties": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1
    },
    "uncertainty": {
        "sampling distribution": 26,
        "dependent variable": 18,
        "residuals": 18,
        "birth weight": 18,
        "resampling": 17,
        "rmse": 17,
        "null hypothesis": 12,
        "confidence interval": 9,
        "mother's age": 6,
        "mother": 6,
        "predictive power": 6,
        "iq": 6,
        "sat scores": 6,
        "estimated slope": 6,
        "mean birthweight": 6,
        "weights": 6,
        "strata": 6,
        "survey": 6,
        "brfss data": 6,
        "log weights": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "plot percentiles": 6,
        "correlation": 6,
        "compute coefficient of determination": 6,
        "height information": 5,
        "sampling distributions": 5,
        "kernel matrix": 4,
        "predictive distribution": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "covariance matrix": 3,
        "generative process": 3,
        "conditional models": 3,
        "standard error": 2,
        "resample rows": 2,
        "mean height": 2,
        "linear kernel": 1,
        "2d dataset": 1,
        "column": 1,
        "finalwt": 1
    },
    "pipeline methods": {
        "yelp": 34,
        "text length": 28,
        "data visualization libraries": 14,
        "data imports": 14,
        "seaborn documentation": 14,
        "seaborn library": 14,
        "facetgrid": 14,
        "star ratings": 14,
        "box": 13,
        "countplot": 12,
        "star rating": 12,
        "numerical columns": 12,
        "mean values": 12,
        "groupby dataframe": 11,
        "heatmap": 10,
        "countvectorizer": 10,
        "nlp classification": 9,
        "train test split": 8,
        "countvectorizer object": 7,
        "multinomialnb": 6,
        "confusion matrix": 5,
        "estimator": 4,
        "pipeline": 3,
        "tfidftransformer": 2
    },
    "yel": {
        "yelp": 34,
        "text length": 28,
        "data visualization libraries": 14,
        "data imports": 14,
        "seaborn documentation": 14,
        "seaborn library": 14,
        "facetgrid": 14,
        "star ratings": 14,
        "box": 13,
        "countplot": 12,
        "star rating": 12,
        "numerical columns": 12,
        "mean values": 12,
        "groupby dataframe": 11,
        "heatmap": 10,
        "countvectorizer": 10,
        "nlp classification": 9,
        "train test split": 8,
        "countvectorizer object": 7,
        "multinomialnb": 6,
        "confusion matrix": 5,
        "estimator": 4,
        "pipeline": 3,
        "tfidftransformer": 2
    },
    "natural language processing project": {
        "yelp": 34,
        "text length": 28,
        "data visualization libraries": 14,
        "data imports": 14,
        "seaborn documentation": 14,
        "seaborn library": 14,
        "facetgrid": 14,
        "star ratings": 14,
        "box": 13,
        "countplot": 12,
        "star rating": 12,
        "numerical columns": 12,
        "mean values": 12,
        "groupby dataframe": 11,
        "heatmap": 10,
        "countvectorizer": 10,
        "nlp classification": 9,
        "train test split": 8,
        "countvectorizer object": 7,
        "multinomialnb": 6,
        "confusion matrix": 5,
        "estimator": 4,
        "pipeline": 3,
        "tfidftransformer": 2
    },
    "nlp project": {
        "yelp": 34,
        "text length": 28,
        "data visualization libraries": 14,
        "data imports": 14,
        "seaborn documentation": 14,
        "seaborn library": 14,
        "facetgrid": 14,
        "star ratings": 14,
        "box": 13,
        "countplot": 12,
        "star rating": 12,
        "numerical columns": 12,
        "mean values": 12,
        "groupby dataframe": 11,
        "heatmap": 10,
        "countvectorizer": 10,
        "nlp classification": 9,
        "train test split": 8,
        "countvectorizer object": 7,
        "multinomialnb": 6,
        "confusion matrix": 5,
        "estimator": 4,
        "pipeline": 3,
        "tfidftransformer": 2
    },
    "commas": {
        "enumerate": 12,
        "keyword arguments": 12,
        "hamlettext": 11,
        "listy containers": 10,
        "iterators": 9,
        "dictionaries": 9,
        "positional arguments": 8,
        "len function": 6,
        "slicing": 6,
        "list slicing operations": 6,
        "iteration": 6,
        "iterator": 6,
        "list comprehension syntax": 6,
        "for loops": 6,
        "conditional if statements": 6,
        "hamletwords": 6,
        "lists": 5,
        "while loop": 5,
        "lavel astring": 5,
        "string operations": 5,
        "jane beth doe": 5,
        "last names": 5,
        "dictionary comprehension": 5,
        "course names": 4,
        "zip": 4,
        "constructor function dict": 4,
        "'s sequence protocol": 4,
        "umpy": 4,
        "specfic task": 4,
        "method": 4,
        "mathematical function": 4,
        "lambda functions": 4,
        "mathematical functions": 4,
        "pr": 4,
        "isprime": 4,
        "default argument values": 4,
        "libraries": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "positional properties": 4,
        "python functions": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "dissimilarity": 2,
        "string method count": 2,
        "string method lower": 2,
        "universities": 1,
        "imilar": 1,
        "trait": 1,
        "socioeconomic diversity": 1,
        "graduation rate": 1,
        "us department of": 1,
        "national average annual cost": 1,
        "national average": 1,
        "math module": 1,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1,
        "numpy array variables": 1,
        "indexing": 1,
        "boolean mask": 1
    },
    "google finance": {
        "bank": 18,
        "ticker symbols": 16,
        "alphabetical": 16,
        "distplot": 16,
        "single data frame": 14,
        "tickers list": 14,
        "column name levels": 12,
        "returns": 12,
        "empty": 12,
        "bank stock ticker": 12,
        "returns column": 12,
        "close column": 12,
        "pairplot": 12,
        "returns dataframe": 12,
        "single day returns": 12,
        "worst": 12,
        "morgan stanley": 12,
        "close price": 10,
        "bank of america": 6,
        "heatmap": 4,
        "ly": 3,
        "visualization libraries": 3,
        "cufflinks": 3,
        "banks": 2,
        "symbol": 2,
        "goldman sachs": 2,
        "jpmorgan chase": 2,
        "tick": 2,
        "pandas datareader": 2,
        "google finance": 2,
        "wells fargo": 2,
        "stock information": 2,
        "candle plot": 2,
        "simple moving averages plot": 2,
        "bollinger band plot": 2
    },
    "pandas datareader": {
        "bank": 18,
        "ticker symbols": 16,
        "alphabetical": 16,
        "distplot": 16,
        "single data frame": 14,
        "tickers list": 14,
        "column name levels": 12,
        "returns": 12,
        "empty": 12,
        "bank stock ticker": 12,
        "returns column": 12,
        "close column": 12,
        "pairplot": 12,
        "returns dataframe": 12,
        "single day returns": 12,
        "worst": 12,
        "morgan stanley": 12,
        "close price": 10,
        "bank of america": 6,
        "heatmap": 4,
        "ly": 3,
        "visualization libraries": 3,
        "cufflinks": 3,
        "banks": 2,
        "symbol": 2,
        "goldman sachs": 2,
        "jpmorgan chase": 2,
        "tick": 2,
        "pandas datareader": 2,
        "google finance": 2,
        "wells fargo": 2,
        "stock information": 2,
        "candle plot": 2,
        "simple moving averages plot": 2,
        "bollinger band plot": 2
    },
    "nearest neighbors": {
        "computation time": 16,
        "nearest neighbor algorithm": 14,
        "distance function": 12,
        "pybatch": 12,
        "unlabeled point": 8,
        "nearest neighbor": 8,
        "distance matrix": 8,
        "distance compuation": 8,
        "function pydistance": 8,
        "higher performance": 8,
        "correct": 8,
        "python nearest neighbor search": 8,
        "optimized nearest neighbor function": 8,
        "digit recognition task": 8,
        "distance computation": 7,
        "predictive models": 7,
        "learn": 7,
        "tutorial": 7,
        "scikit-learn": 7,
        "titanic survival dataset": 7,
        "sklearn library": 7,
        "categorical variables": 7,
        "exploratory data analysis": 7,
        "age": 7,
        "numerical variables": 7,
        "speedup": 6,
        "square euclidean distance": 4,
        "nearest neighbors": 4,
        "python nearest neighbor": 4,
        "unlabeled test points": 4,
        "fixed parameters": 4,
        "toy dataset": 4,
        "numpy operations": 4,
        "pairwise distances": 4,
        "squared euclidean distance": 4,
        "optimization": 4,
        "numpy optimized distance computation": 3,
        "nearest neighbor search": 3,
        "multiple test points": 3,
        "points": 2,
        "function imshow": 2,
        "predicted labels": 2,
        "nearest neighbor implementation": 2,
        "handwritten digits recognition dataset": 1,
        "python lists": 1
    },
    "mcmc": {
        "predictive distribution": 22,
        "minimize function": 16,
        "gp object": 12,
        "posterior distribution": 12,
        "time delays": 12,
        "optimization": 10,
        "neg log likelihood": 10,
        "ball park values": 6,
        "white noise standard deviation": 6,
        "compute method": 6,
        "covariance matrix": 6,
        "george tutorial": 6,
        "neg log likelihood function": 6,
        "logarithms": 6,
        "log parameters": 6,
        "likelihood": 6,
        "maxim": 6,
        "parameter vector": 6,
        "grid locations": 6,
        "predictive mean": 6,
        "confidence intervals": 6,
        "the": 6,
        "emcee": 6,
        "gradient functions": 6,
        "agn reverberation mapping": 6,
        "shifted inputs": 6,
        "observational noise": 6,
        "gp": 6,
        "associated gradient functions": 4,
        "xcorr": 4,
        "lags": 4,
        "delays": 4,
        "likelihood function": 4,
        "gradient descent optimizer": 4,
        "log likelihood": 4,
        "ip": 4,
        "posterior uncertainties": 4,
        "mcmc": 4,
        "gp hps": 4,
        "sampler": 3,
        "second george tutorial": 3,
        "random offset": 3,
        "maximum likelihood estimates": 3
    },
    "axis labels": {
        "income": 61,
        "age": 39,
        "income data": 28,
        "10": 22,
        "log transforming": 22,
        "log10": 5,
        "pandas method": 5,
        "steps data": 5,
        "outliers": 5,
        "outlier": 4,
        "step values": 4,
        "age histogram": 4,
        "0 steps": 4,
        "step data": 4,
        "incomes": 4,
        "steps column": 4,
        "exponential decay function": 3,
        "valueerror": 3,
        "zero values": 3,
        "math domain error": 3,
        "standard deviations": 3,
        "diistribution": 3,
        "transformantion": 3,
        "gaussian curve": 3,
        "steps variable plot": 2,
        "default value": 2,
        "income spectrum": 2,
        "income graph": 2,
        "0 incomes": 2,
        "income axis": 2,
        "replotting": 1,
        "data transformation": 1,
        "income distribution": 1,
        "age mood": 1,
        "correlationship coefficient": 1,
        "stroger relationships": 1,
        "skewed data distributions": 1,
        "logbase10": 1,
        "logarithmic transforms": 1,
        "corrs variable": 1,
        "matplotlib visualizations": 1,
        "lambda expression": 1,
        "log transform": 1,
        "geometric means": 1,
        "log10 transformation": 1,
        "pand": 1,
        "log transforming data": 1,
        "log base 10": 1,
        "0 income": 1
    },
    "validation sets": {
        "sine function": 14,
        "ridge regression": 14,
        "optimal plot": 14,
        "colored image": 12,
        "train set": 12,
        "probability": 9,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "fine tuning": 6,
        "parameter tuning": 6,
        "width variable": 6,
        "gradient boosted trees": 6,
        "false positives": 6,
        "validation data": 5,
        "model parameters": 5,
        "multiple decision trees": 5,
        "boosted trees": 5,
        "ensemble classifier": 5,
        "predictive power": 5,
        "sample validation data": 5,
        "safe loan": 5,
        "predict method": 5,
        "prediction probabilities": 5,
        "lassocv": 5,
        "standardize function": 4,
        "cross validation": 3,
        "split indices": 3,
        "cross validation function": 3,
        "feature sets": 3,
        "false negatives": 3,
        "prediction accuracy": 3,
        "boosted trees model": 3,
        "decision trees": 3,
        "decision tree model": 3,
        "probabilities": 3,
        "prediction probability": 3,
        "housing prices": 2,
        "linear classifier": 2,
        "test data": 2,
        "feature vectors": 2,
        "training examples": 2,
        "wikipedia feature scaling article": 2,
        "distribution mean": 2,
        "tree models": 2,
        "classification error": 2,
        "training errors": 2,
        "root mean squared error": 1,
        "average": 1,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1,
        "weights": 1,
        "tf variables": 1,
        "biases": 1,
        "mini batch": 1,
        "tf graph": 1,
        "tf placeholders": 1,
        "helper function": 1,
        "bias dictionary": 1,
        "learnable parameters": 1,
        "bias matrices": 1,
        "network model": 1,
        "weights dictionary": 1,
        "training time": 1,
        "tensorflow": 1,
        "feedforward network model": 1,
        "hidden layers": 1,
        "output layer": 1,
        "sigmoid activation function": 1,
        "check": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1
    },
    "protocols": {
        "international standard exchange format": 18,
        "station metadata": 16,
        "event metadata": 12,
        "trace objects": 9,
        "ainformation": 9,
        "nested obspy inventory class": 9,
        "instrument response": 7,
        "local files": 6,
        "station objects": 6,
        "network objects": 6,
        "channel objects": 6,
        "fdsn stationxml": 6,
        "nested obspy inventory": 6,
        "inventory object": 6,
        "xml": 6,
        "filetype": 5,
        "array analysis": 5,
        "estimate travel times": 5,
        "seismic phases": 5,
        "cross correlation routines": 5,
        "event detection": 5,
        "plot ray paths": 5,
        "manipulation filtering": 5,
        "range": 5,
        "obspy documentation": 5,
        "depth range": 5,
        "magnitude range": 5,
        "matching channels": 5,
        "matching stations": 5,
        "waveform requests": 5,
        "instrument response information": 5,
        "instrument correction": 5,
        "narrow angular distance": 4,
        "search criteria": 4,
        "nested obspy event class structure": 3,
        "event objects": 3,
        "catalog object": 3,
        "utcdatetime": 3,
        "timestamps": 3,
        "pling": 3,
        "command line utilities": 3,
        "large datasets": 3,
        "internal repeated webservice requests": 3,
        "stationxml": 3,
        "fdsn server": 3,
        "wildcard": 3,
        "waveform data": 3,
        "channel code": 3,
        "stationxml files": 2,
        "official schema": 2,
        "ampling": 2,
        "inventory": 2,
        "wave": 1,
        "vertical 1 hz stream": 1
    },
    "george": {
        "predictive distribution": 22,
        "minimize function": 16,
        "gp object": 12,
        "posterior distribution": 12,
        "time delays": 12,
        "optimization": 10,
        "neg log likelihood": 10,
        "ball park values": 6,
        "white noise standard deviation": 6,
        "compute method": 6,
        "covariance matrix": 6,
        "george tutorial": 6,
        "neg log likelihood function": 6,
        "logarithms": 6,
        "log parameters": 6,
        "likelihood": 6,
        "maxim": 6,
        "parameter vector": 6,
        "grid locations": 6,
        "predictive mean": 6,
        "confidence intervals": 6,
        "the": 6,
        "emcee": 6,
        "gradient functions": 6,
        "agn reverberation mapping": 6,
        "shifted inputs": 6,
        "observational noise": 6,
        "gp": 6,
        "associated gradient functions": 4,
        "xcorr": 4,
        "lags": 4,
        "delays": 4,
        "likelihood function": 4,
        "gradient descent optimizer": 4,
        "log likelihood": 4,
        "ip": 4,
        "posterior uncertainties": 4,
        "mcmc": 4,
        "gp hps": 4,
        "sampler": 2,
        "second george tutorial": 2,
        "random offset": 2,
        "maximum likelihood estimates": 2
    },
    "statistical learning": {
        "regression tree": 32,
        "mean salary": 27,
        "regression": 18,
        "decision trees": 18,
        "splitting rule": 18,
        "cutpoint": 17,
        "decision tree model": 9,
        "group exercise": 9,
        "equivalent regression tree": 9,
        "computer": 9,
        "salary": 9,
        "vehicle sale prices": 9,
        "binary splits": 9,
        "mean price": 9,
        "recursive binary splitting": 9,
        "maximum tree depth": 9,
        "stopping criterion": 9,
        "training error": 6,
        "gini index": 4,
        "classification trees": 3,
        "classification error rate": 3,
        "tree diagram": 2,
        "predicted probability": 2,
        "response variable": 2,
        "splitting criteria": 2,
        "decision tree algorithm": 2,
        "mean response value": 1,
        "observation": 1,
        "predictive feature": 1,
        "high": 1,
        "high school graduation rate": 1,
        "high population density": 1,
        "continuous response": 1,
        "regression trees": 1,
        "categorical response": 1,
        "mean response": 1,
        "total variance": 1,
        "training observations": 1,
        "maximum value": 1,
        "node purity": 1,
        "titanic": 1,
        "sex": 1,
        "age": 1
    },
    "density estimation": {
        "pdf": 20,
        "middle aged men": 18,
        "chinups": 14,
        "density estimation": 12,
        "tophat kernel": 8,
        "predictive models": 7,
        "learn": 7,
        "tutorial": 7,
        "scikit-learn": 7,
        "titanic survival dataset": 7,
        "sklearn library": 7,
        "categorical variables": 7,
        "exploratory data analysis": 7,
        "age": 7,
        "numerical variables": 7,
        "histogram plots": 6,
        "waist size": 4,
        "pulse": 4,
        "weight": 4,
        "situps": 4,
        "jumps": 4,
        "linnerud data set": 4,
        "default settings": 4,
        "bin centers": 4,
        "continuous distribution": 4,
        "bin width": 4,
        "variable width bins": 4,
        "bin edges": 4,
        "bin choices": 4,
        "rug plot": 4,
        "chinup measurements": 4,
        "transparency": 4,
        "bin grouping": 4,
        "user choices": 4,
        "bin centering": 4,
        "univariate data": 4,
        "bin": 4,
        "output histogram": 4,
        "ering": 4,
        "epanechnikov": 4,
        "kernel density estimation": 4,
        "minimal mean square error": 4,
        "inverted parabola": 4,
        "discrete data": 4,
        "normalized kernel function": 4,
        "continuous data": 2,
        "bandwidth selection": 2,
        "epanechnikov kernel": 2
    },
    "c arrays": {
        "enumerate": 12,
        "keyword arguments": 12,
        "hamlettext": 11,
        "listy containers": 10,
        "iterators": 9,
        "dictionaries": 9,
        "positional arguments": 8,
        "len function": 6,
        "slicing": 6,
        "list slicing operations": 6,
        "iteration": 6,
        "iterator": 6,
        "list comprehension syntax": 6,
        "for loops": 6,
        "conditional if statements": 6,
        "hamletwords": 6,
        "lists": 5,
        "while loop": 5,
        "lavel astring": 5,
        "string operations": 5,
        "jane beth doe": 5,
        "last names": 5,
        "dictionary comprehension": 5,
        "course names": 4,
        "zip": 4,
        "constructor function dict": 4,
        "'s sequence protocol": 4,
        "umpy": 4,
        "specfic task": 4,
        "method": 4,
        "mathematical function": 4,
        "lambda functions": 4,
        "mathematical functions": 4,
        "pr": 4,
        "isprime": 4,
        "default argument values": 4,
        "libraries": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "positional properties": 4,
        "python functions": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1
    },
    "floating points": {
        "enumerate": 12,
        "keyword arguments": 12,
        "hamlettext": 11,
        "listy containers": 10,
        "iterators": 9,
        "dictionaries": 9,
        "positional arguments": 8,
        "len function": 6,
        "slicing": 6,
        "list slicing operations": 6,
        "iteration": 6,
        "iterator": 6,
        "list comprehension syntax": 6,
        "for loops": 6,
        "conditional if statements": 6,
        "hamletwords": 6,
        "lists": 5,
        "while loop": 5,
        "lavel astring": 5,
        "string operations": 5,
        "jane beth doe": 5,
        "last names": 5,
        "dictionary comprehension": 5,
        "course names": 4,
        "zip": 4,
        "constructor function dict": 4,
        "'s sequence protocol": 4,
        "umpy": 4,
        "specfic task": 4,
        "method": 4,
        "mathematical function": 4,
        "lambda functions": 4,
        "mathematical functions": 4,
        "pr": 4,
        "isprime": 4,
        "default argument values": 4,
        "libraries": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "positional properties": 4,
        "python functions": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1
    },
    "pandas data frames": {
        "granularity": 14,
        "postal code": 13,
        "numerical tests": 12,
        "utilities": 10,
        "sanity checks": 10,
        "data frames": 10,
        "businesses file": 10,
        "primary keys": 10,
        "businesses": 9,
        "94602": 9,
        "zip code": 8,
        "zip codes": 8,
        "bus data frame": 6,
        "business table": 6,
        "data variables": 6,
        "datasets": 6,
        "fillna": 5,
        "extended zip codes": 5,
        "extended postal codes": 5,
        "94545": 5,
        "vio dataframes": 4,
        "floating point values": 4,
        "testing function": 4,
        "rounding error": 4,
        "bus dataframe": 4,
        "longitude values": 4,
        "longitude": 4,
        "latitude": 4,
        "businesses data frame": 4,
        "variable postal code": 4,
        "zip code values": 4,
        "counts": 4,
        "iloc": 4,
        "missing zipcode values": 4,
        "internet": 4,
        "94609": 4,
        "san francisco": 4,
        "business dataframe": 3,
        "population": 3,
        "nonmissing values": 3,
        "validzip variable": 3,
        "python type command": 2,
        "missing zip codes": 2,
        "inspection": 2,
        "inspection dataframe": 2,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "business name": 1,
        "zip": 1,
        "search engine": 1
    },
    "character encoding issues": {
        "granularity": 14,
        "postal code": 13,
        "numerical tests": 12,
        "utilities": 10,
        "sanity checks": 10,
        "data frames": 10,
        "businesses file": 10,
        "primary keys": 10,
        "businesses": 9,
        "94602": 9,
        "zip code": 8,
        "zip codes": 8,
        "bus data frame": 6,
        "business table": 6,
        "data variables": 6,
        "datasets": 6,
        "fillna": 5,
        "extended zip codes": 5,
        "extended postal codes": 5,
        "94545": 5,
        "vio dataframes": 4,
        "floating point values": 4,
        "testing function": 4,
        "rounding error": 4,
        "bus dataframe": 4,
        "longitude values": 4,
        "longitude": 4,
        "latitude": 4,
        "businesses data frame": 4,
        "variable postal code": 4,
        "zip code values": 4,
        "counts": 4,
        "iloc": 4,
        "missing zipcode values": 4,
        "internet": 4,
        "94609": 4,
        "san francisco": 4,
        "business dataframe": 3,
        "population": 3,
        "nonmissing values": 3,
        "validzip variable": 3,
        "python type command": 2,
        "missing zip codes": 2,
        "inspection": 2,
        "inspection dataframe": 2,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "business name": 1,
        "zip": 1,
        "search engine": 1
    },
    "testing sets": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "libertarian party": 11,
        "green party": 11,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2,
        "tfidfvectorizer": 2,
        "english stop words": 2,
        "minimum feature term": 2,
        "bigrams": 2,
        "maximum frequency": 2,
        "snowball": 2,
        "trigrams": 2,
        "nowball": 2,
        "kneighborsclassifier": 2,
        "stemming algorithm": 2,
        "unigrams": 2,
        "tokenize function": 2,
        "testing sets": 1,
        "l": 1,
        "scatterplot": 1,
        "predicted values": 1
    },
    "time series data": {
        "international standard exchange format": 9,
        "event metadata": 8,
        "station metadata": 7,
        "datetimeindex": 6,
        "exponentially weighted functions": 6,
        "local files": 4,
        "timestamps": 4,
        "fdsn web services": 3,
        "seismological data centers": 3,
        "protocols": 3,
        "nested obspy event class structure": 3,
        "event objects": 3,
        "catalog object": 3,
        "station objects": 3,
        "network objects": 3,
        "channel objects": 3,
        "fdsn stationxml": 3,
        "nested obspy inventory": 3,
        "inventory object": 3,
        "trace objects": 3,
        "ainformation": 3,
        "nested obspy inventory class": 3,
        "index slicing": 3,
        "arithmetic operations": 3,
        "nanoseond resolution": 3,
        "random datapoints": 3,
        "pandas stores timestamps": 3,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "filetype": 2,
        "waveform data": 2,
        "xml": 2,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "array computation package": 1,
        "fourier transforms": 1,
        "linear algebra": 1,
        "random numbers": 1,
        "solvers": 1,
        "interpolation routines": 1,
        "spare matrices": 1,
        "optimization": 1,
        "scipy": 1,
        "signal processing methods": 1,
        "basic differential equations": 1,
        "numeric integration": 1,
        "matlab": 1,
        "python program": 1,
        "united states": 1,
        "canada": 1,
        "stationxml files": 1,
        "official schema": 1,
        "channel codes": 1,
        "seismometer time series": 1,
        "utcdatetime": 1,
        "instrument response": 1,
        "digitizer": 1,
        "amplitude": 1,
        "phase response": 1,
        "instrument correction": 1,
        "array analysis": 1,
        "estimate travel times": 1,
        "seismic phases": 1,
        "cross correlation routines": 1,
        "pling": 1,
        "event detection": 1,
        "command line utilities": 1,
        "plot ray paths": 1,
        "manipulation filtering": 1,
        "epicentral range": 1,
        "instrument corrected waveforms": 1,
        "interactive ipython help": 1,
        "obspy documentation": 1,
        "ipython tab completion": 1,
        "stationxml": 1,
        "fdsn server": 1,
        "wildcard": 1,
        "channel code": 1,
        "autoregressive model": 1
    },
    "bayesian statistics": {
        "bayesian analysis": 18,
        "conjugate priors": 12,
        "beta function": 12,
        "dirchilet distribution": 12,
        "counts": 10,
        "binomial distribution": 7,
        "asian food": 6,
        "political data science": 6,
        "presidential electoral cycle": 6,
        "monte carlo markov chain": 6,
        "presidential voting season": 6,
        "bayesian statistics": 6,
        "poll prediction": 6,
        "priors": 6,
        "multin": 6,
        "posterior distributions": 6,
        "ichlet": 6,
        "computational tractability": 6,
        "poisson distributed events": 6,
        "waiting time": 6,
        "lecture finger": 6,
        "nlp": 6,
        "normalizing term": 6,
        "beta distribution": 6,
        "computational bayesian exercise": 6,
        "scaling term": 6,
        "math library": 6,
        "probability model": 6,
        "binomial model": 6,
        "election": 6,
        "case study": 6,
        "grand old party": 6,
        "election88": 6,
        "age variable": 5,
        "age": 4,
        "polling data": 4,
        "bush support": 3,
        "groupby method": 3,
        "polling": 1,
        "electoral data": 1,
        "bayesian computation": 1,
        "closed form equation": 1,
        "bayesian formula": 1,
        "probability": 1,
        "gamma function": 1,
        "gamma funciton": 1,
        "gammafunction": 1
    },
    "politics": {
        "bayesian analysis": 18,
        "conjugate priors": 12,
        "beta function": 12,
        "dirchilet distribution": 12,
        "counts": 10,
        "binomial distribution": 7,
        "asian food": 6,
        "political data science": 6,
        "presidential electoral cycle": 6,
        "monte carlo markov chain": 6,
        "presidential voting season": 6,
        "bayesian statistics": 6,
        "poll prediction": 6,
        "priors": 6,
        "multin": 6,
        "posterior distributions": 6,
        "ichlet": 6,
        "computational tractability": 6,
        "poisson distributed events": 6,
        "waiting time": 6,
        "lecture finger": 6,
        "nlp": 6,
        "normalizing term": 6,
        "beta distribution": 6,
        "computational bayesian exercise": 6,
        "scaling term": 6,
        "math library": 6,
        "probability model": 6,
        "binomial model": 6,
        "election": 6,
        "case study": 6,
        "grand old party": 6,
        "election88": 6,
        "age variable": 5,
        "age": 4,
        "polling data": 4,
        "bush support": 3,
        "groupby method": 3,
        "polling": 1,
        "electoral data": 1,
        "bayesian computation": 1,
        "closed form equation": 1,
        "bayesian formula": 1,
        "probability": 1,
        "gamma function": 1,
        "gamma funciton": 1,
        "gammafunction": 1
    },
    "independent component analysis": {
        "ica": 24,
        "integral calculator": 12,
        "numerical approximation": 12,
        "exact expression": 12,
        "gaussian random variable": 12,
        "peakedness": 12,
        "wolfram alpha": 12,
        "online service": 12,
        "learning algorithms": 8,
        "mixing matrix": 8,
        "information theory": 8,
        "independent component analysis algorithm": 6,
        "source matrix": 6,
        "activation function": 6,
        "data matrix": 6,
        "elementwise non-linearity": 6,
        "source signal values": 6,
        "kurtosis": 6,
        "covariant algorithm": 5,
        "sawtooth": 4,
        "demixing matrices": 4,
        "priors": 3,
        "symmetric": 2,
        "gaussian distribution": 2,
        "random wave": 2,
        "independent random variables": 2,
        "covariance matrices": 2,
        "generated signals": 2,
        "recovered audio sources": 2,
        "normalization constant": 2,
        "gaussian noise source": 2,
        "block wave": 2,
        "sine wave": 2,
        "rotation": 2,
        "eigenvalue decomposition": 2,
        "sinewave": 2,
        "bias": 2,
        "scale changes": 2,
        "sound clip": 2,
        "ambient sounds": 2,
        "gamma": 2,
        "ma": 2,
        "gaussian distributed": 2,
        "audio signals": 2,
        "ize": 1,
        "normalizing constant": 1,
        "gaussian function": 1,
        "triangle histogram": 1,
        "square wave": 1,
        "xw plot": 1,
        "circular pattern": 1,
        "learning algorithm": 1,
        "matrix inversions": 1,
        "source signals": 1,
        "central limit theorem": 1,
        "signal": 1,
        "gaussian distributions": 1,
        "signals sawtooth": 1,
        "historgrams": 1,
        "triangle wave": 1,
        "gray boxes": 1,
        "boxes": 1,
        "diagonal matrix": 1,
        "alogrithm": 1,
        "measurement": 1,
        "gaussian noise": 1,
        "covariance": 1,
        "consistent algorithm": 1,
        "i": 1,
        "whitening process": 1
    },
    "zipfile library": {
        "head function": 14,
        "numerical tests": 12,
        "granularity": 10,
        "attributes": 9,
        "zipfile": 9,
        "postal code": 8,
        "94602": 8,
        "zip file": 7,
        "csv formatted": 7,
        "data directory": 7,
        "businesses": 7,
        "zip codes": 7,
        "boolean expressions": 6,
        "pandas data frames": 6,
        "character encoding issues": 6,
        "utilities": 6,
        "sanity checks": 6,
        "data frames": 6,
        "data variables": 6,
        "datasets": 6,
        "bad data": 6,
        "businesses file": 6,
        "primary keys": 6,
        "businesses data frame": 4,
        "bus data frame": 4,
        "zip code": 4,
        "business table": 4,
        "variable postal code": 4,
        "zip code values": 4,
        "counts": 4,
        "fillna": 4,
        "extended zip codes": 4,
        "extended postal codes": 4,
        "iloc": 4,
        "missing zipcode values": 4,
        "internet": 4,
        "94545": 4,
        "94609": 4,
        "san francisco": 4,
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "longitude values": 3,
        "validzip variable": 3,
        "inspection": 2,
        "inspection dataframe": 2
    },
    "food safety": {
        "head function": 14,
        "numerical tests": 12,
        "granularity": 10,
        "attributes": 9,
        "zipfile": 9,
        "postal code": 8,
        "94602": 8,
        "zip file": 7,
        "csv formatted": 7,
        "data directory": 7,
        "businesses": 7,
        "zip codes": 7,
        "boolean expressions": 6,
        "pandas data frames": 6,
        "character encoding issues": 6,
        "utilities": 6,
        "sanity checks": 6,
        "data frames": 6,
        "data variables": 6,
        "datasets": 6,
        "bad data": 6,
        "businesses file": 6,
        "primary keys": 6,
        "businesses data frame": 4,
        "bus data frame": 4,
        "zip code": 4,
        "business table": 4,
        "variable postal code": 4,
        "zip code values": 4,
        "counts": 4,
        "fillna": 4,
        "extended zip codes": 4,
        "extended postal codes": 4,
        "iloc": 4,
        "missing zipcode values": 4,
        "internet": 4,
        "94545": 4,
        "94609": 4,
        "san francisco": 4,
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "longitude values": 3,
        "validzip variable": 3,
        "inspection": 2,
        "inspection dataframe": 2
    },
    "intercept": {
        "sampling distribution": 26,
        "dependent variable": 18,
        "residuals": 18,
        "birth weight": 18,
        "resampling": 17,
        "rmse": 17,
        "null hypothesis": 12,
        "confidence interval": 9,
        "mother's age": 6,
        "mother": 6,
        "predictive power": 6,
        "iq": 6,
        "sat scores": 6,
        "estimated slope": 6,
        "mean birthweight": 6,
        "weights": 6,
        "strata": 6,
        "survey": 6,
        "brfss data": 6,
        "log weights": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "plot percentiles": 6,
        "correlation": 6,
        "compute coefficient of determination": 6,
        "height information": 5,
        "sampling distributions": 5,
        "intercept": 2,
        "standard error": 2,
        "resample rows": 2,
        "mean height": 2,
        "float64": 1,
        "column": 1,
        "finalwt": 1,
        "int64": 1
    },
    "iris": {
        "waveform data": 20,
        "preview plot": 16,
        "mainshock": 11,
        "spectrogram": 11,
        "earthquake": 11,
        "utcdatetime object": 9,
        "main shock": 7,
        "instrument response": 7,
        "donwloaded data": 7,
        "aftershock": 5,
        "spectrogram plot": 5,
        "peak value": 5,
        "range": 5,
        "obspy documentation": 5,
        "depth range": 5,
        "magnitude range": 5,
        "matching channels": 5,
        "matching stations": 5,
        "waveform requests": 5,
        "instrument response information": 5,
        "instrument correction": 5,
        "pca": 5,
        "covariance matrix": 5,
        "eigendecomposition": 5,
        "correlation matrix": 5,
        "narrow angular distance": 4,
        "search criteria": 4,
        "eigenvectors": 4,
        "magnitude approximation": 3,
        "large datasets": 3,
        "internal repeated webservice requests": 3,
        "eigenvalues": 3,
        "network magnitude approximation": 2,
        "large aftershock": 2,
        "station metadata": 2,
        "dominant event frequency range": 1,
        "characteristic function": 1,
        "local noise burst": 1,
        "seismic phase": 1,
        "bandpass filter": 1,
        "transient signals": 1,
        "estimatemagnitude function": 1,
        "aftershock spectrogram": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1,
        "wave": 1,
        "vertical 1 hz stream": 1,
        "petal width": 1,
        "uci machine learning repository": 1,
        "tutorial": 1,
        "petal length": 1,
        "sepal length": 1,
        "python library": 1,
        "uci repository": 1,
        "flower sample": 1,
        "flower classes": 1,
        "standard": 1,
        "components": 1,
        "mean vector": 1,
        "numpy cov function": 1,
        "ance matrix": 1,
        "normalized covariance matrix": 1,
        "finance": 1,
        "standardized data": 1,
        "eigenvalue pairs": 1,
        "standardizing": 1,
        "computational efficiency": 1,
        "singular vector decomposition": 1,
        "pca implementations": 1,
        "axes": 1,
        "lowest eigenvalues": 1,
        "eigenpairs": 1,
        "explained variance": 1,
        "principal components": 1,
        "information": 1,
        "first principal component": 1,
        "second principal component": 1,
        "projection matrix": 1,
        "concatenated top k eigenvectors": 1
    },
    "machine learning 2": {
        "ica": 17,
        "receiving node": 10,
        "marginalizing": 9,
        "learning algorithms": 8,
        "mixing matrix": 8,
        "information theory": 8,
        "independent component analysis algorithm": 6,
        "source matrix": 6,
        "activation function": 6,
        "data matrix": 6,
        "elementwise non-linearity": 6,
        "source signal values": 6,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "marginals": 6,
        "joint distributions": 6,
        "function marginalize": 6,
        "covariant algorithm": 5,
        "sending": 5,
        "functional programming": 5,
        "1d numpy arrays": 5,
        "sawtooth": 4,
        "tensor representations": 4,
        "numpy broadcasting": 4,
        "kurtosis": 3,
        "priors": 2,
        "gaussian distribution": 2,
        "random wave": 2,
        "independent random variables": 2,
        "covariance matrices": 2,
        "gaussian noise source": 2,
        "block wave": 2,
        "sine wave": 2,
        "rotation": 2,
        "eigenvalue decomposition": 2,
        "sinewave": 2,
        "bias": 2,
        "scale changes": 2,
        "demixing matrices": 2,
        "ize": 1,
        "normalizing constant": 1,
        "gaussian function": 1,
        "triangle histogram": 1,
        "square wave": 1,
        "xw plot": 1,
        "circular pattern": 1,
        "learning algorithm": 1,
        "matrix inversions": 1,
        "symmetric": 1,
        "source signals": 1,
        "central limit theorem": 1,
        "signal": 1,
        "gaussian distributions": 1,
        "signals sawtooth": 1,
        "historgrams": 1,
        "triangle wave": 1,
        "gray boxes": 1,
        "boxes": 1,
        "diagonal matrix": 1,
        "alogrithm": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "measurement": 1,
        "gaussian noise": 1,
        "covariance": 1,
        "consistent algorithm": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "i": 1,
        "whitening process": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "student id number": {
        "tinder": 23,
        "data scientist": 20,
        "unclean data": 20,
        "column names": 19,
        "missing data": 19,
        "survey": 19,
        "data columns": 13,
        "string methods": 12,
        "standardize": 12,
        "tinder users": 11,
        "safe harbor method": 11,
        "null value": 11,
        "alpha significance value": 8,
        "null hypothesis": 8,
        "boolean values": 8,
        "population": 5,
        "majors": 4,
        "sslerror": 3,
        "ssl module": 3,
        "https": 3,
        "zip code": 3,
        "confounding variable": 3,
        "advanced indexing": 2,
        "df dataframe": 2,
        "booleans": 2,
        "oleans": 2,
        "isnull": 2,
        "computer science majors": 2,
        "error message": 2,
        "pandas array indexing": 1,
        "kmeans": 1,
        "array element": 1
    },
    "inclusion indicator": {
        "pystan": 30,
        "inclusion indicator": 20,
        "pymc": 20,
        "relative performance": 10,
        "knn": 10,
        "statistical exposition": 10,
        "distribution": 10,
        "distributions": 10,
        "pymc model": 10,
        "univariate logistic regression": 10,
        "sigmoid function": 10,
        "mcmc procedure": 10,
        "roc scores": 10,
        "non-bayesian logistic": 10,
        "numerical data": 8,
        "categorical data": 8,
        "average": 8,
        "data generating process": 5,
        "polling data": 5,
        "data scientist": 4,
        "bayesian analysis": 4,
        "data containers": 4,
        "numpy container": 4,
        "regressions": 4,
        "regression models": 4,
        "classical logistic regression": 2,
        "trained model": 2,
        "random forest": 2,
        "bayesian logistic regression": 2,
        "bayesian logistic regression form": 2,
        "bernoulli method": 2,
        "bayesian model": 2,
        "computation segment": 2,
        "observable variation": 1
    },
    "datetimeindex": {
        "exponentially weighted functions": 12,
        "datetimeindex": 9,
        "apple stock quarterly": 9,
        "kurtosis": 9,
        "covariance": 9,
        "moving": 9,
        "variance": 9,
        "moving window functions": 9,
        "array function": 9,
        "skewness": 9,
        "window parameter": 9,
        "rolling mean": 9,
        "decay factor": 9,
        "rolling correlation function": 9,
        "timestamps": 6,
        "toy dataset": 6,
        "data buckets": 6,
        "upsampling": 6,
        "interpolation": 6,
        "weekly time series": 6,
        "autoregressive modeling": 6,
        "ebola data": 6,
        "time series modelling": 6,
        "nat entry": 3,
        "index slicing": 3,
        "arithmetic operations": 3,
        "nanoseond resolution": 3,
        "random datapoints": 3,
        "pandas stores timestamps": 3,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "time axis": 3,
        "exponentialy weighted rolling functions": 3,
        "shift operators": 3,
        "economic data applications": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive model": 3
    },
    "fitted line": {
        "sampling distribution": 26,
        "dependent variable": 18,
        "residuals": 18,
        "birth weight": 18,
        "resampling": 17,
        "rmse": 17,
        "null hypothesis": 12,
        "confidence interval": 9,
        "mother's age": 6,
        "mother": 6,
        "predictive power": 6,
        "iq": 6,
        "sat scores": 6,
        "estimated slope": 6,
        "mean birthweight": 6,
        "weights": 6,
        "strata": 6,
        "survey": 6,
        "brfss data": 6,
        "log weights": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "plot percentiles": 6,
        "correlation": 6,
        "compute coefficient of determination": 6,
        "height information": 5,
        "sampling distributions": 5,
        "standard error": 2,
        "resample rows": 2,
        "mean height": 2,
        "column": 1,
        "finalwt": 1
    },
    "estimated slope": {
        "sampling distribution": 26,
        "dependent variable": 18,
        "residuals": 18,
        "birth weight": 18,
        "resampling": 17,
        "rmse": 17,
        "null hypothesis": 12,
        "confidence interval": 9,
        "mother's age": 6,
        "mother": 6,
        "predictive power": 6,
        "iq": 6,
        "sat scores": 6,
        "estimated slope": 6,
        "mean birthweight": 6,
        "weights": 6,
        "strata": 6,
        "survey": 6,
        "brfss data": 6,
        "log weights": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "plot percentiles": 6,
        "correlation": 6,
        "compute coefficient of determination": 6,
        "height information": 5,
        "sampling distributions": 5,
        "standard error": 2,
        "resample rows": 2,
        "mean height": 2,
        "column": 1,
        "finalwt": 1
    },
    "resampled estimate": {
        "sampling distribution": 26,
        "dependent variable": 18,
        "residuals": 18,
        "birth weight": 18,
        "resampling": 17,
        "rmse": 17,
        "null hypothesis": 12,
        "confidence interval": 9,
        "mother's age": 6,
        "mother": 6,
        "predictive power": 6,
        "iq": 6,
        "sat scores": 6,
        "estimated slope": 6,
        "mean birthweight": 6,
        "weights": 6,
        "strata": 6,
        "survey": 6,
        "brfss data": 6,
        "log weights": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "plot percentiles": 6,
        "correlation": 6,
        "compute coefficient of determination": 6,
        "height information": 5,
        "sampling distributions": 5,
        "standard error": 2,
        "resample rows": 2,
        "mean height": 2,
        "column": 1,
        "finalwt": 1
    },
    "twitter": {
        "list comprehensions": 15,
        "twitter": 12,
        "coordinates": 12,
        "pandas documentation": 12,
        "tweetdeck": 12,
        "null hypothesis": 10,
        "tweepy": 8,
        "authentication keys": 8,
        "json": 6,
        "string method": 6,
        "pivoting": 6,
        "8": 6,
        "pivot": 6,
        "categorical attrbiutes": 6,
        "pivoted table": 6,
        "tweet sources": 6,
        "confidence interval": 6,
        "twitter client usage": 6,
        "bootstrap": 6,
        "conda environment": 4,
        "api": 4,
        "twitter developer account": 4,
        "web site": 4,
        "access token secret": 4,
        "access token": 4,
        "consumer secret": 4,
        "developer account": 4,
        "twitter account": 4,
        "templates": 4,
        "statistical test": 4,
        "numpy functions": 4,
        "hypothesis test": 4,
        "table": 4,
        "datascience": 4,
        "data 8": 4,
        "twitter web client": 4,
        "map()": 4,
        "assertion test": 3,
        "map function": 3,
        "trump tweets": 2,
        "test case": 2,
        "double for loop": 2,
        "nested list": 2,
        "functional programming": 2,
        "inner loop": 2,
        "outer loop": 2,
        "long words": 2,
        "return value": 2,
        "filter()": 1,
        "hashtags": 1,
        "twitter search": 1
    },
    "survey": {
        "income": 34,
        "income column": 19,
        "steps column": 18,
        "age": 18,
        "income10": 18,
        "average income": 16,
        "population": 9,
        "missing incomes": 9,
        "age column": 9,
        "missing data": 9,
        "income values": 9,
        "prediction ability": 9,
        "log transformation": 9,
        "polyfit": 9,
        "income10 data": 8,
        "data transformation": 8,
        "describe pandas method": 7,
        "corrs": 6,
        "pairwise correlations": 6,
        "pandas method": 6,
        "quantile method": 6,
        "output parameters": 4,
        "integer age": 3,
        "squared loss function": 1,
        "loss calculation": 1,
        "prediction power": 1,
        "steps": 1
    },
    "mixing matrix": {
        "ica": 34,
        "covariant algorithm": 10,
        "sawtooth": 8,
        "whitened measurements": 6,
        "covariance matrix": 6,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "kurtosis": 6,
        "priors": 4,
        "gaussian distribution": 4,
        "random wave": 4,
        "independent random variables": 4,
        "covariance matrices": 4,
        "gaussian noise source": 4,
        "learning algorithms": 4,
        "block wave": 4,
        "mixing matrix": 4,
        "sine wave": 4,
        "information theory": 4,
        "rotation": 4,
        "eigenvalue decomposition": 4,
        "sinewave": 4,
        "bias": 4,
        "scale changes": 4,
        "demixing matrices": 4,
        "ize": 2,
        "normalizing constant": 2,
        "gaussian function": 2,
        "triangle histogram": 2,
        "square wave": 2,
        "xw plot": 2,
        "circular pattern": 2,
        "learning algorithm": 2,
        "matrix inversions": 2,
        "symmetric": 2,
        "source signals": 2,
        "central limit theorem": 2,
        "signal": 2,
        "gaussian distributions": 2,
        "signals sawtooth": 2,
        "historgrams": 2,
        "triangle wave": 2,
        "gray boxes": 2,
        "boxes": 2,
        "diagonal matrix": 2,
        "alogrithm": 2,
        "generated signals": 2,
        "recovered audio sources": 2,
        "normalization constant": 2,
        "measurement": 2,
        "gaussian noise": 2,
        "covariance": 2,
        "consistent algorithm": 2,
        "sound clip": 2,
        "ambient sounds": 2,
        "gamma": 2,
        "ma": 2,
        "i": 2,
        "whitening process": 2,
        "gaussian distributed": 2,
        "audio signals": 2
    },
    "disk cleanup": {
        "income": 34,
        "income column": 19,
        "steps column": 18,
        "age": 18,
        "income10": 18,
        "average income": 16,
        "population": 9,
        "missing incomes": 9,
        "age column": 9,
        "missing data": 9,
        "income values": 9,
        "prediction ability": 9,
        "log transformation": 9,
        "polyfit": 9,
        "income10 data": 8,
        "data transformation": 8,
        "describe pandas method": 7,
        "corrs": 6,
        "pairwise correlations": 6,
        "pandas method": 6,
        "quantile method": 6,
        "output parameters": 4,
        "integer age": 3,
        "prediction power": 1,
        "steps": 1
    },
    "nonresponse": {
        "income": 34,
        "income column": 19,
        "steps column": 18,
        "age": 18,
        "income10": 18,
        "average income": 16,
        "population": 9,
        "missing incomes": 9,
        "age column": 9,
        "missing data": 9,
        "income values": 9,
        "prediction ability": 9,
        "log transformation": 9,
        "polyfit": 9,
        "income10 data": 8,
        "data transformation": 8,
        "describe pandas method": 7,
        "corrs": 6,
        "pairwise correlations": 6,
        "pandas method": 6,
        "quantile method": 6,
        "output parameters": 4,
        "integer age": 3,
        "prediction power": 1,
        "steps": 1
    },
    "regression trees": {
        "regression tree": 32,
        "mean salary": 27,
        "splitting rule": 18,
        "cutpoint": 17,
        "group exercise": 9,
        "equivalent regression tree": 9,
        "computer": 9,
        "decision trees": 9,
        "salary": 9,
        "vehicle sale prices": 9,
        "binary splits": 9,
        "mean price": 9,
        "recursive binary splitting": 9,
        "maximum tree depth": 9,
        "stopping criterion": 9,
        "training error": 6,
        "gini index": 6,
        "classification error rate": 5,
        "classification trees": 4,
        "decision tree algorithm": 4,
        "predicted probability": 3,
        "response variable": 3,
        "splitting criteria": 3,
        "tree diagram": 2,
        "maximum value": 2,
        "node purity": 2,
        "titanic": 2,
        "sex": 2,
        "age": 2,
        "mean response value": 1,
        "observation": 1,
        "predictive feature": 1,
        "high": 1,
        "high school graduation rate": 1,
        "high population density": 1,
        "continuous response": 1,
        "regression trees": 1,
        "categorical response": 1,
        "mean response": 1,
        "total variance": 1,
        "training observations": 1
    },
    "print function": {
        "string methods": 23,
        "math module": 15,
        "string values": 12,
        "replace method": 11,
        "string value": 11,
        "final expression": 11,
        "zfill": 11,
        "decimal point": 11,
        "len": 11,
        "pi": 10,
        "natural logarithm": 10,
        "int value float": 10,
        "float value": 10,
        "type function": 9,
        "wolfram mathworld": 8,
        "modules": 8,
        "sine function": 8,
        "image function": 7,
        "web pages": 7,
        "arithmetic operators": 6,
        "donald knuth": 5,
        "string method lower": 5,
        "lists": 4,
        "square brackets": 3,
        "test expression": 2,
        "print": 1,
        "assignment statement": 1,
        "print function": 1,
        "conditional statements": 1,
        "if statement": 1,
        "condition expression": 1,
        "test expressions": 1,
        "programming": 1,
        "remainder operator": 1,
        "modulus operator": 1,
        "fizzbuzz": 1,
        "twitter dataset": 1,
        "twitter data": 1,
        "apply function": 1,
        "addition": 1,
        "total": 1,
        "addition function": 1,
        "total connections": 1,
        "stackoverflow": 1,
        "stack overflow": 1,
        "conversion function": 1
    },
    "early stopping methods": {
        "classification error": 26,
        "early stopping conditions": 24,
        "prediction path": 24,
        "minimum node size": 15,
        "error reduction": 12,
        "intermediate node": 12,
        "tree learning algorithm": 12,
        "validation error": 12,
        "validation data": 12,
        "tree model": 9,
        "lowest classification error": 8,
        "early stopping condition": 6,
        "risky loans": 6,
        "safe loans": 6,
        "misclassified examples": 6,
        "majority class": 6,
        "minimum error reduction": 6,
        "if condition": 6,
        "function classify": 6,
        "predicted class": 6,
        "lowest": 4,
        "maximum depth": 3,
        "binary tree implementation": 3,
        "early stopping methods": 3,
        "maximum depth stopping condition": 3,
        "stopping": 3,
        "binary decision tree helper functions": 3,
        "binary decision tree implementation": 3,
        "qu": 2,
        "complexity": 2
    },
    "automobile data": {
        "iloc": 18,
        "dfcars": 12,
        "listiness property": 12,
        "listiness": 8,
        "rear axle ratio": 5,
        "series objects": 4,
        "da rx4": 4,
        "mazda rx4": 4,
        "dictionary syntax": 4,
        "column": 4,
        "python variables": 4,
        "dictionary keys": 4,
        "complex indexing": 4,
        "list operations": 4,
        "statistics": 4,
        "containers": 4,
        "automobile data loaded": 4,
        "attribute shape": 4,
        "set length": 4,
        "len function": 4,
        "attribute columns": 4,
        "numpy methods": 4,
        "itertuples": 4,
        "pandas methods": 4,
        "indexing": 4,
        "loc property indexes": 4,
        "iloc indexes": 4,
        "row indices": 4,
        "column attributes": 4,
        "label name": 4,
        "integer position indices": 4,
        "toy dataframe": 4,
        "hist function": 3,
        "listy container": 3,
        "matplotlib hist": 3,
        "seaborn context": 3,
        "axvline": 3,
        "plot documentation": 3,
        "plotting commands": 3,
        "file extension": 3,
        "savefig command": 3,
        "saved png": 3,
        "markdown": 3,
        "columns of interest": 3,
        "matplotlib plotting routines": 3,
        "horsepower": 2,
        "displacement": 2,
        "biometrics": 2,
        "multiple regression models": 2,
        "automobile design": 2,
        "forward gears": 2,
        "carburetors": 2,
        "fuel consumption": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "dataframe structure": 2,
        "automobile data": 2,
        "dictionary key": 2,
        "dtypes attribute": 2,
        "global matplotlib plotting": 2,
        "seaborn package": 2,
        "notebook": 2,
        "frequency distribution": 2,
        "boolean variable": 1,
        "ordered interpretation": 1,
        "cylinders": 1,
        "categorical data": 1,
        "op": 1,
        "garbage collector": 1,
        "functional programming": 1,
        "h": 1,
        "spark": 1
    },
    "scraping": {
        "iloc": 9,
        "isprime": 6,
        "random numbers": 6,
        "numpy functions": 6,
        "dfcars": 6,
        "listiness property": 6,
        "python lists": 5,
        "listiness": 4,
        "matplotlib libraries": 3,
        "function object": 3,
        "umpy module": 3,
        "method": 3,
        "lambda functions": 3,
        "mathematical functions": 3,
        "prime numbers": 3,
        "list myprimes": 3,
        "default argument values": 3,
        "libraries": 3,
        "keyword arguments": 3,
        "iterate": 3,
        "numpy module functions": 3,
        "numpy array constructors": 3,
        "64 bit": 3,
        "floating point": 3,
        "random constructor": 3,
        "vector operations": 3,
        "readability": 3,
        "computer chips": 3,
        "broadcasting": 3,
        "2d arrays": 3,
        "lists": 3,
        "matrix multiplication": 3,
        "mean": 3,
        "rear axle ratio": 3,
        "one dimensional iteration": 2,
        "idiom": 2,
        "contiguous memory": 2,
        "floating": 2,
        "type conversion": 2,
        "lic": 2,
        "iteration": 2,
        "horsepower": 2,
        "displacement": 2,
        "biometrics": 2,
        "multiple regression models": 2,
        "automobile design": 2,
        "forward gears": 2,
        "carburetors": 2,
        "fuel consumption": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "dataframe structure": 2,
        "automobile data": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "boolean variable": 1,
        "ordered interpretation": 1,
        "cylinders": 1,
        "categorical data": 1,
        "dtypes attribute": 1,
        "op": 1,
        "garbage collector": 1,
        "functional programming": 1,
        "h": 1,
        "spark": 1,
        "global matplotlib plotting": 1,
        "seaborn package": 1,
        "notebook": 1,
        "frequency distribution": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "mathematical manipulation": {
        "iloc": 9,
        "isprime": 6,
        "random numbers": 6,
        "numpy functions": 6,
        "dfcars": 6,
        "listiness property": 6,
        "python lists": 5,
        "listiness": 4,
        "matplotlib libraries": 3,
        "function object": 3,
        "umpy module": 3,
        "method": 3,
        "lambda functions": 3,
        "mathematical functions": 3,
        "prime numbers": 3,
        "list myprimes": 3,
        "default argument values": 3,
        "libraries": 3,
        "keyword arguments": 3,
        "iterate": 3,
        "numpy module functions": 3,
        "numpy array constructors": 3,
        "64 bit": 3,
        "floating point": 3,
        "random constructor": 3,
        "vector operations": 3,
        "readability": 3,
        "computer chips": 3,
        "broadcasting": 3,
        "2d arrays": 3,
        "lists": 3,
        "matrix multiplication": 3,
        "mean": 3,
        "rear axle ratio": 3,
        "one dimensional iteration": 2,
        "idiom": 2,
        "contiguous memory": 2,
        "floating": 2,
        "type conversion": 2,
        "lic": 2,
        "iteration": 2,
        "horsepower": 2,
        "displacement": 2,
        "biometrics": 2,
        "multiple regression models": 2,
        "automobile design": 2,
        "forward gears": 2,
        "carburetors": 2,
        "fuel consumption": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "dataframe structure": 2,
        "automobile data": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "boolean variable": 1,
        "ordered interpretation": 1,
        "cylinders": 1,
        "categorical data": 1,
        "dtypes attribute": 1,
        "op": 1,
        "garbage collector": 1,
        "functional programming": 1,
        "h": 1,
        "spark": 1,
        "global matplotlib plotting": 1,
        "seaborn package": 1,
        "notebook": 1,
        "frequency distribution": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "homework 1": {
        "iloc": 9,
        "isprime": 6,
        "random numbers": 6,
        "numpy functions": 6,
        "dfcars": 6,
        "listiness property": 6,
        "python lists": 5,
        "listiness": 4,
        "matplotlib libraries": 3,
        "function object": 3,
        "umpy module": 3,
        "method": 3,
        "lambda functions": 3,
        "mathematical functions": 3,
        "prime numbers": 3,
        "list myprimes": 3,
        "default argument values": 3,
        "libraries": 3,
        "keyword arguments": 3,
        "iterate": 3,
        "numpy module functions": 3,
        "numpy array constructors": 3,
        "64 bit": 3,
        "floating point": 3,
        "random constructor": 3,
        "vector operations": 3,
        "readability": 3,
        "computer chips": 3,
        "broadcasting": 3,
        "2d arrays": 3,
        "lists": 3,
        "matrix multiplication": 3,
        "mean": 3,
        "rear axle ratio": 3,
        "one dimensional iteration": 2,
        "idiom": 2,
        "contiguous memory": 2,
        "floating": 2,
        "type conversion": 2,
        "lic": 2,
        "iteration": 2,
        "horsepower": 2,
        "displacement": 2,
        "biometrics": 2,
        "multiple regression models": 2,
        "automobile design": 2,
        "forward gears": 2,
        "carburetors": 2,
        "fuel consumption": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "dataframe structure": 2,
        "automobile data": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "boolean variable": 1,
        "ordered interpretation": 1,
        "cylinders": 1,
        "categorical data": 1,
        "dtypes attribute": 1,
        "op": 1,
        "garbage collector": 1,
        "functional programming": 1,
        "h": 1,
        "spark": 1,
        "global matplotlib plotting": 1,
        "seaborn package": 1,
        "notebook": 1,
        "frequency distribution": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "python code": {
        "string methods": 23,
        "math module": 15,
        "string values": 12,
        "replace method": 11,
        "string value": 11,
        "final expression": 11,
        "zfill": 11,
        "decimal point": 11,
        "len": 11,
        "pi": 10,
        "natural logarithm": 10,
        "int value float": 10,
        "float value": 10,
        "type function": 9,
        "wolfram mathworld": 8,
        "modules": 8,
        "sine function": 8,
        "image function": 7,
        "web pages": 7,
        "arithmetic operators": 6,
        "donald knuth": 5,
        "string method lower": 5,
        "lists": 4,
        "square brackets": 3,
        "plot command": 2,
        "bar chart": 2,
        "alcohol consumption": 2,
        "hist function": 2,
        "stackoverflow": 1,
        "stack overflow": 1,
        "conversion function": 1,
        "booleans": 1,
        "diseased patients": 1,
        "healthy patients": 1,
        "red dots": 1,
        "marker size": 1,
        "marker style": 1,
        "diseased people": 1,
        "python function": 1,
        "nested loop": 1
    },
    "web scraping": {
        "tinder": 46,
        "tinder users": 22,
        "safe harbor method": 22,
        "beautiful soup library": 16,
        "conda package manager": 16,
        "population": 10,
        "sslerror": 6,
        "ssl module": 6,
        "https": 6,
        "zip code": 6,
        "selenium": 6,
        "web scraper": 6,
        "error message": 4,
        "headless browser": 4,
        "html": 4,
        "restaurant names": 4,
        "opentable": 4,
        "urllib": 4,
        "beautiful soup": 4,
        "geckodriver install firefox": 2,
        "geckodriver": 2,
        "fox browser": 2,
        "internet": 2,
        "scraper": 2,
        "urllib libraries": 2,
        "restaurant number of bookings": 2,
        "restaurant prices": 2,
        "beautifulsoup": 2,
        "price": 2,
        "web scra": 2,
        "soup object": 2,
        "html objct": 2,
        "bs4": 2,
        "html page": 2,
        "google chrome": 2,
        "inspect": 2,
        "commas": 2,
        "tag objects": 2,
        "python string": 2,
        "tag object": 2,
        "restaurant locations": 2,
        "barmini": 2,
        "search results": 2
    },
    "score card": {
        "zipfile": 19,
        "numerical tests": 12,
        "inline matploblib plots": 10,
        "automatic tests": 10,
        "granularity": 10,
        "attributes": 9,
        "postal code": 8,
        "94602": 8,
        "head function": 7,
        "businesses": 7,
        "zip codes": 7,
        "boolean expressions": 6,
        "utilities": 6,
        "sanity checks": 6,
        "data frames": 6,
        "data variables": 6,
        "datasets": 6,
        "businesses file": 6,
        "primary keys": 6,
        "businesses data frame": 4,
        "bus data frame": 4,
        "zip code": 4,
        "business table": 4,
        "variable postal code": 4,
        "zip code values": 4,
        "counts": 4,
        "fillna": 4,
        "extended zip codes": 4,
        "extended postal codes": 4,
        "iloc": 4,
        "missing zipcode values": 4,
        "internet": 4,
        "94545": 4,
        "94609": 4,
        "san francisco": 4,
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "longitude values": 3,
        "validzip variable": 3,
        "inspection": 2,
        "inspection dataframe": 2
    },
    "python python": {
        "jupyter": 14,
        "recursion": 10,
        "ellipsis": 9,
        "double100": 7,
        "integers": 7,
        "docs": 7,
        "color channels": 7,
        "numerical differentiation": 6,
        "mathematical expressions": 5,
        "rocket icon": 5,
        "loops": 5,
        "lambdas": 5,
        "anonymous functions": 5,
        "code icon": 5,
        "cod": 4,
        "datadata": 4,
        "image": 4,
        "numpy library": 4,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "function median": 3,
        "median element": 3,
        "numpy data type": 3,
        "math operations": 3,
        "ys": 3,
        "sin": 3,
        "linspace function": 3,
        "np": 3,
        "xs": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "derivative": 3,
        "human eye": 3,
        "gaussian blurring function": 3,
        "multidimensional array": 2,
        "matrices": 2,
        "column labels": 2,
        "50x50 array": 2,
        "indexing": 2,
        "x": 2,
        "file1": 2,
        "colors": 2,
        "python pic": 2,
        "partial derivative": 2,
        "berkeley bowl": 2,
        "cantaloupes": 2,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "stackoverflow": 1,
        "stack overflow": 1,
        "python list": 1,
        "pixel triplets": 1,
        "image processing": 1,
        "image1": 1,
        "string method split": 1,
        "color intensity": 1,
        "text file": 1,
        "expanded image": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1,
        "summer images": 1,
        "vector dot products": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "fruit prices": 1,
        "final costs": 1,
        "fruit baskets": 1
    },
    "titanic": {
        "age": 16,
        "embarkation ports": 8,
        "titanic": 8,
        "ticket number": 7,
        "passengerid": 6,
        "knn model": 6,
        "missing data": 6,
        "sex": 5,
        "passenger class": 5,
        "categorical features": 5,
        "categorical feature": 5,
        "missing ages": 4,
        "column mean": 4,
        "missing embarkation ports": 4,
        "embarkation port": 4,
        "running index": 4,
        "euclidean distance": 4,
        "numeric features": 4,
        "numeric": 4,
        "minmax scaler": 4,
        "nearest neighbors model": 3,
        "numeric representation": 3,
        "titanic disaster dataset": 2,
        "variable titanic": 2,
        "pie chart": 2,
        "plot color": 2,
        "fare payed": 2,
        "scatterplot": 2,
        "children": 2,
        "titanic disaster": 2,
        "cross validation": 2,
        "neighbors": 2,
        "nearest neighbors machine learning model": 2,
        "titanic training set": 2,
        "knn models": 2,
        "numerical distance": 2,
        "numerical features": 2,
        "cv accuracy": 2,
        "minmaxscaler": 2,
        "maxscaler": 2,
        "embarked": 2,
        "lsst": 2,
        "age information": 2,
        "photometric redshifts": 2,
        "machine learning model": 2,
        "women": 2,
        "wealth": 2,
        "age distributions": 2,
        "hypothesis testing": 2,
        "statistical method": 2,
        "internet": 2,
        "statistical hypothesis": 2,
        "null hypothesis": 2,
        "hypothesis test": 2,
        "alternative hypothesis": 2,
        "embarked columns": 2,
        "decision trees": 1,
        "cabin number": 1,
        "cabin": 1,
        "fare": 1,
        "prediction targets": 1,
        "survival outcome outcomes": 1,
        "rms titanic": 1,
        "data preprocessing": 1,
        "testing sets": 1,
        "fare predictor": 1,
        "precision stats": 1,
        "predictors": 1,
        "numerification": 1,
        "binary features": 1,
        "binary arrays": 1,
        "sibsp": 1,
        "parch": 1,
        "pclass": 1,
        "fare features": 1,
        "astronomy": 1,
        "indicator value": 1,
        "feature distribution": 1,
        "mean value": 1,
        "mean age": 1,
        "passengers": 1,
        "age regression model": 1,
        "age estimates": 1,
        "passenger survival": 1,
        "age feature": 1,
        "child feature": 1,
        "le": 1,
        "blind data": 1,
        "k": 1,
        "astronomical problem": 1,
        "galaxies": 1,
        "spectroscopic measurements": 1,
        "photometry": 1,
        "sdss casjobs": 1,
        "specobjid": 1,
        "psf mag": 1,
        "psfmag": 1,
        "modelmag": 1,
        "ds": 1,
        "sfd extinction estimate": 1,
        "sdss identifier": 1,
        "sdss photometric type": 1,
        "upper": 1,
        "sdss source": 1,
        "wise filters": 1,
        "categorical variable": 1,
        "nearest neighbors regression model": 1,
        "sdss dataframe": 1,
        "categorical data": 1
    },
    "graduate school admission": {
        "gre score": 26,
        "pandas function": 14,
        "pivot table": 14,
        "bar chart": 14,
        "undergraduate schools": 14,
        "score": 14,
        "map() function": 14,
        "admission": 12,
        "admission rate": 8,
        "confidence interval": 8,
        "uncertainty": 8,
        "helper function": 8,
        "prestige levels": 8,
        "mean probability": 8,
        "admission levels": 8,
        "gpa": 8,
        "prestige": 8,
        "united": 4,
        "us airways": 4,
        "continental express": 4,
        "continental": 4,
        "american eagle": 4,
        "delta mq": 4,
        "atlantic coast": 4,
        "comair": 4,
        "bar plot": 4,
        "flight status": 4,
        "crosstab": 4
    },
    "quotation marks": {
        "string methods": 23,
        "math module": 15,
        "string values": 12,
        "replace method": 11,
        "string value": 11,
        "final expression": 11,
        "zfill": 11,
        "decimal point": 11,
        "len": 11,
        "pi": 10,
        "natural logarithm": 10,
        "int value float": 10,
        "float value": 10,
        "type function": 9,
        "wolfram mathworld": 8,
        "modules": 8,
        "sine function": 8,
        "image function": 7,
        "web pages": 7,
        "arithmetic operators": 6,
        "donald knuth": 5,
        "string method lower": 5,
        "regex": 4,
        "lists": 4,
        "square brackets": 3,
        "dollar sign": 2,
        "stackoverflow": 1,
        "stack overflow": 1,
        "conversion function": 1,
        "dollars": 1,
        "square paranthesis": 1,
        "uppercase letters": 1
    },
    "population": {
        "population": 13,
        "democratic republic of the congo": 12,
        "sqlite3 library": 12,
        "hashemite kingdom of jordan": 6,
        "code cell": 6,
        "indicator data": 6,
        "merged data set": 6,
        "countrycode": 6,
        "json file": 6,
        "islamic republic": 6,
        "afghanistan": 6,
        "federal republic": 6,
        "bangladesh": 6,
        "nigeria": 6,
        "lebanese republic": 6,
        "democratic socialist republic": 6,
        "code": 6,
        "people's republic of bangladesh": 6,
        "federal republic of nigeria": 6,
        "tunisia": 6,
        "islamic republic of afghanistan": 6,
        "federative republic": 6,
        "merged table": 6,
        "brazil": 6,
        "sql query": 6,
        "sql": 6,
        "alter table command": 6,
        "sqlite3 database": 6,
        "sqlite": 6,
        "foreign key constraints": 6,
        "ridge regression": 5,
        "world bank projects": 3,
        "zip codes": 3,
        "regression methods": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "testing sets": 1,
        "bootstrap": 1,
        "confidence intervals": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "confidence interval": 1,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1,
        "surnames": 1
    },
    "bag of words problem": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "libertarian party": 11,
        "green party": 11,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "countvectorizer()": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "libertarian party": 11,
        "green party": 11,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "bag of words processing": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "libertarian party": 11,
        "green party": 11,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "bayes theorem implementation": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "libertarian party": 11,
        "green party": 11,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "bayes formula": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "libertarian party": 11,
        "green party": 11,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "true negative rate": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "libertarian party": 11,
        "green party": 11,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "true positive rate": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "libertarian party": 11,
        "green party": 11,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "medical field": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "libertarian party": 11,
        "green party": 11,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "diabetes": {
        "bayes theorem": 23,
        "diabetes": 22,
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "libertarian party": 11,
        "green party": 11,
        "posteriors": 10,
        "specificity": 9,
        "sensitivity": 9,
        "ity": 7,
        "final probabilities": 7,
        "test result": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "priors": 2,
        "tnr": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "salary": {
        "regression tree": 32,
        "mean salary": 27,
        "splitting rule": 18,
        "cutpoint": 17,
        "group exercise": 9,
        "equivalent regression tree": 9,
        "computer": 9,
        "decision trees": 9,
        "salary": 9,
        "vehicle sale prices": 9,
        "binary splits": 9,
        "mean price": 9,
        "recursive binary splitting": 9,
        "maximum tree depth": 9,
        "stopping criterion": 9,
        "training error": 6,
        "gini index": 4,
        "classification trees": 3,
        "classification error rate": 3,
        "tree diagram": 2,
        "predicted probability": 2,
        "response variable": 2,
        "splitting criteria": 2,
        "decision tree algorithm": 2,
        "mean response value": 1,
        "observation": 1,
        "predictive feature": 1,
        "high": 1,
        "high school graduation rate": 1,
        "high population density": 1,
        "continuous response": 1,
        "regression trees": 1,
        "categorical response": 1,
        "mean response": 1,
        "total variance": 1,
        "training observations": 1,
        "maximum value": 1,
        "node purity": 1,
        "titanic": 1,
        "sex": 1,
        "age": 1
    },
    "major league baseball": {
        "regression tree": 32,
        "mean salary": 27,
        "splitting rule": 18,
        "cutpoint": 17,
        "group exercise": 9,
        "equivalent regression tree": 9,
        "computer": 9,
        "decision trees": 9,
        "salary": 9,
        "vehicle sale prices": 9,
        "binary splits": 9,
        "mean price": 9,
        "recursive binary splitting": 9,
        "maximum tree depth": 9,
        "stopping criterion": 9,
        "training error": 6,
        "gini index": 4,
        "classification trees": 3,
        "classification error rate": 3,
        "tree diagram": 2,
        "predicted probability": 2,
        "response variable": 2,
        "splitting criteria": 2,
        "decision tree algorithm": 2,
        "mean response value": 1,
        "observation": 1,
        "predictive feature": 1,
        "high": 1,
        "high school graduation rate": 1,
        "high population density": 1,
        "continuous response": 1,
        "regression trees": 1,
        "categorical response": 1,
        "mean response": 1,
        "total variance": 1,
        "training observations": 1,
        "maximum value": 1,
        "node purity": 1,
        "titanic": 1,
        "sex": 1,
        "age": 1
    },
    "regular expressions": {
        "metacharacters": 16,
        "regexr": 14,
        "character classes": 14,
        "character class": 14,
        "test sentence": 13,
        "literals": 12,
        "regular expression syntax": 10,
        "regex": 8,
        "basic regular expression syntax": 6,
        "brackets": 6,
        "capital": 5,
        "character class negation": 4,
        "solution breakdown": 4,
        "text snippet": 4,
        "shorthand character classes": 4,
        "anchor": 4,
        "variable names": 4,
        "underscores": 4,
        "alphanumeric characters": 4,
        "python assert": 4,
        "complements": 4,
        "consonants": 4,
        "parentheses": 4,
        "regular expression": 3,
        "regular expressions": 3,
        "6": 3,
        "regexes": 3,
        "match object": 3,
        "us phone number": 3,
        "area code": 3,
        "challenge 14": 3,
        "challenge 13": 3,
        "uring group skills": 3,
        "non-": 3,
        "sql tables": 2,
        "anothertable": 2,
        "onetable": 2,
        "yetathird": 2,
        "column variables": 2,
        "valid variable names": 2,
        "equals sign": 2,
        "input string": 2,
        "equality string": 2,
        "gzip module": 2,
        "challenge 7": 2,
        "challenge 6": 2,
        "pattern object": 2,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "matching substring": 1,
        "re module": 1,
        "match object instances": 1,
        "numeric codes": 1,
        "data entry errors": 1,
        "robots": 1,
        "challenge 15": 1
    },
    "double quotes": {
        "string methods": 23,
        "math module": 15,
        "string values": 12,
        "replace method": 11,
        "string value": 11,
        "final expression": 11,
        "zfill": 11,
        "decimal point": 11,
        "len": 11,
        "pi": 10,
        "natural logarithm": 10,
        "int value float": 10,
        "float value": 10,
        "type function": 9,
        "wolfram mathworld": 8,
        "modules": 8,
        "sine function": 8,
        "image function": 7,
        "web pages": 7,
        "arithmetic operators": 6,
        "donald knuth": 5,
        "string method lower": 5,
        "lists": 4,
        "square brackets": 3,
        "hash map": 2,
        "phonebook": 2,
        "programming": 2,
        "stackoverflow": 1,
        "stack overflow": 1,
        "conversion function": 1
    },
    "lambda functions": {
        "hamlettext": 11,
        "iloc": 9,
        "keyword arguments": 7,
        "numpy module functions": 7,
        "broadcasting": 7,
        "random numbers": 6,
        "numpy functions": 6,
        "hamletwords": 6,
        "dfcars": 6,
        "listiness property": 6,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "positional properties": 4,
        "ate": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "txt": 4,
        "listiness": 4,
        "isprime": 3,
        "iterate": 3,
        "numpy array constructors": 3,
        "64 bit": 3,
        "floating point": 3,
        "random constructor": 3,
        "python lists": 3,
        "vector operations": 3,
        "readability": 3,
        "computer chips": 3,
        "lists": 3,
        "matrix multiplication": 3,
        "mean": 3,
        "dictionary keys": 3,
        "one dimensional iteration": 2,
        "idiom": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "count method": 1,
        "dictionary comprehension": 1,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "isprime": {
        "hamlettext": 11,
        "iloc": 9,
        "keyword arguments": 7,
        "numpy module functions": 7,
        "broadcasting": 7,
        "random numbers": 6,
        "numpy functions": 6,
        "hamletwords": 6,
        "dfcars": 6,
        "listiness property": 6,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "positional properties": 4,
        "ate": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "txt": 4,
        "listiness": 4,
        "isprime": 3,
        "iterate": 3,
        "numpy array constructors": 3,
        "64 bit": 3,
        "floating point": 3,
        "random constructor": 3,
        "python lists": 3,
        "vector operations": 3,
        "readability": 3,
        "computer chips": 3,
        "lists": 3,
        "matrix multiplication": 3,
        "mean": 3,
        "dictionary keys": 3,
        "one dimensional iteration": 2,
        "idiom": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "count method": 1,
        "dictionary comprehension": 1,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "dummy variables": {
        "gre score": 13,
        "helper function": 12,
        "dummy variables": 10,
        "dtree": 9,
        "decisiontreeclassifier()": 9,
        "admission rate": 8,
        "confidence interval": 8,
        "uncertainty": 8,
        "prestige levels": 8,
        "mean probability": 8,
        "admission levels": 8,
        "gpa": 8,
        "prestige": 8,
        "pandas function": 7,
        "pivot table": 7,
        "bar chart": 7,
        "undergraduate schools": 7,
        "score": 7,
        "map() function": 7,
        "admission": 6,
        "united": 4,
        "us airways": 4,
        "continental express": 4,
        "continental": 4,
        "american eagle": 4,
        "delta mq": 4,
        "atlantic coast": 4,
        "comair": 4,
        "bar plot": 4,
        "flight status": 4,
        "crosstab": 4,
        "odds ratio": 4,
        "ucla": 4,
        "predicted probability": 4,
        "maximum value": 4,
        "cartesian()": 4,
        "flight delay prediction": 3,
        "confusion matrix": 1
    },
    "assignments tab": {
        "list comprehensions": 16,
        "code cell": 6,
        "tokenize": 5,
        "normalized weight": 5,
        "datapath": 4,
        "subject line": 4,
        "assertion test": 4,
        "map()": 4,
        "punctuation marks": 3,
        "alphanumerical characters": 3,
        "fileid": 3,
        "nltk corpus": 3,
        "iata codes": 3,
        "base directory": 3,
        "integers": 3,
        "spam label array": 3,
        "scikit learn": 3,
        "spam arrays": 3,
        "ham label array": 3,
        "wordnet synset": 3,
        "departure delay": 3,
        "minimum count": 3,
        "networkx graph": 3,
        "int value": 3,
        "python dictionary": 3,
        "testing sets": 3,
        "pandas dataframes": 3,
        "map function": 3,
        "2001 flight data": 2,
        "lexical diversity": 2,
        "arrdealy": 2,
        "depdelay": 2,
        "rdd code": 2,
        "labeledpoint": 2,
        "arrival delay": 2,
        "default parameters": 2,
        "iterations": 2,
        "cumulative distribution function": 2,
        "selection": 2,
        "counting": 2,
        "spring layout": 2,
        "dictionaries": 2,
        "json file": 2,
        "python 3 notebook": 2,
        "course docker image": 2,
        "ipython notebooks": 2,
        "test case": 2,
        "double for loop": 2,
        "nested list": 2,
        "functional programming": 2,
        "inner loop": 2,
        "outer loop": 2,
        "long words": 2,
        "return value": 2,
        "zeroto1": 2,
        "pivot table": 2,
        "book recommendations": 2,
        "recommender system": 2,
        "ratings matrix": 2,
        "cosine similarity": 2,
        "single user recommendations": 2,
        "current temperature": 1,
        "functoin": 1,
        "pandas data frame": 1,
        "encoding option": 1,
        "flight cancellations": 1,
        "figure object": 1,
        "bar chart": 1,
        "axes object": 1,
        "axis labels": 1,
        "census csv file": 1,
        "most common words": 1,
        "most": 1,
        "hapaxes": 1,
        "acy airpot": 1,
        "logisticregression": 1,
        "probability mass function": 1,
        "plot probability mass function": 1,
        "empirical": 1,
        "unbiased estimator": 1,
        "wikipedia": 1,
        "empirical distibution functions": 1,
        "depdelay column": 1,
        "json string": 1,
        "json strings": 1,
        "iata": 1,
        "output file": 1,
        "number count": 1,
        "cell type": 1,
        "common movie interests": 1,
        "common movie interest": 1,
        "common": 1,
        "filter()": 1,
        "hashtags": 1,
        "actualelapsedtime": 1,
        "optional parameter bandwidth": 1,
        "kernel density estimation": 1,
        "x axis label": 1,
        "kernal density estimation": 1,
        "string type": 1,
        "str()": 1,
        "conditionals": 1,
        "spam classification": 1,
        "tfidfvectorizer": 1,
        "bigrams": 1,
        "linearsvc": 1,
        "unigrams": 1,
        "stop words": 1,
        "pivot dataframe": 1,
        "masked array": 1,
        "books dataframe": 1,
        "nltk": 1,
        "pointwise mutual information": 1,
        "pmi": 1,
        "trigrams": 1,
        "speech tagging": 1,
        "default tagger": 1,
        "pos tagging": 1,
        "universal tagger": 1
    },
    "default argument values": {
        "hamlettext": 11,
        "iloc": 9,
        "keyword arguments": 7,
        "numpy module functions": 7,
        "broadcasting": 7,
        "random numbers": 6,
        "numpy functions": 6,
        "hamletwords": 6,
        "dfcars": 6,
        "listiness property": 6,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "positional properties": 4,
        "ate": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "txt": 4,
        "listiness": 4,
        "iterate": 3,
        "numpy array constructors": 3,
        "64 bit": 3,
        "floating point": 3,
        "random constructor": 3,
        "python lists": 3,
        "vector operations": 3,
        "readability": 3,
        "computer chips": 3,
        "lists": 3,
        "matrix multiplication": 3,
        "mean": 3,
        "dictionary keys": 3,
        "one dimensional iteration": 2,
        "idiom": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "count method": 1,
        "dictionary comprehension": 1,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "compound expressions": {
        "string methods": 23,
        "math module": 15,
        "string values": 12,
        "replace method": 11,
        "string value": 11,
        "final expression": 11,
        "zfill": 11,
        "decimal point": 11,
        "len": 11,
        "pi": 10,
        "natural logarithm": 10,
        "int value float": 10,
        "float value": 10,
        "type function": 9,
        "wolfram mathworld": 8,
        "modules": 8,
        "sine function": 8,
        "image function": 7,
        "web pages": 7,
        "arithmetic operators": 6,
        "donald knuth": 5,
        "string method lower": 5,
        "lists": 4,
        "square brackets": 3,
        "stackoverflow": 1,
        "stack overflow": 1,
        "conversion function": 1,
        "rotten tomatoes": 1,
        "revenue": 1
    },
    "lendingclub": {
        "probability": 18,
        "gradient boosted trees": 12,
        "false positives": 12,
        "risky loans": 10,
        "learning algorithm": 10,
        "validation data": 10,
        "model parameters": 10,
        "multiple decision trees": 10,
        "boosted trees": 10,
        "ensemble classifier": 10,
        "predictive power": 10,
        "sample validation data": 10,
        "safe loan": 10,
        "predict method": 10,
        "prediction probabilities": 10,
        "false negatives": 6,
        "prediction accuracy": 6,
        "boosted trees model": 6,
        "decision trees": 6,
        "decision tree model": 6,
        "probabilities": 6,
        "prediction probability": 6,
        "tree models": 4,
        "classification error": 4,
        "training errors": 4,
        "check": 2,
        "ensemble classifiers": 2,
        "boosted tree module": 2,
        "predicitve accuracy": 2,
        "validation errors": 2,
        "classification errors": 2,
        "validation classification error": 2
    },
    "assignment statement": {
        "string methods": 23,
        "math module": 15,
        "string values": 12,
        "replace method": 11,
        "string value": 11,
        "final expression": 11,
        "zfill": 11,
        "decimal point": 11,
        "len": 11,
        "pi": 10,
        "natural logarithm": 10,
        "int value float": 10,
        "float value": 10,
        "type function": 9,
        "wolfram mathworld": 8,
        "modules": 8,
        "sine function": 8,
        "image function": 7,
        "web pages": 7,
        "arithmetic operators": 6,
        "donald knuth": 5,
        "string method lower": 5,
        "lists": 4,
        "square brackets": 3,
        "stackoverflow": 1,
        "stack overflow": 1,
        "conversion function": 1
    },
    "string value": {
        "string methods": 23,
        "math module": 15,
        "string values": 12,
        "replace method": 11,
        "string value": 11,
        "final expression": 11,
        "zfill": 11,
        "decimal point": 11,
        "len": 11,
        "pi": 10,
        "natural logarithm": 10,
        "int value float": 10,
        "float value": 10,
        "type function": 9,
        "wolfram mathworld": 8,
        "modules": 8,
        "sine function": 8,
        "image function": 7,
        "web pages": 7,
        "arithmetic operators": 6,
        "donald knuth": 5,
        "string method lower": 5,
        "lists": 4,
        "square brackets": 3,
        "stackoverflow": 1,
        "stack overflow": 1,
        "conversion function": 1
    },
    "text programming": {
        "string methods": 23,
        "math module": 15,
        "string values": 12,
        "replace method": 11,
        "string value": 11,
        "final expression": 11,
        "zfill": 11,
        "decimal point": 11,
        "len": 11,
        "pi": 10,
        "natural logarithm": 10,
        "int value float": 10,
        "float value": 10,
        "type function": 9,
        "wolfram mathworld": 8,
        "modules": 8,
        "sine function": 8,
        "image function": 7,
        "web pages": 7,
        "arithmetic operators": 6,
        "donald knuth": 5,
        "string method lower": 5,
        "lists": 4,
        "square brackets": 3,
        "stackoverflow": 1,
        "stack overflow": 1,
        "conversion function": 1
    },
    "single quotes": {
        "string methods": 23,
        "math module": 15,
        "string values": 12,
        "replace method": 11,
        "string value": 11,
        "final expression": 11,
        "zfill": 11,
        "decimal point": 11,
        "len": 11,
        "pi": 10,
        "natural logarithm": 10,
        "int value float": 10,
        "float value": 10,
        "type function": 9,
        "wolfram mathworld": 8,
        "modules": 8,
        "sine function": 8,
        "image function": 7,
        "web pages": 7,
        "arithmetic operators": 6,
        "donald knuth": 5,
        "string method lower": 5,
        "lists": 4,
        "square brackets": 3,
        "stackoverflow": 1,
        "stack overflow": 1,
        "conversion function": 1
    },
    "matrices": {
        "matrices": 19,
        "multiplication": 12,
        "bfs": 10,
        "cosine": 8,
        "matrices multiplication": 8,
        "special matrices": 8,
        "breadth first search": 8,
        "uppercase": 7,
        "matrix": 7,
        "helper function": 6,
        "vector print": 6,
        "vectors": 6,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "scaling": 4,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3,
        "dist array": 3,
        "prev array": 3,
        "depth first search": 3,
        "50x50 array": 2,
        "indexing": 2,
        "x": 2,
        "file1": 2,
        "colors": 2,
        "connected components": 2,
        "augmented vector": 2,
        "outer product": 2,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "stackoverflow": 1,
        "stack overflow": 1,
        "python list": 1,
        "pixel triplets": 1,
        "image processing": 1,
        "image": 1,
        "image1": 1,
        "string method split": 1,
        "color intensity": 1,
        "text file": 1,
        "expanded image": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1,
        "summer images": 1,
        "adjacency matrix": 1,
        "algebraic connectivity": 1,
        "laplacian matrix": 1,
        "formula": 1,
        "quadratic regression": 1,
        "medv": 1,
        "python functions": 1,
        "patsy": 1,
        "dummy variables": 1,
        "categorical variables": 1,
        "patsy formulas": 1,
        "crim": 1,
        "fit models": 1,
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1,
        "matrix multiplications": 1,
        "traceback": 1,
        "matrix multiplication": 1,
        "size mismatch": 1,
        "runtimeerror": 1,
        "lower left matrix": 1,
        "outer product average": 1,
        "average": 1
    },
    "periodic signals": {
        "ls periodogram": 11,
        "periodic signals": 10,
        "periodic signal": 10,
        "fourier transforms": 8,
        "fourier transform": 8,
        "fourier pairs": 8,
        "nyquist frequency": 8,
        "periodogram": 8,
        "simulated data": 6,
        "fourier analysis": 6,
        "continuous signal": 6,
        "power spectrum": 6,
        "discrete fourier transform": 6,
        "dsfp": 4,
        "fourier transform operator": 4,
        "time shift": 4,
        "squared amplitude": 4,
        "linear operator": 4,
        "dominant frequency": 4,
        "power spectral density": 4,
        "phase shift": 4,
        "convolution theorem": 4,
        "convolution": 4,
        "frequncy information": 4,
        "real world observations": 4,
        "astrophysical sources": 4,
        "nyquist frequency limit": 4,
        "even samples": 4,
        "classical periodogram": 4,
        "period detection methods": 2,
        "astronomical data": 2,
        "phase folded light curve": 2,
        "helper functions": 2,
        "repetitive": 2,
        "gaussian noise": 2,
        "phase folded data": 2,
        "astronomical time series": 2,
        "pulsating stars": 2,
        "unevenly sampled data": 2,
        "nyquist limit": 2,
        "sampling interval": 2,
        "window function": 2,
        "continuous integral": 2,
        "continous signal": 2,
        "finite interval": 2,
        "dirac comb function": 2,
        "delta functions": 2,
        "schuster periodogram": 2,
        "irregular sampling": 2,
        "observation times": 2,
        "kepler data": 2,
        "statistical": 2,
        "sinusoid model": 2,
        "non-varying reference model": 2,
        "individual measurements": 2,
        "observational uncertainty": 2,
        "uncertainties": 2,
        "scipy package": 2,
        "maximum frequnecy": 2,
        "minimum frequency": 2
    },
    "scientific python": {
        "iloc": 9,
        "random numbers": 7,
        "numpy functions": 6,
        "dfcars": 6,
        "listiness property": 6,
        "python lists": 5,
        "listiness": 4,
        "iterate": 3,
        "numpy module functions": 3,
        "numpy array constructors": 3,
        "64 bit": 3,
        "floating point": 3,
        "random constructor": 3,
        "vector operations": 3,
        "readability": 3,
        "computer chips": 3,
        "broadcasting": 3,
        "2d arrays": 3,
        "lists": 3,
        "matrix multiplication": 3,
        "mean": 3,
        "rear axle ratio": 3,
        "one dimensional iteration": 2,
        "idiom": 2,
        "contiguous memory": 2,
        "floating": 2,
        "type conversion": 2,
        "lic": 2,
        "iteration": 2,
        "horsepower": 2,
        "displacement": 2,
        "biometrics": 2,
        "multiple regression models": 2,
        "automobile design": 2,
        "forward gears": 2,
        "carburetors": 2,
        "fuel consumption": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "dataframe structure": 2,
        "automobile data": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "array computation package": 1,
        "fourier transforms": 1,
        "linear algebra": 1,
        "solvers": 1,
        "interpolation routines": 1,
        "spare matrices": 1,
        "optimization": 1,
        "scipy": 1,
        "signal processing methods": 1,
        "basic differential equations": 1,
        "numeric integration": 1,
        "matlab": 1,
        "python program": 1,
        "united states": 1,
        "canada": 1,
        "dictionary key": 1,
        "boolean variable": 1,
        "ordered interpretation": 1,
        "cylinders": 1,
        "categorical data": 1,
        "dtypes attribute": 1,
        "op": 1,
        "garbage collector": 1,
        "functional programming": 1,
        "h": 1,
        "spark": 1,
        "global matplotlib plotting": 1,
        "seaborn package": 1,
        "notebook": 1,
        "frequency distribution": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "restaurants": {
        "postal code": 13,
        "94602": 10,
        "businesses": 9,
        "zip code": 8,
        "zip codes": 8,
        "granularity": 7,
        "bus data frame": 6,
        "business table": 6,
        "zip code values": 6,
        "counts": 6,
        "fillna": 5,
        "extended zip codes": 5,
        "extended postal codes": 5,
        "94545": 5,
        "restaurants": 4,
        "foodwheel": 4,
        "restautants": 4,
        "pie chart": 4,
        "axis": 4,
        "cuisine": 4,
        "plt": 4,
        "function split": 4,
        "longitude values": 4,
        "longitude": 4,
        "latitude": 4,
        "bar chart": 4,
        "businesses data frame": 4,
        "variable postal code": 4,
        "iloc": 4,
        "missing zipcode values": 4,
        "internet": 4,
        "94609": 4,
        "san francisco": 4,
        "group orders": 3,
        "average order amount": 3,
        "missing zip codes": 3,
        "business dataframe": 3,
        "population": 3,
        "nonmissing values": 3,
        "validzip variable": 3,
        "python type command": 2,
        "search engine": 2,
        "error bars": 2,
        "average order": 2,
        "error capsize": 2,
        "standard deviations": 2,
        "inspection": 2,
        "inspection dataframe": 2,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "series isnull method": 1,
        "binary array": 1,
        "incorrect zip codes": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "business name": 1,
        "zip": 1,
        "titel": 1
    },
    "regexp": {
        "kernel matrix": 7,
        "test boxes": 6,
        "periodic data": 6,
        "teaching": 5,
        "covariance matrix": 5,
        "vector machines": 4,
        "data generating function": 4,
        "regression": 4,
        "kernel function": 4,
        "gaussian process regression": 4,
        "univariate problem": 4,
        "error function": 4,
        "covariance": 4,
        "predictive distribution": 4,
        "training points": 4,
        "trainingset": 3,
        "data vectors": 3,
        "marginal distribution": 3,
        "vectorization": 3,
        "inner loop": 3,
        "mean function": 3,
        "model uncertainty": 3,
        "bishop": 3,
        "sample mean functions": 3,
        "dashed line": 3,
        "theta values": 3,
        "uncertainty": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "generative process": 3,
        "conditional models": 3,
        "unnormalized probabilities": 2,
        "conditional probability": 2,
        "mlp": 2,
        "1": 2,
        "overfitting machine learning": 2,
        "mean": 2,
        "toy data": 2,
        "cosine function": 2,
        "polynomials": 2,
        "prediction function": 2,
        "regularized linear regression": 2,
        "prediction error": 2,
        "model selection": 2,
        "hyperparameters": 2,
        "target noise": 2,
        "periodic data generator": 2,
        "2d toy dataset": 2,
        "linearly separable dataset": 2,
        "multivariate gaussian distribution": 2,
        "test cells": 1,
        "mnist": 1,
        "testing arrays": 1,
        "true class labels": 1,
        "istic regression": 1,
        "normalized distribution": 1,
        "multiclass": 1,
        "class label": 1,
        "normalizing factor": 1,
        "unnormalized probability": 1,
        "intermediate vector": 1,
        "datapoint": 1,
        "ifcation neural network": 1,
        "derive gradient equations": 1,
        "grad": 1,
        "bias parameters": 1,
        "ients": 1,
        "gradient calculations": 1,
        "gradient computations": 1,
        "gradient vectors": 1,
        "maximum points": 1,
        "likelihood function": 1,
        "stochastic gradient descent": 1,
        "validation": 1,
        "sgd iterations": 1,
        "visualize weights": 1,
        "true class label": 1,
        "highest probability": 1,
        "multilayer perceptron": 1,
        "neural network": 1,
        "probability normalizing factor": 1,
        "multiclass logistic regression model": 1,
        "sigmoid activation function": 1,
        "logistic regression classifier": 1,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "hidden layer": 1,
        "non-linear activation function": 1,
        "gaussian": 1,
        "misclassifications": 1,
        "convolutional networks": 1,
        "mlp model": 1,
        "test": 1,
        "mis": 1,
        "precision": 1,
        "design matrix": 1,
        "bayesian linear regression model": 1,
        "noise precision": 1,
        "optimization problem": 1,
        "maximum margin problem": 1,
        "quadratic programming problem": 1,
        "support vectors": 1,
        "quadratic function": 1,
        "svm": 1,
        "decision boundary": 1,
        "lagrange multipliers": 1,
        "inequality constraints": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "student card": {
        "kernel matrix": 7,
        "test boxes": 6,
        "periodic data": 6,
        "teaching": 5,
        "covariance matrix": 5,
        "vector machines": 4,
        "data generating function": 4,
        "regression": 4,
        "kernel function": 4,
        "gaussian process regression": 4,
        "univariate problem": 4,
        "error function": 4,
        "covariance": 4,
        "predictive distribution": 4,
        "training points": 4,
        "trainingset": 3,
        "data vectors": 3,
        "marginal distribution": 3,
        "vectorization": 3,
        "inner loop": 3,
        "mean function": 3,
        "model uncertainty": 3,
        "bishop": 3,
        "sample mean functions": 3,
        "dashed line": 3,
        "theta values": 3,
        "uncertainty": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "generative process": 3,
        "conditional models": 3,
        "unnormalized probabilities": 2,
        "conditional probability": 2,
        "mlp": 2,
        "1": 2,
        "overfitting machine learning": 2,
        "mean": 2,
        "toy data": 2,
        "cosine function": 2,
        "polynomials": 2,
        "prediction function": 2,
        "regularized linear regression": 2,
        "prediction error": 2,
        "model selection": 2,
        "hyperparameters": 2,
        "target noise": 2,
        "periodic data generator": 2,
        "2d toy dataset": 2,
        "linearly separable dataset": 2,
        "multivariate gaussian distribution": 2,
        "test cells": 1,
        "mnist": 1,
        "testing arrays": 1,
        "true class labels": 1,
        "istic regression": 1,
        "normalized distribution": 1,
        "multiclass": 1,
        "class label": 1,
        "normalizing factor": 1,
        "unnormalized probability": 1,
        "intermediate vector": 1,
        "datapoint": 1,
        "ifcation neural network": 1,
        "derive gradient equations": 1,
        "grad": 1,
        "bias parameters": 1,
        "ients": 1,
        "gradient calculations": 1,
        "gradient computations": 1,
        "gradient vectors": 1,
        "maximum points": 1,
        "likelihood function": 1,
        "stochastic gradient descent": 1,
        "validation": 1,
        "sgd iterations": 1,
        "visualize weights": 1,
        "true class label": 1,
        "highest probability": 1,
        "multilayer perceptron": 1,
        "neural network": 1,
        "probability normalizing factor": 1,
        "multiclass logistic regression model": 1,
        "sigmoid activation function": 1,
        "logistic regression classifier": 1,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "hidden layer": 1,
        "non-linear activation function": 1,
        "gaussian": 1,
        "misclassifications": 1,
        "convolutional networks": 1,
        "mlp model": 1,
        "test": 1,
        "mis": 1,
        "precision": 1,
        "design matrix": 1,
        "bayesian linear regression model": 1,
        "noise precision": 1,
        "optimization problem": 1,
        "maximum margin problem": 1,
        "quadratic programming problem": 1,
        "support vectors": 1,
        "quadratic function": 1,
        "svm": 1,
        "decision boundary": 1,
        "lagrange multipliers": 1,
        "inequality constraints": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "database table": {
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "fake010": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "column": 1,
        "aliases": 1,
        "sql subqueries": 1,
        "database table": 1,
        "testfeats table": 1
    },
    "python lists": {
        "iloc": 18,
        "dfcars": 12,
        "listiness": 8,
        "numpy functions": 6,
        "listiness property": 6,
        "arrcars": 4,
        "numpy function": 4,
        "genfromtxt": 4,
        "series objects": 4,
        "da rx4": 4,
        "mazda rx4": 4,
        "dictionary syntax": 4,
        "column": 4,
        "python variables": 4,
        "dictionary keys": 4,
        "complex indexing": 4,
        "list operations": 4,
        "statistics": 4,
        "containers": 4,
        "automobile data loaded": 4,
        "attribute columns": 4,
        "numpy methods": 4,
        "itertuples": 4,
        "pandas methods": 4,
        "loc property indexes": 4,
        "iloc indexes": 4,
        "row indices": 4,
        "column attributes": 4,
        "label name": 4,
        "integer position indices": 4,
        "toy dataframe": 4,
        "readability": 3,
        "computer chips": 3,
        "broadcasting": 3,
        "lists": 3,
        "random numbers": 3,
        "matrix multiplication": 3,
        "mean": 3,
        "one dimensional iteration": 2,
        "idiom": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "indexing": 2,
        "dictionary key": 2,
        "dtypes attribute": 2,
        "hist function": 2,
        "listy container": 2,
        "matplotlib hist": 2,
        "seaborn context": 2,
        "axvline": 2,
        "rear axle ratio": 2,
        "plot documentation": 2,
        "plotting commands": 2,
        "file extension": 2,
        "savefig command": 2,
        "saved png": 2,
        "markdown": 2,
        "columns of interest": 2,
        "matplotlib plotting routines": 2,
        "computation time": 1,
        "speedup": 1
    },
    "torch module": {
        "logvar": 23,
        "latent space": 17,
        "pytorch": 13,
        "vae": 11,
        "mixing coefficients": 10,
        "multivariate bernoulli distribution": 10,
        "multivariate": 10,
        "variational lower bound": 10,
        "reconstruction": 9,
        "flattened mnist image": 9,
        "binarized image": 7,
        "handwriting styles": 5,
        "misclassifications": 5,
        "data labels": 5,
        "vector representation": 5,
        "expectation maximization": 5,
        "objective function": 5,
        "log bernoulli loss": 5,
        "negative log bernoulli loss": 5,
        "oulli loss": 5,
        "log": 5,
        "kl term": 5,
        "hyperparameter search": 4,
        "latent variables": 4,
        "derivatives": 3,
        "function reparameterize": 3,
        "sgd": 3,
        "stochastic variable": 3,
        "stochasticity": 3,
        "forward": 2,
        "ened mnist image": 2,
        "forward pass": 2,
        "fl": 2,
        "mnist image": 2,
        "hyperparameters": 2,
        "optimizer": 1,
        "adam": 1
    },
    "graphlab create": {
        "false positives": 13,
        "probability": 9,
        "false negatives": 9,
        "majority class classifier": 8,
        "gradient boosted trees": 6,
        "graphlab create": 6,
        "confusion matrix": 6,
        "true negatives": 6,
        "true positives": 6,
        "incorrect predictions": 6,
        "binary classification": 6,
        "quiz": 6,
        "risky loans": 5,
        "learning algorithm": 5,
        "validation data": 5,
        "model parameters": 5,
        "multiple decision trees": 5,
        "boosted trees": 5,
        "ensemble classifier": 5,
        "predictive power": 5,
        "sample validation data": 5,
        "safe loan": 5,
        "predict method": 5,
        "prediction probabilities": 5,
        "performance metric": 4,
        "correctly classified data points": 4,
        "total data points": 4,
        "prediction accuracy": 3,
        "boosted trees model": 3,
        "decision trees": 3,
        "decision tree model": 3,
        "probabilities": 3,
        "prediction probability": 3,
        "logistic regression classifier": 3,
        "negative sentiments": 2,
        "ratings": 2,
        "word counts": 2,
        "test sets": 2,
        "precision": 2,
        "recall": 2,
        "amazon dataset": 2,
        "sentiment": 2,
        "majority": 2,
        "baseline": 2,
        "majority classifier": 2,
        "majority class prediction": 2,
        "tree models": 2,
        "classification error": 2,
        "training errors": 2,
        "correctly classified reviews": 1,
        "baby product": 1,
        "negative reviews": 1,
        "false alarms": 1,
        "check": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1
    },
    "magnitude system": {
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "fake010": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "individual light curves": {
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "fake010": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "flux measurements": {
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "fake010": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "database": {
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "fake010": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "weighted mean": {
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "fake010": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "objects of interest": {
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "fake010": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "apples to apples": {
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "fake010": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "ifiers": {
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "fake010": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "median absolute deviation": {
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "fake010": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "variable": {
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "fake010": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "photometric measurement": {
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "fake010": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "brightness variations": {
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "fake010": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "logarithmic basis results": {
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "fake010": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "source class": {
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "fake010": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "flux deviations": {
        "database": 16,
        "source fake010": 11,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "variable class": 4,
        "weighted mean flux": 4,
        "case excpetion": 4,
        "source class": 4,
        "mean colors": 4,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "fake010": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "source signals": {
        "ica": 24,
        "integral calculator": 12,
        "numerical approximation": 12,
        "exact expression": 12,
        "gaussian random variable": 12,
        "peakedness": 12,
        "wolfram alpha": 12,
        "online service": 12,
        "whitened measurements": 6,
        "covariance matrix": 6,
        "kurtosis": 6,
        "covariant algorithm": 5,
        "sawtooth": 4,
        "demixing matrices": 4,
        "priors": 3,
        "symmetric": 2,
        "gaussian distribution": 2,
        "random wave": 2,
        "independent random variables": 2,
        "covariance matrices": 2,
        "generated signals": 2,
        "recovered audio sources": 2,
        "normalization constant": 2,
        "gaussian noise source": 2,
        "learning algorithms": 2,
        "block wave": 2,
        "mixing matrix": 2,
        "sine wave": 2,
        "information theory": 2,
        "rotation": 2,
        "eigenvalue decomposition": 2,
        "sinewave": 2,
        "bias": 2,
        "scale changes": 2,
        "sound clip": 2,
        "ambient sounds": 2,
        "gamma": 2,
        "ma": 2,
        "gaussian distributed": 2,
        "audio signals": 2,
        "ize": 1,
        "normalizing constant": 1,
        "gaussian function": 1,
        "triangle histogram": 1,
        "square wave": 1,
        "xw plot": 1,
        "circular pattern": 1,
        "learning algorithm": 1,
        "matrix inversions": 1,
        "source signals": 1,
        "central limit theorem": 1,
        "signal": 1,
        "gaussian distributions": 1,
        "signals sawtooth": 1,
        "historgrams": 1,
        "triangle wave": 1,
        "gray boxes": 1,
        "boxes": 1,
        "diagonal matrix": 1,
        "alogrithm": 1,
        "measurement": 1,
        "gaussian noise": 1,
        "covariance": 1,
        "consistent algorithm": 1,
        "i": 1,
        "whitening process": 1
    },
    "machine learning techniques": {
        "inclusion indicator": 18,
        "data generating process": 10,
        "pystan": 6,
        "missing data": 5,
        "ml algorithms": 5,
        "polling data": 5,
        "oneclasssvm": 5,
        "immersive course": 4,
        "data scientist": 4,
        "bayesian analysis": 4,
        "humans": 4,
        "pelvis": 4,
        "vertebral column data set": 4,
        "uci machine learning repository": 4,
        "spinal cord": 4,
        "pelvic tilt": 4,
        "sacral slope": 4,
        "lumbar spine": 4,
        "patients": 4,
        "pelvic incidence": 4,
        "pelvic radius": 4,
        "lumbar lordosis angle": 4,
        "spondylolisthesis": 4,
        "nervous system": 4,
        "biomechanical features": 4,
        "gausssian distributions": 4,
        "pca": 4,
        "zero mean": 4,
        "function scale": 4,
        "unit variance": 4,
        "standardize()": 4,
        "principal components analysis": 4,
        "pymc": 4,
        "oneclass svm": 3,
        "code cell": 3,
        "data containers": 2,
        "numpy container": 2,
        "regressions": 2,
        "regression models": 2,
        "classical logistic regression": 2,
        "trained model": 2,
        "numerical data": 2,
        "categorical data": 2,
        "average": 2,
        "random forest": 2,
        "relative performance": 2,
        "knn": 2,
        "statistical exposition": 2,
        "distribution": 2,
        "distributions": 2,
        "pymc model": 2,
        "bayesian logistic regression": 2,
        "bayesian logistic regression form": 2,
        "bernoulli method": 2,
        "univariate logistic regression": 2,
        "sigmoid function": 2,
        "bayesian model": 2,
        "computation segment": 2,
        "mcmc procedure": 2,
        "roc scores": 2,
        "non-bayesian logistic": 2,
        "observable variation": 1
    },
    "early stopping conditions": {
        "prediction path": 36,
        "classification error": 32,
        "early stopping conditions": 24,
        "validation error": 18,
        "validation data": 14,
        "lowest classification error": 10,
        "tree model": 9,
        "function classify": 9,
        "predicted class": 9,
        "intermediate node": 6,
        "tree learning algorithm": 6,
        "minimum node size": 6,
        "minimum error reduction": 6,
        "if condition": 6,
        "lowest": 4,
        "error reduction": 3,
        "risky loans": 3,
        "safe loans": 3,
        "misclassified examples": 3,
        "majority class": 3,
        "qu": 3,
        "complexity": 3
    },
    "method": {
        "hamlettext": 11,
        "iloc": 9,
        "keyword arguments": 7,
        "numpy module functions": 7,
        "broadcasting": 7,
        "random numbers": 6,
        "numpy functions": 6,
        "hamletwords": 6,
        "dfcars": 6,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "positional properties": 4,
        "ate": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "txt": 4,
        "listiness": 4,
        "isprime": 3,
        "iterate": 3,
        "numpy array constructors": 3,
        "64 bit": 3,
        "floating point": 3,
        "random constructor": 3,
        "readability": 3,
        "computer chips": 3,
        "lists": 3,
        "matrix multiplication": 3,
        "mean": 3,
        "dictionary keys": 3,
        "one dimensional iteration": 2,
        "idiom": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "count method": 1,
        "dictionary comprehension": 1,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "cvlegend": {
        "cvlegend": 16,
        "countplot": 10,
        "calls dataframe": 10,
        "noise violation": 10,
        "regular bar plot": 9,
        "seaborn plot": 9,
        "vertical bar plot": 8,
        "barh plot type": 7,
        "value counts": 7,
        "noise violation calls": 7,
        "eventtm": 6,
        "fraud crimes": 6,
        "pandas bar plot": 6,
        "interquartile range": 6,
        "aborn": 6,
        "crime type": 6,
        "pandas boxplot": 6,
        "seaborn boxplot": 6,
        "answer3b": 6,
        "series class": 4,
        "seaborn library": 4,
        "countplot method": 4,
        "pandas plot": 4,
        "order parameter": 4,
        "cvdow field": 4,
        "coolindex": 4,
        "total noise violations": 4,
        "crime events": 3,
        "fraud": 3,
        "calls reporting": 3,
        "reasoning": 3,
        "offense": 2,
        "seaborn documentation": 2,
        "orn": 2,
        "series": 2,
        "pandas documentation": 2,
        "high level plotting library": 2,
        "matplotlib commands": 2,
        "plotting pandas": 2,
        "data visualization": 2,
        "se": 2,
        "rotation argument": 2,
        "ense": 1,
        "larceny": 1
    },
    "3d object": {
        "paraview": 19,
        "structured grid": 8,
        "temperature": 8,
        "vtk": 6,
        "pyevtk": 6,
        "pipeline browser": 4,
        "pvpython": 4,
        "python interpreter": 4,
        "layout panel": 4,
        "setproperties": 4,
        "setdisplayproperties": 4,
        "mesh cells": 4,
        "rectilinear grid": 4,
        "unstructured grid": 4,
        "polygonal data": 4,
        "mesh dimensions": 4,
        "vtk files": 4,
        "point data": 4,
        "pressure": 4,
        "properties panel": 2,
        "layout": 2,
        "pipeline module": 2,
        "data ingestion": 2,
        "ta resolution": 2,
        "filters menu": 2,
        "shrunken mesh cells": 2,
        "dsfp conda environment": 2,
        "internal python interpreter": 2,
        "sphere1": 2,
        "shrink": 2,
        "geometric represenation": 2,
        "filters": 2,
        "rendering": 2,
        "object oriented approach": 2,
        "shrinkfactor": 2,
        "opacity": 2,
        "sphere": 2,
        "sphereinstance": 2,
        "spheredisplay": 2,
        "interactive commands": 2,
        "break out problem": 2,
        "astronomical data": 2,
        "binary files": 2,
        "3d rendering programs": 2,
        "cells data": 2,
        "topology": 2,
        "structured points": 2,
        "data set properties": 2,
        "cell dimensions": 2,
        "<img style": 2,
        "representational freedom": 2,
        "cell data": 2,
        "python package": 2,
        "density": 2,
        "independent gaussian distributions": 2,
        "random draws": 2,
        "imentions": 2,
        "point gaussian": 2,
        "gaia data": 2,
        "random data": 2,
        "volume renderings": 2,
        "cell widths": 2,
        "tempurature": 2,
        "temparture": 2,
        "vtk file": 2,
        "volume rendering": 2,
        "3d arrays": 2,
        "vtk binary files": 2,
        "utilities": 2,
        "3d rendering": 2,
        "statistical analysis": 2,
        "iris machine learning": 2,
        "data sets": 2,
        "size": 1,
        "iris data": 1,
        "spatial coordinates": 1
    },
    "interactive sphere": {
        "paraview": 19,
        "structured grid": 8,
        "temperature": 8,
        "vtk": 6,
        "pyevtk": 6,
        "pipeline browser": 4,
        "pvpython": 4,
        "python interpreter": 4,
        "layout panel": 4,
        "setproperties": 4,
        "setdisplayproperties": 4,
        "mesh cells": 4,
        "rectilinear grid": 4,
        "unstructured grid": 4,
        "polygonal data": 4,
        "mesh dimensions": 4,
        "vtk files": 4,
        "point data": 4,
        "pressure": 4,
        "properties panel": 2,
        "layout": 2,
        "pipeline module": 2,
        "data ingestion": 2,
        "ta resolution": 2,
        "filters menu": 2,
        "shrunken mesh cells": 2,
        "dsfp conda environment": 2,
        "internal python interpreter": 2,
        "sphere1": 2,
        "shrink": 2,
        "geometric represenation": 2,
        "filters": 2,
        "rendering": 2,
        "object oriented approach": 2,
        "shrinkfactor": 2,
        "opacity": 2,
        "sphere": 2,
        "sphereinstance": 2,
        "spheredisplay": 2,
        "interactive commands": 2,
        "break out problem": 2,
        "astronomical data": 2,
        "binary files": 2,
        "3d rendering programs": 2,
        "cells data": 2,
        "topology": 2,
        "structured points": 2,
        "data set properties": 2,
        "cell dimensions": 2,
        "<img style": 2,
        "representational freedom": 2,
        "cell data": 2,
        "python package": 2,
        "density": 2,
        "independent gaussian distributions": 2,
        "random draws": 2,
        "imentions": 2,
        "point gaussian": 2,
        "gaia data": 2,
        "random data": 2,
        "volume renderings": 2,
        "cell widths": 2,
        "tempurature": 2,
        "temparture": 2,
        "vtk file": 2,
        "volume rendering": 2,
        "3d arrays": 2,
        "vtk binary files": 2,
        "utilities": 2,
        "3d rendering": 2,
        "statistical analysis": 2,
        "iris machine learning": 2,
        "data sets": 2,
        "size": 1,
        "iris data": 1,
        "spatial coordinates": 1
    },
    "python package": {
        "twitter": 16,
        "api": 8,
        "tweepy": 8,
        "authentication keys": 8,
        "tweetdeck": 5,
        "academic statisticians": 4,
        "r": 4,
        "data analysts": 4,
        "programming language": 4,
        "automatic tests": 4,
        "imports": 4,
        "tweepy package": 4,
        "conda environment": 4,
        "twitter developer account": 4,
        "web site": 4,
        "access token secret": 4,
        "access token": 4,
        "consumer secret": 4,
        "developer account": 4,
        "twitter account": 4,
        "templates": 4,
        "coordinates": 4,
        "status object": 4,
        "pandas table json": 4,
        "twitter api": 4,
        "python object": 4,
        "tweetsourcing": 4,
        "pandas documentation": 4,
        "null hypothesis": 4,
        "lstat": 3,
        "json": 3,
        "string method": 3,
        "constant term": 2,
        "formula": 2,
        "quadratic regression": 2,
        "medv": 2,
        "python functions": 2,
        "patsy": 2,
        "dummy variables": 2,
        "categorical variables": 2,
        "patsy formulas": 2,
        "crim": 2,
        "fit models": 2,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "statistical test": 2,
        "numpy functions": 2,
        "hypothesis test": 2,
        "table": 2,
        "datascience": 2,
        "data 8": 2,
        "twitter web client": 2,
        "house value data": 1,
        "house value": 1,
        "rm variable": 1,
        "predicted value": 1,
        "dependent variable": 1,
        "predicted values": 1,
        "rm regressor": 1,
        "variable combinations": 1,
        "exercise": 1,
        "trump tweets": 1
    },
    "plotting capabilities": {
        "income": 34,
        "steps column": 18,
        "age": 18,
        "income10": 18,
        "age column": 9,
        "income column": 9,
        "missing data": 9,
        "income values": 9,
        "prediction ability": 9,
        "log transformation": 9,
        "polyfit": 9,
        "income10 data": 8,
        "data transformation": 8,
        "describe pandas method": 7,
        "corrs": 6,
        "pairwise correlations": 6,
        "pandas method": 6,
        "quantile method": 6,
        "average income": 6,
        "output parameters": 4,
        "integer age": 3,
        "prediction power": 1,
        "steps": 1
    },
    "andas": {
        "income": 34,
        "steps column": 18,
        "age": 18,
        "income10": 18,
        "age column": 9,
        "income column": 9,
        "missing data": 9,
        "income values": 9,
        "prediction ability": 9,
        "log transformation": 9,
        "polyfit": 9,
        "income10 data": 8,
        "data transformation": 8,
        "describe pandas method": 7,
        "corrs": 6,
        "pairwise correlations": 6,
        "pandas method": 6,
        "quantile method": 6,
        "average income": 6,
        "output parameters": 4,
        "integer age": 3,
        "prediction power": 1,
        "steps": 1
    },
    "apostrophes": {
        "string methods": 20,
        "math module": 15,
        "string values": 10,
        "final expression": 10,
        "replace method": 10,
        "string value": 10,
        "zfill": 10,
        "decimal point": 10,
        "int value float": 10,
        "float value": 10,
        "len": 10,
        "type function": 9,
        "pi": 9,
        "natural logarithm": 9,
        "wolfram mathworld": 8,
        "modules": 8,
        "sine function": 8,
        "image function": 7,
        "web pages": 7,
        "arithmetic operators": 6,
        "donald knuth": 5,
        "string method lower": 5,
        "lists": 4,
        "square brackets": 3
    },
    "lasso regression": {
        "linearregression object": 8,
        "polynomialfeatures": 7,
        "3rd degree polynomial": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ridgecv": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "ridge regression": 5,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "population": 2,
        "score()": 2,
        "random distribution": 1,
        "predictor": 1,
        "dataset": 1,
        "regression methods": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "testing sets": 1,
        "bootstrap": 1,
        "confidence intervals": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "confidence interval": 1,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "multilinear regression": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "toy vector": 1,
        "linearregression model": 1,
        "data matrix": 1
    },
    "squared exponential gp": {
        "predictive distribution": 11,
        "gp object": 9,
        "time delays": 9,
        "minimize function": 8,
        "white noise standard deviation": 6,
        "covariance matrix": 6,
        "predictive mean": 6,
        "posterior distribution": 6,
        "optimization": 5,
        "confidence intervals": 5,
        "neg log likelihood": 5,
        "gp": 5,
        "likelihood function": 4,
        "mcmc": 4,
        "expsquaredkernel": 3,
        "parametrisation": 3,
        "kernelname": 3,
        "george": 3,
        "squared exponential kernel": 3,
        "length scale": 3,
        "output variance": 3,
        "gp model": 3,
        "ball park values": 3,
        "compute method": 3,
        "george tutorial": 3,
        "neg log likelihood function": 3,
        "logarithms": 3,
        "log parameters": 3,
        "likelihood": 3,
        "maxim": 3,
        "parameter vector": 3,
        "grid locations": 3,
        "the": 3,
        "emcee": 3,
        "component kernel": 3,
        "overal kernel": 3,
        "joint model": 3,
        "gradient functions": 3,
        "predictive means": 3,
        "individual components": 3,
        "agn reverberation mapping": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "likelihood surface": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "boolean variable": 2,
        "delayed times": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "gp hps": 2,
        "uncertainty estimates": 2,
        "posterior probability": 2,
        "posterior function": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "apply function": {
        "measurement systems": 22,
        "inches": 22,
        "height data": 22,
        "values": 14,
        "cs data": 12,
        "standardize": 11,
        "average heights": 8,
        "alpha value": 8,
        "statistical test": 8,
        "significance": 8,
        "women": 8,
        "cogsci": 8,
        "compsci": 8,
        "majors": 8,
        "average height values": 6,
        "pivot table": 6,
        "confounding variable": 6,
        "ordinary least squares": 6,
        "linear models": 6,
        "design matrices": 6,
        "patsy": 6
    },
    "regression coefficients": {
        "ridgecv": 7,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "ridge regression": 5,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "correlation": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "population": 2,
        "score()": 2,
        "linearregression object": 2,
        "random distribution": 1,
        "predictor": 1,
        "dataset": 1,
        "regression methods": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "testing sets": 1,
        "bootstrap": 1,
        "confidence intervals": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "confidence interval": 1,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "multilinear regression": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "numpy documention": {
        "iloc": 9,
        "random numbers": 6,
        "numpy functions": 6,
        "dfcars": 6,
        "listiness property": 6,
        "python lists": 5,
        "listiness": 4,
        "iterate": 3,
        "numpy module functions": 3,
        "numpy array constructors": 3,
        "64 bit": 3,
        "floating point": 3,
        "random constructor": 3,
        "vector operations": 3,
        "readability": 3,
        "computer chips": 3,
        "broadcasting": 3,
        "2d arrays": 3,
        "lists": 3,
        "matrix multiplication": 3,
        "mean": 3,
        "rear axle ratio": 3,
        "one dimensional iteration": 2,
        "idiom": 2,
        "contiguous memory": 2,
        "floating": 2,
        "type conversion": 2,
        "lic": 2,
        "iteration": 2,
        "horsepower": 2,
        "displacement": 2,
        "biometrics": 2,
        "multiple regression models": 2,
        "automobile design": 2,
        "forward gears": 2,
        "carburetors": 2,
        "fuel consumption": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "dataframe structure": 2,
        "automobile data": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "boolean variable": 1,
        "ordered interpretation": 1,
        "cylinders": 1,
        "categorical data": 1,
        "dtypes attribute": 1,
        "op": 1,
        "garbage collector": 1,
        "functional programming": 1,
        "h": 1,
        "spark": 1,
        "global matplotlib plotting": 1,
        "seaborn package": 1,
        "notebook": 1,
        "frequency distribution": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "exponential cdf": {
        "normal probability plot": 30,
        "exponential distribution": 12,
        "ccdf": 10,
        "normal model": 10,
        "adult weights": 10,
        "lognormal model": 10,
        "pareto world": 8,
        "birth times": 5,
        "interarrival times": 5,
        "nsfg": 5,
        "observed cdf": 5,
        "model": 5,
        "normality": 5,
        "visual test": 5,
        "birth weights": 5,
        "preterm babies": 5,
        "full term births": 5,
        "adult weight": 5,
        "log weights": 5,
        "pareto model": 5,
        "straight": 5,
        "pareto variate": 5,
        "blue man group": 5,
        "stats": 5,
        "analytic distributions": 5,
        "scipy": 5,
        "frozen random variable": 5,
        "pareto distribution": 4,
        "human height": 4,
        "mean height": 4,
        "weibull distribution": 2,
        "cdf": 1,
        "failure analysis": 1,
        "empirical distribution": 1,
        "analytic distribution": 1,
        "random values": 1
    },
    "ials": {
        "random noise": 18,
        "noise level": 18,
        "noisy sine function": 18,
        "noise samples": 18,
        "functions": 17,
        "sine function": 14,
        "ridge regression": 14,
        "optimal plot": 14,
        "colored image": 12,
        "train set": 12,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "fine tuning": 6,
        "parameter tuning": 6,
        "width variable": 6,
        "lassocv": 5,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "mathematical precision": {
        "random noise": 18,
        "noise level": 18,
        "noisy sine function": 18,
        "noise samples": 18,
        "functions": 17,
        "sine function": 14,
        "ridge regression": 14,
        "optimal plot": 14,
        "colored image": 12,
        "train set": 12,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "fine tuning": 6,
        "parameter tuning": 6,
        "width variable": 6,
        "lassocv": 5,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "height": {
        "significance": 18,
        "design matrices": 11,
        "interim conclusion": 10,
        "hypothesis": 10,
        "first pass analysis": 10,
        "confounding variables": 10,
        "cs students": 9,
        "majors": 9,
        "ordinary least squares": 9,
        "linear models": 9,
        "cogsci": 8,
        "confounding variable": 6,
        "patsy": 6,
        "cogs students": 5,
        "mean height": 5,
        "ols model": 5,
        "average heights": 4,
        "height distributions": 4,
        "alpha value": 4,
        "statistical test": 4,
        "women": 4,
        "compsci": 4,
        "df2": 4,
        "compsci majors": 4,
        "correlation": 4,
        "confounds": 4,
        "causation": 4,
        "pivot tables": 3,
        "average height values": 3,
        "pivot table": 3,
        "linearmodels": 3,
        "kmeans": 3,
        "computer science majors": 2,
        "height": 1,
        "weight": 1,
        "dimensionality reduction": 1,
        "principal components analysis": 1,
        "boolean variables": 1,
        "normal distributions": 1,
        "testing distributions": 1
    },
    "multivariate regression": {
        "independent variables": 84,
        "multivariate regression": 20,
        "variable test 1": 16,
        "univariate regression": 16,
        "iq": 16,
        "univariate regressions": 10,
        "airtime": 9,
        "arrdelay": 5,
        "linear regression model": 4,
        "code cell": 3,
        "multivariate regresion model": 3,
        "predictor variable": 3,
        "regression model": 3,
        "random number generator": 3,
        "test sets": 2,
        "multiple independent variables": 2,
        "dependent variable": 2,
        "patsy formula": 2,
        "multivariate regression model": 2,
        "unit tests": 1,
        "distance": 1,
        "stats": 1
    },
    "income": {
        "income": 42,
        "age": 28,
        "log10": 9,
        "polyfit": 9,
        "mean value": 7,
        "valueerror": 6,
        "zero values": 6,
        "math domain error": 6,
        "standard deviations": 6,
        "diistribution": 6,
        "transformantion": 6,
        "pandas method": 5,
        "incomes": 5,
        "output parameters": 4,
        "testing": 4,
        "jointplot": 4,
        "integer age": 3,
        "exponential decay function": 3,
        "age mood": 3,
        "correlationship coefficient": 3,
        "stroger relationships": 3,
        "corrs variable": 3,
        "matplotlib visualizations": 3,
        "lambda expression": 3,
        "pand": 3,
        "skewed data distributions": 2,
        "logbase10": 2,
        "logarithmic transforms": 2,
        "area income": 2,
        "kde distributions": 2,
        "pairplot": 2,
        "log transform": 2,
        "geometric means": 2,
        "log10 transformation": 2,
        "log transforming data": 2,
        "log base 10": 2,
        "outliers": 1,
        "income distribution": 1,
        "prediction power": 1,
        "steps": 1,
        "income graph": 1
    },
    "sqlite": {
        "database": 16,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "source fake010": 7,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "fake010": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "population": 3,
        "foreign key constraints": 3,
        "sqlite3 library": 3,
        "database table": 1,
        "testfeats table": 1,
        "query dates": 1,
        "average prices": 1
    },
    "ensemble methods": {
        "validation data": 11,
        "lendingclub": 10,
        "probability": 9,
        "false positives": 9,
        "learned": 8,
        "decision trees": 8,
        "gradient boosted trees": 6,
        "false negatives": 6,
        "prediction accuracy": 6,
        "sframes": 5,
        "feature engineering": 5,
        "graphlab create": 5,
        "code comments": 5,
        "finance": 5,
        "risky loans": 5,
        "learning algorithm": 5,
        "validation sets": 5,
        "model parameters": 5,
        "multiple decision trees": 5,
        "boosted trees": 5,
        "ensemble classifier": 5,
        "predictive power": 5,
        "sample validation data": 5,
        "safe loan": 5,
        "predict method": 5,
        "prediction probabilities": 5,
        "correctly classified examples": 4,
        "boosted tree model": 3,
        "boosted trees model": 3,
        "decision tree model": 3,
        "probability predictions": 3,
        "probabilities": 3,
        "prediction probability": 3,
        "tree models": 2,
        "classification error": 2,
        "training errors": 2,
        "extratree": 2,
        "decision rules": 2,
        "decisiontreeregression": 2,
        "decisiontreeregressor": 2,
        "important features": 2,
        "importance weight": 2,
        "check": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation error": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1
    },
    "statistics": {
        "pdf": 8,
        "random variable": 8,
        "arbitrary random variable": 7,
        "sf crimes dataset": 5,
        "conditional probabilities": 4,
        "event probabilities": 4,
        "outcome probabilities": 4,
        "cumulative distribution function": 4,
        "probability density function": 4,
        "random variable values": 4,
        "uniformly generated random values": 4,
        "random sampling": 4,
        "random outcomes": 4,
        "cdf": 4,
        "uniformly distributed random values": 4,
        "inverse": 3,
        "factor analysis": 3,
        "covariances": 3,
        "gradient ascent": 2,
        "fudge factor": 2,
        "signature": 2,
        "learning rate": 2,
        "learning curve": 2,
        "crime categories": 2,
        "[linear interpolation": 2,
        "empirical cdf": 2,
        "cdf samples": 2,
        "marginal mean": 2,
        "gaussian": 2,
        "multidimensional feature space": 2,
        "gaussian process": 2,
        "ance": 2,
        "conditioned feature values": 2,
        "joint covariance": 2,
        "ubiquitous multivariate normal probability density": 2,
        "conditional probability density": 2,
        "maximum likelihood principle": 1,
        "objective function": 1,
        "arithm": 1,
        "joint probability": 1,
        "bernoulli trial": 1,
        "notational conventions": 1,
        "scalar argument": 1,
        "elementwise logarithm": 1,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "mle": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1,
        "astronomical images": 1,
        "real quasars": 1,
        "milky way": 1,
        "posterior probability": 1,
        "galaxy densities": 1,
        "stellar density": 1,
        "quasar identification algorithm": 1,
        "exponential decay law": 1,
        "the posterior probability": 1,
        "un-normalized probability density": 1,
        "random process": 1,
        "hyperparameters": 1,
        "numerator": 1,
        "gamma distribtion pdf": 1,
        "numpy expression": 1,
        "denominator": 1,
        "gamma distribution": 1,
        "2d trajectories": 1,
        "trajectory coordinates": 1,
        "trajectories": 1,
        "initial trajectory slope": 1,
        "multidimensional normal distribution": 1,
        "random seed": 1,
        "probability densities": 1,
        "random samples": 1,
        "2x2 covariance matrix": 1,
        "correlation coefficient": 1,
        "weighted pca": 1,
        "goal function": 1,
        "2d data": 1,
        "dot products": 1,
        "linear algebra": 1,
        "pca": 1,
        "eigenvalues": 1,
        "eigenvalue decomposition": 1,
        "eigenvectors": 1,
        "latent variables": 1,
        "singular value decomposition": 1,
        "exact linear decomposition": 1,
        "dimensionality reduction": 1,
        "sample covariance matrix": 1,
        "singular values": 1,
        "exact decomposition": 1,
        "covariance": 1,
        "eigenvalue problem": 1,
        "crime counts": 1,
        "regularization": 1,
        "predict()": 1,
        "correct guesses": 1,
        "guessed classes": 1,
        "predicted exam results": 1,
        "finite dataset": 1,
        "conditional gaussian means": 1,
        "empirical estimates": 1,
        "rowvar parameter": 1,
        "probability density": 1,
        "arbitrary input data array": 1,
        "binned probability density": 1,
        "regression model": 1,
        "default score function": 1,
        "random forest regression": 1
    },
    "time series analysis": {
        "datetimeindex": 12,
        "random datapoints": 6,
        "exponentially weighted functions": 6,
        "current time": 3,
        "string representations": 3,
        "parsing format": 3,
        "datetime objects": 3,
        "arbitrary date strings": 3,
        "row index": 3,
        "column name index": 3,
        "nat entry": 3,
        "row indices": 3,
        "pandas series indexed": 3,
        "time series data": 3,
        "index slicing": 3,
        "arithmetic operations": 3,
        "nanoseond resolution": 3,
        "pandas stores timestamps": 3,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "up sampling": 3,
        "frequency conversion": 3,
        "down sampling": 3,
        "amps": 3,
        "resampling": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "series": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ar model": 3,
        "time series modeling": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "data matrix": {
        "ica": 24,
        "covariant algorithm": 10,
        "whitened measurements": 6,
        "covariance matrix": 6,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "kurtosis": 6,
        "sawtooth": 6,
        "covariance matrices": 4,
        "eigenvalue decomposition": 4,
        "sinewave": 4,
        "bias": 4,
        "scale changes": 4,
        "demixing matrices": 4,
        "priors": 3,
        "xw plot": 2,
        "circular pattern": 2,
        "learning algorithm": 2,
        "matrix inversions": 2,
        "symmetric": 2,
        "gaussian distribution": 2,
        "random wave": 2,
        "independent random variables": 2,
        "gray boxes": 2,
        "boxes": 2,
        "diagonal matrix": 2,
        "alogrithm": 2,
        "generated signals": 2,
        "recovered audio sources": 2,
        "normalization constant": 2,
        "gaussian noise source": 2,
        "learning algorithms": 2,
        "block wave": 2,
        "mixing matrix": 2,
        "sine wave": 2,
        "information theory": 2,
        "rotation": 2,
        "covariance": 2,
        "consistent algorithm": 2,
        "sound clip": 2,
        "ambient sounds": 2,
        "gamma": 2,
        "ma": 2,
        "whitening process": 2,
        "gaussian distributed": 2,
        "audio signals": 2,
        "ize": 1,
        "normalizing constant": 1,
        "gaussian function": 1,
        "triangle histogram": 1,
        "square wave": 1,
        "source signals": 1,
        "central limit theorem": 1,
        "signal": 1,
        "gaussian distributions": 1,
        "signals sawtooth": 1,
        "historgrams": 1,
        "triangle wave": 1,
        "measurement": 1,
        "gaussian noise": 1,
        "i": 1
    },
    "fdsn web services": {
        "international standard exchange format": 18,
        "station metadata": 15,
        "event metadata": 12,
        "trace objects": 9,
        "ainformation": 9,
        "nested obspy inventory class": 9,
        "local files": 6,
        "station objects": 6,
        "network objects": 6,
        "channel objects": 6,
        "fdsn stationxml": 6,
        "nested obspy inventory": 6,
        "inventory object": 6,
        "xml": 6,
        "filetype": 5,
        "array analysis": 5,
        "estimate travel times": 5,
        "seismic phases": 5,
        "cross correlation routines": 5,
        "event detection": 5,
        "plot ray paths": 5,
        "manipulation filtering": 5,
        "nested obspy event class structure": 3,
        "event objects": 3,
        "catalog object": 3,
        "utcdatetime": 3,
        "timestamps": 3,
        "pling": 3,
        "command line utilities": 3,
        "stationxml": 3,
        "fdsn server": 3,
        "wildcard": 3,
        "waveform data": 3,
        "channel code": 3,
        "stationxml files": 2,
        "official schema": 2,
        "ampling": 2,
        "inventory": 2
    },
    "sklearn pipeline": {
        "linearregression object": 8,
        "ridgecv": 7,
        "3rd degree polynomial": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "sin function": {
        "linearregression object": 8,
        "ridgecv": 7,
        "3rd degree polynomial": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "3rd degree polynomial": {
        "linearregression object": 8,
        "ridgecv": 7,
        "3rd degree polynomial": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "random datapoints": {
        "exponentially weighted functions": 9,
        "datetimeindex": 6,
        "timestamps": 6,
        "toy dataset": 6,
        "data buckets": 6,
        "upsampling": 6,
        "interpolation": 6,
        "weekly time series": 6,
        "apple stock quarterly": 6,
        "kurtosis": 6,
        "covariance": 6,
        "moving": 6,
        "variance": 6,
        "moving window functions": 6,
        "array function": 6,
        "skewness": 6,
        "window parameter": 6,
        "rolling mean": 6,
        "decay factor": 6,
        "rolling correlation function": 6,
        "autoregressive modeling": 4,
        "ebola data": 4,
        "time series modelling": 4,
        "index slicing": 3,
        "arithmetic operations": 3,
        "nanoseond resolution": 3,
        "random datapoints": 3,
        "pandas stores timestamps": 3,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "time axis": 3,
        "exponentialy weighted rolling functions": 3,
        "shift operators": 3,
        "economic data applications": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive model": 2
    },
    "lendingclub dataset": {
        "early stopping conditions": 15,
        "classification error": 13,
        "minimum node size": 12,
        "prediction path": 12,
        "error reduction": 9,
        "home ownership status": 6,
        "safe loans": 6,
        "early stopping condition": 6,
        "intermediate node": 6,
        "tree learning algorithm": 6,
        "tree model": 6,
        "validation error": 6,
        "validation data": 6,
        "lowest classification error": 4,
        "lendingclub": 3,
        "safe loan": 3,
        "categorical features": 3,
        "binary decision tree": 3,
        "subsample dataset": 3,
        "learning algorithm": 3,
        "binary features": 3,
        "api documentation": 3,
        "graphlab": 3,
        "loanee": 3,
        "binary decision trees": 3,
        "categorical data": 3,
        "binary data": 3,
        "feature columns": 3,
        "maximum depth": 3,
        "binary tree implementation": 3,
        "early stopping methods": 3,
        "maximum depth stopping condition": 3,
        "stopping": 3,
        "risky loans": 3,
        "binary decision tree helper functions": 3,
        "misclassified examples": 3,
        "majority class": 3,
        "binary decision tree implementation": 3,
        "minimum error reduction": 3,
        "if condition": 3,
        "function classify": 3,
        "predicted class": 3,
        "lowest": 2,
        "qu": 1,
        "complexity": 1
    },
    "collinear points": {
        "spark exercise": 30,
        "unit tests": 30,
        "collinear points": 15,
        "coll": 12,
        "non_duplicates": 9,
        "rdd": 9,
        "cartesian product": 9,
        "line segment": 9,
        "pyspark library functions": 6,
        "v": 6,
        "test cases": 6,
        "hidden test cases": 6,
        "hidden tests": 6,
        "assert statement unit test cells": 6,
        "collin": 6,
        "grading": 6,
        "helper functions": 6,
        "collinearity": 3,
        "geometry": 3,
        "pyspark": 3,
        "notebook setup": 3,
        "function definitions": 3,
        "r": 3,
        "spark rdd api": 3,
        "assert statement unit tests": 3
    },
    "gdp": {
        "population": 12,
        "democratic republic of the congo": 12,
        "sqlite3 library": 12,
        "hashemite kingdom of jordan": 6,
        "code cell": 6,
        "indicator data": 6,
        "merged data set": 6,
        "countrycode": 6,
        "json file": 6,
        "islamic republic": 6,
        "afghanistan": 6,
        "federal republic": 6,
        "bangladesh": 6,
        "nigeria": 6,
        "lebanese republic": 6,
        "democratic socialist republic": 6,
        "code": 6,
        "people's republic of bangladesh": 6,
        "federal republic of nigeria": 6,
        "tunisia": 6,
        "islamic republic of afghanistan": 6,
        "federative republic": 6,
        "merged table": 6,
        "brazil": 6,
        "sql query": 6,
        "sql": 6,
        "alter table command": 6,
        "sqlite3 database": 6,
        "sqlite": 6,
        "foreign key constraints": 6,
        "world bank projects": 3
    },
    "programming assignment": {
        "collinear points": 10,
        "unit tests": 10,
        "spark exercise": 9,
        "covariance matrix": 6,
        "attributes": 4,
        "standardize function": 4,
        "helper functions": 4,
        "rdd": 4,
        "tensorflow": 3,
        "collinearity": 3,
        "geometry": 3,
        "pyspark library functions": 3,
        "v": 3,
        "test cases": 3,
        "hidden test cases": 3,
        "hidden tests": 3,
        "assert statement unit test cells": 3,
        "collin": 3,
        "grading": 3,
        "pyspark": 3,
        "notebook setup": 3,
        "coll": 3,
        "function definitions": 3,
        "non_duplicates": 3,
        "cartesian product": 3,
        "line segment": 3,
        "input data pipeline": 2,
        "sampled data": 2,
        "particle detectors": 2,
        "higgs dataset": 2,
        "background": 2,
        "monte carlo simulations": 2,
        "kinematic properties": 2,
        "signal process": 2,
        "higgs bosons": 2,
        "attribute values": 2,
        "train file": 2,
        "test file": 2,
        "local testing": 2,
        "edx": 2,
        "test datasets": 2,
        "network training": 2,
        "configuration file": 2,
        "debugging purposes": 2,
        "config file": 2,
        "yaml file": 2,
        "file": 2,
        "test data": 2,
        "feature vectors": 2,
        "training examples": 2,
        "wikipedia feature scaling article": 2,
        "distribution mean": 2,
        "covariance": 2,
        "matrices": 2,
        "augmented vector": 2,
        "outer product": 2,
        "weights": 1,
        "tf variables": 1,
        "biases": 1,
        "mini batch": 1,
        "tf graph": 1,
        "tf placeholders": 1,
        "helper function": 1,
        "bias dictionary": 1,
        "learnable parameters": 1,
        "bias matrices": 1,
        "network model": 1,
        "weights dictionary": 1,
        "training time": 1,
        "feedforward network model": 1,
        "hidden layers": 1,
        "output layer": 1,
        "sigmoid activation function": 1,
        "r": 1,
        "spark rdd api": 1,
        "assert statement unit tests": 1,
        "analysis": 1,
        "eigenvector decomposition": 1,
        "homework": 1,
        "data vectors": 1,
        "arithmetic operations": 1,
        "lower left matrix": 1,
        "outer product average": 1,
        "average": 1,
        "n x n matrix": 1,
        "1 x n matrix": 1,
        "x n matrix": 1,
        "x": 1,
        "nansum": 1,
        "n x": 1
    },
    "astropy table": {
        "titanic": 10,
        "astropy table": 8,
        "age": 7,
        "knn model": 6,
        "missing data": 6,
        "categorical features": 5,
        "categorical feature": 5,
        "running index": 4,
        "passengerid": 4,
        "euclidean distance": 4,
        "numeric features": 4,
        "numeric": 4,
        "minmax scaler": 4,
        "data units": 3,
        "brightness measurement": 3,
        "irsa table": 3,
        "itudes": 3,
        "janskys": 3,
        "data typing": 3,
        "journal articles": 3,
        "data tables": 3,
        "supernova light curves": 3,
        "astro umbrella": 3,
        "<img style": 3,
        "photometric measurements": 3,
        "nearest neighbors model": 3,
        "numeric representation": 3,
        "light curve table": 2,
        "uncertainties": 2,
        "j": 2,
        "children": 2,
        "ticket number": 2,
        "titanic disaster": 2,
        "cross validation": 2,
        "neighbors": 2,
        "nearest neighbors machine learning model": 2,
        "titanic training set": 2,
        "knn models": 2,
        "numerical distance": 2,
        "sex": 2,
        "numerical features": 2,
        "cv accuracy": 2,
        "minmaxscaler": 2,
        "maxscaler": 2,
        "embarked": 2,
        "lsst": 2,
        "age information": 2,
        "photometric redshifts": 2,
        "machine learning model": 2,
        "numerification": 1,
        "binary features": 1,
        "binary arrays": 1,
        "sibsp": 1,
        "parch": 1,
        "pclass": 1,
        "fare features": 1,
        "astronomy": 1,
        "indicator value": 1,
        "feature distribution": 1,
        "mean value": 1,
        "mean age": 1,
        "passengers": 1,
        "age regression model": 1,
        "age estimates": 1,
        "passenger survival": 1,
        "age feature": 1,
        "child feature": 1,
        "le": 1,
        "blind data": 1,
        "k": 1,
        "astro machine learning model": 1,
        "astronomical problem": 1,
        "galaxies": 1,
        "spectroscopic measurements": 1,
        "photometry": 1,
        "sdss casjobs": 1,
        "specobjid": 1,
        "psf mag": 1,
        "psfmag": 1,
        "modelmag": 1,
        "ds": 1,
        "sfd extinction estimate": 1,
        "sdss identifier": 1,
        "sdss photometric type": 1,
        "upper": 1,
        "sdss source": 1,
        "wise filters": 1,
        "categorical variable": 1,
        "nearest neighbors regression model": 1,
        "sdss dataframe": 1,
        "categorical data": 1
    },
    "panorama stitching": {
        "false matches": 15,
        "convenience function": 14,
        "utility function": 10,
        "warped images": 10,
        "cost array": 9,
        "imagecollection": 7,
        "wildcard": 7,
        "private arch": 6,
        "arches national park": 6,
        "delicate arch": 6,
        "ransac": 5,
        "inliers": 5,
        "panorama": 5,
        "output": 5,
        "stationary image": 5,
        "input images": 5,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "seed points": 4,
        "overlap region": 3,
        "construct cost array": 3,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "optimal path": 3,
        "mcp": 3,
        "ransac transform estimation": 3,
        "random element": 3,
        "negative mask": 3,
        "numpy masked array conventions": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "final mask": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "panorama tutorial": {
        "false matches": 15,
        "convenience function": 14,
        "utility function": 10,
        "warped images": 10,
        "cost array": 9,
        "imagecollection": 7,
        "wildcard": 7,
        "private arch": 6,
        "arches national park": 6,
        "delicate arch": 6,
        "ransac": 5,
        "inliers": 5,
        "panorama": 5,
        "output": 5,
        "stationary image": 5,
        "input images": 5,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "seed points": 4,
        "overlap region": 3,
        "construct cost array": 3,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "optimal path": 3,
        "mcp": 3,
        "ransac transform estimation": 3,
        "random element": 3,
        "negative mask": 3,
        "numpy masked array conventions": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "final mask": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "multiple overlapping images": {
        "false matches": 15,
        "convenience function": 14,
        "utility function": 10,
        "warped images": 10,
        "cost array": 9,
        "imagecollection": 7,
        "wildcard": 7,
        "private arch": 6,
        "arches national park": 6,
        "delicate arch": 6,
        "ransac": 5,
        "inliers": 5,
        "panorama": 5,
        "output": 5,
        "stationary image": 5,
        "input images": 5,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "seed points": 4,
        "overlap region": 3,
        "construct cost array": 3,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "optimal path": 3,
        "mcp": 3,
        "ransac transform estimation": 3,
        "random element": 3,
        "negative mask": 3,
        "numpy masked array conventions": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "final mask": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "pickle module": {
        "enron data set": 18,
        "series object": 18,
        "enron dataframe": 18,
        "reshaping series": 18,
        "magic function": 12,
        "shell companies": 9,
        "electrical grid failures": 9,
        "enron fraud": 9,
        "frozen concentrated orange juice futures": 9,
        "google sleuthing": 9,
        "enron": 9,
        "blockbuster movies": 9,
        "pickle module": 6,
        "working directory": 6,
        "enron data": 6,
        "python dictionary": 6,
        "notebook": 6,
        "magic command": 6,
        "magic functions": 6,
        "ellipses": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2
    },
    "principal component analysis": {
        "pca": 15,
        "eigenvectors": 14,
        "covariance matrix": 11,
        "correlation matrix": 8,
        "eigenvalues": 7,
        "eigendecomposition": 6,
        "dimensionality reduction": 5,
        "principal components": 5,
        "projection matrix": 5,
        "principal component analysis": 4,
        "singular vector decomposition": 4,
        "second principal components": 3,
        "point cloud": 3,
        "succeding component": 3,
        "residual noise": 3,
        "2d vectors": 3,
        "linear coefficients": 3,
        "pca space": 3,
        "iris data": 3,
        "standardizing": 3,
        "tickers": 3,
        "ticker names": 3,
        "plotting function": 2,
        "data matrix x": 2,
        "tutorial": 2,
        "computational efficiency": 2,
        "eigenpairs": 2,
        "tickerinfo": 2,
        "linear transformation technique": 1,
        "stock market predictions": 1,
        "gene expression data": 1,
        "scikit": 1,
        "position": 1,
        "learn": 1,
        "igenvectors": 1,
        "maximum variance": 1,
        "machine learning algorithms": 1,
        "computer hardware": 1,
        "linear transformation methods": 1,
        "pattern classification problem": 1,
        "linear discriminant analysis": 1,
        "e": 1,
        "ctors": 1,
        "eigen": 1,
        "iris": 1,
        "petal width": 1,
        "uci machine learning repository": 1,
        "petal length": 1,
        "sepal length": 1,
        "python library": 1,
        "uci repository": 1,
        "flower sample": 1,
        "flower classes": 1,
        "standard": 1,
        "components": 1,
        "mean vector": 1,
        "numpy cov function": 1,
        "ance matrix": 1,
        "normalized covariance matrix": 1,
        "finance": 1,
        "standardized data": 1,
        "eigenvalue pairs": 1,
        "pca implementations": 1,
        "axes": 1,
        "lowest eigenvalues": 1,
        "explained variance": 1,
        "information": 1,
        "first principal component": 1,
        "second principal component": 1,
        "concatenated top k eigenvectors": 1,
        "spark context": 1,
        "import dependencies": 1,
        "spark dataframe": 1,
        "stock price": 1,
        "sp500": 1,
        "partition columns": 1,
        "test lists": 1,
        "training examples": 1,
        "test list": 1,
        "test examples": 1,
        "train example": 1,
        "tick": 1,
        "numpy vectors": 1,
        "diff rolumns": 1,
        "eigenval": 1,
        "eigh function": 1,
        "computecov function": 1,
        "cov key": 1,
        "spectral analysis": 1,
        "directory figs": 1,
        "holiday shopping": 1,
        "income distribution": 1,
        "company name": 1,
        "sector ids": 1,
        "sector id": 1
    },
    "coscale": {
        "constant term": 19,
        "arithmetical operations": 14,
        "train set": 12,
        "coefficient": 11,
        "predict method": 10,
        "selection variable": 9,
        "backups": 9,
        "x matrix": 8,
        "coefficients": 8,
        "page view": 8,
        "cpu load": 8,
        "cross products": 8,
        "polynomial features extraction": 8,
        "optimal weights": 8,
        "multiple linear regression": 8,
        "polynomal expansion function": 8,
        "random noise": 7,
        "noise level": 7,
        "width variable": 6,
        "lassocv": 5,
        "colored image": 4,
        "axis variable": 1,
        "variable model": 1,
        "fine tuning": 1,
        "parameter tuning": 1,
        "historical page views": 1,
        "web server": 1,
        "cpu": 1,
        "individual timeseries": 1,
        "individual pageviews": 1,
        "pageview format": 1,
        "total request rate": 1
    },
    "answers": {
        "ica": 17,
        "learning algorithms": 8,
        "mixing matrix": 8,
        "information theory": 8,
        "independent component analysis algorithm": 6,
        "source matrix": 6,
        "activation function": 6,
        "data matrix": 6,
        "elementwise non-linearity": 6,
        "source signal values": 6,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "covariant algorithm": 5,
        "sawtooth": 4,
        "kurtosis": 3,
        "priors": 2,
        "gaussian distribution": 2,
        "random wave": 2,
        "independent random variables": 2,
        "covariance matrices": 2,
        "gaussian noise source": 2,
        "block wave": 2,
        "sine wave": 2,
        "rotation": 2,
        "eigenvalue decomposition": 2,
        "sinewave": 2,
        "bias": 2,
        "scale changes": 2,
        "demixing matrices": 2,
        "ize": 1,
        "normalizing constant": 1,
        "gaussian function": 1,
        "triangle histogram": 1,
        "square wave": 1,
        "xw plot": 1,
        "circular pattern": 1,
        "learning algorithm": 1,
        "matrix inversions": 1,
        "symmetric": 1,
        "source signals": 1,
        "central limit theorem": 1,
        "signal": 1,
        "gaussian distributions": 1,
        "signals sawtooth": 1,
        "historgrams": 1,
        "triangle wave": 1,
        "gray boxes": 1,
        "boxes": 1,
        "diagonal matrix": 1,
        "alogrithm": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "measurement": 1,
        "gaussian noise": 1,
        "covariance": 1,
        "consistent algorithm": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "i": 1,
        "whitening process": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "high concurrency": {
        "database": 16,
        "svm model": 9,
        "cursor object": 8,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "source fake010": 7,
        "ideas conda environment": 4,
        "sqlite3": 4,
        "sqlite3 import": 4,
        "database connection object": 4,
        "triple quotes": 4,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "fake010": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "automated tests": {
        "postal code": 13,
        "94602": 10,
        "businesses": 9,
        "zip code": 8,
        "zip codes": 8,
        "granularity": 7,
        "bus data frame": 6,
        "business table": 6,
        "zip code values": 6,
        "counts": 6,
        "fillna": 5,
        "extended zip codes": 5,
        "extended postal codes": 5,
        "94545": 5,
        "longitude values": 4,
        "longitude": 4,
        "latitude": 4,
        "businesses data frame": 4,
        "variable postal code": 4,
        "iloc": 4,
        "missing zipcode values": 4,
        "internet": 4,
        "94609": 4,
        "san francisco": 4,
        "missing zip codes": 3,
        "business dataframe": 3,
        "population": 3,
        "nonmissing values": 3,
        "validzip variable": 3,
        "home burglaries": 2,
        "summer vacation period": 2,
        "adt security systems": 2,
        "burglaries": 2,
        "labor day": 2,
        "memorial day": 2,
        "python code": 2,
        "compound expression": 2,
        "subexpressions": 2,
        "missing expression": 2,
        "python type command": 2,
        "search engine": 2,
        "inspection": 2,
        "inspection dataframe": 2,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "series isnull method": 1,
        "binary array": 1,
        "incorrect zip codes": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "business name": 1,
        "zip": 1
    },
    "pvpython": {
        "paraview": 15,
        "structured grid": 8,
        "temperature": 8,
        "vtk": 6,
        "pyevtk": 6,
        "pvpython": 4,
        "python interpreter": 4,
        "layout panel": 4,
        "setproperties": 4,
        "setdisplayproperties": 4,
        "mesh cells": 4,
        "rectilinear grid": 4,
        "unstructured grid": 4,
        "polygonal data": 4,
        "mesh dimensions": 4,
        "vtk files": 4,
        "point data": 4,
        "pressure": 4,
        "dsfp conda environment": 2,
        "internal python interpreter": 2,
        "pipeline browser": 2,
        "sphere1": 2,
        "shrink": 2,
        "geometric represenation": 2,
        "filters": 2,
        "rendering": 2,
        "object oriented approach": 2,
        "shrinkfactor": 2,
        "opacity": 2,
        "sphere": 2,
        "sphereinstance": 2,
        "spheredisplay": 2,
        "interactive commands": 2,
        "break out problem": 2,
        "astronomical data": 2,
        "binary files": 2,
        "3d rendering programs": 2,
        "cells data": 2,
        "topology": 2,
        "structured points": 2,
        "data set properties": 2,
        "cell dimensions": 2,
        "<img style": 2,
        "representational freedom": 2,
        "cell data": 2,
        "python package": 2,
        "density": 2,
        "independent gaussian distributions": 2,
        "random draws": 2,
        "imentions": 2,
        "point gaussian": 2,
        "gaia data": 2,
        "random data": 2,
        "volume renderings": 2,
        "cell widths": 2,
        "tempurature": 2,
        "temparture": 2,
        "vtk file": 2,
        "volume rendering": 2,
        "3d arrays": 2,
        "vtk binary files": 2,
        "utilities": 2,
        "3d rendering": 2,
        "statistical analysis": 2,
        "iris machine learning": 2,
        "data sets": 2,
        "size": 1,
        "iris data": 1,
        "spatial coordinates": 1
    },
    "reproducibility": {
        "paraview": 15,
        "structured grid": 8,
        "temperature": 8,
        "vtk": 6,
        "pyevtk": 6,
        "pvpython": 4,
        "python interpreter": 4,
        "layout panel": 4,
        "setproperties": 4,
        "setdisplayproperties": 4,
        "mesh cells": 4,
        "rectilinear grid": 4,
        "unstructured grid": 4,
        "polygonal data": 4,
        "mesh dimensions": 4,
        "vtk files": 4,
        "point data": 4,
        "pressure": 4,
        "dsfp conda environment": 2,
        "internal python interpreter": 2,
        "pipeline browser": 2,
        "sphere1": 2,
        "shrink": 2,
        "geometric represenation": 2,
        "filters": 2,
        "rendering": 2,
        "object oriented approach": 2,
        "shrinkfactor": 2,
        "opacity": 2,
        "sphere": 2,
        "sphereinstance": 2,
        "spheredisplay": 2,
        "interactive commands": 2,
        "break out problem": 2,
        "astronomical data": 2,
        "binary files": 2,
        "3d rendering programs": 2,
        "cells data": 2,
        "topology": 2,
        "structured points": 2,
        "data set properties": 2,
        "cell dimensions": 2,
        "<img style": 2,
        "representational freedom": 2,
        "cell data": 2,
        "python package": 2,
        "density": 2,
        "independent gaussian distributions": 2,
        "random draws": 2,
        "imentions": 2,
        "point gaussian": 2,
        "gaia data": 2,
        "random data": 2,
        "volume renderings": 2,
        "cell widths": 2,
        "tempurature": 2,
        "temparture": 2,
        "vtk file": 2,
        "volume rendering": 2,
        "3d arrays": 2,
        "vtk binary files": 2,
        "utilities": 2,
        "3d rendering": 2,
        "statistical analysis": 2,
        "iris machine learning": 2,
        "data sets": 2,
        "size": 1,
        "iris data": 1,
        "spatial coordinates": 1
    },
    "python scripting interface": {
        "paraview": 15,
        "structured grid": 8,
        "temperature": 8,
        "vtk": 6,
        "pyevtk": 6,
        "pvpython": 4,
        "python interpreter": 4,
        "layout panel": 4,
        "setproperties": 4,
        "setdisplayproperties": 4,
        "mesh cells": 4,
        "rectilinear grid": 4,
        "unstructured grid": 4,
        "polygonal data": 4,
        "mesh dimensions": 4,
        "vtk files": 4,
        "point data": 4,
        "pressure": 4,
        "dsfp conda environment": 2,
        "internal python interpreter": 2,
        "pipeline browser": 2,
        "sphere1": 2,
        "shrink": 2,
        "geometric represenation": 2,
        "filters": 2,
        "rendering": 2,
        "object oriented approach": 2,
        "shrinkfactor": 2,
        "opacity": 2,
        "sphere": 2,
        "sphereinstance": 2,
        "spheredisplay": 2,
        "interactive commands": 2,
        "break out problem": 2,
        "astronomical data": 2,
        "binary files": 2,
        "3d rendering programs": 2,
        "cells data": 2,
        "topology": 2,
        "structured points": 2,
        "data set properties": 2,
        "cell dimensions": 2,
        "<img style": 2,
        "representational freedom": 2,
        "cell data": 2,
        "python package": 2,
        "density": 2,
        "independent gaussian distributions": 2,
        "random draws": 2,
        "imentions": 2,
        "point gaussian": 2,
        "gaia data": 2,
        "random data": 2,
        "volume renderings": 2,
        "cell widths": 2,
        "tempurature": 2,
        "temparture": 2,
        "vtk file": 2,
        "volume rendering": 2,
        "3d arrays": 2,
        "vtk binary files": 2,
        "utilities": 2,
        "3d rendering": 2,
        "statistical analysis": 2,
        "iris machine learning": 2,
        "data sets": 2,
        "size": 1,
        "iris data": 1,
        "spatial coordinates": 1
    },
    "automated analysis": {
        "paraview": 15,
        "structured grid": 8,
        "temperature": 8,
        "vtk": 6,
        "pyevtk": 6,
        "pvpython": 4,
        "python interpreter": 4,
        "layout panel": 4,
        "setproperties": 4,
        "setdisplayproperties": 4,
        "mesh cells": 4,
        "rectilinear grid": 4,
        "unstructured grid": 4,
        "polygonal data": 4,
        "mesh dimensions": 4,
        "vtk files": 4,
        "point data": 4,
        "pressure": 4,
        "dsfp conda environment": 2,
        "internal python interpreter": 2,
        "pipeline browser": 2,
        "sphere1": 2,
        "shrink": 2,
        "geometric represenation": 2,
        "filters": 2,
        "rendering": 2,
        "object oriented approach": 2,
        "shrinkfactor": 2,
        "opacity": 2,
        "sphere": 2,
        "sphereinstance": 2,
        "spheredisplay": 2,
        "interactive commands": 2,
        "break out problem": 2,
        "astronomical data": 2,
        "binary files": 2,
        "3d rendering programs": 2,
        "cells data": 2,
        "topology": 2,
        "structured points": 2,
        "data set properties": 2,
        "cell dimensions": 2,
        "<img style": 2,
        "representational freedom": 2,
        "cell data": 2,
        "python package": 2,
        "density": 2,
        "independent gaussian distributions": 2,
        "random draws": 2,
        "imentions": 2,
        "point gaussian": 2,
        "gaia data": 2,
        "random data": 2,
        "volume renderings": 2,
        "cell widths": 2,
        "tempurature": 2,
        "temparture": 2,
        "vtk file": 2,
        "volume rendering": 2,
        "3d arrays": 2,
        "vtk binary files": 2,
        "utilities": 2,
        "3d rendering": 2,
        "statistical analysis": 2,
        "iris machine learning": 2,
        "data sets": 2,
        "size": 1,
        "iris data": 1,
        "spatial coordinates": 1
    },
    "error reduction": {
        "classification error": 26,
        "prediction path": 24,
        "early stopping conditions": 18,
        "validation error": 12,
        "validation data": 12,
        "intermediate node": 9,
        "tree learning algorithm": 9,
        "lowest classification error": 8,
        "error reduction": 6,
        "risky loans": 6,
        "safe loans": 6,
        "misclassified examples": 6,
        "majority class": 6,
        "minimum node size": 6,
        "minimum error reduction": 6,
        "if condition": 6,
        "tree model": 6,
        "function classify": 6,
        "predicted class": 6,
        "lowest": 4,
        "qu": 2,
        "complexity": 2
    },
    "early stopping condition": {
        "classification error": 26,
        "prediction path": 24,
        "early stopping conditions": 18,
        "validation error": 12,
        "validation data": 12,
        "intermediate node": 9,
        "tree learning algorithm": 9,
        "lowest classification error": 8,
        "error reduction": 6,
        "risky loans": 6,
        "safe loans": 6,
        "misclassified examples": 6,
        "majority class": 6,
        "minimum node size": 6,
        "minimum error reduction": 6,
        "if condition": 6,
        "tree model": 6,
        "function classify": 6,
        "predicted class": 6,
        "lowest": 4,
        "qu": 2,
        "complexity": 2
    },
    "plot": {
        "zipfile": 9,
        "granularity": 7,
        "zip": 6,
        "internet": 5,
        "python file system libraries": 5,
        "web address": 5,
        "caching": 5,
        "food safety data": 5,
        "portability": 5,
        "zip files": 5,
        "filenames": 5,
        "python docs": 5,
        "postal code": 5,
        "zipped data": 4,
        "text editor": 4,
        "web browser": 4,
        "datahub": 4,
        "pandas data frames": 4,
        "character encoding issues": 4,
        "vio dataframes": 4,
        "utilities": 4,
        "sanity checks": 4,
        "data frames": 4,
        "floating point values": 4,
        "testing function": 4,
        "rounding error": 4,
        "businesses file": 4,
        "primary keys": 4,
        "bus dataframe": 4,
        "restaurants": 4,
        "local autograder tests": 4,
        "automated tests": 4,
        "zip code": 4,
        "missing zip codes": 3,
        "optimal kde bandwidth": 2,
        "bus data frame": 2,
        "python type command": 2,
        "business table": 2,
        "zip code values": 2,
        "counts": 2,
        "businesses": 2,
        "94602": 2,
        "search engine": 2,
        "fillna": 1,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "extended zip codes": 1,
        "extended postal codes": 1,
        "series isnull method": 1,
        "binary array": 1,
        "incorrect zip codes": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94545": 1,
        "business name": 1,
        "zip codes": 1,
        "longitude values": 1,
        "longitude": 1,
        "latitude": 1
    },
    "sparse solutions": {
        "ridgecv": 7,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "correlation": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "2d toy dataset": 2,
        "linearly separable dataset": 2,
        "covariance matrix": 2,
        "multivariate gaussian distribution": 2,
        "score()": 2,
        "linearregression object": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1,
        "optimization problem": 1,
        "maximum margin problem": 1,
        "quadratic programming problem": 1,
        "support vectors": 1,
        "quadratic function": 1,
        "svm": 1,
        "decision boundary": 1,
        "lagrange multipliers": 1,
        "inequality constraints": 1,
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "helper functions": {
        "unit tests": 10,
        "receiving node": 10,
        "spark exercise": 9,
        "marginalizing": 9,
        "ls periodogram": 5,
        "periodic signal": 5,
        "sending": 5,
        "functional programming": 5,
        "1d numpy arrays": 5,
        "simulated data": 4,
        "fourier transforms": 4,
        "fourier transform": 4,
        "fourier pairs": 4,
        "nyquist frequency": 4,
        "periodogram": 4,
        "tensor representations": 4,
        "numpy broadcasting": 4,
        "continuous signal": 3,
        "power spectrum": 3,
        "discrete fourier transform": 3,
        "coll": 3,
        "non_duplicates": 3,
        "rdd": 3,
        "cartesian product": 3,
        "line segment": 3,
        "gaussian noise": 2,
        "phase folded data": 2,
        "fourier analysis": 2,
        "periodic signals": 2,
        "fourier transform operator": 2,
        "time shift": 2,
        "squared amplitude": 2,
        "linear operator": 2,
        "dominant frequency": 2,
        "power spectral density": 2,
        "phase shift": 2,
        "convolution theorem": 2,
        "convolution": 2,
        "frequncy information": 2,
        "real world observations": 2,
        "astrophysical sources": 2,
        "nyquist frequency limit": 2,
        "even samples": 2,
        "classical periodogram": 2,
        "unevenly sampled data": 1,
        "nyquist limit": 1,
        "sampling interval": 1,
        "window function": 1,
        "continuous integral": 1,
        "continous signal": 1,
        "finite interval": 1,
        "dirac comb function": 1,
        "delta functions": 1,
        "schuster periodogram": 1,
        "irregular sampling": 1,
        "observation times": 1,
        "kepler data": 1,
        "statistical": 1,
        "sinusoid model": 1,
        "non-varying reference model": 1,
        "individual measurements": 1,
        "observational uncertainty": 1,
        "uncertainties": 1,
        "scipy package": 1,
        "maximum frequnecy": 1,
        "minimum frequency": 1,
        "collinear points": 1,
        "r": 1,
        "spark rdd api": 1,
        "helper functions": 1,
        "assert statement unit tests": 1,
        "n x n matrix": 1,
        "1 x n matrix": 1,
        "x n matrix": 1,
        "x": 1,
        "nansum": 1,
        "n x": 1,
        "matrices": 1
    },
    "lasso": {
        "ridgecv": 7,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "correlation": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "non-churn populations": 2,
        "learning curves": 2,
        "feature engineering": 2,
        "statistical test": 2,
        "significance level alpha": 2,
        "test statistic": 2,
        "hypothesis testing": 2,
        "alternative hypothesis": 2,
        "distribution means": 2,
        "score()": 2,
        "linearregression object": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "bayes rule": {
        "probability distribution": 20,
        "model parameters": 12,
        "bayes rule": 12,
        "product rule": 8,
        "joint probability": 8,
        "conditional probability": 8,
        "fully marginalized likelihood": 8,
        "gaussian likelihood function": 8,
        "gaussian distribution": 8,
        "log likelihood": 6,
        "probability distributions": 4,
        "physics": 4,
        "statistics": 4,
        "conditionals": 4,
        "probability theory": 4,
        "posterior probability distribution": 4,
        "a posterior probability distribution": 4,
        "gaussian probability distribution": 4,
        "probability": 4,
        "python lambda function": 4,
        "tutorial": 4,
        "nested models": 4,
        "model": 4,
        "posterior pdf": 4,
        "normalization": 4,
        "probabilistic graphical model": 4,
        "noise property": 4,
        "deterministic process": 4,
        "inference problem": 4,
        "straight line": 4,
        "mean model": 4,
        "likelihood": 4,
        "lambda function": 2,
        "2d distribution": 2
    },
    "normal cdf": {
        "normal probability plot": 30,
        "normal model": 10,
        "adult weights": 10,
        "lognormal model": 10,
        "pareto world": 8,
        "exponential distribution": 7,
        "nsfg": 5,
        "observed cdf": 5,
        "model": 5,
        "normality": 5,
        "visual test": 5,
        "birth weights": 5,
        "preterm babies": 5,
        "full term births": 5,
        "adult weight": 5,
        "log weights": 5,
        "pareto model": 5,
        "ccdf": 5,
        "straight": 5,
        "pareto variate": 5,
        "blue man group": 5,
        "stats": 5,
        "analytic distributions": 5,
        "scipy": 5,
        "frozen random variable": 5,
        "pareto distribution": 4,
        "human height": 4,
        "mean height": 4,
        "weibull distribution": 2,
        "cdf": 1,
        "failure analysis": 1,
        "empirical distribution": 1,
        "analytic distribution": 1,
        "random values": 1
    },
    "zip file": {
        "numerical tests": 12,
        "granularity": 10,
        "postal code": 8,
        "94602": 8,
        "businesses": 7,
        "zip codes": 7,
        "boolean expressions": 6,
        "utilities": 6,
        "sanity checks": 6,
        "data frames": 6,
        "data variables": 6,
        "datasets": 6,
        "businesses file": 6,
        "primary keys": 6,
        "businesses data frame": 4,
        "bus data frame": 4,
        "zip code": 4,
        "business table": 4,
        "variable postal code": 4,
        "zip code values": 4,
        "counts": 4,
        "fillna": 4,
        "extended zip codes": 4,
        "extended postal codes": 4,
        "iloc": 4,
        "missing zipcode values": 4,
        "internet": 4,
        "94545": 4,
        "94609": 4,
        "san francisco": 4,
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "longitude values": 3,
        "validzip variable": 3,
        "inspection": 2,
        "inspection dataframe": 2
    },
    "csv formatted": {
        "numerical tests": 12,
        "granularity": 10,
        "postal code": 8,
        "94602": 8,
        "businesses": 7,
        "zip codes": 7,
        "boolean expressions": 6,
        "utilities": 6,
        "sanity checks": 6,
        "data frames": 6,
        "data variables": 6,
        "datasets": 6,
        "businesses file": 6,
        "primary keys": 6,
        "businesses data frame": 4,
        "bus data frame": 4,
        "zip code": 4,
        "business table": 4,
        "variable postal code": 4,
        "zip code values": 4,
        "counts": 4,
        "fillna": 4,
        "extended zip codes": 4,
        "extended postal codes": 4,
        "iloc": 4,
        "missing zipcode values": 4,
        "internet": 4,
        "94545": 4,
        "94609": 4,
        "san francisco": 4,
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "longitude values": 3,
        "validzip variable": 3,
        "inspection": 2,
        "inspection dataframe": 2
    },
    "data directory": {
        "numerical tests": 12,
        "granularity": 10,
        "postal code": 8,
        "94602": 8,
        "businesses": 7,
        "zip codes": 7,
        "boolean expressions": 6,
        "utilities": 6,
        "sanity checks": 6,
        "data frames": 6,
        "data variables": 6,
        "datasets": 6,
        "businesses file": 6,
        "primary keys": 6,
        "businesses data frame": 4,
        "bus data frame": 4,
        "zip code": 4,
        "business table": 4,
        "variable postal code": 4,
        "zip code values": 4,
        "counts": 4,
        "fillna": 4,
        "extended zip codes": 4,
        "extended postal codes": 4,
        "iloc": 4,
        "missing zipcode values": 4,
        "internet": 4,
        "94545": 4,
        "94609": 4,
        "san francisco": 4,
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "longitude values": 3,
        "validzip variable": 3,
        "inspection": 2,
        "inspection dataframe": 2
    },
    "head function": {
        "numerical tests": 12,
        "granularity": 10,
        "postal code": 8,
        "94602": 8,
        "businesses": 7,
        "zip codes": 7,
        "boolean expressions": 6,
        "utilities": 6,
        "sanity checks": 6,
        "data frames": 6,
        "data variables": 6,
        "datasets": 6,
        "businesses file": 6,
        "primary keys": 6,
        "businesses data frame": 4,
        "bus data frame": 4,
        "zip code": 4,
        "business table": 4,
        "variable postal code": 4,
        "zip code values": 4,
        "counts": 4,
        "fillna": 4,
        "extended zip codes": 4,
        "extended postal codes": 4,
        "iloc": 4,
        "missing zipcode values": 4,
        "internet": 4,
        "94545": 4,
        "94609": 4,
        "san francisco": 4,
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "longitude values": 3,
        "validzip variable": 3,
        "inspection": 2,
        "inspection dataframe": 2
    },
    "estimator": {
        "ridgecv": 7,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "confusion matrix": 5,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "correlation": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "pipeline": 3,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "multinomialnb": 2,
        "countvectorizer": 2,
        "tfidftransformer": 2,
        "train test split": 2,
        "score()": 2,
        "linearregression object": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "pre": {
        "jupyter": 18,
        "recursion": 10,
        "color channels": 7,
        "jupyter notebooks": 5,
        "tutorial": 5,
        "command mode": 5,
        "keyboard shortcuts": 5,
        "advanced crash course": 5,
        "crash course": 5,
        "programming language": 5,
        "python python": 5,
        "cs61a": 5,
        "mathematical expressions": 5,
        "rocket icon": 5,
        "loops": 5,
        "lambdas": 5,
        "anonymous functions": 5,
        "ellipsis": 5,
        "code icon": 5,
        "double100": 4,
        "integers": 4,
        "numpy library": 4,
        "docs": 4,
        "visual perception": 4,
        "image exercises": 4,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "human eye": 3,
        "gaussian blurring function": 3,
        "image": 3,
        "python pic": 2,
        "partial derivative": 2,
        "berkeley bowl": 2,
        "cantaloupes": 2,
        "matrix multiplication": 1,
        "linear algebra knowledge": 1,
        "numpy matrices": 1,
        "vector dot products": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "fruit prices": 1,
        "final costs": 1,
        "fruit baskets": 1
    },
    "cell tab completion": {
        "constant term": 19,
        "arithmetical operations": 14,
        "train set": 12,
        "coefficient": 11,
        "predict method": 10,
        "selection variable": 9,
        "backups": 9,
        "x matrix": 8,
        "coefficients": 8,
        "page view": 8,
        "cpu load": 8,
        "cross products": 8,
        "polynomial features extraction": 8,
        "optimal weights": 8,
        "multiple linear regression": 8,
        "polynomal expansion function": 8,
        "random noise": 7,
        "noise level": 7,
        "width variable": 6,
        "lassocv": 5,
        "colored image": 4,
        "fine tuning": 1,
        "parameter tuning": 1
    },
    "pytorch": {
        "latent space": 30,
        "mixing coefficients": 20,
        "multivariate": 15,
        "logvar": 15,
        "binarized image": 14,
        "handwriting styles": 10,
        "multivariate bernoulli distribution": 10,
        "misclassifications": 10,
        "data labels": 10,
        "vector representation": 10,
        "hyperparameters": 6,
        "deep learning": 4,
        "matrix multiplications": 3,
        "traceback": 3,
        "matrix multiplication": 3,
        "size mismatch": 3,
        "runtimeerror": 3,
        "artificial neural networks": 2,
        "activation function": 2,
        "weighted inputs": 2,
        "neural network": 2,
        "tensors": 2,
        "pytorch": 2,
        "matrices": 2,
        "linear algebra operations": 2,
        "rgb color images": 2
    },
    "cross validation": {
        "ridge regression": 10,
        "svm model": 9,
        "cross validation": 6,
        "population": 3,
        "polynomial features": 3,
        "split indices": 3,
        "cross validation function": 3,
        "feature sets": 3,
        "leaf specimens": 3,
        "csv data file": 3,
        "digital images": 3,
        "plant species": 3,
        "specimen number": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "broker": 3,
        "testphot database": 3,
        "regression methods": 2,
        "true function value": 2,
        "numpy documentation": 2,
        "numpy sort method": 2,
        "testing sets": 2,
        "bootstrap": 2,
        "confidence intervals": 2,
        "betas": 2,
        "function documentation": 2,
        "bootstrapping": 2,
        "randomness": 2,
        "confidence interval": 2,
        "ridge method": 2,
        "alpha": 2,
        "weight": 2,
        "shrinking parameter": 2,
        "penalization parameter": 2,
        "regularization parameter": 2,
        "beta coefficients": 2,
        "ridge regressions": 2,
        "polynomial model": 2,
        "design matrix": 2,
        "vandermonde matrix": 2,
        "polynomialfeatures": 2,
        "toy vector": 2,
        "root mean squared error": 2,
        "average": 2,
        "housing prices": 2,
        "linear classifier": 2,
        "randomforestclassifier": 2,
        "random forest classifier": 2,
        "score function": 2,
        "gridsearchcv": 2,
        "polynomial degree": 2,
        "20th order polynomials": 2,
        "estimator": 2,
        "random distribution": 1,
        "predictor": 1,
        "dataset": 1,
        "multilinear regression": 1,
        "pipeline anova rfc": 1,
        "anova filter": 1,
        "random forest classification": 1,
        "ord": 1,
        "binary indicator": 1,
        "depdelay variables": 1,
        "feature scaling": 1,
        "recursive feature elimination": 1,
        "svc classification": 1,
        "svc algorithm": 1,
        "c parameter": 1,
        "random splits": 1,
        "prediction error": 1,
        "multiple": 1,
        "validation": 1,
        "complexity parameter": 1,
        "validation process": 1,
        "validation errors": 1,
        "hypothesis set": 1,
        "validation error": 1,
        "sine curve": 1,
        "hypothesis space": 1,
        "kfold": 1,
        "lynomial": 1,
        "fold errors": 1,
        "dual problem": 1,
        "wildly behaving pilynomials": 1,
        "lagrange multipliers": 1,
        "training error": 1,
        "bias": 1,
        "penalty term": 1,
        "model selection": 1,
        "averaging": 1,
        "hyperparameter settings": 1,
        "randomizedsearchcv": 1,
        "kfolds": 1,
        "polynomial coefficients": 1,
        "test set error": 1,
        "database table": 1,
        "testfeats table": 1
    },
    "unsupervised learning": {
        "latent space": 15,
        "mixing coefficients": 10,
        "binarized image": 7,
        "predictive models": 7,
        "learn": 7,
        "tutorial": 7,
        "scikit-learn": 7,
        "titanic survival dataset": 7,
        "sklearn library": 7,
        "categorical variables": 7,
        "exploratory data analysis": 7,
        "age": 7,
        "numerical variables": 7,
        "misclassifications": 6,
        "handwriting styles": 5,
        "multivariate bernoulli distribution": 5,
        "data labels": 5,
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "iris": 3,
        "iris data set": 3,
        "1d array": 2,
        "supervised models": 2,
        "d array": 2,
        "unsupervised models": 2,
        "distance matrix": 2,
        "dbscan": 2,
        "silhouette coefficient": 1,
        "kmeans clusterer": 1,
        "iris target": 1,
        "clustering algorithms": 1,
        "2d plot": 1,
        "sepal length": 1,
        "random state": 1,
        "euclidean distance": 1,
        "cluster centers": 1,
        "clustering outcome": 1,
        "petal length": 1,
        "scaling": 1,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "cv": 1,
        "hyperparameters": 1
    },
    "rank": {
        "gre score": 13,
        "prestige": 9,
        "helper function": 8,
        "gpa": 8,
        "pandas function": 7,
        "pivot table": 7,
        "bar chart": 7,
        "undergraduate schools": 7,
        "score": 7,
        "map() function": 7,
        "admission": 6,
        "prestige column": 5,
        "binary indicator variables": 5,
        "categorical variables": 5,
        "dummy variables": 5,
        "odds ratio": 4,
        "ucla": 4,
        "admission rate": 4,
        "confidence interval": 4,
        "uncertainty": 4,
        "predicted probability": 4,
        "maximum value": 4,
        "cartesian()": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "logisticregression": 4,
        "dummified prestige": 4,
        "flight delay prediction": 3,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "dataframe function": {
        "gre score": 13,
        "prestige": 9,
        "helper function": 8,
        "gpa": 8,
        "pandas function": 7,
        "pivot table": 7,
        "bar chart": 7,
        "undergraduate schools": 7,
        "score": 7,
        "map() function": 7,
        "admission": 6,
        "prestige column": 5,
        "binary indicator variables": 5,
        "categorical variables": 5,
        "dummy variables": 5,
        "odds ratio": 4,
        "ucla": 4,
        "admission rate": 4,
        "confidence interval": 4,
        "uncertainty": 4,
        "predicted probability": 4,
        "maximum value": 4,
        "cartesian()": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "logisticregression": 4,
        "dummified prestige": 4,
        "flight delay prediction": 3,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "restige": {
        "gre score": 13,
        "prestige": 9,
        "helper function": 8,
        "gpa": 8,
        "pandas function": 7,
        "pivot table": 7,
        "bar chart": 7,
        "undergraduate schools": 7,
        "score": 7,
        "map() function": 7,
        "admission": 6,
        "prestige column": 5,
        "binary indicator variables": 5,
        "categorical variables": 5,
        "dummy variables": 5,
        "odds ratio": 4,
        "ucla": 4,
        "admission rate": 4,
        "confidence interval": 4,
        "uncertainty": 4,
        "predicted probability": 4,
        "maximum value": 4,
        "cartesian()": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "logisticregression": 4,
        "dummified prestige": 4,
        "flight delay prediction": 3,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "grayscale": {
        "false matches": 15,
        "warped images": 10,
        "cost array": 9,
        "convenience function": 7,
        "ransac": 5,
        "inliers": 5,
        "panorama": 5,
        "output": 5,
        "stationary image": 5,
        "input images": 5,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "seed points": 4,
        "custom alpha channel masks": 4,
        "command prompt": 3,
        "tesseract library": 3,
        "ocr": 3,
        "reading errors": 3,
        "tesseract": 3,
        "overlap region": 3,
        "utility function": 3,
        "construct cost array": 3,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "optimal path": 3,
        "mcp": 3,
        "ransac transform estimation": 3,
        "random element": 3,
        "negative mask": 3,
        "numpy masked array conventions": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "final mask": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1,
        "processed image": 1
    },
    "multin": {
        "bayesian analysis": 18,
        "beta function": 12,
        "dirchilet distribution": 12,
        "counts": 10,
        "binomial distribution": 7,
        "poisson distributed events": 6,
        "waiting time": 6,
        "lecture finger": 6,
        "nlp": 6,
        "conjugate priors": 6,
        "normalizing term": 6,
        "beta distribution": 6,
        "computational bayesian exercise": 6,
        "scaling term": 6,
        "math library": 6,
        "probability model": 6,
        "binomial model": 6,
        "election": 6,
        "case study": 6,
        "grand old party": 6,
        "election88": 6,
        "age variable": 5,
        "age": 4,
        "polling data": 4,
        "bush support": 3,
        "groupby method": 3,
        "polling": 1,
        "electoral data": 1,
        "bayesian computation": 1,
        "closed form equation": 1,
        "bayesian formula": 1,
        "probability": 1,
        "gamma function": 1,
        "gamma funciton": 1,
        "gammafunction": 1
    },
    "posterior distributions": {
        "bayesian analysis": 18,
        "beta function": 12,
        "dirchilet distribution": 12,
        "counts": 10,
        "binomial distribution": 7,
        "poisson distributed events": 6,
        "waiting time": 6,
        "lecture finger": 6,
        "nlp": 6,
        "conjugate priors": 6,
        "normalizing term": 6,
        "beta distribution": 6,
        "computational bayesian exercise": 6,
        "scaling term": 6,
        "math library": 6,
        "probability model": 6,
        "binomial model": 6,
        "election": 6,
        "case study": 6,
        "grand old party": 6,
        "election88": 6,
        "age variable": 5,
        "age": 4,
        "polling data": 4,
        "bush support": 3,
        "groupby method": 3,
        "polling": 1,
        "electoral data": 1,
        "bayesian computation": 1,
        "closed form equation": 1,
        "bayesian formula": 1,
        "probability": 1,
        "gamma function": 1,
        "gamma funciton": 1,
        "gammafunction": 1
    },
    "ichlet": {
        "bayesian analysis": 18,
        "beta function": 12,
        "dirchilet distribution": 12,
        "counts": 10,
        "binomial distribution": 7,
        "poisson distributed events": 6,
        "waiting time": 6,
        "lecture finger": 6,
        "nlp": 6,
        "conjugate priors": 6,
        "normalizing term": 6,
        "beta distribution": 6,
        "computational bayesian exercise": 6,
        "scaling term": 6,
        "math library": 6,
        "probability model": 6,
        "binomial model": 6,
        "election": 6,
        "case study": 6,
        "grand old party": 6,
        "election88": 6,
        "age variable": 5,
        "age": 4,
        "polling data": 4,
        "bush support": 3,
        "groupby method": 3,
        "polling": 1,
        "electoral data": 1,
        "bayesian computation": 1,
        "closed form equation": 1,
        "bayesian formula": 1,
        "probability": 1,
        "gamma function": 1,
        "gamma funciton": 1,
        "gammafunction": 1
    },
    "computational tractability": {
        "bayesian analysis": 18,
        "beta function": 12,
        "dirchilet distribution": 12,
        "counts": 10,
        "binomial distribution": 7,
        "poisson distributed events": 6,
        "waiting time": 6,
        "lecture finger": 6,
        "nlp": 6,
        "conjugate priors": 6,
        "normalizing term": 6,
        "beta distribution": 6,
        "computational bayesian exercise": 6,
        "scaling term": 6,
        "math library": 6,
        "probability model": 6,
        "binomial model": 6,
        "election": 6,
        "case study": 6,
        "grand old party": 6,
        "election88": 6,
        "age variable": 5,
        "age": 4,
        "polling data": 4,
        "bush support": 3,
        "groupby method": 3,
        "polling": 1,
        "electoral data": 1,
        "bayesian computation": 1,
        "closed form equation": 1,
        "bayesian formula": 1,
        "probability": 1,
        "gamma function": 1,
        "gamma funciton": 1,
        "gammafunction": 1
    },
    "json file": {
        "democratic republic of the congo": 12,
        "sqlite3 library": 12,
        "population": 9,
        "json file": 6,
        "islamic republic": 6,
        "afghanistan": 6,
        "federal republic": 6,
        "bangladesh": 6,
        "nigeria": 6,
        "lebanese republic": 6,
        "democratic socialist republic": 6,
        "code": 6,
        "people's republic of bangladesh": 6,
        "federal republic of nigeria": 6,
        "tunisia": 6,
        "islamic republic of afghanistan": 6,
        "federative republic": 6,
        "merged table": 6,
        "brazil": 6,
        "sql query": 6,
        "sql": 6,
        "alter table command": 6,
        "sqlite3 database": 6,
        "sqlite": 6,
        "foreign key constraints": 6,
        "world bank projects": 3,
        "hashemite kingdom of jordan": 3,
        "code cell": 3,
        "indicator data": 3,
        "merged data set": 3,
        "countrycode": 3
    },
    "numpy library": {
        "jupyter": 27,
        "docs": 11,
        "image values": 8,
        "image files": 8,
        "pixel value": 8,
        "image formats": 8,
        "ar": 8,
        "command mode": 5,
        "keyboard shortcuts": 5,
        "submission system": 4,
        "ellipsis": 4,
        "2d array": 4,
        "orthonormal basis": 4,
        "math operations": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "numerical differentiation": 3,
        "vector dot products": 2,
        "cantaloupes": 2,
        "python list": 2,
        "word dimension": 2,
        "array dimension": 2,
        "vector dimension": 2,
        "1d array": 2,
        "matrix": 2,
        "2d vectors": 2,
        "arrows": 2,
        "unit vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "dot product": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "colors": 1,
        "bar chart": 1,
        "berkeley bowl": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "dimensionality properties": 1,
        "matrix addition": 1,
        "vector operations": 1
    },
    "dataframe data structure": {
        "twitter": 16,
        "api": 8,
        "tweepy": 8,
        "authentication keys": 8,
        "tweetdeck": 5,
        "academic statisticians": 4,
        "r": 4,
        "data analysts": 4,
        "programming language": 4,
        "automatic tests": 4,
        "imports": 4,
        "tweepy package": 4,
        "conda environment": 4,
        "twitter developer account": 4,
        "web site": 4,
        "access token secret": 4,
        "access token": 4,
        "consumer secret": 4,
        "developer account": 4,
        "twitter account": 4,
        "templates": 4,
        "coordinates": 4,
        "status object": 4,
        "pandas table json": 4,
        "twitter api": 4,
        "python object": 4,
        "tweetsourcing": 4,
        "pandas documentation": 4,
        "null hypothesis": 4,
        "json": 3,
        "string method": 3,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "statistical test": 2,
        "numpy functions": 2,
        "hypothesis test": 2,
        "table": 2,
        "datascience": 2,
        "data 8": 2,
        "twitter web client": 2,
        "trump tweets": 1
    },
    "data visualization libraries": {
        "seaborn documentation": 14,
        "seaborn library": 14,
        "facetgrid": 14,
        "star ratings": 14,
        "box": 13,
        "text length": 13,
        "countplot": 12,
        "star rating": 12,
        "numerical columns": 12,
        "mean values": 12,
        "groupby dataframe": 11,
        "heatmap": 10,
        "countvectorizer": 10,
        "countvectorizer object": 7,
        "confusion matrix": 4,
        "pipeline": 3,
        "multinomialnb": 2,
        "tfidftransformer": 2
    },
    "data imports": {
        "seaborn documentation": 14,
        "seaborn library": 14,
        "facetgrid": 14,
        "star ratings": 14,
        "box": 13,
        "text length": 13,
        "countplot": 12,
        "star rating": 12,
        "numerical columns": 12,
        "mean values": 12,
        "groupby dataframe": 11,
        "heatmap": 10,
        "countvectorizer": 10,
        "countvectorizer object": 7,
        "confusion matrix": 4,
        "pipeline": 3,
        "multinomialnb": 2,
        "tfidftransformer": 2
    },
    "orn": {
        "dummy variables": 21,
        "countplot": 12,
        "color hue": 11,
        "interest rate": 11,
        "fico score": 11,
        "lmplots": 11,
        "categorical features": 11,
        "purpose column": 11,
        "decisiontreeclassifier": 9,
        "decision tree model": 9,
        "dtree": 9,
        "decisiontreeclassifier()": 9,
        "confusion matrix": 9,
        "randomforestclassifier": 4,
        "random forest model": 4,
        "cvlegend": 2,
        "calls dataframe": 2,
        "vertical bar plot": 2,
        "barh plot type": 1,
        "series class": 1,
        "value counts": 1,
        "seaborn library": 1,
        "countplot method": 1,
        "pandas plot": 1,
        "order parameter": 1,
        "cvdow field": 1,
        "coolindex": 1,
        "noise violation": 1,
        "seaborn plot": 1,
        "total noise violations": 1,
        "noise violation calls": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "numpy documentation": {
        "dataframe structures": 16,
        "null vector": 15,
        "random values": 12,
        "column names": 8,
        "values method": 8,
        "null matrix": 6,
        "3 x 3 identity matrix": 6,
        "maximum values": 6,
        "credit dataset": 5,
        "non-zero elements": 4,
        "random matrices": 4,
        "random vector": 4,
        "random matrix": 4,
        "broadcasting": 4,
        "data manipulation": 4,
        "data structures": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "selection": 4,
        "column headers": 4,
        "slicing": 4,
        "filtering": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "dataset": 3,
        "numpy method": 2,
        "statistics table": 2,
        "attribute creditamount": 2,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "black coloured markers": 1,
        "font size": 1,
        "age": 1,
        "attributes duration": 1
    },
    "assignments": {
        "departure delay": 10,
        "depdelay": 8,
        "dayofweek": 6,
        "airtime": 6,
        "unit tests": 5,
        "code cell": 5,
        "uniquecarrier": 4,
        "iata airport code": 4,
        "scheduled arrival time": 4,
        "crsarrtime": 4,
        "crsdeptime": 4,
        "scheduled departure time": 4,
        "ord": 4,
        "faa": 4,
        "int64": 4,
        "linear regression model": 3,
        "arrdelay": 3,
        "hyperparameters": 3,
        "split function": 3,
        "returned dataframes": 3,
        "returned values": 3,
        "normalized value": 3,
        "machine learning technique": 3,
        "maximum values": 3,
        "float64": 3,
        "trained model": 3,
        "validation": 3,
        "air carriers": 2,
        "uniquecarrier depdelay": 2,
        "assertion tests": 2,
        "uniquecarrier columns": 2,
        "cutoff parameter": 2,
        "uniquecarrier depdelay origin": 2,
        "binary indicator variables": 2,
        "categorical variables": 2,
        "dummy indicator variables": 2,
        "docstring": 2,
        "rug plot": 2,
        "multivariate regresion model": 2,
        "predictor variable": 2,
        "regression model": 2,
        "cruising speed": 2,
        "tail height": 2,
        "intercept": 2,
        "airtime column": 1,
        "willard airport": 1,
        "plot rug plots": 1,
        "random jitter": 1,
        "lesson notebook": 1,
        "plot histograms": 1,
        "test cases": 1,
        "delta airline": 1,
        "airbus": 1,
        "accommodation": 1,
        "categorical data": 1,
        "aircraft physical characteristics": 1,
        "attributes": 1,
        "wingspan": 1,
        "categorical variable": 1,
        "dimensionality reduction techniques": 1,
        "principal components analysis": 1,
        "frame": 1,
        "random number generator": 1,
        "test sets": 1,
        "multiple independent variables": 1,
        "dependent variable": 1,
        "patsy formula": 1,
        "multivariate regression model": 1,
        "matrix": 1,
        "gaussian distribution": 1,
        "probabilities": 1,
        "2d array": 1,
        "binary indicators": 1,
        "default parameters": 1,
        "maximum likelihood": 1
    },
    "hypothesistest": {
        "sampling distribution": 26,
        "resampling": 17,
        "rmse": 17,
        "null hypothesis": 12,
        "estimated slope": 6,
        "mean birthweight": 6,
        "weights": 6,
        "birth weight": 6,
        "strata": 6,
        "survey": 6,
        "brfss data": 6,
        "log weights": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "residuals": 6,
        "plot percentiles": 6,
        "correlation": 6,
        "compute coefficient of determination": 6,
        "height information": 5,
        "sampling distributions": 5,
        "confidence interval": 3,
        "standard error": 2,
        "resample rows": 2,
        "mean height": 2,
        "column": 1,
        "finalwt": 1
    },
    "permutation": {
        "sampling distribution": 26,
        "resampling": 17,
        "rmse": 17,
        "null hypothesis": 12,
        "estimated slope": 6,
        "mean birthweight": 6,
        "weights": 6,
        "birth weight": 6,
        "strata": 6,
        "survey": 6,
        "brfss data": 6,
        "log weights": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "residuals": 6,
        "plot percentiles": 6,
        "correlation": 6,
        "compute coefficient of determination": 6,
        "height information": 5,
        "sampling distributions": 5,
        "confidence interval": 3,
        "standard error": 2,
        "resample rows": 2,
        "mean height": 2,
        "column": 1,
        "finalwt": 1
    },
    "nltk reuters corpus": {
        "default parameters": 16,
        "linearsvc": 14,
        "stop words": 14,
        "tfidfvectorizer": 10,
        "unigrams": 9,
        "minimum feature term": 7,
        "bigrams": 7,
        "maximum frequency": 7,
        "trigrams": 7,
        "countvectorizer": 6,
        "reuters data set": 5,
        "fileids": 5,
        "reuters corpus": 5,
        "lexical diversity": 4,
        "tokens": 3,
        "puntuation tokens": 3,
        "alphanumeric characters": 3,
        "code cell": 3,
        "tokenize method": 3,
        "porter stemmer": 3,
        "kmeans": 3,
        "nltk corpus object": 3,
        "text data mining": 3,
        "categories": 3,
        "clustering analysis": 2,
        "nltk corpus": 2,
        "nltk reuters corpus": 2,
        "non-alphanumeric characters": 2,
        "reuters object": 2,
        "machine learning models": 2,
        "news story": 2,
        "test sets": 2,
        "linearsvc algorithm": 2,
        "news document": 2,
        "document term matrix": 2,
        "word2vec model": 2,
        "total frequency": 2,
        "cluster labels": 1,
        "svm": 1,
        "cosine similarity": 1,
        "cosine similarities": 1
    },
    "cell menu": {
        "value iteration": 12,
        "randomly generated mdp": 6,
        "presidentialelections": 6,
        "policy iteration": 5,
        "test cell": 5,
        "homework": 5,
        "elections table": 5,
        "ahs": 5,
        "cali table": 4,
        "democratic presidential candidate": 4,
        "transition probability distribution": 3,
        "operations": 3,
        "markov decision processes": 3,
        "optimal policy": 3,
        "reward function": 3,
        "initial state distribution": 3,
        "value function": 3,
        "value iteration update": 3,
        "bellman backup operator value operator": 3,
        "optimal value function": 3,
        "m": 3,
        "3d arrays": 3,
        "randomly generated mdps": 3,
        "voting": 3,
        "programming question": 3,
        "democrat column": 3,
        "percentages": 3,
        "answer cell": 2,
        "nable code cell": 2,
        "automatic tests": 2,
        "automated tests": 2,
        "home burglaries": 2,
        "summer vacation period": 2,
        "adt security systems": 2,
        "burglaries": 2,
        "labor day": 2,
        "memorial day": 2,
        "python code": 2,
        "compound expression": 2,
        "subexpressions": 2,
        "missing expression": 2,
        "elections": 2,
        "dem states column": 2,
        "democratic votes": 2,
        "linear system": 2,
        "linear equation": 2,
        "state value function": 2,
        "exact policy iteration": 2,
        "data file": 2,
        "american housing survey": 2,
        "ahs dataset": 2,
        "housing unit": 2,
        "population column": 2,
        "year column": 2,
        "quantitative data": 2,
        "integer": 2,
        "spread function": 1,
        "call to group": 1,
        "democrat spread column": 1,
        "southern states": 1,
        "\\gamma": 1,
        "world population": 1,
        "standard metropolitan statistical area": 1,
        "join method": 1,
        "smsa": 1,
        "bar chart": 1
    },
    "students": {
        "values": 14,
        "cs data": 12,
        "average heights": 8,
        "alpha value": 8,
        "statistical test": 8,
        "significance": 8,
        "women": 8,
        "cogsci": 8,
        "compsci": 8,
        "majors": 8,
        "last name": 8,
        "average height values": 6,
        "pivot table": 6,
        "confounding variable": 6,
        "ordinary least squares": 6,
        "linear models": 6,
        "design matrices": 6,
        "patsy": 6,
        "aliases": 4,
        "alias": 4,
        "first name": 4,
        "students": 2,
        "sql": 2,
        "datahub cluster": 1,
        "shared postgres databases": 1,
        "sql alchemy library": 1,
        "schema": 1,
        "python engine": 1,
        "local postgres database": 1,
        "fec": 1,
        "grading": 1,
        "query strings": 1,
        "sql expressions": 1,
        "homework": 1,
        "query string variable": 1,
        "count": 1,
        "query string": 1,
        "committee id": 1,
        "transaction amount": 1,
        "total transaction amounts": 1,
        "limit 20": 1,
        "distinct keyword": 1
    },
    "token": {
        "generator function": 70,
        "natural language processing": 18,
        "stop words": 18,
        "tokens": 12,
        "word counts": 12,
        "tokenization": 9,
        "natural language": 5,
        "token": 5,
        "sorted function": 4,
        "sorted word counts": 4,
        "memory consumption": 3,
        "filenames": 3,
        "with statement": 3,
        "word counting": 2,
        "kaggle hosted dataset": 2,
        "songlyrics": 2,
        "song lyrics": 2,
        "tokenize song lyrics": 1
    },
    "nom": {
        "linearregression object": 8,
        "3rd degree polynomial": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ridgecv": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression model": 1,
        "data matrix": 1
    },
    "ression": {
        "linearregression object": 8,
        "3rd degree polynomial": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ridgecv": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression model": 1,
        "data matrix": 1
    },
    "asso regression": {
        "linearregression object": 8,
        "3rd degree polynomial": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ridgecv": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression model": 1,
        "data matrix": 1
    },
    "idge regression": {
        "linearregression object": 8,
        "3rd degree polynomial": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ridgecv": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression model": 1,
        "data matrix": 1
    },
    "ridgecv": {
        "linearregression object": 8,
        "3rd degree polynomial": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ridgecv": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression model": 1,
        "data matrix": 1
    },
    "response variables": {
        "linearregression object": 8,
        "3rd degree polynomial": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ridgecv": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression model": 1,
        "data matrix": 1
    },
    "automatic regular": {
        "linearregression object": 8,
        "3rd degree polynomial": 6,
        "plotting function": 6,
        "3rd degree polynomial regression": 6,
        "polynomialfeatures": 6,
        "polynomial": 6,
        "test sets": 6,
        "training error": 6,
        "polynomial approximation": 6,
        "testing error": 6,
        "lasso": 6,
        "idgecv": 6,
        "ridgecv": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression model": 1,
        "data matrix": 1
    },
    "local autograder tests": {
        "postal code": 13,
        "94602": 10,
        "businesses": 9,
        "zip code": 8,
        "zip codes": 8,
        "granularity": 7,
        "bus data frame": 6,
        "business table": 6,
        "zip code values": 6,
        "counts": 6,
        "fillna": 5,
        "extended zip codes": 5,
        "extended postal codes": 5,
        "94545": 5,
        "longitude values": 4,
        "longitude": 4,
        "latitude": 4,
        "businesses data frame": 4,
        "variable postal code": 4,
        "iloc": 4,
        "missing zipcode values": 4,
        "internet": 4,
        "94609": 4,
        "san francisco": 4,
        "missing zip codes": 3,
        "business dataframe": 3,
        "population": 3,
        "nonmissing values": 3,
        "validzip variable": 3,
        "python type command": 2,
        "search engine": 2,
        "inspection": 2,
        "inspection dataframe": 2,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "series isnull method": 1,
        "binary array": 1,
        "incorrect zip codes": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "business name": 1,
        "zip": 1
    },
    "emails": {
        "magic function": 8,
        "pickle module": 6,
        "working directory": 6,
        "enron data": 6,
        "python dictionary": 6,
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "email": 5,
        "datapath": 4,
        "subject line": 4,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "base directory": 3,
        "integers": 3,
        "spam label array": 3,
        "scikit learn": 3,
        "spam arrays": 3,
        "ham label array": 3,
        "contour plot": 3,
        "false negatives": 3,
        "cutoff probability": 3,
        "final classifier": 3,
        "cancer screenings": 3,
        "false positives": 3,
        "testing sets": 3,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "filtering rate": 2,
        "beautifulsoup": 2,
        "spam mails": 2,
        "filter rate": 2,
        "spammy words": 2,
        "characterstics": 2,
        "html table": 2,
        "data parsing": 2,
        "spam": 2,
        "web crawling": 2,
        "datahub": 2,
        "predction model": 1,
        "zero predictor": 1,
        "spam classification": 1,
        "tfidfvectorizer": 1,
        "bigrams": 1,
        "linearsvc": 1,
        "default parameters": 1,
        "unigrams": 1,
        "stop words": 1
    },
    "l2 norm term": {
        "ridgecv": 7,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "correlation": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression object": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "intercept term": {
        "ridgecv": 7,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "correlation": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression object": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "statistical community": {
        "ridgecv": 7,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "correlation": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression object": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "regularization parameter": {
        "ridgecv": 7,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "correlation": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression object": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "regularized linear regression model": {
        "ridgecv": 7,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "correlation": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression object": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "shrinkage": {
        "ridgecv": 7,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "correlation": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression object": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "smoothness constraint": {
        "ridgecv": 7,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "correlation": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression object": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "coefficient loadings": {
        "ridgecv": 7,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "correlation": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression object": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "ordinary least squares regression model": {
        "ridgecv": 7,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "correlation": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression object": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "regularization term": {
        "ridgecv": 7,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "correlation": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression object": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "regularized linear regression technique": {
        "ridgecv": 7,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "correlation": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression object": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "dense solutions": {
        "ridgecv": 7,
        "lasso": 6,
        "idgecv": 6,
        "ex": 6,
        "exercises": 6,
        "bike sharing dataset": 6,
        "ises": 6,
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "correlation": 4,
        "r formula syntax": 4,
        "ordinary least squares model": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "ols() function": 4,
        "nonlinear relationships": 4,
        "r formula": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression object": 2,
        "data scientist": 1,
        "polynomical models": 1,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "corr()": 1,
        "order()": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "hours distribution": 1
    },
    "spark": {
        "rdd": 10,
        "movielens": 10,
        "text file": 8,
        "spark": 7,
        "head command": 6,
        "arrival delay": 5,
        "spark dataframe": 5,
        "map reduce job": 4,
        "movieid": 4,
        "lower case": 3,
        "bike share": 3,
        "vm": 3,
        "scikit learn": 3,
        "python pipeline": 3,
        "depdelay": 3,
        "rdd code": 3,
        "arrdelay column": 3,
        "depdelay column": 3,
        "binary labels": 3,
        "tickers": 3,
        "ticker names": 3,
        "covariance matrix": 3,
        "flatmap": 2,
        "filter filter": 2,
        "caltrain station": 2,
        "reducebykey method": 2,
        "second": 2,
        "map transformation": 2,
        "arrdealy": 2,
        "labeledpoint": 2,
        "departure delay": 2,
        "textfile": 2,
        "eigenvalues": 2,
        "eigenvectors": 2,
        "tickerinfo": 2,
        "reduce process": 1,
        "combinebykey method": 1,
        "inebykey": 1,
        "red": 1,
        "rdealy": 1,
        "faa": 1,
        "logisticregression": 1,
        "default parameters": 1,
        "iterations": 1,
        "spark context": 1,
        "import dependencies": 1,
        "stock price": 1,
        "sp500": 1,
        "partition columns": 1,
        "test lists": 1,
        "training examples": 1,
        "test list": 1,
        "test examples": 1,
        "train example": 1,
        "tick": 1,
        "numpy vectors": 1,
        "diff rolumns": 1,
        "eigenval": 1,
        "eigh function": 1,
        "computecov function": 1,
        "cov key": 1,
        "spectral analysis": 1,
        "directory figs": 1,
        "holiday shopping": 1,
        "income distribution": 1,
        "company name": 1,
        "sector ids": 1,
        "sector id": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "validation": {
        "validation error": 8,
        "validation": 8,
        "train set": 7,
        "complexity parameter": 6,
        "polynomial degree": 6,
        "test set error": 5,
        "colored image": 4,
        "test risk": 4,
        "validation set error": 4,
        "hypothesis set": 4,
        "training error": 4,
        "20th order polynomials": 4,
        "cross products": 3,
        "polynomial features extraction": 3,
        "optimal weights": 3,
        "multiple linear regression": 3,
        "polynomal expansion function": 3,
        "learning rate loss": 2,
        "training method": 2,
        "network error": 2,
        "activation function": 2,
        "hidden layers": 2,
        "batch size": 2,
        "10000 element long vectors": 2,
        "stochastic gradient descent": 2,
        "connected layer": 2,
        "hyper": 2,
        "learner": 2,
        "test error": 2,
        "best fit model": 2,
        "validation set errors": 2,
        "random splits": 2,
        "prediction error": 2,
        "multiple": 2,
        "validation process": 2,
        "validation errors": 2,
        "sine curve": 2,
        "hypothesis space": 2,
        "kfold": 2,
        "fold errors": 2,
        "dual problem": 2,
        "wildly behaving pilynomials": 2,
        "lagrange multipliers": 2,
        "bias": 2,
        "penalty term": 2,
        "estimator": 2,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "mlp": 1,
        "hidden layer": 1,
        "non-linear activation function": 1,
        "silhouette coefficient": 1,
        "kmeans clusterer": 1,
        "fine tuning": 1,
        "parameter tuning": 1,
        "polynomial features": 1,
        "lynomial": 1,
        "model selection": 1,
        "gridsearchcv": 1,
        "averaging": 1,
        "hyperparameter settings": 1,
        "randomizedsearchcv": 1,
        "kfolds": 1,
        "polynomial coefficients": 1,
        "decisiontreeclassifier": 1,
        "random noise": 1,
        "noise level": 1,
        "extratree": 1,
        "decision rules": 1,
        "decisiontreeregression": 1,
        "decision trees": 1,
        "decisiontreeregressor": 1,
        "important features": 1,
        "importance weight": 1,
        "validation data": 1
    },
    "factor graph": {
        "receiving node": 25,
        "marginalizing": 18,
        "function marginalize": 12,
        "sending": 10,
        "functional programming": 10,
        "1d numpy arrays": 10,
        "tensor representations": 8,
        "numpy broadcasting": 8,
        "nodes": 7,
        "factor graph": 7,
        "variable nodes": 7,
        "helper functions": 6,
        "factor": 5,
        "factor class": 5,
        "inference engine": 4,
        "single forward pass": 3,
        "single backward pass": 3,
        "marginal distribution": 3,
        "local marginals": 3,
        "message passing schemes": 3,
        "message passing algorithms": 2,
        "observed variables": 2,
        "latent variables": 2,
        "marginals": 2,
        "probabilistic queries": 2,
        "unobserved nodes": 1,
        "unnormalized log marginal distribution": 1,
        "variable class": 1
    },
    "python numerical stack": {
        "iloc": 9,
        "random numbers": 6,
        "numpy functions": 6,
        "dfcars": 6,
        "listiness": 4,
        "matplotlib libraries": 3,
        "function object": 3,
        "umpy module": 3,
        "method": 3,
        "isprime": 3,
        "keyword arguments": 3,
        "iterate": 3,
        "numpy module functions": 3,
        "numpy array constructors": 3,
        "64 bit": 3,
        "floating point": 3,
        "random constructor": 3,
        "readability": 3,
        "computer chips": 3,
        "broadcasting": 3,
        "lists": 3,
        "matrix multiplication": 3,
        "mean": 3,
        "one dimensional iteration": 2,
        "idiom": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "orn": 1,
        "lib": 1,
        "statistical plotting": 1,
        "mat": 1,
        "computational mathematics": 1,
        "multivariate data set": 1,
        "iris flower data set": 1,
        "multiple measurements": 1,
        "taxonomic problems": 1,
        "linear discriminant analysis": 1,
        "list comprehensions": 1,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "null vector": {
        "dataframe structures": 24,
        "column names": 16,
        "values method": 16,
        "data manipulation": 8,
        "data structures": 8,
        "series objects": 8,
        "tabular data structure": 8,
        "empty dataframe": 8,
        "datasets": 8,
        "observation": 8,
        "column headers": 8,
        "slicing": 8,
        "mmax value": 8,
        "attributes": 8,
        "positional indexing": 8,
        "feature extraction": 8,
        "2d python plotting library": 2,
        "lib": 2,
        "plotting functions": 2,
        "web search": 2
    },
    "random values": {
        "dataframe structures": 24,
        "column names": 16,
        "values method": 16,
        "data manipulation": 8,
        "data structures": 8,
        "series objects": 8,
        "tabular data structure": 8,
        "empty dataframe": 8,
        "datasets": 8,
        "observation": 8,
        "column headers": 8,
        "slicing": 8,
        "mmax value": 8,
        "attributes": 8,
        "positional indexing": 8,
        "feature extraction": 8,
        "2d python plotting library": 2,
        "lib": 2,
        "plotting functions": 2,
        "web search": 2
    },
    "utility function": {
        "convenience function": 16,
        "false matches": 15,
        "cost array": 12,
        "warped images": 10,
        "private arch": 6,
        "arches national park": 6,
        "delicate arch": 6,
        "optimal horizontal position": 6,
        "bottom edges": 6,
        "contiguous regions": 6,
        "minimal cost path": 6,
        "ransac": 5,
        "inliers": 5,
        "panorama": 5,
        "output": 5,
        "stationary image": 5,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "label of interest": 4,
        "alpha channels": 4,
        "alpha blended individual images": 4,
        "custom alpha channel masks": 4,
        "implementation": 1,
        "setdefault method": 1,
        "dictionaries": 1
    },
    "null hypothesis": {
        "sampling distribution": 10,
        "analytic distribution": 8,
        "central limit theorem": 8,
        "values": 7,
        "cs data": 6,
        "null hypothesis": 6,
        "standard error": 6,
        "average heights": 4,
        "alpha value": 4,
        "statistical test": 4,
        "significance": 4,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "majors": 4,
        "permutation": 4,
        "student t distribution": 4,
        "simulation": 4,
        "lognormal distribution": 4,
        "birth weight": 4,
        "birth weights": 4,
        "multiplicative factors": 4,
        "random value": 4,
        "adult weights": 4,
        "difference in means": 4,
        "confidence intervals": 4,
        "confidence interval": 4,
        "average height values": 3,
        "pivot table": 3,
        "confounding variable": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3,
        "hypothesistest": 2,
        "cdf": 2,
        "sampling distributions": 2,
        "gender gap": 2,
        "student engineering teams": 2,
        "class projects": 2,
        "standard errors": 2
    },
    "modelling function": {
        "error functions": 30,
        "sigmoid function": 28,
        "error function": 24,
        "predicted class": 20,
        "decision boundary": 10,
        "gradient descent": 10,
        "modelling function": 8,
        "logistic function": 8,
        "total cost function": 4,
        "last function approximation": 4,
        "learning rate": 4,
        "learning curve": 4,
        "resholding": 2,
        "regularization": 2,
        "predict()": 2,
        "correct guesses": 2,
        "guessed classes": 2,
        "predicted exam results": 2
    },
    "image": {
        "false matches": 15,
        "warped images": 10,
        "cost array": 9,
        "convenience function": 7,
        "ransac": 5,
        "inliers": 5,
        "panorama": 5,
        "output": 5,
        "stationary image": 5,
        "input images": 5,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "seed points": 4,
        "overlap region": 3,
        "utility function": 3,
        "construct cost array": 3,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "optimal path": 3,
        "mcp": 3,
        "ransac transform estimation": 3,
        "random element": 3,
        "negative mask": 3,
        "numpy masked array conventions": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "cantaloupes": 2,
        "label of interest": 2,
        "final mask": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2,
        "color intensity": 1,
        "colors": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1,
        "vector dot products": 1,
        "berkeley bowl": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1
    },
    "mean function": {
        "predictive distribution": 14,
        "minimize function": 8,
        "gp object": 6,
        "covariance matrix": 6,
        "posterior distribution": 6,
        "time delays": 6,
        "optimization": 5,
        "neg log likelihood": 5,
        "kernel matrix": 4,
        "ball park values": 3,
        "white noise standard deviation": 3,
        "compute method": 3,
        "george tutorial": 3,
        "neg log likelihood function": 3,
        "logarithms": 3,
        "log parameters": 3,
        "likelihood": 3,
        "maxim": 3,
        "parameter vector": 3,
        "grid locations": 3,
        "predictive mean": 3,
        "confidence intervals": 3,
        "the": 3,
        "emcee": 3,
        "gradient functions": 3,
        "agn reverberation mapping": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "generative process": 3,
        "conditional models": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "prime numbers": {
        "iloc": 9,
        "random numbers": 6,
        "numpy functions": 6,
        "dfcars": 6,
        "listiness property": 6,
        "listiness": 4,
        "isprime": 3,
        "keyword arguments": 3,
        "iterate": 3,
        "numpy module functions": 3,
        "numpy array constructors": 3,
        "64 bit": 3,
        "floating point": 3,
        "random constructor": 3,
        "python lists": 3,
        "vector operations": 3,
        "readability": 3,
        "computer chips": 3,
        "broadcasting": 3,
        "lists": 3,
        "matrix multiplication": 3,
        "mean": 3,
        "one dimensional iteration": 2,
        "idiom": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "list myprimes": {
        "iloc": 9,
        "random numbers": 6,
        "numpy functions": 6,
        "dfcars": 6,
        "listiness property": 6,
        "listiness": 4,
        "isprime": 3,
        "keyword arguments": 3,
        "iterate": 3,
        "numpy module functions": 3,
        "numpy array constructors": 3,
        "64 bit": 3,
        "floating point": 3,
        "random constructor": 3,
        "python lists": 3,
        "vector operations": 3,
        "readability": 3,
        "computer chips": 3,
        "broadcasting": 3,
        "lists": 3,
        "matrix multiplication": 3,
        "mean": 3,
        "one dimensional iteration": 2,
        "idiom": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "instrument correction": {
        "event metadata": 11,
        "international standard exchange format": 9,
        "station metadata": 7,
        "lowpass filter": 4,
        "corner frequency": 4,
        "preview": 4,
        "local files": 4,
        "array analysis": 4,
        "estimate travel times": 4,
        "seismic phases": 4,
        "cross correlation routines": 4,
        "event detection": 4,
        "plot ray paths": 4,
        "manipulation filtering": 4,
        "gaussian noise": 3,
        "fdsn web services": 3,
        "seismological data centers": 3,
        "protocols": 3,
        "nested obspy event class structure": 3,
        "event objects": 3,
        "catalog object": 3,
        "station objects": 3,
        "network objects": 3,
        "channel objects": 3,
        "fdsn stationxml": 3,
        "nested obspy inventory": 3,
        "inventory object": 3,
        "waveform data": 3,
        "trace objects": 3,
        "ainformation": 3,
        "nested obspy inventory class": 3,
        "pling": 3,
        "spectrograms": 2,
        "spectrogram plot": 2,
        "logarithmic frequency scale": 2,
        "filetype": 2,
        "xml": 2,
        "command line utilities": 2,
        "inventory": 2,
        "fdsn server": 2,
        "wildcard": 2,
        "channel code": 2,
        "stationxml files": 1,
        "official schema": 1,
        "channel codes": 1,
        "seismometer time series": 1,
        "utcdatetime": 1,
        "timestamps": 1,
        "instrument response": 1,
        "digitizer": 1,
        "amplitude": 1,
        "phase response": 1,
        "instrument correction": 1,
        "epicentral range": 1,
        "instrument corrected waveforms": 1,
        "interactive ipython help": 1,
        "obspy documentation": 1,
        "ipython tab completion": 1,
        "stationxml": 1,
        "tapering": 1,
        "lowpass": 1,
        "ampling": 1
    },
    "priors": {
        "bayesian analysis": 18,
        "beta function": 12,
        "counts": 10,
        "binomial distribution": 7,
        "poisson distributed events": 6,
        "waiting time": 6,
        "lecture finger": 6,
        "nlp": 6,
        "beta distribution": 6,
        "computational bayesian exercise": 6,
        "scaling term": 6,
        "math library": 6,
        "probability model": 6,
        "dirchilet distribution": 6,
        "binomial model": 6,
        "election": 6,
        "case study": 6,
        "grand old party": 6,
        "election88": 6,
        "age variable": 5,
        "age": 4,
        "polling data": 4,
        "bush support": 3,
        "groupby method": 3,
        "polling": 1,
        "electoral data": 1,
        "bayesian computation": 1,
        "closed form equation": 1,
        "bayesian formula": 1,
        "probability": 1,
        "gamma function": 1,
        "gamma funciton": 1,
        "gammafunction": 1
    },
    "club": {
        "validation data": 9,
        "probability": 9,
        "false positives": 9,
        "gradient boosted trees": 6,
        "false negatives": 6,
        "decision trees": 6,
        "prediction accuracy": 6,
        "code comments": 5,
        "finance": 5,
        "lendingclub": 5,
        "risky loans": 5,
        "learning algorithm": 5,
        "validation sets": 5,
        "model parameters": 5,
        "multiple decision trees": 5,
        "boosted trees": 5,
        "ensemble classifier": 5,
        "predictive power": 5,
        "sample validation data": 5,
        "safe loan": 5,
        "predict method": 5,
        "prediction probabilities": 5,
        "correctly classified examples": 4,
        "boosted tree model": 3,
        "learned": 3,
        "boosted trees model": 3,
        "decision tree model": 3,
        "probability predictions": 3,
        "probabilities": 3,
        "prediction probability": 3,
        "tree models": 2,
        "classification error": 2,
        "training errors": 2,
        "check": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation error": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1
    },
    "load lendingclub": {
        "validation data": 9,
        "probability": 9,
        "false positives": 9,
        "gradient boosted trees": 6,
        "false negatives": 6,
        "decision trees": 6,
        "prediction accuracy": 6,
        "code comments": 5,
        "finance": 5,
        "lendingclub": 5,
        "risky loans": 5,
        "learning algorithm": 5,
        "validation sets": 5,
        "model parameters": 5,
        "multiple decision trees": 5,
        "boosted trees": 5,
        "ensemble classifier": 5,
        "predictive power": 5,
        "sample validation data": 5,
        "safe loan": 5,
        "predict method": 5,
        "prediction probabilities": 5,
        "correctly classified examples": 4,
        "boosted tree model": 3,
        "learned": 3,
        "boosted trees model": 3,
        "decision tree model": 3,
        "probability predictions": 3,
        "probabilities": 3,
        "prediction probability": 3,
        "tree models": 2,
        "classification error": 2,
        "training errors": 2,
        "check": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation error": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1
    },
    "observation": {
        "gre score": 13,
        "pandas function": 7,
        "pivot table": 7,
        "bar chart": 7,
        "undergraduate schools": 7,
        "score": 7,
        "map() function": 7,
        "admission": 6,
        "ridge regression": 5,
        "confidence interval": 5,
        "admission rate": 4,
        "uncertainty": 4,
        "helper function": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "gpa": 4,
        "prestige": 4,
        "population": 2,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2,
        "unknown iris": 2,
        "predicted response value": 2,
        "euclidian distance": 2,
        "distance metric": 2,
        "random distribution": 1,
        "predictor": 1,
        "dataset": 1,
        "regression methods": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "testing sets": 1,
        "bootstrap": 1,
        "confidence intervals": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "multilinear regression": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1
    },
    "triple quotes": {
        "database": 16,
        "svm model": 9,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "source fake010": 7,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "fake010": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "cursor object": {
        "database": 16,
        "svm model": 9,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "source fake010": 7,
        "brokerlc class": 4,
        "running index": 4,
        "mjd": 4,
        "fake010": 4,
        "table rawphot": 4,
        "uncertainty": 4,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "python library": {
        "registered riders": 7,
        "vectors": 6,
        "dot product": 6,
        "orthonormal basis": 6,
        "hist": 5,
        "casual riders": 4,
        "linear algebra": 4,
        "2d vector": 4,
        "3d vector": 4,
        "2d array": 4,
        "2d vectors": 4,
        "unit vectors": 4,
        "standard basis": 4,
        "registered": 3,
        "error bars": 3,
        "seaborn api": 3,
        "bootstrapping": 3,
        "total rider counts": 3,
        "distplot function": 3,
        "rider counts": 2,
        "matplotlib axes object": 2,
        "boxplot function": 2,
        "bikeshare membership": 2,
        "lmplot function": 2,
        "scatterplot": 2,
        "finite dimensional euclidean space": 2,
        "vector notation": 2,
        "numpy library": 2,
        "python list": 2,
        "one dimensional array": 2,
        "word dimension": 2,
        "array dimension": 2,
        "vector dimension": 2,
        "1d array": 2,
        "matrix": 2,
        "arrows": 2,
        "inverted": 2,
        "scalar": 2,
        "1d arrays": 2,
        "mathematical notation": 2,
        "inner product": 2,
        "norm": 2,
        "unit vector": 2,
        "arbitrary vector": 2,
        "orthogonal vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "coordinate system": 2,
        "vector": 2,
        "ots": 2,
        "reconstruction": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "file contents": 1,
        "decision tree learning": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1,
        "hue parameter": 1,
        "lmplot": 1,
        "weekday trips": 1,
        "weekend trips": 1
    },
    "em algorithm": {
        "latent space": 35,
        "mixing coefficients": 20,
        "handwriting styles": 15,
        "multivariate bernoulli distribution": 15,
        "misclassifications": 15,
        "data labels": 15,
        "vector representation": 15,
        "multivariate": 15,
        "logvar": 15,
        "hyperparameters": 3
    },
    "unit tests": {
        "airtime": 14,
        "arrdelay": 10,
        "rdd": 6,
        "cartesian product": 6,
        "multivariate regresion model": 6,
        "predictor variable": 6,
        "regression model": 6,
        "random number generator": 6,
        "noise distribution": 5,
        "python variable": 5,
        "python variables": 5,
        "linear regression model": 4,
        "test sets": 4,
        "multiple independent variables": 4,
        "dependent variable": 4,
        "patsy formula": 4,
        "multivariate regression model": 4,
        "collinear points": 4,
        "r": 4,
        "spark rdd api": 4,
        "helper functions": 4,
        "assert statement unit tests": 4,
        "data distribution": 4,
        "kernel density estimation plot": 3,
        "code cell": 3,
        "unit tests": 2,
        "distance": 2,
        "stats": 2,
        "gan hint": 2,
        "keras functional api": 2,
        "input size": 2,
        "variables": 2,
        "full training loop solution task": 2,
        "discriminator": 2,
        "context manager": 2,
        "semantics": 2,
        "single adversarial training example": 2,
        "synthetic images": 2,
        "generative adversarial training": 2,
        "interface": 1,
        "keras hints": 1,
        "keras": 1,
        "concatenation": 1,
        "training data requirements": 1,
        "fake images": 1
    },
    "data insertion": {
        "database": 16,
        "svm model": 9,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "source fake010": 7,
        "cross validation": 6,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "lsst brokers": 3,
        "light curves": 3,
        "kernel coefficient": 3,
        "penalty parameter": 3,
        "radial basis function": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "broker": 3,
        "streaming data": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "python tuple": {
        "database": 16,
        "svm model": 9,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "source fake010": 7,
        "cross validation": 6,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "lsst brokers": 3,
        "light curves": 3,
        "kernel coefficient": 3,
        "penalty parameter": 3,
        "radial basis function": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "broker": 3,
        "streaming data": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "pandas manipulation": {
        "database": 16,
        "svm model": 9,
        "rawphot table": 8,
        "raw photometric observations": 8,
        "source fake010": 7,
        "cross validation": 6,
        "fake001": 4,
        "uster": 4,
        "ipython": 4,
        "temporary databases": 4,
        "full light curve": 4,
        "individual observations": 4,
        "lview variable": 4,
        "directview access": 4,
        "seriel operations": 4,
        "sqlite": 3,
        "variable class attributes": 3,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "lsst brokers": 3,
        "light curves": 3,
        "kernel coefficient": 3,
        "penalty parameter": 3,
        "radial basis function": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "broker": 3,
        "streaming data": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "outcome variable": {
        "sigmoid function": 19,
        "error functions": 15,
        "error function": 12,
        "student performance": 10,
        "study times": 10,
        "exam output variable": 10,
        "random number": 10,
        "uniform distribution": 10,
        "decision boundary": 10,
        "predicted class": 10,
        "modelling function": 8,
        "logistic function": 8,
        "gradient descent": 5,
        "age": 4,
        "resholding": 2,
        "total cost function": 2,
        "last function approximation": 2,
        "learning rate": 2,
        "learning curve": 2,
        "fare predictor": 1,
        "passenger class": 1,
        "precision stats": 1,
        "predictors": 1,
        "regularization": 1,
        "predict()": 1,
        "correct guesses": 1,
        "guessed classes": 1,
        "predicted exam results": 1
    },
    "seismological data centers": {
        "international standard exchange format": 12,
        "station metadata": 11,
        "event metadata": 8,
        "trace objects": 7,
        "ainformation": 7,
        "nested obspy inventory class": 7,
        "local files": 6,
        "filetype": 5,
        "xml": 5,
        "array analysis": 5,
        "estimate travel times": 5,
        "seismic phases": 5,
        "cross correlation routines": 5,
        "event detection": 5,
        "plot ray paths": 5,
        "manipulation filtering": 5,
        "station objects": 4,
        "network objects": 4,
        "channel objects": 4,
        "fdsn stationxml": 4,
        "nested obspy inventory": 4,
        "inventory object": 4,
        "utcdatetime": 3,
        "timestamps": 3,
        "pling": 3,
        "command line utilities": 3,
        "stationxml files": 2,
        "official schema": 2,
        "stationxml": 2,
        "ampling": 2,
        "inventory": 2,
        "fdsn server": 2,
        "wildcard": 2,
        "waveform data": 2,
        "channel code": 2,
        "nested obspy event class structure": 1,
        "event objects": 1,
        "catalog object": 1
    },
    "categorical variables": {
        "helper function": 8,
        "pipeline": 6,
        "target": 4,
        "randomforestregressor model": 4,
        "odds ratio": 4,
        "ucla": 4,
        "admission rate": 4,
        "confidence interval": 4,
        "uncertainty": 4,
        "predicted probability": 4,
        "maximum value": 4,
        "cartesian()": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "gpa": 4,
        "prestige": 4,
        "gridsearchcv": 4,
        "flight delay prediction": 3,
        "lasso": 3,
        "sklearn object": 3,
        "scaler object": 3,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2,
        "binary indicators": 2,
        "intercept": 2,
        "numerical data frame": 2,
        "unordered categorical values": 2,
        "pandas method": 2,
        "logistic classifier": 2,
        "pandas data frame method": 2,
        "categorical features": 2,
        "integral value encoding": 2,
        "pandas histogram methods": 2,
        "data exploration": 2,
        "numpy library": 2,
        "naive bayes predictor": 2,
        "test data": 2,
        "randomforestregressor": 2,
        "model parameters": 2,
        "float64": 1,
        "naive bayes classifier": 1,
        "selectkbest": 1,
        "shufflesplit": 1,
        "scaler": 1,
        "preprocessing steps": 1,
        "optimal pipeline": 1,
        "optimal preprocessing": 1,
        "pipelines": 1,
        "model selection": 1,
        "pre": 1,
        "hyperparameter tuning": 1,
        "sql query": 1,
        "indicator variable": 1,
        "int64": 1
    },
    "berkeley police department": {
        "heatmap": 27,
        "folium map": 6,
        "cvlegend": 6,
        "map": 4,
        "folium": 4,
        "python visualizer": 4,
        "united states": 4,
        "key note": 4,
        "berkeley pd call data": 4,
        "calls table": 4,
        "longitude data": 4,
        "select function": 4,
        "compressed files": 4,
        "zip archive": 4,
        "uncompressed files": 4,
        "heatmapwithtime": 4,
        "crime events": 3,
        "regular bar plot": 3,
        "countplot": 3,
        "noise violation": 3,
        "l": 3,
        "stacking function call": 3,
        "longitude": 3,
        "longitudes": 3,
        "calls dataframe": 2,
        "vertical bar plot": 2,
        "usa": 2,
        "answer3b": 2,
        "zip": 1,
        "data directory": 1,
        "lib": 1,
        "pathlib": 1,
        "glob": 1,
        "cvdow": 1,
        "offense type": 1,
        "case number": 1,
        "numerical columns": 1,
        "type information": 1,
        "barh plot type": 1,
        "series class": 1,
        "value counts": 1,
        "seaborn library": 1,
        "countplot method": 1,
        "pandas plot": 1,
        "order parameter": 1,
        "cvdow field": 1,
        "coolindex": 1,
        "seaborn plot": 1,
        "total noise violations": 1,
        "noise violation calls": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1,
        "dummy location data": 1,
        "dates": 1,
        "constructor function": 1,
        "berkeley calls": 1,
        "transposed latitudes": 1,
        "call location data": 1
    },
    "foodwheel": {
        "foodwheel": 17,
        "pie chart": 12,
        "restaurants": 12,
        "function split": 12,
        "bar chart": 12,
        "group orders": 9,
        "average order amount": 9,
        "restautants": 8,
        "axis": 8,
        "cuisine": 8,
        "plt": 8,
        "error bars": 6,
        "average order": 6,
        "error capsize": 6,
        "standard deviations": 6,
        "cuisines": 4,
        "average order size": 4,
        "orders": 4,
        "dataframe orders": 4,
        "titel": 4
    },
    "pregnancy length": {
        "hazard function": 16,
        "survival function": 12,
        "sampling distribution": 11,
        "first marriage": 8,
        "resampling": 8,
        "null hypothesis": 6,
        "permutation": 4,
        "student t distribution": 4,
        "analytic distribution": 4,
        "central limit theorem": 4,
        "complementary cdf": 4,
        "weighted resampling": 4,
        "sfs": 4,
        "pregnancy": 4,
        "median remaining time": 4,
        "age": 4,
        "sampling weights": 4,
        "divorce": 4,
        "survival curve": 4,
        "sampling error": 4,
        "sampling distributions": 3,
        "standard error": 3,
        "probabilities": 2,
        "hypothesistest": 2,
        "cdf": 2,
        "simulation": 2,
        "lognormal distribution": 2,
        "birth weight": 2,
        "birth weights": 2,
        "multiplicative factors": 2,
        "random value": 2,
        "adult weights": 2,
        "difference in means": 2,
        "confidence intervals": 2,
        "confidence interval": 2,
        "gender gap": 1,
        "student engineering teams": 1,
        "class projects": 1,
        "standard errors": 1,
        "first babies": 1,
        "statistical significance": 1,
        "false negative rate": 1,
        "nsfg data": 1,
        "hypothesis test": 1
    },
    "event metadata": {
        "international standard exchange format": 9,
        "event metadata": 9,
        "station metadata": 7,
        "instrument response": 7,
        "range": 5,
        "obspy documentation": 5,
        "depth range": 5,
        "magnitude range": 5,
        "matching channels": 5,
        "matching stations": 5,
        "waveform requests": 5,
        "instrument response information": 5,
        "instrument correction": 5,
        "narrow angular distance": 4,
        "search criteria": 4,
        "nested obspy event class structure": 3,
        "event objects": 3,
        "catalog object": 3,
        "local files": 3,
        "station objects": 3,
        "network objects": 3,
        "channel objects": 3,
        "fdsn stationxml": 3,
        "nested obspy inventory": 3,
        "inventory object": 3,
        "trace objects": 3,
        "ainformation": 3,
        "nested obspy inventory class": 3,
        "large datasets": 3,
        "internal repeated webservice requests": 3,
        "filetype": 2,
        "xml": 2,
        "fdsn server": 2,
        "wildcard": 2,
        "waveform data": 2,
        "channel code": 2,
        "stationxml files": 1,
        "official schema": 1,
        "utcdatetime": 1,
        "timestamps": 1,
        "array analysis": 1,
        "estimate travel times": 1,
        "seismic phases": 1,
        "cross correlation routines": 1,
        "pling": 1,
        "event detection": 1,
        "command line utilities": 1,
        "plot ray paths": 1,
        "manipulation filtering": 1,
        "wave": 1,
        "vertical 1 hz stream": 1,
        "stationxml": 1
    },
    "dot notation": {
        "automatic tests": 10,
        "string values": 10,
        "final expression": 10,
        "replace method": 10,
        "string value": 10,
        "string methods": 10,
        "zfill": 10,
        "decimal point": 10,
        "int value float": 10,
        "float value": 10,
        "pi": 9,
        "natural logarithm": 9,
        "math module": 7,
        "image function": 7,
        "web pages": 7,
        "arithmetic operators": 6,
        "donald knuth": 5,
        "string method lower": 5,
        "square brackets": 3
    },
    "function call expressions": {
        "automatic tests": 10,
        "string values": 10,
        "final expression": 10,
        "replace method": 10,
        "string value": 10,
        "string methods": 10,
        "zfill": 10,
        "decimal point": 10,
        "int value float": 10,
        "float value": 10,
        "pi": 9,
        "natural logarithm": 9,
        "math module": 7,
        "image function": 7,
        "web pages": 7,
        "arithmetic operators": 6,
        "donald knuth": 5,
        "string method lower": 5,
        "square brackets": 3
    },
    "spreadsheet": {
        "iloc": 9,
        "dfcars": 6,
        "listiness property": 6,
        "listiness": 4,
        "variable name majors": 3,
        "fivethirtyeight": 3,
        "average unemployment rate": 3,
        "matplotlib plots": 3,
        "majors": 3,
        "low wage jobs": 3,
        "rear axle ratio": 3,
        "employment rates": 2,
        "horsepower": 2,
        "displacement": 2,
        "biometrics": 2,
        "multiple regression models": 2,
        "automobile design": 2,
        "forward gears": 2,
        "carburetors": 2,
        "fuel consumption": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "dataframe structure": 2,
        "automobile data": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "women": 1,
        "part time rate": 1,
        "dictionary key": 1,
        "boolean variable": 1,
        "ordered interpretation": 1,
        "cylinders": 1,
        "categorical data": 1,
        "dtypes attribute": 1,
        "op": 1,
        "garbage collector": 1,
        "functional programming": 1,
        "h": 1,
        "spark": 1,
        "global matplotlib plotting": 1,
        "seaborn package": 1,
        "notebook": 1,
        "frequency distribution": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "harvard courses": {
        "keyword arguments": 12,
        "hamlettext": 11,
        "positional arguments": 8,
        "hamletwords": 6,
        "dictionary comprehension": 5,
        "course names": 4,
        "zip": 4,
        "constructor function dict": 4,
        "dictionaries": 4,
        "'s sequence protocol": 4,
        "iterators": 4,
        "umpy": 4,
        "specfic task": 4,
        "method": 4,
        "mathematical function": 4,
        "lambda functions": 4,
        "mathematical functions": 4,
        "pr": 4,
        "isprime": 4,
        "default argument values": 4,
        "libraries": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "positional properties": 4,
        "python functions": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1
    },
    "enrollment numbers": {
        "keyword arguments": 12,
        "hamlettext": 11,
        "positional arguments": 8,
        "hamletwords": 6,
        "dictionary comprehension": 5,
        "course names": 4,
        "zip": 4,
        "constructor function dict": 4,
        "dictionaries": 4,
        "'s sequence protocol": 4,
        "iterators": 4,
        "umpy": 4,
        "specfic task": 4,
        "method": 4,
        "mathematical function": 4,
        "lambda functions": 4,
        "mathematical functions": 4,
        "pr": 4,
        "isprime": 4,
        "default argument values": 4,
        "libraries": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "positional properties": 4,
        "python functions": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1
    },
    "storage container": {
        "keyword arguments": 12,
        "hamlettext": 11,
        "positional arguments": 8,
        "hamletwords": 6,
        "dictionary comprehension": 5,
        "course names": 4,
        "zip": 4,
        "constructor function dict": 4,
        "dictionaries": 4,
        "'s sequence protocol": 4,
        "iterators": 4,
        "umpy": 4,
        "specfic task": 4,
        "method": 4,
        "mathematical function": 4,
        "lambda functions": 4,
        "mathematical functions": 4,
        "pr": 4,
        "isprime": 4,
        "default argument values": 4,
        "libraries": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "positional properties": 4,
        "python functions": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1
    },
    "term frequency": {
        "bayes theorem": 8,
        "diabetes": 8,
        "immigration": 6,
        "posteriors": 4,
        "naive bayes implementation": 4,
        "gary johnson": 4,
        "probabilities": 4,
        "libertarian party": 4,
        "jill stein": 4,
        "green party": 4,
        "freedom": 4,
        "docs": 3,
        "tdmatrix": 3,
        "testing sets": 2,
        "bag of words problem": 2,
        "countvectorizer()": 2,
        "bag of words processing": 2,
        "bayes theorem implementation": 2,
        "bayes formula": 2,
        "true negative rate": 2,
        "true positive rate": 2,
        "medical field": 2,
        "joint probabilities": 2,
        "tpr": 2,
        "positive test": 2,
        "conditional probabilities": 2,
        "specificity": 2,
        "priors": 2,
        "tnr": 2,
        "sensitivity": 2,
        "final probabilities": 2,
        "test result": 2,
        "feature vectors": 2,
        "stein": 2,
        "posterior probabilities": 2,
        "sacramento kings": 2,
        "nba basketball team": 2,
        "spam detectors": 2,
        "search engine": 2,
        "naive bayes algorithm": 2,
        "random categorical variable": 2,
        "orical": 2,
        "mutually exclusive outcomes": 2,
        "binomial distribution": 2,
        "word counts": 2,
        "laplace smoothing": 2,
        "categorical random variable": 2,
        "multinomial distribution": 2,
        "occurrence counts": 2,
        "naive bayes implementations": 2,
        "multin": 2,
        "mult": 2,
        "bernoulli variable": 2,
        "nb": 2,
        "probability distribution": 2,
        "discrete data": 2,
        "text classification": 2,
        "outcome probabilities": 2,
        "bern": 2,
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "reuters documents": 1,
        "emmed test": 1
    },
    "json": {
        "json file": 14,
        "json": 10,
        "tihs dataset": 6,
        "visibilities": 4,
        "requests library": 4,
        "http get request": 4,
        "iata airport code": 3,
        "carrier code": 3,
        "departure delay": 3,
        "crsdeptime": 3,
        "depdelay": 3,
        "uniquecarrier": 3,
        "scheduled departure time": 3,
        "ord": 3,
        "american airlines": 3,
        "departure": 3,
        "code cell": 3,
        "test sets": 3,
        "data sources": 3,
        "email addresses": 3,
        "javascript object notation": 3,
        "collections": 3,
        "dictionaries": 3,
        "stack overflow": 3,
        "stackoverflow": 3,
        "working email addresses": 3,
        "test cell": 3,
        "vectorized way": 2,
        "big data": 2,
        "numerical operations": 2,
        "iterrows()": 2,
        "nyt article api": 2,
        "kevin bacon": 2,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "tweetdeck": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "null hypothesis": 2,
        "returned dataframes": 1,
        "results page": 1,
        "search parameters": 1,
        "web browser": 1,
        "http request": 1,
        "json geoip request": 1,
        "ip address": 1,
        "get request": 1,
        "python requests library": 1,
        "quandl": 1,
        "requests": 1,
        "github credentials": 1,
        "rental prices": 1,
        "zillow dataset": 1,
        "python variable": 1,
        "quand": 1,
        "andl": 1
    },
    "hazard function": {
        "hazard function": 28,
        "survival function": 20,
        "first marriage": 16,
        "resampling": 16,
        "weighted resampling": 8,
        "sfs": 8,
        "pregnancy": 8,
        "median remaining time": 8,
        "age": 8,
        "sampling weights": 8,
        "divorce": 8,
        "survival curve": 8,
        "sampling error": 8,
        "complementary cdf": 4
    },
    "survival function": {
        "hazard function": 28,
        "survival function": 20,
        "first marriage": 16,
        "resampling": 16,
        "weighted resampling": 8,
        "sfs": 8,
        "pregnancy": 8,
        "median remaining time": 8,
        "age": 8,
        "sampling weights": 8,
        "divorce": 8,
        "survival curve": 8,
        "sampling error": 8,
        "complementary cdf": 4
    },
    "latent variables": {
        "logvar": 18,
        "pytorch": 13,
        "vae": 11,
        "variational lower bound": 10,
        "reconstruction": 9,
        "flattened mnist image": 9,
        "expectation maximization": 5,
        "objective function": 5,
        "log bernoulli loss": 5,
        "multivariate bernoulli distribution": 5,
        "negative log bernoulli loss": 5,
        "oulli loss": 5,
        "log": 5,
        "kl term": 5,
        "multivariate": 5,
        "hyperparameter search": 4,
        "latent variables": 4,
        "derivatives": 3,
        "function reparameterize": 3,
        "sgd": 3,
        "stochastic variable": 3,
        "stochasticity": 3,
        "forward": 2,
        "ened mnist image": 2,
        "forward pass": 2,
        "fl": 2,
        "latent space": 2,
        "mnist image": 2,
        "hyperparameters": 2,
        "covariance": 1,
        "eigenvalue problem": 1,
        "optimizer": 1,
        "adam": 1
    },
    "physicists": {
        "pdf": 8,
        "random variable": 8,
        "arbitrary random variable": 7,
        "conditional probabilities": 4,
        "event probabilities": 4,
        "outcome probabilities": 4,
        "cumulative distribution function": 4,
        "probability density function": 4,
        "random variable values": 4,
        "uniformly generated random values": 4,
        "random sampling": 4,
        "random outcomes": 4,
        "cdf": 4,
        "uniformly distributed random values": 4,
        "inverse": 3,
        "factor analysis": 3,
        "covariances": 3,
        "[linear interpolation": 2,
        "empirical cdf": 2,
        "cdf samples": 2,
        "marginal mean": 2,
        "gaussian": 2,
        "multidimensional feature space": 2,
        "gaussian process": 2,
        "ance": 2,
        "conditioned feature values": 2,
        "joint covariance": 2,
        "ubiquitous multivariate normal probability density": 2,
        "conditional probability density": 2,
        "astronomical images": 1,
        "real quasars": 1,
        "milky way": 1,
        "posterior probability": 1,
        "galaxy densities": 1,
        "stellar density": 1,
        "quasar identification algorithm": 1,
        "exponential decay law": 1,
        "the posterior probability": 1,
        "un-normalized probability density": 1,
        "random process": 1,
        "hyperparameters": 1,
        "numerator": 1,
        "gamma distribtion pdf": 1,
        "numpy expression": 1,
        "denominator": 1,
        "gamma distribution": 1,
        "2d trajectories": 1,
        "trajectory coordinates": 1,
        "trajectories": 1,
        "initial trajectory slope": 1,
        "multidimensional normal distribution": 1,
        "random seed": 1,
        "probability densities": 1,
        "random samples": 1,
        "2x2 covariance matrix": 1,
        "correlation coefficient": 1,
        "weighted pca": 1,
        "goal function": 1,
        "2d data": 1,
        "dot products": 1,
        "linear algebra": 1,
        "pca": 1,
        "eigenvalues": 1,
        "eigenvalue decomposition": 1,
        "eigenvectors": 1,
        "latent variables": 1,
        "singular value decomposition": 1,
        "exact linear decomposition": 1,
        "dimensionality reduction": 1,
        "sample covariance matrix": 1,
        "singular values": 1,
        "exact decomposition": 1,
        "covariance": 1,
        "eigenvalue problem": 1,
        "finite dataset": 1,
        "conditional gaussian means": 1,
        "empirical estimates": 1,
        "rowvar parameter": 1,
        "probability density": 1,
        "arbitrary input data array": 1,
        "binned probability density": 1,
        "regression model": 1,
        "default score function": 1,
        "random forest regression": 1
    },
    "file": {
        "genes": 9,
        "jointplot": 9,
        "expressed genes": 8,
        "featurecounts": 6,
        "row names": 5,
        "s10 sample kallisto file": 5,
        "kallisto file": 5,
        "expression data": 5,
        "logged values": 5,
        "statistical function": 4,
        "spearman": 4,
        "non-linear correlation": 4,
        "rna": 4,
        "syntax": 4,
        "gene lengths": 4,
        "regular multiplication": 4,
        "log2 tpm": 4,
        "pm": 4,
        "fpkm": 4,
        "tpm": 4,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "test data": 2,
        "gene id version number": 1,
        "gencode": 1,
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "current time": {
        "datetimeindex": 9,
        "exponentially weighted functions": 6,
        "arbitrary date strings": 3,
        "row index": 3,
        "column name index": 3,
        "nat entry": 3,
        "index slicing": 3,
        "arithmetic operations": 3,
        "nanoseond resolution": 3,
        "random datapoints": 3,
        "pandas stores timestamps": 3,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "string representations": {
        "datetimeindex": 9,
        "exponentially weighted functions": 6,
        "arbitrary date strings": 3,
        "row index": 3,
        "column name index": 3,
        "nat entry": 3,
        "index slicing": 3,
        "arithmetic operations": 3,
        "nanoseond resolution": 3,
        "random datapoints": 3,
        "pandas stores timestamps": 3,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "parsing format": {
        "datetimeindex": 9,
        "exponentially weighted functions": 6,
        "arbitrary date strings": 3,
        "row index": 3,
        "column name index": 3,
        "nat entry": 3,
        "index slicing": 3,
        "arithmetic operations": 3,
        "nanoseond resolution": 3,
        "random datapoints": 3,
        "pandas stores timestamps": 3,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "datetime objects": {
        "datetimeindex": 9,
        "exponentially weighted functions": 6,
        "arbitrary date strings": 3,
        "row index": 3,
        "column name index": 3,
        "nat entry": 3,
        "index slicing": 3,
        "arithmetic operations": 3,
        "nanoseond resolution": 3,
        "random datapoints": 3,
        "pandas stores timestamps": 3,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "standard": {
        "string methods": 11,
        "standardize": 11,
        "measurement systems": 11,
        "inches": 11,
        "height data": 11,
        "values": 7,
        "cs data": 6,
        "character classes": 6,
        "regexr": 6,
        "average heights": 4,
        "alpha value": 4,
        "statistical test": 4,
        "significance": 4,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "majors": 4,
        "average height values": 3,
        "pivot table": 3,
        "confounding variable": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3,
        "literals": 2,
        "basic regular expression syntax": 2,
        "character class negation": 2,
        "solution breakdown": 2,
        "brackets": 2,
        "text snippet": 2,
        "shorthand character classes": 2,
        "anchor": 2,
        "character class": 2,
        "regex": 2
    },
    "mixed signals": {
        "ica": 17,
        "whitened measurements": 6,
        "covariance matrix": 6,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "covariant algorithm": 5,
        "sawtooth": 4,
        "kurtosis": 3,
        "priors": 2,
        "gaussian distribution": 2,
        "random wave": 2,
        "independent random variables": 2,
        "covariance matrices": 2,
        "gaussian noise source": 2,
        "learning algorithms": 2,
        "block wave": 2,
        "mixing matrix": 2,
        "sine wave": 2,
        "information theory": 2,
        "rotation": 2,
        "eigenvalue decomposition": 2,
        "sinewave": 2,
        "bias": 2,
        "scale changes": 2,
        "demixing matrices": 2,
        "ize": 1,
        "normalizing constant": 1,
        "gaussian function": 1,
        "triangle histogram": 1,
        "square wave": 1,
        "xw plot": 1,
        "circular pattern": 1,
        "learning algorithm": 1,
        "matrix inversions": 1,
        "symmetric": 1,
        "source signals": 1,
        "central limit theorem": 1,
        "signal": 1,
        "gaussian distributions": 1,
        "signals sawtooth": 1,
        "historgrams": 1,
        "triangle wave": 1,
        "gray boxes": 1,
        "boxes": 1,
        "diagonal matrix": 1,
        "alogrithm": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "measurement": 1,
        "gaussian noise": 1,
        "covariance": 1,
        "consistent algorithm": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "i": 1,
        "whitening process": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "scipy": {
        "docsting": 14,
        "rug plot": 13,
        "lesson notebook": 11,
        "test cases": 8,
        "kde": 6,
        "airtime column": 5,
        "willard airport": 5,
        "plot rug plots": 5,
        "random jitter": 5,
        "distance function": 4,
        "pybatch": 4,
        "nearest neighbor algorithm": 4,
        "plot": 3,
        "sample": 3,
        "gaussian kernels": 3,
        "computation time": 3,
        "distance computation": 3,
        "docstring": 2,
        "optimal kde bandwidth": 2,
        "guassian kernels": 2,
        "square euclidean distance": 2,
        "nearest neighbors": 2,
        "python nearest neighbor": 2,
        "unlabeled point": 2,
        "nearest neighbor": 2,
        "distance matrix": 2,
        "distance compuation": 2,
        "function pydistance": 2,
        "higher performance": 2,
        "correct": 2,
        "python nearest neighbor search": 2,
        "optimized nearest neighbor function": 2,
        "unlabeled test points": 2,
        "toy dataset": 2,
        "fixed parameters": 2,
        "digit recognition task": 2,
        "numpy operations": 2,
        "pairwise distances": 2,
        "squared euclidean distance": 2,
        "plot histograms": 1,
        "kernel density estimate": 1,
        "python program": 1,
        "united states": 1,
        "canada": 1,
        "python lists": 1,
        "speedup": 1,
        "numpy optimized distance computation": 1,
        "nearest neighbor search": 1,
        "multiple test points": 1
    },
    "warped images": {
        "cost array": 15,
        "warping method": 8,
        "interpolation": 8,
        "boundary effect": 8,
        "edge pixels": 8,
        "vertical path": 8,
        "difference image": 8,
        "panoramas": 8,
        "optimal horizontal position": 6,
        "bottom edges": 6,
        "contiguous regions": 6,
        "minimal cost path": 6,
        "warped images": 5,
        "seed points": 4,
        "label of interest": 4,
        "convenience function": 4,
        "alpha channels": 4,
        "alpha blended individual images": 4,
        "custom alpha channel masks": 4,
        "overlap region": 3,
        "utility function": 3,
        "construct cost array": 3,
        "optimal path": 3,
        "mcp": 3,
        "ransac transform estimation": 3,
        "random element": 3,
        "negative mask": 3,
        "numpy masked array conventions": 3,
        "final mask": 2
    },
    "encoder": {
        "logvar": 18,
        "pytorch": 13,
        "vae": 11,
        "variational lower bound": 10,
        "reconstruction": 9,
        "flattened mnist image": 9,
        "expectation maximization": 5,
        "objective function": 5,
        "log bernoulli loss": 5,
        "multivariate bernoulli distribution": 5,
        "negative log bernoulli loss": 5,
        "oulli loss": 5,
        "log": 5,
        "kl term": 5,
        "multivariate": 5,
        "hyperparameter search": 4,
        "latent variables": 4,
        "derivatives": 3,
        "function reparameterize": 3,
        "sgd": 3,
        "stochastic variable": 3,
        "stochasticity": 3,
        "forward": 2,
        "ened mnist image": 2,
        "forward pass": 2,
        "fl": 2,
        "latent space": 2,
        "mnist image": 2,
        "optimizer": 1,
        "adam": 1,
        "hyperparameters": 1
    },
    "log marginal likelihood": {
        "logvar": 18,
        "pytorch": 13,
        "vae": 11,
        "variational lower bound": 10,
        "reconstruction": 9,
        "flattened mnist image": 9,
        "expectation maximization": 5,
        "objective function": 5,
        "log bernoulli loss": 5,
        "multivariate bernoulli distribution": 5,
        "negative log bernoulli loss": 5,
        "oulli loss": 5,
        "log": 5,
        "kl term": 5,
        "multivariate": 5,
        "hyperparameter search": 4,
        "latent variables": 4,
        "derivatives": 3,
        "function reparameterize": 3,
        "sgd": 3,
        "stochastic variable": 3,
        "stochasticity": 3,
        "forward": 2,
        "ened mnist image": 2,
        "forward pass": 2,
        "fl": 2,
        "latent space": 2,
        "mnist image": 2,
        "optimizer": 1,
        "adam": 1,
        "hyperparameters": 1
    },
    "mnist images": {
        "logvar": 18,
        "pytorch": 13,
        "vae": 11,
        "variational lower bound": 10,
        "reconstruction": 9,
        "flattened mnist image": 9,
        "expectation maximization": 5,
        "objective function": 5,
        "log bernoulli loss": 5,
        "multivariate bernoulli distribution": 5,
        "negative log bernoulli loss": 5,
        "oulli loss": 5,
        "log": 5,
        "kl term": 5,
        "multivariate": 5,
        "hyperparameter search": 4,
        "latent variables": 4,
        "derivatives": 3,
        "function reparameterize": 3,
        "sgd": 3,
        "stochastic variable": 3,
        "stochasticity": 3,
        "forward": 2,
        "ened mnist image": 2,
        "forward pass": 2,
        "fl": 2,
        "latent space": 2,
        "mnist image": 2,
        "optimizer": 1,
        "adam": 1,
        "hyperparameters": 1
    },
    "lower bound": {
        "logvar": 18,
        "pytorch": 13,
        "vae": 11,
        "variational lower bound": 10,
        "reconstruction": 9,
        "flattened mnist image": 9,
        "expectation maximization": 5,
        "objective function": 5,
        "log bernoulli loss": 5,
        "multivariate bernoulli distribution": 5,
        "negative log bernoulli loss": 5,
        "oulli loss": 5,
        "log": 5,
        "kl term": 5,
        "multivariate": 5,
        "hyperparameter search": 4,
        "latent variables": 4,
        "derivatives": 3,
        "function reparameterize": 3,
        "sgd": 3,
        "stochastic variable": 3,
        "stochasticity": 3,
        "forward": 2,
        "ened mnist image": 2,
        "forward pass": 2,
        "fl": 2,
        "latent space": 2,
        "mnist image": 2,
        "optimizer": 1,
        "adam": 1,
        "hyperparameters": 1
    },
    "batching": {
        "logvar": 18,
        "pytorch": 13,
        "vae": 11,
        "variational lower bound": 10,
        "reconstruction": 9,
        "flattened mnist image": 9,
        "expectation maximization": 5,
        "objective function": 5,
        "log bernoulli loss": 5,
        "multivariate bernoulli distribution": 5,
        "negative log bernoulli loss": 5,
        "oulli loss": 5,
        "log": 5,
        "kl term": 5,
        "multivariate": 5,
        "hyperparameter search": 4,
        "latent variables": 4,
        "derivatives": 3,
        "function reparameterize": 3,
        "sgd": 3,
        "stochastic variable": 3,
        "stochasticity": 3,
        "forward": 2,
        "ened mnist image": 2,
        "forward pass": 2,
        "fl": 2,
        "latent space": 2,
        "mnist image": 2,
        "optimizer": 1,
        "adam": 1,
        "hyperparameters": 1
    },
    "data tensor": {
        "logvar": 18,
        "pytorch": 13,
        "vae": 11,
        "variational lower bound": 10,
        "reconstruction": 9,
        "flattened mnist image": 9,
        "expectation maximization": 5,
        "objective function": 5,
        "log bernoulli loss": 5,
        "multivariate bernoulli distribution": 5,
        "negative log bernoulli loss": 5,
        "oulli loss": 5,
        "log": 5,
        "kl term": 5,
        "multivariate": 5,
        "hyperparameter search": 4,
        "latent variables": 4,
        "derivatives": 3,
        "function reparameterize": 3,
        "sgd": 3,
        "stochastic variable": 3,
        "stochasticity": 3,
        "forward": 2,
        "ened mnist image": 2,
        "forward pass": 2,
        "fl": 2,
        "latent space": 2,
        "mnist image": 2,
        "optimizer": 1,
        "adam": 1,
        "hyperparameters": 1
    },
    "istic model": {
        "logvar": 18,
        "pytorch": 13,
        "vae": 11,
        "variational lower bound": 10,
        "reconstruction": 9,
        "flattened mnist image": 9,
        "expectation maximization": 5,
        "objective function": 5,
        "log bernoulli loss": 5,
        "multivariate bernoulli distribution": 5,
        "negative log bernoulli loss": 5,
        "oulli loss": 5,
        "log": 5,
        "kl term": 5,
        "multivariate": 5,
        "hyperparameter search": 4,
        "latent variables": 4,
        "derivatives": 3,
        "function reparameterize": 3,
        "sgd": 3,
        "stochastic variable": 3,
        "stochasticity": 3,
        "forward": 2,
        "ened mnist image": 2,
        "forward pass": 2,
        "fl": 2,
        "latent space": 2,
        "mnist image": 2,
        "optimizer": 1,
        "adam": 1,
        "hyperparameters": 1
    },
    "mean height": {
        "rmse": 17,
        "sampling distribution": 8,
        "brfss data": 6,
        "log weights": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "residuals": 6,
        "plot percentiles": 6,
        "correlation": 6,
        "compute coefficient of determination": 6,
        "height information": 5,
        "sampling distributions": 5,
        "resampling": 5,
        "average heights": 4,
        "alpha value": 4,
        "statistical test": 4,
        "significance": 4,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "majors": 4,
        "average height values": 3,
        "pivot table": 3,
        "confounding variable": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3,
        "confidence interval": 3,
        "standard error": 2,
        "resample rows": 2,
        "mean height": 2,
        "column": 1,
        "finalwt": 1
    },
    "credit card fraud detection": {
        "sigmoid function": 19,
        "error functions": 15,
        "error function": 12,
        "student performance": 10,
        "study times": 10,
        "exam output variable": 10,
        "random number": 10,
        "uniform distribution": 10,
        "decision boundary": 10,
        "predicted class": 10,
        "modelling function": 8,
        "logistic function": 8,
        "gradient descent": 5,
        "resholding": 2,
        "total cost function": 2,
        "last function approximation": 2,
        "learning rate": 2,
        "learning curve": 2,
        "regularization": 1,
        "predict()": 1,
        "correct guesses": 1,
        "guessed classes": 1,
        "predicted exam results": 1
    },
    "random uniform distribution": {
        "sigmoid function": 19,
        "error functions": 15,
        "error function": 12,
        "student performance": 10,
        "study times": 10,
        "exam output variable": 10,
        "random number": 10,
        "uniform distribution": 10,
        "decision boundary": 10,
        "predicted class": 10,
        "modelling function": 8,
        "logistic function": 8,
        "gradient descent": 5,
        "resholding": 2,
        "total cost function": 2,
        "last function approximation": 2,
        "learning rate": 2,
        "learning curve": 2,
        "regularization": 1,
        "predict()": 1,
        "correct guesses": 1,
        "guessed classes": 1,
        "predicted exam results": 1
    },
    "fixed aspect ratio": {
        "false matches": 15,
        "warped images": 10,
        "cost array": 9,
        "convenience function": 7,
        "ransac": 5,
        "inliers": 5,
        "panorama": 5,
        "output": 5,
        "stationary image": 5,
        "input images": 5,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "seed points": 4,
        "overlap region": 3,
        "utility function": 3,
        "construct cost array": 3,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "optimal path": 3,
        "mcp": 3,
        "ransac transform estimation": 3,
        "random element": 3,
        "negative mask": 3,
        "numpy masked array conventions": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "final mask": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "color images": {
        "false matches": 15,
        "warped images": 10,
        "cost array": 9,
        "convenience function": 7,
        "ransac": 5,
        "inliers": 5,
        "panorama": 5,
        "output": 5,
        "stationary image": 5,
        "input images": 5,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "seed points": 4,
        "overlap region": 3,
        "utility function": 3,
        "construct cost array": 3,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "optimal path": 3,
        "mcp": 3,
        "ransac transform estimation": 3,
        "random element": 3,
        "negative mask": 3,
        "numpy masked array conventions": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "final mask": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "feature detection": {
        "false matches": 15,
        "warped images": 10,
        "cost array": 9,
        "convenience function": 7,
        "ransac": 5,
        "inliers": 5,
        "panorama": 5,
        "output": 5,
        "stationary image": 5,
        "input images": 5,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "seed points": 4,
        "overlap region": 3,
        "utility function": 3,
        "construct cost array": 3,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "optimal path": 3,
        "mcp": 3,
        "ransac transform estimation": 3,
        "random element": 3,
        "negative mask": 3,
        "numpy masked array conventions": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "final mask": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "pano1": {
        "false matches": 15,
        "warped images": 10,
        "cost array": 9,
        "convenience function": 7,
        "ransac": 5,
        "inliers": 5,
        "panorama": 5,
        "output": 5,
        "stationary image": 5,
        "input images": 5,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "seed points": 4,
        "overlap region": 3,
        "utility function": 3,
        "construct cost array": 3,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "optimal path": 3,
        "mcp": 3,
        "ransac transform estimation": 3,
        "random element": 3,
        "negative mask": 3,
        "numpy masked array conventions": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "final mask": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "projective transformation": {
        "false matches": 15,
        "warped images": 10,
        "cost array": 9,
        "convenience function": 7,
        "ransac": 5,
        "inliers": 5,
        "panorama": 5,
        "output": 5,
        "stationary image": 5,
        "input images": 5,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "seed points": 4,
        "overlap region": 3,
        "utility function": 3,
        "construct cost array": 3,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "optimal path": 3,
        "mcp": 3,
        "ransac transform estimation": 3,
        "random element": 3,
        "negative mask": 3,
        "numpy masked array conventions": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "final mask": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "summery statistics": {
        "minority class": 11,
        "machine learning algorithms": 5,
        "gradient descent": 5,
        "euclidean distance": 5,
        "objective functions": 5,
        "feature scaling": 5,
        "statistical summery table": 5,
        "feature distributions": 5,
        "standardize": 5,
        "vmail plan": 5,
        "churn distribution": 5,
        "distribution plots": 5,
        "churn": 5,
        "custserv calls": 5,
        "predictive model": 5,
        "bernoulli distribution": 5,
        "possion distributions": 5,
        "night chage eve chage": 5,
        "statistical bias": 5,
        "inti calls": 5,
        "possion distribution": 5,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "coding scratchpad": {
        "vectors": 10,
        "orthonormal basis": 8,
        "linear algebra": 6,
        "dot product": 6,
        "2d vector": 4,
        "3d vector": 4,
        "2d array": 4,
        "2d vectors": 4,
        "unit vectors": 4,
        "standard basis": 4,
        "vector": 4,
        "matrix notation": 4,
        "square difference": 4,
        "statistics": 3,
        "python library": 2,
        "vectors arrows velocity": 2,
        "3d space": 2,
        "finite dimensional euclidean space": 2,
        "vector notation": 2,
        "numpy library": 2,
        "python list": 2,
        "one dimensional array": 2,
        "word dimension": 2,
        "array dimension": 2,
        "vector dimension": 2,
        "1d array": 2,
        "matrix": 2,
        "arrows": 2,
        "inverted": 2,
        "scalar": 2,
        "1d arrays": 2,
        "mathematical notation": 2,
        "inner product": 2,
        "norm": 2,
        "unit vector": 2,
        "arbitrary vector": 2,
        "orthogonal vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "coordinate system": 2,
        "ots": 2,
        "reconstruction": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "excercises": 2,
        "least squares solution": 2,
        "optimal vector": 2,
        "column vectors": 2,
        "height": 2,
        "weight": 2,
        "mean grades": 2,
        "panda dataframe": 2,
        "mean grade": 2,
        "reversed regression": 1,
        "standard exam": 1,
        "sons": 1,
        "fathers": 1,
        "iid random variables": 1
    },
    "colors matching": {
        "dummy variables": 21,
        "color hue": 11,
        "countplot": 11,
        "interest rate": 11,
        "fico score": 11,
        "lmplots": 11,
        "categorical features": 11,
        "purpose column": 11,
        "decisiontreeclassifier": 9,
        "decision tree model": 9,
        "dtree": 9,
        "decisiontreeclassifier()": 9,
        "confusion matrix": 9,
        "randomforestclassifier": 4,
        "random forest model": 4
    },
    "fico distributions": {
        "dummy variables": 21,
        "color hue": 11,
        "countplot": 11,
        "interest rate": 11,
        "fico score": 11,
        "lmplots": 11,
        "categorical features": 11,
        "purpose column": 11,
        "decisiontreeclassifier": 9,
        "decision tree model": 9,
        "dtree": 9,
        "decisiontreeclassifier()": 9,
        "confusion matrix": 9,
        "randomforestclassifier": 4,
        "random forest model": 4
    },
    "data scientist": {
        "tinder": 23,
        "tinder users": 11,
        "safe harbor method": 11,
        "magic function": 8,
        "pickle module": 6,
        "working directory": 6,
        "enron data": 6,
        "python dictionary": 6,
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "population": 5,
        "zip code": 3,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "ridgecv": 1,
        "hours distribution": 1
    },
    "brfss": {
        "normal probability plot": 20,
        "adult weights": 10,
        "lognormal model": 10,
        "pareto world": 8,
        "exponential distribution": 7,
        "normal model": 5,
        "adult weight": 5,
        "log weights": 5,
        "pareto model": 5,
        "ccdf": 5,
        "straight": 5,
        "pareto variate": 5,
        "blue man group": 5,
        "stats": 5,
        "analytic distributions": 5,
        "scipy": 5,
        "frozen random variable": 5,
        "pareto distribution": 4,
        "human height": 4,
        "mean height": 4,
        "weibull distribution": 2,
        "weight": 2,
        "cdf": 1,
        "failure analysis": 1,
        "empirical distribution": 1,
        "analytic distribution": 1,
        "random values": 1,
        "respondents": 1,
        "visual artifact": 1,
        "random noice": 1,
        "uniform distribution": 1,
        "jittered data": 1,
        "saturation": 1,
        "outliers": 1,
        "overlapping points": 1,
        "height": 1,
        "jittering": 1,
        "hexbin plot": 1,
        "binned plot": 1,
        "scatterplot": 1,
        "hexbin": 1,
        "scatter": 1
    },
    "regular expression syntax": {
        "metacharacters": 17,
        "test sentence": 13,
        "regular expression syntax": 10,
        "character class": 10,
        "capital": 10,
        "literals": 6,
        "regexes": 6,
        "regex": 6,
        "parentheses": 5,
        "complements": 4,
        "consonants": 4,
        "challenge 7": 4,
        "challenge 6": 4,
        "regular expression": 4,
        "character classes": 4,
        "regular expressions": 4,
        "match object": 4,
        "6": 3,
        "pattern object": 3,
        "us phone number": 3,
        "area code": 3,
        "challenge 14": 3,
        "challenge 13": 3,
        "uring group skills": 3,
        "non-": 3,
        "match object instances": 2,
        "numeric codes": 2,
        "data entry errors": 2,
        "robots": 2,
        "challenge 15": 2,
        "matching substring": 1,
        "re module": 1
    },
    "sqlalchemy": {
        "string queries": 10,
        "northwind database": 10,
        "select statement": 10,
        "public schema": 10,
        "schema": 9,
        "public tables": 9,
        "column names": 9,
        "postgres": 9,
        "schemas": 9,
        "table peek": 8,
        "usstates": 8,
        "sql queries": 8,
        "bar chart": 8,
        "postgresql": 8,
        "catalog": 8,
        "shipping time": 8,
        "product data": 6,
        "query dates": 1,
        "average prices": 1
    },
    "deep learning": {
        "latent space": 15,
        "mixing coefficients": 10,
        "binarized image": 7,
        "handwriting styles": 5,
        "multivariate bernoulli distribution": 5,
        "misclassifications": 5,
        "data labels": 5,
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "deep learning": 5,
        "neural network": 3,
        "matrix multiplications": 3,
        "traceback": 3,
        "matrix multiplication": 3,
        "size mismatch": 3,
        "runtimeerror": 3,
        "cryptocurrencies": 2,
        "ml problem": 2,
        "gradient descent": 2,
        "closing price": 2,
        "exercise": 2,
        "data points": 2,
        "quantity of interest": 2,
        "ethereum": 2,
        "bitcoin": 2,
        "scatterplots": 2,
        "student task": 2,
        "scaler": 2,
        "scaling": 2,
        "tensorflow": 2,
        "n": 2,
        "scikit learn": 2,
        "testing sets": 2,
        "artificial neural networks": 2,
        "activation function": 2,
        "weighted inputs": 2,
        "tensors": 2,
        "pytorch": 2,
        "matrices": 2,
        "linear algebra operations": 2,
        "rgb color images": 2,
        "recurrent neural network": 1,
        "identifiers": 1,
        "tensorflow string manipulation": 1,
        "matplolib": 1,
        "standard scaling": 1,
        "standardize": 1,
        "scaled feature values": 1,
        "labels": 1,
        "hyperparameters": 1
    },
    "text mining": {
        "tfidfvectorizer": 11,
        "unigrams": 11,
        "minimum feature term": 9,
        "bigrams": 9,
        "maximum frequency": 9,
        "default parameters": 9,
        "trigrams": 9,
        "stop words": 9,
        "linearsvc": 7,
        "code cell": 3,
        "tokenize method": 3,
        "porter stemmer": 3,
        "kmeans": 3,
        "brown university": 3,
        "corpus": 3,
        "nltk brown corpus": 3,
        "docs": 3,
        "1d numpy arrays": 3,
        "brown corpus": 3,
        "data preprocessing": 3,
        "clustering analysis": 2,
        "english stop words": 2,
        "snowball": 2,
        "nowball": 2,
        "kneighborsclassifier": 2,
        "stemming algorithm": 2,
        "tokenize function": 2,
        "cluster labels": 1,
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "social media": {
        "nltk twitter corpus": 6,
        "tfidfvectorizer": 5,
        "bigrams": 5,
        "default parameters": 5,
        "unigrams": 5,
        "stop words": 5,
        "email": 5,
        "datapath": 4,
        "subject line": 4,
        "json file": 4,
        "linearsvc": 4,
        "consumer key consumer secret": 3,
        "twitter application": 3,
        "access token access token secret": 3,
        "api": 3,
        "credentials": 3,
        "twitter api": 3,
        "negative tweets": 3,
        "positive tweets": 3,
        "trigrams": 3,
        "base directory": 3,
        "integers": 3,
        "spam label array": 3,
        "scikit learn": 3,
        "spam arrays": 3,
        "ham label array": 3,
        "text file": 3,
        "testing sets": 3,
        "social networks": 2,
        "twitter friends": 2,
        "tweeperror": 2,
        "dictionary keys": 2,
        "rate limit": 2,
        "access token secret": 2,
        "consumer key": 2,
        "json": 2,
        "consumer secret": 2,
        "kevin bacon": 2,
        "directed graph": 2,
        "friend ids": 2,
        "user timeline": 2,
        "tweepy's": 2,
        "path parameter": 2,
        "ham": 2,
        "spam": 2,
        "test sets": 2,
        "labels": 2,
        "spam classification": 2,
        "randomforestclassifier": 2,
        "svm classifier": 1,
        "memory requirements": 1,
        "numpy email arrays": 1,
        "credientials": 1
    },
    "regression tree": {
        "cutpoint": 34,
        "training error": 18,
        "predicted probability": 8,
        "response variable": 8,
        "decision tree algorithm": 8,
        "classification error rate": 8,
        "gini index": 8,
        "mean response value": 4,
        "observation": 4,
        "tree diagram": 4,
        "predictive feature": 4,
        "high": 4,
        "high school graduation rate": 4,
        "high population density": 4,
        "maximum value": 4,
        "splitting criteria": 4,
        "classification trees": 4,
        "node purity": 4,
        "titanic": 4,
        "sex": 4,
        "age": 4
    },
    "python file system libraries": {
        "zipfile": 9,
        "granularity": 7,
        "zip": 6,
        "zip files": 5,
        "filenames": 5,
        "python docs": 5,
        "postal code": 5,
        "zipped data": 4,
        "text editor": 4,
        "web browser": 4,
        "datahub": 4,
        "pandas data frames": 4,
        "character encoding issues": 4,
        "vio dataframes": 4,
        "utilities": 4,
        "sanity checks": 4,
        "data frames": 4,
        "floating point values": 4,
        "testing function": 4,
        "rounding error": 4,
        "businesses file": 4,
        "primary keys": 4,
        "bus dataframe": 4,
        "zip code": 4,
        "missing zip codes": 3,
        "bus data frame": 2,
        "python type command": 2,
        "business table": 2,
        "zip code values": 2,
        "counts": 2,
        "businesses": 2,
        "94602": 2,
        "search engine": 2,
        "fillna": 1,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "extended zip codes": 1,
        "extended postal codes": 1,
        "series isnull method": 1,
        "binary array": 1,
        "incorrect zip codes": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94545": 1,
        "business name": 1,
        "zip codes": 1,
        "longitude values": 1,
        "longitude": 1,
        "latitude": 1
    },
    "caching": {
        "zipfile": 9,
        "granularity": 7,
        "zip": 6,
        "zip files": 5,
        "filenames": 5,
        "python docs": 5,
        "postal code": 5,
        "zipped data": 4,
        "text editor": 4,
        "web browser": 4,
        "datahub": 4,
        "pandas data frames": 4,
        "character encoding issues": 4,
        "vio dataframes": 4,
        "utilities": 4,
        "sanity checks": 4,
        "data frames": 4,
        "floating point values": 4,
        "testing function": 4,
        "rounding error": 4,
        "businesses file": 4,
        "primary keys": 4,
        "bus dataframe": 4,
        "zip code": 4,
        "missing zip codes": 3,
        "bus data frame": 2,
        "python type command": 2,
        "business table": 2,
        "zip code values": 2,
        "counts": 2,
        "businesses": 2,
        "94602": 2,
        "search engine": 2,
        "fillna": 1,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "extended zip codes": 1,
        "extended postal codes": 1,
        "series isnull method": 1,
        "binary array": 1,
        "incorrect zip codes": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94545": 1,
        "business name": 1,
        "zip codes": 1,
        "longitude values": 1,
        "longitude": 1,
        "latitude": 1
    },
    "twitter api": {
        "nltk twitter corpus": 9,
        "negative tweets": 6,
        "positive tweets": 6,
        "tfidfvectorizer": 6,
        "bigrams": 6,
        "default parameters": 6,
        "trigrams": 6,
        "unigrams": 6,
        "stop words": 6,
        "tweetdeck": 5,
        "linearsvc": 4,
        "user timeline": 4,
        "tweepy's": 4,
        "pandas documentation": 4,
        "null hypothesis": 4,
        "consumer key consumer secret": 3,
        "twitter application": 3,
        "access token access token secret": 3,
        "api": 3,
        "credentials": 3,
        "twitter api": 3,
        "json": 3,
        "string method": 3,
        "randomforestclassifier": 3,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "statistical test": 2,
        "numpy functions": 2,
        "hypothesis test": 2,
        "table": 2,
        "datascience": 2,
        "data 8": 2,
        "twitter web client": 2,
        "svm classifier": 1,
        "trump tweets": 1,
        "nested data structure": 1,
        "indexing": 1,
        "dictionaries": 1,
        "twitter search": 1,
        "credientials": 1
    },
    "anss monitoring": {
        "waveform data": 20,
        "preview plot": 16,
        "[": 12,
        "obspy docs": 12,
        "mainshock": 11,
        "spectrogram": 11,
        "earthquake": 11,
        "utcdatetime object": 9,
        "main shock": 7,
        "donwloaded data": 7,
        "aftershock": 5,
        "spectrogram plot": 5,
        "peak value": 5,
        "magnitude approximation": 3,
        "network magnitude approximation": 2,
        "large aftershock": 2,
        "dominant event frequency range": 1,
        "characteristic function": 1,
        "station metadata": 1,
        "local noise burst": 1,
        "seismic phase": 1,
        "bandpass filter": 1,
        "transient signals": 1,
        "estimatemagnitude function": 1,
        "aftershock spectrogram": 1
    },
    "active fault": {
        "waveform data": 20,
        "preview plot": 16,
        "[": 12,
        "obspy docs": 12,
        "mainshock": 11,
        "spectrogram": 11,
        "earthquake": 11,
        "utcdatetime object": 9,
        "main shock": 7,
        "donwloaded data": 7,
        "aftershock": 5,
        "spectrogram plot": 5,
        "peak value": 5,
        "magnitude approximation": 3,
        "network magnitude approximation": 2,
        "large aftershock": 2,
        "dominant event frequency range": 1,
        "characteristic function": 1,
        "station metadata": 1,
        "local noise burst": 1,
        "seismic phase": 1,
        "bandpass filter": 1,
        "transient signals": 1,
        "estimatemagnitude function": 1,
        "aftershock spectrogram": 1
    },
    "national seismic networks": {
        "waveform data": 20,
        "preview plot": 16,
        "[": 12,
        "obspy docs": 12,
        "mainshock": 11,
        "spectrogram": 11,
        "earthquake": 11,
        "utcdatetime object": 9,
        "main shock": 7,
        "donwloaded data": 7,
        "aftershock": 5,
        "spectrogram plot": 5,
        "peak value": 5,
        "magnitude approximation": 3,
        "network magnitude approximation": 2,
        "large aftershock": 2,
        "dominant event frequency range": 1,
        "characteristic function": 1,
        "station metadata": 1,
        "local noise burst": 1,
        "seismic phase": 1,
        "bandpass filter": 1,
        "transient signals": 1,
        "estimatemagnitude function": 1,
        "aftershock spectrogram": 1
    },
    "aftershock series": {
        "waveform data": 20,
        "preview plot": 16,
        "[": 12,
        "obspy docs": 12,
        "mainshock": 11,
        "spectrogram": 11,
        "earthquake": 11,
        "utcdatetime object": 9,
        "main shock": 7,
        "donwloaded data": 7,
        "aftershock": 5,
        "spectrogram plot": 5,
        "peak value": 5,
        "magnitude approximation": 3,
        "network magnitude approximation": 2,
        "large aftershock": 2,
        "dominant event frequency range": 1,
        "characteristic function": 1,
        "station metadata": 1,
        "local noise burst": 1,
        "seismic phase": 1,
        "bandpass filter": 1,
        "transient signals": 1,
        "estimatemagnitude function": 1,
        "aftershock spectrogram": 1
    },
    "web page hits": {
        "waveform data": 20,
        "preview plot": 16,
        "[": 12,
        "obspy docs": 12,
        "mainshock": 11,
        "spectrogram": 11,
        "earthquake": 11,
        "utcdatetime object": 9,
        "main shock": 7,
        "donwloaded data": 7,
        "aftershock": 5,
        "spectrogram plot": 5,
        "peak value": 5,
        "magnitude approximation": 3,
        "network magnitude approximation": 2,
        "large aftershock": 2,
        "dominant event frequency range": 1,
        "characteristic function": 1,
        "station metadata": 1,
        "local noise burst": 1,
        "seismic phase": 1,
        "bandpass filter": 1,
        "transient signals": 1,
        "estimatemagnitude function": 1,
        "aftershock spectrogram": 1
    },
    "illinois earthquake": {
        "waveform data": 20,
        "preview plot": 16,
        "[": 12,
        "obspy docs": 12,
        "mainshock": 11,
        "spectrogram": 11,
        "earthquake": 11,
        "utcdatetime object": 9,
        "main shock": 7,
        "donwloaded data": 7,
        "aftershock": 5,
        "spectrogram plot": 5,
        "peak value": 5,
        "magnitude approximation": 3,
        "network magnitude approximation": 2,
        "large aftershock": 2,
        "dominant event frequency range": 1,
        "characteristic function": 1,
        "station metadata": 1,
        "local noise burst": 1,
        "seismic phase": 1,
        "bandpass filter": 1,
        "transient signals": 1,
        "estimatemagnitude function": 1,
        "aftershock spectrogram": 1
    },
    "indiana university": {
        "waveform data": 20,
        "preview plot": 16,
        "[": 12,
        "obspy docs": 12,
        "mainshock": 11,
        "spectrogram": 11,
        "earthquake": 11,
        "utcdatetime object": 9,
        "main shock": 7,
        "donwloaded data": 7,
        "aftershock": 5,
        "spectrogram plot": 5,
        "peak value": 5,
        "magnitude approximation": 3,
        "network magnitude approximation": 2,
        "large aftershock": 2,
        "dominant event frequency range": 1,
        "characteristic function": 1,
        "station metadata": 1,
        "local noise burst": 1,
        "seismic phase": 1,
        "bandpass filter": 1,
        "transient signals": 1,
        "estimatemagnitude function": 1,
        "aftershock spectrogram": 1
    },
    "portable seismographs": {
        "waveform data": 20,
        "preview plot": 16,
        "[": 12,
        "obspy docs": 12,
        "mainshock": 11,
        "spectrogram": 11,
        "earthquake": 11,
        "utcdatetime object": 9,
        "main shock": 7,
        "donwloaded data": 7,
        "aftershock": 5,
        "spectrogram plot": 5,
        "peak value": 5,
        "magnitude approximation": 3,
        "network magnitude approximation": 2,
        "large aftershock": 2,
        "dominant event frequency range": 1,
        "characteristic function": 1,
        "station metadata": 1,
        "local noise burst": 1,
        "seismic phase": 1,
        "bandpass filter": 1,
        "transient signals": 1,
        "estimatemagnitude function": 1,
        "aftershock spectrogram": 1
    },
    "decision tree model": {
        "mean salary": 27,
        "cutpoint": 17,
        "dtree": 9,
        "decisiontreeclassifier()": 9,
        "group exercise": 9,
        "equivalent regression tree": 9,
        "computer": 9,
        "splitting rule": 9,
        "decision trees": 9,
        "salary": 9,
        "training error": 6,
        "predicted probability": 2,
        "response variable": 2,
        "decision tree algorithm": 2,
        "classification error rate": 2,
        "gini index": 2,
        "confusion matrix": 1,
        "mean response value": 1,
        "observation": 1,
        "tree diagram": 1,
        "predictive feature": 1,
        "high": 1,
        "high school graduation rate": 1,
        "high population density": 1,
        "maximum value": 1,
        "splitting criteria": 1,
        "classification trees": 1,
        "node purity": 1,
        "titanic": 1,
        "sex": 1,
        "age": 1
    },
    "postgres sql lab": {
        "string queries": 10,
        "northwind database": 10,
        "select statement": 10,
        "public schema": 10,
        "schema": 9,
        "public tables": 9,
        "column names": 9,
        "postgres": 9,
        "schemas": 9,
        "table peek": 8,
        "usstates": 8,
        "sql queries": 8,
        "bar chart": 8,
        "postgresql": 8,
        "catalog": 8,
        "shipping time": 8,
        "product data": 6
    },
    "learned": {
        "probability": 9,
        "gradient boosted trees": 7,
        "false positives": 6,
        "prediction accuracy": 6,
        "boosted trees model": 6,
        "decision trees": 6,
        "decision tree model": 6,
        "probabilities": 6,
        "prediction probability": 6,
        "risky loans": 5,
        "learning algorithm": 5,
        "validation data": 5,
        "model parameters": 5,
        "multiple decision trees": 5,
        "boosted trees": 5,
        "ensemble classifier": 5,
        "predictive power": 5,
        "sample validation data": 5,
        "safe loan": 5,
        "predict method": 5,
        "prediction probabilities": 5,
        "tree models": 4,
        "classification error": 4,
        "training errors": 4,
        "false negatives": 3,
        "check": 2,
        "ensemble classifiers": 2,
        "boosted tree module": 2,
        "predicitve accuracy": 2,
        "validation errors": 2,
        "classification errors": 2,
        "validation classification error": 2
    },
    "eigenvalues": {
        "correlation matrix": 12,
        "covariance matrix": 11,
        "pca": 10,
        "eigendecomposition": 10,
        "eigenvectors": 9,
        "eigenvalues": 6,
        "projection matrix": 5,
        "singular vector decomposition": 4,
        "tickerinfo": 4,
        "ticker names": 4,
        "computational efficiency": 3,
        "principal components": 3,
        "eigenpairs": 3,
        "components": 2,
        "mean vector": 2,
        "numpy cov function": 2,
        "ance matrix": 2,
        "normalized covariance matrix": 2,
        "finance": 2,
        "standardized data": 2,
        "eigenvalue pairs": 2,
        "standardizing": 2,
        "pca implementations": 2,
        "axes": 2,
        "lowest eigenvalues": 2,
        "explained variance": 2,
        "information": 2,
        "first principal component": 2,
        "second principal component": 2,
        "concatenated top k eigenvectors": 2,
        "tickers": 2,
        "company name": 2,
        "sector ids": 2,
        "sector id": 2,
        "covariance": 1,
        "eigenvalue problem": 1,
        "maximum variance": 1,
        "machine learning algorithms": 1,
        "computer hardware": 1,
        "linear transformation methods": 1,
        "pattern classification problem": 1,
        "linear discriminant analysis": 1,
        "e": 1,
        "ctors": 1,
        "eigen": 1,
        "petal width": 1,
        "uci machine learning repository": 1,
        "tutorial": 1,
        "petal length": 1,
        "sepal length": 1,
        "python library": 1,
        "uci repository": 1,
        "flower sample": 1,
        "flower classes": 1,
        "standard": 1
    },
    "jpmorgan chase": {
        "bank": 9,
        "ticker symbols": 8,
        "alphabetical": 8,
        "distplot": 8,
        "single data frame": 7,
        "tickers list": 7,
        "column name levels": 6,
        "returns": 6,
        "empty": 6,
        "bank stock ticker": 6,
        "returns column": 6,
        "close column": 6,
        "pairplot": 6,
        "returns dataframe": 6,
        "single day returns": 6,
        "worst": 6,
        "morgan stanley": 5,
        "close price": 5,
        "salary": 3,
        "python list": 3,
        "graded components": 3,
        "straight line": 3,
        "ly": 3,
        "visualization libraries": 3,
        "cufflinks": 3,
        "heatmap": 2,
        "bank of america": 2,
        "memberships": 1,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "bollinger band plot": 1
    },
    "gp": {
        "time delays": 15,
        "minimize function": 7,
        "likelihood function": 6,
        "mcmc": 6,
        "neg log likelihood": 5,
        "predictive distribution": 5,
        "gp": 5,
        "gradient descent optimizer": 4,
        "log likelihood": 4,
        "ip": 4,
        "posterior uncertainties": 4,
        "optimization": 4,
        "gp hps": 4,
        "component kernel": 3,
        "gp object": 3,
        "overal kernel": 3,
        "joint model": 3,
        "gradient functions": 3,
        "predictive means": 3,
        "predictive mean": 3,
        "covariance matrix": 3,
        "individual components": 3,
        "agn reverberation mapping": 3,
        "posterior distribution": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "white noise standard deviation": 3,
        "likelihood surface": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "boolean variable": 2,
        "delayed times": 2,
        "uncertainty estimates": 2,
        "posterior probability": 2,
        "confidence intervals": 2,
        "posterior function": 2,
        "sampler": 2,
        "second george tutorial": 2,
        "random offset": 2,
        "maximum likelihood estimates": 2
    },
    "newsgroups": {
        "lsi": 12,
        "mic": 8,
        "m": 8,
        "term frequency inverse document frequency": 8,
        "entropy function": 8,
        "term frequency": 8,
        "inverse document frequency components": 8,
        "docs": 6,
        "tdmatrix": 6,
        "document space": 4,
        "final matrix": 4,
        "linalg svd function": 4,
        "sigma matrix": 4,
        "tdm": 4,
        "term space": 4,
        "svd": 4,
        "diagonal matrix": 4,
        "cosine similarity": 4,
        "distance metric": 4,
        "singular value matrix": 2,
        "reduction": 2,
        "ality reduction": 2,
        "rank k approximation": 2,
        "document transpose matrix": 2,
        "conceptual similarity": 2,
        "document folding": 2,
        "document vectors": 2,
        "cosine similarity score": 2,
        "reuters documents": 2,
        "lsi space": 2,
        "predicted category": 2,
        "knn classifier": 2,
        "reuters document categorization": 2,
        "training document": 2,
        "reuters text categorization": 2,
        "emmed test": 2
    },
    "function object": {
        "iloc": 9,
        "random numbers": 6,
        "numpy functions": 6,
        "dfcars": 6,
        "listiness": 4,
        "isprime": 3,
        "keyword arguments": 3,
        "iterate": 3,
        "numpy module functions": 3,
        "numpy array constructors": 3,
        "64 bit": 3,
        "floating point": 3,
        "random constructor": 3,
        "readability": 3,
        "computer chips": 3,
        "broadcasting": 3,
        "lists": 3,
        "matrix multiplication": 3,
        "mean": 3,
        "one dimensional iteration": 2,
        "idiom": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "umpy module": {
        "iloc": 9,
        "random numbers": 6,
        "numpy functions": 6,
        "dfcars": 6,
        "listiness": 4,
        "isprime": 3,
        "keyword arguments": 3,
        "iterate": 3,
        "numpy module functions": 3,
        "numpy array constructors": 3,
        "64 bit": 3,
        "floating point": 3,
        "random constructor": 3,
        "readability": 3,
        "computer chips": 3,
        "broadcasting": 3,
        "lists": 3,
        "matrix multiplication": 3,
        "mean": 3,
        "one dimensional iteration": 2,
        "idiom": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "capstone project 1": {
        "musclehub": 16,
        "sql": 9,
        "sql database": 9,
        "codecademy library": 9,
        "frame": 9,
        "gym customers": 9,
        "sqlite database": 9,
        "left join commands": 8,
        "email": 8,
        "pyplot": 7,
        "hypothesis tests": 7,
        "scipy": 7,
        "sanity check": 5,
        "autopct": 5,
        "pie cart": 5,
        "pie chart": 5,
        "fitness": 5,
        "fitness test": 5,
        "memberships": 2,
        "significance test": 2,
        "acquisition funel": 2,
        "bar chart": 2
    },
    "musclehub ab test": {
        "musclehub": 16,
        "sql": 9,
        "sql database": 9,
        "codecademy library": 9,
        "frame": 9,
        "gym customers": 9,
        "sqlite database": 9,
        "left join commands": 8,
        "email": 8,
        "pyplot": 7,
        "hypothesis tests": 7,
        "scipy": 7,
        "sanity check": 5,
        "autopct": 5,
        "pie cart": 5,
        "pie chart": 5,
        "fitness": 5,
        "fitness test": 5,
        "memberships": 2,
        "significance test": 2,
        "acquisition funel": 2,
        "bar chart": 2
    },
    "homework 2": {
        "numerical tests": 12,
        "attributes": 9,
        "zipfile": 9,
        "postal code": 8,
        "head function": 7,
        "boolean expressions": 6,
        "utilities": 6,
        "sanity checks": 6,
        "data frames": 6,
        "data variables": 6,
        "datasets": 6,
        "businesses file": 6,
        "primary keys": 6,
        "granularity": 6,
        "bus data frame": 4,
        "zip code": 4,
        "business table": 4,
        "variable postal code": 4,
        "extended zip codes": 4,
        "extended postal codes": 4,
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "zip codes": 3,
        "inspection": 2,
        "inspection dataframe": 2
    },
    "food safety course policies": {
        "numerical tests": 12,
        "attributes": 9,
        "zipfile": 9,
        "postal code": 8,
        "head function": 7,
        "boolean expressions": 6,
        "utilities": 6,
        "sanity checks": 6,
        "data frames": 6,
        "data variables": 6,
        "datasets": 6,
        "businesses file": 6,
        "primary keys": 6,
        "granularity": 6,
        "bus data frame": 4,
        "zip code": 4,
        "business table": 4,
        "variable postal code": 4,
        "extended zip codes": 4,
        "extended postal codes": 4,
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "zip codes": 3,
        "inspection": 2,
        "inspection dataframe": 2
    },
    "quarter end frequency": {
        "exponentially weighted functions": 6,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "up sampling": 3,
        "frequency conversion": 3,
        "down sampling": 3,
        "amps": 3,
        "resampling": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ar model": 3,
        "time series modeling": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "calendar day frequency": {
        "exponentially weighted functions": 6,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "up sampling": 3,
        "frequency conversion": 3,
        "down sampling": 3,
        "amps": 3,
        "resampling": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ar model": 3,
        "time series modeling": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "year end frequency": {
        "exponentially weighted functions": 6,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "up sampling": 3,
        "frequency conversion": 3,
        "down sampling": 3,
        "amps": 3,
        "resampling": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ar model": 3,
        "time series modeling": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "frequency specifiers": {
        "exponentially weighted functions": 6,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "up sampling": 3,
        "frequency conversion": 3,
        "down sampling": 3,
        "amps": 3,
        "resampling": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ar model": 3,
        "time series modeling": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "business hour frequency": {
        "exponentially weighted functions": 6,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "up sampling": 3,
        "frequency conversion": 3,
        "down sampling": 3,
        "amps": 3,
        "resampling": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ar model": 3,
        "time series modeling": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "business year end frequency": {
        "exponentially weighted functions": 6,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "up sampling": 3,
        "frequency conversion": 3,
        "down sampling": 3,
        "amps": 3,
        "resampling": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ar model": 3,
        "time series modeling": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "freq parameter": {
        "exponentially weighted functions": 6,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "up sampling": 3,
        "frequency conversion": 3,
        "down sampling": 3,
        "amps": 3,
        "resampling": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ar model": 3,
        "time series modeling": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "business quarter endfrequency": {
        "exponentially weighted functions": 6,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "up sampling": 3,
        "frequency conversion": 3,
        "down sampling": 3,
        "amps": 3,
        "resampling": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ar model": 3,
        "time series modeling": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "month end frequency": {
        "exponentially weighted functions": 6,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "up sampling": 3,
        "frequency conversion": 3,
        "down sampling": 3,
        "amps": 3,
        "resampling": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ar model": 3,
        "time series modeling": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "quarter start frequency": {
        "exponentially weighted functions": 6,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "up sampling": 3,
        "frequency conversion": 3,
        "down sampling": 3,
        "amps": 3,
        "resampling": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ar model": 3,
        "time series modeling": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "year start frequency": {
        "exponentially weighted functions": 6,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "up sampling": 3,
        "frequency conversion": 3,
        "down sampling": 3,
        "amps": 3,
        "resampling": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ar model": 3,
        "time series modeling": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "business quarter start frequency": {
        "exponentially weighted functions": 6,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "up sampling": 3,
        "frequency conversion": 3,
        "down sampling": 3,
        "amps": 3,
        "resampling": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ar model": 3,
        "time series modeling": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "frequency": {
        "exponentially weighted functions": 6,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "up sampling": 3,
        "frequency conversion": 3,
        "down sampling": 3,
        "amps": 3,
        "resampling": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ar model": 3,
        "time series modeling": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "business month end frequency": {
        "exponentially weighted functions": 6,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "up sampling": 3,
        "frequency conversion": 3,
        "down sampling": 3,
        "amps": 3,
        "resampling": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ar model": 3,
        "time series modeling": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "business": {
        "exponentially weighted functions": 6,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "up sampling": 3,
        "frequency conversion": 3,
        "down sampling": 3,
        "amps": 3,
        "resampling": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ar model": 3,
        "time series modeling": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "business day frequency": {
        "exponentially weighted functions": 6,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "up sampling": 3,
        "frequency conversion": 3,
        "down sampling": 3,
        "amps": 3,
        "resampling": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ar model": 3,
        "time series modeling": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "sqlite database": {
        "population": 8,
        "democratic republic of the congo": 6,
        "sqlite3 library": 6,
        "sql": 5,
        "olympic sports": 4,
        "world bank projects": 3,
        "hashemite kingdom of jordan": 3,
        "code cell": 3,
        "indicator data": 3,
        "merged data set": 3,
        "countrycode": 3,
        "json file": 3,
        "islamic republic": 3,
        "afghanistan": 3,
        "federal republic": 3,
        "bangladesh": 3,
        "nigeria": 3,
        "lebanese republic": 3,
        "democratic socialist republic": 3,
        "code": 3,
        "people's republic of bangladesh": 3,
        "federal republic of nigeria": 3,
        "tunisia": 3,
        "islamic republic of afghanistan": 3,
        "federative republic": 3,
        "merged table": 3,
        "brazil": 3,
        "sql query": 3,
        "alter table command": 3,
        "sqlite3 database": 3,
        "sqlite": 3,
        "foreign key constraints": 3,
        "weighted average": 3,
        "search interest": 3,
        "census population table": 2,
        "search interest table": 2,
        "volleyball": 2,
        "interest": 2,
        "netherlands": 2,
        "china": 2,
        "global search interest": 2,
        "global population": 2,
        "india": 2,
        "group by": 2,
        "population weights": 2,
        "pandas dataframes": 2,
        "ranking": 2,
        "worldwide popularity": 1,
        "populations": 1
    },
    "food safety data": {
        "zipfile": 9,
        "granularity": 7,
        "zip files": 5,
        "filenames": 5,
        "python docs": 5,
        "postal code": 5,
        "zipped data": 4,
        "text editor": 4,
        "web browser": 4,
        "datahub": 4,
        "pandas data frames": 4,
        "character encoding issues": 4,
        "vio dataframes": 4,
        "utilities": 4,
        "sanity checks": 4,
        "data frames": 4,
        "floating point values": 4,
        "testing function": 4,
        "rounding error": 4,
        "businesses file": 4,
        "primary keys": 4,
        "bus dataframe": 4,
        "zip code": 4,
        "missing zip codes": 3,
        "bus data frame": 2,
        "python type command": 2,
        "business table": 2,
        "zip code values": 2,
        "counts": 2,
        "businesses": 2,
        "94602": 2,
        "search engine": 2,
        "fillna": 1,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "extended zip codes": 1,
        "extended postal codes": 1,
        "series isnull method": 1,
        "binary array": 1,
        "incorrect zip codes": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94545": 1,
        "business name": 1,
        "zip": 1,
        "zip codes": 1,
        "longitude values": 1,
        "longitude": 1,
        "latitude": 1
    },
    "portability": {
        "zipfile": 9,
        "granularity": 7,
        "zip files": 5,
        "filenames": 5,
        "python docs": 5,
        "postal code": 5,
        "zipped data": 4,
        "text editor": 4,
        "web browser": 4,
        "datahub": 4,
        "pandas data frames": 4,
        "character encoding issues": 4,
        "vio dataframes": 4,
        "utilities": 4,
        "sanity checks": 4,
        "data frames": 4,
        "floating point values": 4,
        "testing function": 4,
        "rounding error": 4,
        "businesses file": 4,
        "primary keys": 4,
        "bus dataframe": 4,
        "zip code": 4,
        "missing zip codes": 3,
        "bus data frame": 2,
        "python type command": 2,
        "business table": 2,
        "zip code values": 2,
        "counts": 2,
        "businesses": 2,
        "94602": 2,
        "search engine": 2,
        "fillna": 1,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "extended zip codes": 1,
        "extended postal codes": 1,
        "series isnull method": 1,
        "binary array": 1,
        "incorrect zip codes": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94545": 1,
        "business name": 1,
        "zip": 1,
        "zip codes": 1,
        "longitude values": 1,
        "longitude": 1,
        "latitude": 1
    },
    "bank of america": {
        "bank": 9,
        "ticker symbols": 8,
        "alphabetical": 8,
        "distplot": 8,
        "single data frame": 7,
        "tickers list": 7,
        "close price": 7,
        "column name levels": 6,
        "returns": 6,
        "empty": 6,
        "bank stock ticker": 6,
        "returns column": 6,
        "close column": 6,
        "pairplot": 6,
        "returns dataframe": 6,
        "single day returns": 6,
        "worst": 6,
        "morgan stanley": 6,
        "heatmap": 4,
        "bank of america": 4,
        "ly": 3,
        "visualization libraries": 3,
        "cufflinks": 3,
        "candle plot": 2,
        "simple moving averages plot": 2,
        "bollinger band plot": 2
    },
    "ions": {
        "significance": 10,
        "majors": 8,
        "alpha significance value": 8,
        "null hypothesis": 8,
        "boolean values": 8,
        "values": 7,
        "cs data": 6,
        "confounding variable": 6,
        "ordinary least squares": 6,
        "linear models": 6,
        "design matrices": 6,
        "patsy": 6,
        "interim conclusion": 6,
        "hypothesis": 6,
        "first pass analysis": 6,
        "confounding variables": 6,
        "average heights": 4,
        "alpha value": 4,
        "statistical test": 4,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "average height values": 3,
        "pivot table": 3,
        "computer science majors": 2,
        "kmeans": 1
    },
    "disributions": {
        "significance": 10,
        "majors": 8,
        "alpha significance value": 8,
        "null hypothesis": 8,
        "boolean values": 8,
        "values": 7,
        "cs data": 6,
        "confounding variable": 6,
        "ordinary least squares": 6,
        "linear models": 6,
        "design matrices": 6,
        "patsy": 6,
        "interim conclusion": 6,
        "hypothesis": 6,
        "first pass analysis": 6,
        "confounding variables": 6,
        "average heights": 4,
        "alpha value": 4,
        "statistical test": 4,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "average height values": 3,
        "pivot table": 3,
        "computer science majors": 2,
        "kmeans": 1
    },
    "statistical tests": {
        "significance": 10,
        "majors": 8,
        "alpha significance value": 8,
        "null hypothesis": 8,
        "boolean values": 8,
        "values": 7,
        "cs data": 6,
        "confounding variable": 6,
        "ordinary least squares": 6,
        "linear models": 6,
        "design matrices": 6,
        "patsy": 6,
        "interim conclusion": 6,
        "hypothesis": 6,
        "first pass analysis": 6,
        "confounding variables": 6,
        "average heights": 4,
        "alpha value": 4,
        "statistical test": 4,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "average height values": 3,
        "pivot table": 3,
        "computer science majors": 2,
        "kmeans": 1
    },
    "realistic sample data": {
        "sigmoid function": 19,
        "error functions": 15,
        "error function": 12,
        "study times": 10,
        "exam output variable": 10,
        "random number": 10,
        "uniform distribution": 10,
        "decision boundary": 10,
        "predicted class": 10,
        "modelling function": 8,
        "logistic function": 8,
        "gradient descent": 5,
        "resholding": 2,
        "total cost function": 2,
        "last function approximation": 2,
        "learning rate": 2,
        "learning curve": 2,
        "regularization": 1,
        "predict()": 1,
        "correct guesses": 1,
        "guessed classes": 1,
        "predicted exam results": 1
    },
    "lookup table": {
        "lookup table": 7,
        "delimiter": 4,
        "ordinal": 4,
        "age class": 4,
        "temporal trends": 4,
        "customer behavior": 4,
        "cleanliness": 4,
        "distributions": 4,
        "missingness": 4,
        "level": 4,
        "business analyst": 4,
        "basket size": 4,
        "data exploration": 4,
        "purchase data": 4,
        "shopping": 4,
        "shopping trips": 4,
        "log transformation": 4,
        "terminal window": 3,
        "postal codes": 3,
        "character encoding": 3,
        "big5": 3,
        "chinese characters": 3,
        "gzip": 3,
        "lookup tables": 3,
        "tafeng table": 3,
        "tafengfull": 3,
        "age classes": 3,
        "residence areas": 3,
        "left join": 3,
        "age lookup table": 2,
        "tafengfull table": 2,
        "distribution shops": 2,
        "plotting region": 2,
        "quantile method": 2,
        "symmetrize": 2,
        "boxplots": 2,
        "lunar new year": 2,
        "christmas": 2,
        "log transform": 1,
        "tick marks": 1,
        "carts": 1,
        "log transformed data": 1,
        "point cloud": 1,
        "vertical bands": 1,
        "over plotting": 1,
        "transaction time": 1,
        "transaction times": 1,
        "datetime64": 1,
        "unique customers": 1,
        "customer trends": 1,
        "customer counts": 1,
        "holidays": 1,
        "shopping behavior": 1,
        "line": 1,
        "reference lines": 1
    },
    "probability": {
        "error functions": 15,
        "error function": 12,
        "predicted class": 10,
        "sigmoid function": 9,
        "false positives": 6,
        "probability": 5,
        "gradient descent": 5,
        "fair coin flip": 4,
        "false negatives": 3,
        "prediction accuracy": 3,
        "boosted trees model": 3,
        "decision trees": 3,
        "decision tree model": 3,
        "probabilities": 3,
        "prediction probability": 3,
        "wait time": 3,
        "empirical distribution function": 3,
        "website": 2,
        "floating point numbers": 2,
        "nerve pulse data": 2,
        "random variable": 2,
        "nerve pulses": 2,
        "total cost function": 2,
        "last function approximation": 2,
        "learning rate": 2,
        "learning curve": 2,
        "tree models": 2,
        "classification error": 2,
        "training errors": 2,
        "odds ratio": 1,
        "cumulative distribution function": 1,
        "empirical distibution function": 1,
        "empirical distribution": 1,
        "fomula": 1,
        "cummulative distribution": 1,
        "estimate": 1,
        "mean": 1,
        "nerve pulse wait time data": 1,
        "variance": 1,
        "skewness": 1,
        "regularization": 1,
        "predict()": 1,
        "correct guesses": 1,
        "guessed classes": 1,
        "predicted exam results": 1,
        "check": 1,
        "gradient boosted trees": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1
    },
    "project 2": {
        "learning rate": 32,
        "hidden layer": 17,
        "vocabulary size": 9,
        "neural network": 9,
        "lookup table": 9,
        "sentimentnetork": 8,
        "activation function": 8,
        "discount": 8,
        "udacity lectures": 8,
        "grokking deep learning": 8,
        "sentimentnetwork": 8,
        "higher learning rate": 8,
        "polarity cutoff": 4,
        "noise reduction": 3,
        "6": 2
    },
    "vocab": {
        "learning rate": 32,
        "hidden layer": 17,
        "vocabulary size": 9,
        "neural network": 9,
        "lookup table": 9,
        "sentimentnetork": 8,
        "activation function": 8,
        "discount": 8,
        "udacity lectures": 8,
        "grokking deep learning": 8,
        "sentimentnetwork": 8,
        "higher learning rate": 8,
        "polarity cutoff": 4,
        "noise reduction": 3,
        "6": 2
    },
    "iris data set": {
        "pairplot": 10,
        "flower species": 10,
        "kde plot": 10,
        "setosa species": 10,
        "gridsearch": 4,
        "iris data set": 4,
        "dbscan": 4,
        "gridsearchcv": 3,
        "iris": 3,
        "confusion matrices": 2,
        "grid model": 2,
        "1d array": 2,
        "supervised models": 2,
        "d array": 2,
        "unsupervised models": 2,
        "distance matrix": 2,
        "cluster centers": 2,
        "scaling": 2,
        "nayseyer": 2,
        "sklearn x array": 2,
        "sds": 2,
        "sdss dataset": 2,
        "galaxy evolution": 2,
        "domain knowledge": 2,
        "pandas dataframes": 2,
        "astropy tables": 2,
        "challenge problem": 2,
        "regression": 2,
        "iris data": 2,
        "final classification": 2,
        "supervised machine learning": 2,
        "training error": 2,
        "generalization error": 2,
        "cross validation": 2,
        "label array": 2,
        "training classifications": 2,
        "iris set": 2,
        "misclassifications": 2,
        "cv": 2,
        "predicted clusters": 1,
        "true clusters": 1,
        "kmeans": 1,
        "unsupervised learning": 1,
        "silhouette coefficient": 1,
        "kmeans clusterer": 1,
        "iris target": 1,
        "clustering algorithms": 1,
        "2d plot": 1,
        "sepal length": 1,
        "unsupervised machine learning": 1,
        "data mining": 1,
        "outlier detection": 1,
        "supervised learning": 1,
        "convex clusters": 1,
        "astronomy": 1,
        "pseudocode": 1,
        "convex": 1,
        "lsst": 1,
        "random state": 1,
        "euclidean distance": 1,
        "clustering outcome": 1,
        "petal length": 1
    },
    "bad data": {
        "granularity": 10,
        "postal code": 8,
        "94602": 8,
        "businesses": 7,
        "zip codes": 7,
        "businesses file": 6,
        "primary keys": 6,
        "businesses data frame": 4,
        "bus data frame": 4,
        "zip code": 4,
        "business table": 4,
        "variable postal code": 4,
        "zip code values": 4,
        "counts": 4,
        "fillna": 4,
        "extended zip codes": 4,
        "extended postal codes": 4,
        "iloc": 4,
        "missing zipcode values": 4,
        "internet": 4,
        "94545": 4,
        "94609": 4,
        "san francisco": 4,
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "longitude values": 3,
        "validzip variable": 3,
        "inspection": 2,
        "inspection dataframe": 2
    },
    "string methods": {
        "string methods": 12,
        "replace method": 11,
        "string value": 11,
        "zfill": 11,
        "decimal point": 11,
        "pi": 10,
        "natural logarithm": 10,
        "int value float": 10,
        "float value": 10,
        "math module": 7,
        "image function": 7,
        "web pages": 7,
        "arithmetic operators": 6,
        "donald knuth": 5,
        "string method lower": 5,
        "square brackets": 3,
        "final expression": 1,
        "stackoverflow": 1,
        "stack overflow": 1,
        "conversion function": 1
    },
    "python script": {
        "paraview": 11,
        "structured grid": 8,
        "temperature": 8,
        "vtk": 6,
        "pyevtk": 6,
        "rectilinear grid": 4,
        "unstructured grid": 4,
        "polygonal data": 4,
        "mesh dimensions": 4,
        "vtk files": 4,
        "point data": 4,
        "pressure": 4,
        "interactive commands": 2,
        "break out problem": 2,
        "astronomical data": 2,
        "binary files": 2,
        "3d rendering programs": 2,
        "cells data": 2,
        "topology": 2,
        "structured points": 2,
        "data set properties": 2,
        "cell dimensions": 2,
        "<img style": 2,
        "representational freedom": 2,
        "cell data": 2,
        "python package": 2,
        "density": 2,
        "independent gaussian distributions": 2,
        "random draws": 2,
        "imentions": 2,
        "point gaussian": 2,
        "gaia data": 2,
        "random data": 2,
        "volume renderings": 2,
        "cell widths": 2,
        "tempurature": 2,
        "temparture": 2,
        "vtk file": 2,
        "volume rendering": 2,
        "3d arrays": 2,
        "vtk binary files": 2,
        "utilities": 2,
        "3d rendering": 2,
        "statistical analysis": 2,
        "iris machine learning": 2,
        "data sets": 2,
        "size": 1,
        "unique tokens": 1,
        "siddhartha": 1,
        "iris data": 1,
        "spatial coordinates": 1
    },
    "row indices": {
        "datetimeindex": 6,
        "exponentially weighted functions": 6,
        "index slicing": 3,
        "arithmetic operations": 3,
        "nanoseond resolution": 3,
        "random datapoints": 3,
        "pandas stores timestamps": 3,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "pandas series indexed": {
        "datetimeindex": 6,
        "exponentially weighted functions": 6,
        "index slicing": 3,
        "arithmetic operations": 3,
        "nanoseond resolution": 3,
        "random datapoints": 3,
        "pandas stores timestamps": 3,
        "date string": 3,
        "customized tim series datetime indices": 3,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "listiness property": {
        "iloc": 27,
        "loc property indexes": 6,
        "dfcars": 6,
        "iloc indexes": 6,
        "row indices": 6,
        "column attributes": 6,
        "label name": 6,
        "integer position indices": 6,
        "toy dataframe": 6,
        "attribute columns": 4,
        "numpy methods": 4,
        "itertuples": 4,
        "pandas methods": 4,
        "dictionary key": 3,
        "dtypes attribute": 3,
        "hist function": 3,
        "listy container": 3,
        "matplotlib hist": 3,
        "seaborn context": 3,
        "axvline": 3,
        "rear axle ratio": 3,
        "plot documentation": 3,
        "plotting commands": 3,
        "file extension": 3,
        "savefig command": 3,
        "saved png": 3,
        "markdown": 3,
        "columns of interest": 3,
        "matplotlib plotting routines": 3
    },
    "github": {
        "magic function": 8,
        "github username": 8,
        "pickle module": 6,
        "working directory": 6,
        "enron data": 6,
        "python dictionary": 6,
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "student id": 5,
        "markdown cell": 4,
        "student id number": 4,
        "email address": 4,
        "course tutorials": 4,
        "grading tests": 4,
        "assert statements": 3,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "python dictionary comprehension": 2,
        "zip function": 2,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2,
        "course id": 2,
        "iterable": 1,
        "enumerate function": 1,
        "anaconda": 1,
        "data science modules": 1,
        "unique course id": 1
    },
    "accurate decision function": {
        "nearest neighbor algorithm": 9,
        "computation time": 9,
        "distance function": 8,
        "pybatch": 8,
        "distance computation": 7,
        "square euclidean distance": 4,
        "nearest neighbors": 4,
        "python nearest neighbor": 4,
        "unlabeled point": 4,
        "nearest neighbor": 4,
        "distance matrix": 4,
        "distance compuation": 4,
        "function pydistance": 4,
        "higher performance": 4,
        "correct": 4,
        "python nearest neighbor search": 4,
        "optimized nearest neighbor function": 4,
        "unlabeled test points": 4,
        "fixed parameters": 4,
        "toy dataset": 4,
        "digit recognition task": 4,
        "numpy operations": 4,
        "pairwise distances": 4,
        "squared euclidean distance": 4,
        "speedup": 3,
        "numpy optimized distance computation": 3,
        "nearest neighbor search": 3,
        "multiple test points": 3,
        "points": 2,
        "optimization": 2,
        "handwritten digits recognition dataset": 1,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1,
        "python lists": 1
    },
    "performance graphs": {
        "nearest neighbor algorithm": 9,
        "computation time": 9,
        "distance function": 8,
        "pybatch": 8,
        "distance computation": 7,
        "square euclidean distance": 4,
        "nearest neighbors": 4,
        "python nearest neighbor": 4,
        "unlabeled point": 4,
        "nearest neighbor": 4,
        "distance matrix": 4,
        "distance compuation": 4,
        "function pydistance": 4,
        "higher performance": 4,
        "correct": 4,
        "python nearest neighbor search": 4,
        "optimized nearest neighbor function": 4,
        "unlabeled test points": 4,
        "fixed parameters": 4,
        "toy dataset": 4,
        "digit recognition task": 4,
        "numpy operations": 4,
        "pairwise distances": 4,
        "squared euclidean distance": 4,
        "speedup": 3,
        "numpy optimized distance computation": 3,
        "nearest neighbor search": 3,
        "multiple test points": 3,
        "points": 2,
        "optimization": 2,
        "handwritten digits recognition dataset": 1,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1,
        "python lists": 1
    },
    "library matplotlib": {
        "nearest neighbor algorithm": 9,
        "computation time": 9,
        "distance function": 8,
        "pybatch": 8,
        "distance computation": 7,
        "square euclidean distance": 4,
        "nearest neighbors": 4,
        "python nearest neighbor": 4,
        "unlabeled point": 4,
        "nearest neighbor": 4,
        "distance matrix": 4,
        "distance compuation": 4,
        "function pydistance": 4,
        "higher performance": 4,
        "correct": 4,
        "python nearest neighbor search": 4,
        "optimized nearest neighbor function": 4,
        "unlabeled test points": 4,
        "fixed parameters": 4,
        "toy dataset": 4,
        "digit recognition task": 4,
        "numpy operations": 4,
        "pairwise distances": 4,
        "squared euclidean distance": 4,
        "speedup": 3,
        "numpy optimized distance computation": 3,
        "nearest neighbor search": 3,
        "multiple test points": 3,
        "points": 2,
        "optimization": 2,
        "handwritten digits recognition dataset": 1,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1,
        "python lists": 1
    },
    "scipy packages": {
        "nearest neighbor algorithm": 9,
        "computation time": 9,
        "distance function": 8,
        "pybatch": 8,
        "distance computation": 7,
        "square euclidean distance": 4,
        "nearest neighbors": 4,
        "python nearest neighbor": 4,
        "unlabeled point": 4,
        "nearest neighbor": 4,
        "distance matrix": 4,
        "distance compuation": 4,
        "function pydistance": 4,
        "higher performance": 4,
        "correct": 4,
        "python nearest neighbor search": 4,
        "optimized nearest neighbor function": 4,
        "unlabeled test points": 4,
        "fixed parameters": 4,
        "toy dataset": 4,
        "digit recognition task": 4,
        "numpy operations": 4,
        "pairwise distances": 4,
        "squared euclidean distance": 4,
        "speedup": 3,
        "numpy optimized distance computation": 3,
        "nearest neighbor search": 3,
        "multiple test points": 3,
        "points": 2,
        "optimization": 2,
        "handwritten digits recognition dataset": 1,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1,
        "python lists": 1
    },
    "mnist": {
        "latent space": 15,
        "mixing coefficients": 10,
        "binarized image": 7,
        "tensorflow": 6,
        "keras sequential model": 6,
        "handwriting styles": 5,
        "multivariate bernoulli distribution": 5,
        "misclassifications": 5,
        "data labels": 5,
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "flattened mnist image": 3,
        "encoder": 3,
        "autoencoder": 3,
        "flattened image": 2,
        "binary crossentropy loss": 2,
        "keras functional api": 2,
        "gradient descent": 2,
        "neural network": 1,
        "keras layer": 1,
        "neural network model": 1,
        "layer": 1,
        "max pool": 1,
        "flatten layer": 1,
        "evaluation() function": 1,
        "activation model": 1,
        "metrics history": 1,
        "sequential model": 1,
        "loss functions": 1,
        "metrics": 1,
        "learning process": 1,
        "keras": 1,
        "fit() function": 1,
        "stochastic gradient descent": 1,
        "training loss": 1,
        "hyperparameters": 1,
        "test sets": 1,
        "validation": 1,
        "training example": 1,
        "x28": 1,
        "training examples": 1,
        "multiclass classification": 1,
        "softmax loss function": 1,
        "true labels": 1,
        "trained model": 1,
        "input variable": 1,
        "mnist dataset": 1,
        "bias vectors": 1,
        "gradient descent training": 1,
        "softmax regression function": 1,
        "softmax implementation": 1,
        "negative log probability": 1,
        "softmax regression": 1,
        "classification function": 1,
        "cross entropy loss": 1,
        "learning rate": 1,
        "cross entropy loss function": 1,
        "tutorials": 1,
        "python list": 1,
        "pil image": 1
    },
    "unsupervised learning algorithms": {
        "predictive models": 7,
        "learn": 7,
        "tutorial": 7,
        "scikit-learn": 7,
        "titanic survival dataset": 7,
        "sklearn library": 7,
        "categorical variables": 7,
        "exploratory data analysis": 7,
        "age": 7,
        "numerical variables": 7,
        "complexity parameter": 7,
        "test set error": 5,
        "validation error": 5,
        "best fit model": 4,
        "test risk": 4,
        "validation": 4,
        "validation set error": 3,
        "hypothesis set": 3,
        "polynomial degree": 3,
        "0th order polynomials": 2,
        "test set errors": 2,
        "hyper": 2,
        "learner": 2,
        "test error": 2,
        "validation set errors": 2,
        "training error": 2,
        "20th order polynomials": 2,
        "random splits": 1,
        "prediction error": 1,
        "multiple": 1,
        "validation process": 1,
        "validation errors": 1,
        "sine curve": 1,
        "hypothesis space": 1,
        "kfold": 1,
        "fold errors": 1,
        "dual problem": 1,
        "wildly behaving pilynomials": 1,
        "lagrange multipliers": 1,
        "bias": 1,
        "penalty term": 1
    },
    "gui": {
        "paraview": 11,
        "structured grid": 8,
        "temperature": 8,
        "vtk": 6,
        "pyevtk": 6,
        "rectilinear grid": 4,
        "unstructured grid": 4,
        "polygonal data": 4,
        "mesh dimensions": 4,
        "vtk files": 4,
        "point data": 4,
        "pressure": 4,
        "interactive commands": 2,
        "break out problem": 2,
        "astronomical data": 2,
        "binary files": 2,
        "3d rendering programs": 2,
        "cells data": 2,
        "topology": 2,
        "structured points": 2,
        "data set properties": 2,
        "cell dimensions": 2,
        "<img style": 2,
        "representational freedom": 2,
        "cell data": 2,
        "python package": 2,
        "density": 2,
        "independent gaussian distributions": 2,
        "random draws": 2,
        "imentions": 2,
        "point gaussian": 2,
        "gaia data": 2,
        "random data": 2,
        "volume renderings": 2,
        "cell widths": 2,
        "tempurature": 2,
        "temparture": 2,
        "vtk file": 2,
        "volume rendering": 2,
        "3d arrays": 2,
        "vtk binary files": 2,
        "utilities": 2,
        "3d rendering": 2,
        "statistical analysis": 2,
        "iris machine learning": 2,
        "data sets": 2,
        "size": 1,
        "iris data": 1,
        "spatial coordinates": 1
    },
    "interactive session": {
        "paraview": 11,
        "structured grid": 8,
        "temperature": 8,
        "vtk": 6,
        "pyevtk": 6,
        "rectilinear grid": 4,
        "unstructured grid": 4,
        "polygonal data": 4,
        "mesh dimensions": 4,
        "vtk files": 4,
        "point data": 4,
        "pressure": 4,
        "interactive commands": 2,
        "break out problem": 2,
        "astronomical data": 2,
        "binary files": 2,
        "3d rendering programs": 2,
        "cells data": 2,
        "topology": 2,
        "structured points": 2,
        "data set properties": 2,
        "cell dimensions": 2,
        "<img style": 2,
        "representational freedom": 2,
        "cell data": 2,
        "python package": 2,
        "density": 2,
        "independent gaussian distributions": 2,
        "random draws": 2,
        "imentions": 2,
        "point gaussian": 2,
        "gaia data": 2,
        "random data": 2,
        "volume renderings": 2,
        "cell widths": 2,
        "tempurature": 2,
        "temparture": 2,
        "vtk file": 2,
        "volume rendering": 2,
        "3d arrays": 2,
        "vtk binary files": 2,
        "utilities": 2,
        "3d rendering": 2,
        "statistical analysis": 2,
        "iris machine learning": 2,
        "data sets": 2,
        "size": 1,
        "iris data": 1,
        "spatial coordinates": 1
    },
    "transform estimation": {
        "warped images": 10,
        "cost array": 9,
        "ransac": 5,
        "inliers": 5,
        "false matches": 5,
        "panorama": 5,
        "output": 5,
        "stationary image": 5,
        "input images": 5,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "seed points": 4,
        "overlap region": 3,
        "utility function": 3,
        "construct cost array": 3,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "optimal path": 3,
        "mcp": 3,
        "ransac transform estimation": 3,
        "random element": 3,
        "negative mask": 3,
        "numpy masked array conventions": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "final mask": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "random sample consensus": {
        "warped images": 10,
        "cost array": 9,
        "ransac": 5,
        "inliers": 5,
        "false matches": 5,
        "panorama": 5,
        "output": 5,
        "stationary image": 5,
        "input images": 5,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "seed points": 4,
        "overlap region": 3,
        "utility function": 3,
        "construct cost array": 3,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "optimal path": 3,
        "mcp": 3,
        "ransac transform estimation": 3,
        "random element": 3,
        "negative mask": 3,
        "numpy masked array conventions": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "final mask": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "ransac": {
        "warped images": 10,
        "cost array": 9,
        "ransac": 5,
        "inliers": 5,
        "false matches": 5,
        "panorama": 5,
        "output": 5,
        "stationary image": 5,
        "input images": 5,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "seed points": 4,
        "overlap region": 3,
        "utility function": 3,
        "construct cost array": 3,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "optimal path": 3,
        "mcp": 3,
        "ransac transform estimation": 3,
        "random element": 3,
        "negative mask": 3,
        "numpy masked array conventions": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "final mask": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "false matches": {
        "warped images": 10,
        "cost array": 9,
        "ransac": 5,
        "inliers": 5,
        "false matches": 5,
        "panorama": 5,
        "output": 5,
        "stationary image": 5,
        "input images": 5,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "seed points": 4,
        "overlap region": 3,
        "utility function": 3,
        "construct cost array": 3,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "optimal path": 3,
        "mcp": 3,
        "ransac transform estimation": 3,
        "random element": 3,
        "negative mask": 3,
        "numpy masked array conventions": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "final mask": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "randomly chosen subsets": {
        "warped images": 10,
        "cost array": 9,
        "ransac": 5,
        "inliers": 5,
        "false matches": 5,
        "panorama": 5,
        "output": 5,
        "stationary image": 5,
        "input images": 5,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "seed points": 4,
        "overlap region": 3,
        "utility function": 3,
        "construct cost array": 3,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "optimal path": 3,
        "mcp": 3,
        "ransac transform estimation": 3,
        "random element": 3,
        "negative mask": 3,
        "numpy masked array conventions": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "final mask": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "naive bayes implementation": {
        "immigration": 17,
        "gary johnson": 14,
        "jill stein": 14,
        "freedom": 13,
        "libertarian party": 11,
        "green party": 11,
        "bayes theorem": 7,
        "feature vectors": 7,
        "probabilities": 7,
        "stein": 7,
        "posterior probabilities": 7,
        "spam detectors": 4,
        "search engine": 4,
        "naive bayes algorithm": 4,
        "scramento kings nba basketball team": 2,
        "sac": 2,
        "o kings": 2,
        "sacramento kings": 2,
        "nba basketball team": 2
    },
    "titanic survival dataset": {
        "exploratory data analysis": 8,
        "outlier detection": 7,
        "unsupervised learning algorithms": 7,
        "matrix decomposition": 7,
        "linear models": 7,
        "density estimation": 7,
        "unsupervised learning": 7,
        "nearest neighbors": 7,
        "machine learning library": 7,
        "support vector machines": 7,
        "predictive models": 7,
        "learn": 7,
        "tutorial": 7,
        "scikit-learn": 7,
        "titanic survival dataset": 7,
        "sklearn library": 7,
        "categorical variables": 7,
        "age": 7,
        "numerical variables": 7,
        "bar plot": 2,
        "deceased passengers": 1
    },
    "random forest": {
        "pystan": 12,
        "pymc": 8,
        "handwritten": 4,
        "numerical dataset": 4,
        "pandas data frame": 4,
        "relative performance": 4,
        "knn": 4,
        "statistical exposition": 4,
        "distribution": 4,
        "distributions": 4,
        "pymc model": 4,
        "univariate logistic regression": 4,
        "sigmoid function": 4,
        "mcmc procedure": 4,
        "roc scores": 4,
        "non-bayesian logistic": 4,
        "standardize": 3,
        "adjusted rand index": 3,
        "random forest": 2,
        "inclusion indicator": 2,
        "bayesian logistic regression": 2,
        "bayesian logistic regression form": 2,
        "bernoulli method": 2,
        "bayesian model": 2,
        "computation segment": 2,
        "elbow method": 2,
        "inflection point": 2,
        "elbow plot": 2,
        "default parameters": 2,
        "digits dataset": 2,
        "permutation": 1,
        "rand index": 1,
        "ari score": 1,
        "random labeling": 1,
        "true clusterings": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1,
        "extratree": 1,
        "decision rules": 1,
        "decisiontreeregression": 1,
        "decision trees": 1,
        "decisiontreeregressor": 1,
        "important features": 1,
        "importance weight": 1,
        "validation data": 1
    },
    "imagecollection": {
        "false matches": 15,
        "convenience function": 14,
        "warped images": 10,
        "private arch": 6,
        "arches national park": 6,
        "delicate arch": 6,
        "cost array": 6,
        "ransac": 5,
        "inliers": 5,
        "panorama": 5,
        "output": 5,
        "stationary image": 5,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "wildcard": {
        "false matches": 15,
        "convenience function": 14,
        "warped images": 10,
        "private arch": 6,
        "arches national park": 6,
        "delicate arch": 6,
        "cost array": 6,
        "ransac": 5,
        "inliers": 5,
        "panorama": 5,
        "output": 5,
        "stationary image": 5,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "posterior probabilities": {
        "predictive distribution": 11,
        "minimize function": 8,
        "gp object": 6,
        "posterior distribution": 6,
        "time delays": 6,
        "optimization": 5,
        "neg log likelihood": 5,
        "ball park values": 3,
        "white noise standard deviation": 3,
        "compute method": 3,
        "covariance matrix": 3,
        "george tutorial": 3,
        "neg log likelihood function": 3,
        "logarithms": 3,
        "log parameters": 3,
        "likelihood": 3,
        "maxim": 3,
        "parameter vector": 3,
        "grid locations": 3,
        "predictive mean": 3,
        "confidence intervals": 3,
        "the": 3,
        "emcee": 3,
        "gradient functions": 3,
        "agn reverberation mapping": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "gpy": {
        "predictive distribution": 11,
        "minimize function": 8,
        "gp object": 6,
        "posterior distribution": 6,
        "time delays": 6,
        "optimization": 5,
        "neg log likelihood": 5,
        "ball park values": 3,
        "white noise standard deviation": 3,
        "compute method": 3,
        "covariance matrix": 3,
        "george tutorial": 3,
        "neg log likelihood function": 3,
        "logarithms": 3,
        "log parameters": 3,
        "likelihood": 3,
        "maxim": 3,
        "parameter vector": 3,
        "grid locations": 3,
        "predictive mean": 3,
        "confidence intervals": 3,
        "the": 3,
        "emcee": 3,
        "gradient functions": 3,
        "agn reverberation mapping": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "emcee": {
        "predictive distribution": 11,
        "minimize function": 8,
        "gp object": 6,
        "posterior distribution": 6,
        "time delays": 6,
        "optimization": 5,
        "neg log likelihood": 5,
        "ball park values": 3,
        "white noise standard deviation": 3,
        "compute method": 3,
        "covariance matrix": 3,
        "george tutorial": 3,
        "neg log likelihood function": 3,
        "logarithms": 3,
        "log parameters": 3,
        "likelihood": 3,
        "maxim": 3,
        "parameter vector": 3,
        "grid locations": 3,
        "predictive mean": 3,
        "confidence intervals": 3,
        "the": 3,
        "emcee": 3,
        "gradient functions": 3,
        "agn reverberation mapping": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "correlated noise": {
        "predictive distribution": 11,
        "minimize function": 8,
        "gp object": 6,
        "posterior distribution": 6,
        "time delays": 6,
        "optimization": 5,
        "neg log likelihood": 5,
        "ball park values": 3,
        "white noise standard deviation": 3,
        "compute method": 3,
        "covariance matrix": 3,
        "george tutorial": 3,
        "neg log likelihood function": 3,
        "logarithms": 3,
        "log parameters": 3,
        "likelihood": 3,
        "maxim": 3,
        "parameter vector": 3,
        "grid locations": 3,
        "predictive mean": 3,
        "confidence intervals": 3,
        "the": 3,
        "emcee": 3,
        "gradient functions": 3,
        "agn reverberation mapping": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "george documentation": {
        "predictive distribution": 11,
        "minimize function": 8,
        "gp object": 6,
        "posterior distribution": 6,
        "time delays": 6,
        "optimization": 5,
        "neg log likelihood": 5,
        "ball park values": 3,
        "white noise standard deviation": 3,
        "compute method": 3,
        "covariance matrix": 3,
        "george tutorial": 3,
        "neg log likelihood function": 3,
        "logarithms": 3,
        "log parameters": 3,
        "likelihood": 3,
        "maxim": 3,
        "parameter vector": 3,
        "grid locations": 3,
        "predictive mean": 3,
        "confidence intervals": 3,
        "the": 3,
        "emcee": 3,
        "gradient functions": 3,
        "agn reverberation mapping": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "white noise": {
        "predictive distribution": 11,
        "minimize function": 8,
        "gp object": 6,
        "posterior distribution": 6,
        "time delays": 6,
        "optimization": 5,
        "neg log likelihood": 5,
        "ball park values": 3,
        "white noise standard deviation": 3,
        "compute method": 3,
        "covariance matrix": 3,
        "george tutorial": 3,
        "neg log likelihood function": 3,
        "logarithms": 3,
        "log parameters": 3,
        "likelihood": 3,
        "maxim": 3,
        "parameter vector": 3,
        "grid locations": 3,
        "predictive mean": 3,
        "confidence intervals": 3,
        "the": 3,
        "emcee": 3,
        "gradient functions": 3,
        "agn reverberation mapping": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "expsquaredkernel": {
        "predictive distribution": 11,
        "minimize function": 8,
        "gp object": 6,
        "posterior distribution": 6,
        "time delays": 6,
        "optimization": 5,
        "neg log likelihood": 5,
        "ball park values": 3,
        "white noise standard deviation": 3,
        "compute method": 3,
        "covariance matrix": 3,
        "george tutorial": 3,
        "neg log likelihood function": 3,
        "logarithms": 3,
        "log parameters": 3,
        "likelihood": 3,
        "maxim": 3,
        "parameter vector": 3,
        "grid locations": 3,
        "predictive mean": 3,
        "confidence intervals": 3,
        "the": 3,
        "emcee": 3,
        "gradient functions": 3,
        "agn reverberation mapping": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "parametrisation": {
        "predictive distribution": 11,
        "minimize function": 8,
        "gp object": 6,
        "posterior distribution": 6,
        "time delays": 6,
        "optimization": 5,
        "neg log likelihood": 5,
        "ball park values": 3,
        "white noise standard deviation": 3,
        "compute method": 3,
        "covariance matrix": 3,
        "george tutorial": 3,
        "neg log likelihood function": 3,
        "logarithms": 3,
        "log parameters": 3,
        "likelihood": 3,
        "maxim": 3,
        "parameter vector": 3,
        "grid locations": 3,
        "predictive mean": 3,
        "confidence intervals": 3,
        "the": 3,
        "emcee": 3,
        "gradient functions": 3,
        "agn reverberation mapping": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "kernelname": {
        "predictive distribution": 11,
        "minimize function": 8,
        "gp object": 6,
        "posterior distribution": 6,
        "time delays": 6,
        "optimization": 5,
        "neg log likelihood": 5,
        "ball park values": 3,
        "white noise standard deviation": 3,
        "compute method": 3,
        "covariance matrix": 3,
        "george tutorial": 3,
        "neg log likelihood function": 3,
        "logarithms": 3,
        "log parameters": 3,
        "likelihood": 3,
        "maxim": 3,
        "parameter vector": 3,
        "grid locations": 3,
        "predictive mean": 3,
        "confidence intervals": 3,
        "the": 3,
        "emcee": 3,
        "gradient functions": 3,
        "agn reverberation mapping": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "squared exponential kernel": {
        "predictive distribution": 11,
        "minimize function": 8,
        "gp object": 6,
        "posterior distribution": 6,
        "time delays": 6,
        "optimization": 5,
        "neg log likelihood": 5,
        "ball park values": 3,
        "white noise standard deviation": 3,
        "compute method": 3,
        "covariance matrix": 3,
        "george tutorial": 3,
        "neg log likelihood function": 3,
        "logarithms": 3,
        "log parameters": 3,
        "likelihood": 3,
        "maxim": 3,
        "parameter vector": 3,
        "grid locations": 3,
        "predictive mean": 3,
        "confidence intervals": 3,
        "the": 3,
        "emcee": 3,
        "gradient functions": 3,
        "agn reverberation mapping": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "length scale": {
        "predictive distribution": 11,
        "minimize function": 8,
        "gp object": 6,
        "posterior distribution": 6,
        "time delays": 6,
        "optimization": 5,
        "neg log likelihood": 5,
        "ball park values": 3,
        "white noise standard deviation": 3,
        "compute method": 3,
        "covariance matrix": 3,
        "george tutorial": 3,
        "neg log likelihood function": 3,
        "logarithms": 3,
        "log parameters": 3,
        "likelihood": 3,
        "maxim": 3,
        "parameter vector": 3,
        "grid locations": 3,
        "predictive mean": 3,
        "confidence intervals": 3,
        "the": 3,
        "emcee": 3,
        "gradient functions": 3,
        "agn reverberation mapping": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "output variance": {
        "predictive distribution": 11,
        "minimize function": 8,
        "gp object": 6,
        "posterior distribution": 6,
        "time delays": 6,
        "optimization": 5,
        "neg log likelihood": 5,
        "ball park values": 3,
        "white noise standard deviation": 3,
        "compute method": 3,
        "covariance matrix": 3,
        "george tutorial": 3,
        "neg log likelihood function": 3,
        "logarithms": 3,
        "log parameters": 3,
        "likelihood": 3,
        "maxim": 3,
        "parameter vector": 3,
        "grid locations": 3,
        "predictive mean": 3,
        "confidence intervals": 3,
        "the": 3,
        "emcee": 3,
        "gradient functions": 3,
        "agn reverberation mapping": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "gp model": {
        "predictive distribution": 11,
        "minimize function": 8,
        "gp object": 6,
        "posterior distribution": 6,
        "time delays": 6,
        "optimization": 5,
        "neg log likelihood": 5,
        "ball park values": 3,
        "white noise standard deviation": 3,
        "compute method": 3,
        "covariance matrix": 3,
        "george tutorial": 3,
        "neg log likelihood function": 3,
        "logarithms": 3,
        "log parameters": 3,
        "likelihood": 3,
        "maxim": 3,
        "parameter vector": 3,
        "grid locations": 3,
        "predictive mean": 3,
        "confidence intervals": 3,
        "the": 3,
        "emcee": 3,
        "gradient functions": 3,
        "agn reverberation mapping": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "math module": {
        "math module": 22,
        "image function": 14,
        "web pages": 14,
        "arithmetic operators": 12,
        "pi": 10,
        "natural logarithm": 10,
        "donald knuth": 10,
        "string method lower": 10,
        "wolfram mathworld": 8,
        "modules": 8,
        "sine function": 8,
        "square brackets": 6,
        "lists": 4
    },
    "scikit learn": {
        "knn model": 32,
        "scaler": 10,
        "predict method": 10,
        "scaling": 9,
        "confusion matrix": 8,
        "trainingset": 3,
        "mlp": 3,
        "gridsearchcv": 3,
        "unnormalized probabilities": 2,
        "conditional probability": 2,
        "confusion matrices": 2,
        "grid model": 2,
        "mnist": 1,
        "testing arrays": 1,
        "true class labels": 1,
        "istic regression": 1,
        "normalized distribution": 1,
        "multiclass": 1,
        "class label": 1,
        "normalizing factor": 1,
        "unnormalized probability": 1,
        "intermediate vector": 1,
        "datapoint": 1,
        "ifcation neural network": 1,
        "derive gradient equations": 1,
        "grad": 1,
        "bias parameters": 1,
        "ients": 1,
        "gradient calculations": 1,
        "gradient computations": 1,
        "gradient vectors": 1,
        "maximum points": 1,
        "likelihood function": 1,
        "stochastic gradient descent": 1,
        "validation": 1,
        "sgd iterations": 1,
        "visualize weights": 1,
        "true class label": 1,
        "highest probability": 1,
        "multilayer perceptron": 1,
        "neural network": 1,
        "probability normalizing factor": 1,
        "multiclass logistic regression model": 1,
        "sigmoid activation function": 1,
        "logistic regression classifier": 1,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "vectorized implementation": 1,
        "working mlp": 1,
        "decision function": 1,
        "weights": 1,
        "hidden layer": 1,
        "non-linear activation function": 1,
        "gaussian": 1,
        "misclassifications": 1,
        "convolutional networks": 1,
        "mlp model": 1,
        "test": 1,
        "mis": 1
    },
    "advanced crash course": {
        "recursion": 12,
        "jupyter": 8,
        "lambdas": 7,
        "anonymous functions": 7,
        "color channels": 7,
        "mathematical expressions": 5,
        "rocket icon": 5,
        "loops": 5,
        "ellipsis": 5,
        "code icon": 5,
        "double100": 5,
        "integers": 5,
        "numpy library": 4,
        "docs": 4,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "human eye": 3,
        "gaussian blurring function": 3,
        "image": 3,
        "python pic": 2,
        "partial derivative": 2,
        "berkeley bowl": 2,
        "cantaloupes": 2,
        "graph cycles": 2,
        "lambda expression": 2,
        "ellipses": 2,
        "vector dot products": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "fruit prices": 1,
        "final costs": 1,
        "fruit baskets": 1
    },
    "crash course": {
        "recursion": 12,
        "jupyter": 8,
        "lambdas": 7,
        "anonymous functions": 7,
        "color channels": 7,
        "mathematical expressions": 5,
        "rocket icon": 5,
        "loops": 5,
        "ellipsis": 5,
        "code icon": 5,
        "double100": 5,
        "integers": 5,
        "numpy library": 4,
        "docs": 4,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "human eye": 3,
        "gaussian blurring function": 3,
        "image": 3,
        "python pic": 2,
        "partial derivative": 2,
        "berkeley bowl": 2,
        "cantaloupes": 2,
        "graph cycles": 2,
        "lambda expression": 2,
        "ellipses": 2,
        "vector dot products": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "fruit prices": 1,
        "final costs": 1,
        "fruit baskets": 1
    },
    "cs": {
        "iloc": 9,
        "dfcars": 6,
        "listiness property": 6,
        "listiness": 4,
        "rear axle ratio": 3,
        "horsepower": 2,
        "displacement": 2,
        "biometrics": 2,
        "multiple regression models": 2,
        "automobile design": 2,
        "forward gears": 2,
        "carburetors": 2,
        "fuel consumption": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "dataframe structure": 2,
        "automobile data": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "boolean variable": 1,
        "ordered interpretation": 1,
        "cylinders": 1,
        "categorical data": 1,
        "dtypes attribute": 1,
        "op": 1,
        "garbage collector": 1,
        "functional programming": 1,
        "h": 1,
        "spark": 1,
        "global matplotlib plotting": 1,
        "seaborn package": 1,
        "notebook": 1,
        "frequency distribution": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "gene expression quantification": {
        "genes": 9,
        "jointplot": 9,
        "expressed genes": 8,
        "featurecounts": 6,
        "row names": 5,
        "s10 sample kallisto file": 5,
        "kallisto file": 5,
        "expression data": 5,
        "logged values": 5,
        "statistical function": 4,
        "spearman": 4,
        "non-linear correlation": 4,
        "rna": 4,
        "syntax": 4,
        "gene lengths": 4,
        "regular multiplication": 4,
        "log2 tpm": 4,
        "pm": 4,
        "fpkm": 4,
        "tpm": 4,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "gene id version number": 1,
        "gencode": 1
    },
    "pearson correlation": {
        "genes": 9,
        "jointplot": 9,
        "expressed genes": 8,
        "featurecounts": 6,
        "row names": 5,
        "s10 sample kallisto file": 5,
        "kallisto file": 5,
        "expression data": 5,
        "logged values": 5,
        "statistical function": 4,
        "spearman": 4,
        "non-linear correlation": 4,
        "rna": 4,
        "syntax": 4,
        "gene lengths": 4,
        "regular multiplication": 4,
        "log2 tpm": 4,
        "pm": 4,
        "fpkm": 4,
        "tpm": 4,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "gene id version number": 1,
        "gencode": 1
    },
    "sequence alignment map": {
        "genes": 9,
        "jointplot": 9,
        "expressed genes": 8,
        "featurecounts": 6,
        "row names": 5,
        "s10 sample kallisto file": 5,
        "kallisto file": 5,
        "expression data": 5,
        "logged values": 5,
        "statistical function": 4,
        "spearman": 4,
        "non-linear correlation": 4,
        "rna": 4,
        "syntax": 4,
        "gene lengths": 4,
        "regular multiplication": 4,
        "log2 tpm": 4,
        "pm": 4,
        "fpkm": 4,
        "tpm": 4,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "gene id version number": 1,
        "gencode": 1
    },
    "gene expression quantification strategies": {
        "genes": 9,
        "jointplot": 9,
        "expressed genes": 8,
        "featurecounts": 6,
        "row names": 5,
        "s10 sample kallisto file": 5,
        "kallisto file": 5,
        "expression data": 5,
        "logged values": 5,
        "statistical function": 4,
        "spearman": 4,
        "non-linear correlation": 4,
        "rna": 4,
        "syntax": 4,
        "gene lengths": 4,
        "regular multiplication": 4,
        "log2 tpm": 4,
        "pm": 4,
        "fpkm": 4,
        "tpm": 4,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "gene id version number": 1,
        "gencode": 1
    },
    "binary sam file": {
        "genes": 9,
        "jointplot": 9,
        "expressed genes": 8,
        "featurecounts": 6,
        "row names": 5,
        "s10 sample kallisto file": 5,
        "kallisto file": 5,
        "expression data": 5,
        "logged values": 5,
        "statistical function": 4,
        "spearman": 4,
        "non-linear correlation": 4,
        "rna": 4,
        "syntax": 4,
        "gene lengths": 4,
        "regular multiplication": 4,
        "log2 tpm": 4,
        "pm": 4,
        "fpkm": 4,
        "tpm": 4,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "gene id version number": 1,
        "gencode": 1
    },
    "langauge": {
        "genes": 9,
        "jointplot": 9,
        "expressed genes": 8,
        "featurecounts": 6,
        "row names": 5,
        "s10 sample kallisto file": 5,
        "kallisto file": 5,
        "expression data": 5,
        "logged values": 5,
        "statistical function": 4,
        "spearman": 4,
        "non-linear correlation": 4,
        "rna": 4,
        "syntax": 4,
        "gene lengths": 4,
        "regular multiplication": 4,
        "log2 tpm": 4,
        "pm": 4,
        "fpkm": 4,
        "tpm": 4,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "gene id version number": 1,
        "gencode": 1
    },
    "man correlation": {
        "genes": 9,
        "jointplot": 9,
        "expressed genes": 8,
        "featurecounts": 6,
        "row names": 5,
        "s10 sample kallisto file": 5,
        "kallisto file": 5,
        "expression data": 5,
        "logged values": 5,
        "statistical function": 4,
        "spearman": 4,
        "non-linear correlation": 4,
        "rna": 4,
        "syntax": 4,
        "gene lengths": 4,
        "regular multiplication": 4,
        "log2 tpm": 4,
        "pm": 4,
        "fpkm": 4,
        "tpm": 4,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "gene id version number": 1,
        "gencode": 1
    },
    "base plotting library": {
        "genes": 9,
        "jointplot": 9,
        "expressed genes": 8,
        "featurecounts": 6,
        "row names": 5,
        "s10 sample kallisto file": 5,
        "kallisto file": 5,
        "expression data": 5,
        "logged values": 5,
        "statistical function": 4,
        "spearman": 4,
        "non-linear correlation": 4,
        "rna": 4,
        "syntax": 4,
        "gene lengths": 4,
        "regular multiplication": 4,
        "log2 tpm": 4,
        "pm": 4,
        "fpkm": 4,
        "tpm": 4,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "gene id version number": 1,
        "gencode": 1
    },
    "statistical plotting library": {
        "genes": 9,
        "jointplot": 9,
        "expressed genes": 8,
        "featurecounts": 6,
        "row names": 5,
        "s10 sample kallisto file": 5,
        "kallisto file": 5,
        "expression data": 5,
        "logged values": 5,
        "statistical function": 4,
        "spearman": 4,
        "non-linear correlation": 4,
        "rna": 4,
        "syntax": 4,
        "gene lengths": 4,
        "regular multiplication": 4,
        "log2 tpm": 4,
        "pm": 4,
        "fpkm": 4,
        "tpm": 4,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "gene id version number": 1,
        "gencode": 1
    },
    "maximum": {
        "request rates": 12,
        "cpu": 10,
        "axis variable": 9,
        "total request rate": 9,
        "variable model": 8,
        "exact indices": 6,
        "data wrangling": 6,
        "web request": 6,
        "web server": 6,
        "loaded data": 6,
        "head command": 6,
        "cpu column": 6,
        "constant term": 6,
        "coloumn": 5,
        "hand calculations": 5,
        "median": 5,
        "coefficient": 4,
        "predict method": 3,
        "x matrix": 3,
        "interquartile range": 2,
        "quartiles": 2,
        "request": 2,
        "cpu load": 2,
        "outlier": 1,
        "pandas methods": 1,
        "compute variance": 1,
        "compute standard deviation": 1,
        "width variable": 1
    },
    "dummy variable trap": {
        "helper function": 8,
        "gpa": 8,
        "odds ratio": 4,
        "ucla": 4,
        "admission rate": 4,
        "confidence interval": 4,
        "uncertainty": 4,
        "predicted probability": 4,
        "maximum value": 4,
        "cartesian()": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "prestige": 4,
        "logisticregression": 4,
        "dummified prestige": 4,
        "flight delay prediction": 3,
        "delayed flights": 3,
        "flight status column": 3,
        "predictive analytics": 3,
        "flight statuses": 3,
        "explantory variables": 3,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2,
        "categorical variables": 2,
        "dummified variables": 2,
        "dummy variables": 2,
        "combinatorial explosion": 2,
        "data preprocessing": 2,
        "airport codes": 2,
        "numeric variables": 2,
        "logisticregressioncv": 2,
        "dummy variable predictors": 2,
        "output variable": 2,
        "flight status variable": 2
    },
    "statsmodels function": {
        "helper function": 8,
        "gpa": 8,
        "odds ratio": 4,
        "ucla": 4,
        "admission rate": 4,
        "confidence interval": 4,
        "uncertainty": 4,
        "predicted probability": 4,
        "maximum value": 4,
        "cartesian()": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "prestige": 4,
        "logisticregression": 4,
        "dummified prestige": 4,
        "flight delay prediction": 3,
        "delayed flights": 3,
        "flight status column": 3,
        "predictive analytics": 3,
        "flight statuses": 3,
        "explantory variables": 3,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2,
        "categorical variables": 2,
        "dummified variables": 2,
        "dummy variables": 2,
        "combinatorial explosion": 2,
        "data preprocessing": 2,
        "airport codes": 2,
        "numeric variables": 2,
        "logisticregressioncv": 2,
        "dummy variable predictors": 2,
        "output variable": 2,
        "flight status variable": 2
    },
    "lognormal model": {
        "normal probability plot": 20,
        "adult weights": 10,
        "lognormal model": 10,
        "pareto world": 8,
        "exponential distribution": 7,
        "normal model": 5,
        "adult weight": 5,
        "log weights": 5,
        "pareto model": 5,
        "ccdf": 5,
        "straight": 5,
        "pareto variate": 5,
        "blue man group": 5,
        "stats": 5,
        "analytic distributions": 5,
        "scipy": 5,
        "frozen random variable": 5,
        "pareto distribution": 4,
        "human height": 4,
        "mean height": 4,
        "weibull distribution": 2,
        "cdf": 1,
        "failure analysis": 1,
        "empirical distribution": 1,
        "analytic distribution": 1,
        "random values": 1
    },
    "adult weights": {
        "normal probability plot": 20,
        "adult weights": 10,
        "lognormal model": 10,
        "pareto world": 8,
        "exponential distribution": 7,
        "normal model": 5,
        "adult weight": 5,
        "log weights": 5,
        "pareto model": 5,
        "ccdf": 5,
        "straight": 5,
        "pareto variate": 5,
        "blue man group": 5,
        "stats": 5,
        "analytic distributions": 5,
        "scipy": 5,
        "frozen random variable": 5,
        "pareto distribution": 4,
        "human height": 4,
        "mean height": 4,
        "weibull distribution": 2,
        "cdf": 1,
        "failure analysis": 1,
        "empirical distribution": 1,
        "analytic distribution": 1,
        "random values": 1
    },
    "lognormal disrtribution": {
        "normal probability plot": 20,
        "adult weights": 10,
        "lognormal model": 10,
        "pareto world": 8,
        "exponential distribution": 7,
        "normal model": 5,
        "adult weight": 5,
        "log weights": 5,
        "pareto model": 5,
        "ccdf": 5,
        "straight": 5,
        "pareto variate": 5,
        "blue man group": 5,
        "stats": 5,
        "analytic distributions": 5,
        "scipy": 5,
        "frozen random variable": 5,
        "pareto distribution": 4,
        "human height": 4,
        "mean height": 4,
        "weibull distribution": 2,
        "cdf": 1,
        "failure analysis": 1,
        "empirical distribution": 1,
        "analytic distribution": 1,
        "random values": 1
    },
    "positional arguments": {
        "hamlettext": 22,
        "hamletwords": 12,
        "ate": 8,
        "numpy module functions": 8,
        "standard deviation 1": 8,
        "distribution": 8,
        "broadcasting": 8,
        "txt": 8,
        "double": 4,
        "keyword arguments": 4,
        "positional properties": 4,
        "string method count": 4,
        "string method lower": 4,
        "keyword argument": 4,
        "sanity check": 2,
        "unique words": 2,
        "dictionary keys": 2,
        "count method": 2,
        "dictionary comprehension": 2,
        "positional argument": 2,
        "slicing": 2,
        "arange": 2,
        "prime numbers": 2,
        "valueerror": 1,
        "typeerror": 1,
        "while loop": 1,
        "gcd": 1,
        "euclidean algorithm": 1,
        "google books": 1,
        "modulo operator": 1,
        "positive integers": 1,
        "positional arguments": 1,
        "recursion": 1
    },
    "message passing algorithms": {
        "receiving node": 15,
        "marginalizing": 9,
        "marginals": 8,
        "nodes": 7,
        "factor graph": 7,
        "variable nodes": 7,
        "joint distributions": 6,
        "function marginalize": 6,
        "helper functions": 6,
        "factor": 5,
        "factor class": 5,
        "sending": 5,
        "functional programming": 5,
        "1d numpy arrays": 5,
        "tensor representations": 4,
        "numpy broadcasting": 4,
        "inference engine": 4,
        "single forward pass": 3,
        "single backward pass": 3,
        "marginal distribution": 3,
        "local marginals": 3,
        "message passing schemes": 3,
        "message passing algorithms": 2,
        "observed variables": 2,
        "latent variables": 2,
        "probabilistic queries": 2,
        "unobserved nodes": 1,
        "unnormalized log marginal distribution": 1,
        "variable class": 1
    },
    "bernoulli distributed variables": {
        "receiving node": 15,
        "marginalizing": 9,
        "marginals": 8,
        "nodes": 7,
        "factor graph": 7,
        "variable nodes": 7,
        "joint distributions": 6,
        "function marginalize": 6,
        "helper functions": 6,
        "factor": 5,
        "factor class": 5,
        "sending": 5,
        "functional programming": 5,
        "1d numpy arrays": 5,
        "tensor representations": 4,
        "numpy broadcasting": 4,
        "inference engine": 4,
        "single forward pass": 3,
        "single backward pass": 3,
        "marginal distribution": 3,
        "local marginals": 3,
        "message passing schemes": 3,
        "message passing algorithms": 2,
        "observed variables": 2,
        "latent variables": 2,
        "probabilistic queries": 2,
        "unobserved nodes": 1,
        "unnormalized log marginal distribution": 1,
        "variable class": 1
    },
    "marginals": {
        "receiving node": 15,
        "marginalizing": 9,
        "marginals": 8,
        "nodes": 7,
        "factor graph": 7,
        "variable nodes": 7,
        "joint distributions": 6,
        "function marginalize": 6,
        "helper functions": 6,
        "factor": 5,
        "factor class": 5,
        "sending": 5,
        "functional programming": 5,
        "1d numpy arrays": 5,
        "tensor representations": 4,
        "numpy broadcasting": 4,
        "inference engine": 4,
        "single forward pass": 3,
        "single backward pass": 3,
        "marginal distribution": 3,
        "local marginals": 3,
        "message passing schemes": 3,
        "message passing algorithms": 2,
        "observed variables": 2,
        "latent variables": 2,
        "probabilistic queries": 2,
        "unobserved nodes": 1,
        "unnormalized log marginal distribution": 1,
        "variable class": 1
    },
    "product rule": {
        "receiving node": 15,
        "marginalizing": 9,
        "marginals": 8,
        "nodes": 7,
        "factor graph": 7,
        "variable nodes": 7,
        "joint distributions": 6,
        "function marginalize": 6,
        "helper functions": 6,
        "factor": 5,
        "factor class": 5,
        "sending": 5,
        "functional programming": 5,
        "1d numpy arrays": 5,
        "tensor representations": 4,
        "numpy broadcasting": 4,
        "inference engine": 4,
        "single forward pass": 3,
        "single backward pass": 3,
        "marginal distribution": 3,
        "local marginals": 3,
        "message passing schemes": 3,
        "message passing algorithms": 2,
        "observed variables": 2,
        "latent variables": 2,
        "probabilistic queries": 2,
        "unobserved nodes": 1,
        "unnormalized log marginal distribution": 1,
        "variable class": 1
    },
    "banks": {
        "bank": 9,
        "ticker symbols": 8,
        "alphabetical": 8,
        "distplot": 8,
        "single data frame": 7,
        "tickers list": 7,
        "column name levels": 6,
        "returns": 6,
        "empty": 6,
        "bank stock ticker": 6,
        "returns column": 6,
        "close column": 6,
        "pairplot": 6,
        "returns dataframe": 6,
        "single day returns": 6,
        "worst": 6,
        "morgan stanley": 5,
        "close price": 5,
        "ly": 3,
        "visualization libraries": 3,
        "cufflinks": 3,
        "heatmap": 2,
        "bank of america": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "bollinger band plot": 1
    },
    "symbol": {
        "bank": 9,
        "ticker symbols": 8,
        "alphabetical": 8,
        "distplot": 8,
        "single data frame": 7,
        "tickers list": 7,
        "column name levels": 6,
        "returns": 6,
        "empty": 6,
        "bank stock ticker": 6,
        "returns column": 6,
        "close column": 6,
        "pairplot": 6,
        "returns dataframe": 6,
        "single day returns": 6,
        "worst": 6,
        "morgan stanley": 5,
        "close price": 5,
        "ly": 3,
        "visualization libraries": 3,
        "cufflinks": 3,
        "heatmap": 2,
        "bank of america": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "bollinger band plot": 1
    },
    "morgan stanley": {
        "bank": 9,
        "ticker symbols": 8,
        "alphabetical": 8,
        "distplot": 8,
        "single data frame": 7,
        "tickers list": 7,
        "column name levels": 6,
        "returns": 6,
        "empty": 6,
        "bank stock ticker": 6,
        "returns column": 6,
        "close column": 6,
        "pairplot": 6,
        "returns dataframe": 6,
        "single day returns": 6,
        "worst": 6,
        "morgan stanley": 5,
        "close price": 5,
        "ly": 3,
        "visualization libraries": 3,
        "cufflinks": 3,
        "heatmap": 2,
        "bank of america": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "bollinger band plot": 1
    },
    "goldman sachs": {
        "bank": 9,
        "ticker symbols": 8,
        "alphabetical": 8,
        "distplot": 8,
        "single data frame": 7,
        "tickers list": 7,
        "column name levels": 6,
        "returns": 6,
        "empty": 6,
        "bank stock ticker": 6,
        "returns column": 6,
        "close column": 6,
        "pairplot": 6,
        "returns dataframe": 6,
        "single day returns": 6,
        "worst": 6,
        "morgan stanley": 5,
        "close price": 5,
        "ly": 3,
        "visualization libraries": 3,
        "cufflinks": 3,
        "heatmap": 2,
        "bank of america": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "bollinger band plot": 1
    },
    "tick": {
        "bank": 9,
        "ticker symbols": 8,
        "alphabetical": 8,
        "distplot": 8,
        "single data frame": 7,
        "tickers list": 7,
        "column name levels": 6,
        "returns": 6,
        "empty": 6,
        "bank stock ticker": 6,
        "returns column": 6,
        "close column": 6,
        "pairplot": 6,
        "returns dataframe": 6,
        "single day returns": 6,
        "worst": 6,
        "morgan stanley": 5,
        "close price": 5,
        "ly": 3,
        "visualization libraries": 3,
        "cufflinks": 3,
        "heatmap": 2,
        "bank of america": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "bollinger band plot": 1
    },
    "wells fargo": {
        "bank": 9,
        "ticker symbols": 8,
        "alphabetical": 8,
        "distplot": 8,
        "single data frame": 7,
        "tickers list": 7,
        "column name levels": 6,
        "returns": 6,
        "empty": 6,
        "bank stock ticker": 6,
        "returns column": 6,
        "close column": 6,
        "pairplot": 6,
        "returns dataframe": 6,
        "single day returns": 6,
        "worst": 6,
        "morgan stanley": 5,
        "close price": 5,
        "ly": 3,
        "visualization libraries": 3,
        "cufflinks": 3,
        "heatmap": 2,
        "bank of america": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "bollinger band plot": 1
    },
    "stock information": {
        "bank": 9,
        "ticker symbols": 8,
        "alphabetical": 8,
        "distplot": 8,
        "single data frame": 7,
        "tickers list": 7,
        "column name levels": 6,
        "returns": 6,
        "empty": 6,
        "bank stock ticker": 6,
        "returns column": 6,
        "close column": 6,
        "pairplot": 6,
        "returns dataframe": 6,
        "single day returns": 6,
        "worst": 6,
        "morgan stanley": 5,
        "close price": 5,
        "ly": 3,
        "visualization libraries": 3,
        "cufflinks": 3,
        "heatmap": 2,
        "bank of america": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "bollinger band plot": 1
    },
    "python objectives": {
        "outlier detection": 7,
        "unsupervised learning algorithms": 7,
        "matrix decomposition": 7,
        "linear models": 7,
        "density estimation": 7,
        "unsupervised learning": 7,
        "nearest neighbors": 7,
        "machine learning library": 7,
        "support vector machines": 7,
        "predictive models": 7,
        "learn": 7,
        "tutorial": 7,
        "scikit-learn": 7,
        "titanic survival dataset": 7,
        "sklearn library": 7,
        "categorical variables": 7,
        "exploratory data analysis": 7,
        "age": 7,
        "numerical variables": 7
    },
    "predictive decisiontreeclassifier model": {
        "outlier detection": 7,
        "unsupervised learning algorithms": 7,
        "matrix decomposition": 7,
        "linear models": 7,
        "density estimation": 7,
        "unsupervised learning": 7,
        "nearest neighbors": 7,
        "machine learning library": 7,
        "support vector machines": 7,
        "predictive models": 7,
        "learn": 7,
        "tutorial": 7,
        "scikit-learn": 7,
        "titanic survival dataset": 7,
        "sklearn library": 7,
        "categorical variables": 7,
        "exploratory data analysis": 7,
        "age": 7,
        "numerical variables": 7
    },
    "height data": {
        "values": 14,
        "cs data": 12,
        "average heights": 8,
        "alpha value": 8,
        "statistical test": 8,
        "significance": 8,
        "women": 8,
        "cogsci": 8,
        "compsci": 8,
        "majors": 8,
        "average height values": 6,
        "pivot table": 6,
        "confounding variable": 6,
        "ordinary least squares": 6,
        "linear models": 6,
        "design matrices": 6,
        "patsy": 6
    },
    "featurecounts": {
        "featurecounts": 16,
        "gene ids": 9,
        "split()": 6,
        "ids": 6,
        "coding region": 6,
        "function map": 6,
        "gene names": 6,
        "duplicate gene ids": 6,
        "align": 6,
        "kallisto log": 6,
        "spearman correlation": 6,
        "fpkm": 5,
        "gene lengths": 4,
        "regular multiplication": 4,
        "log2 tpm": 4,
        "pm": 4,
        "tpm": 4,
        "gene id version number": 4,
        "gencode": 4,
        "ode mouse v8": 3,
        "kallisto": 3,
        "star": 3,
        "standard deviations": 3,
        "gene ontology website": 1,
        "ontology enrichment": 1,
        "gene ontology enrichment": 1,
        "gene expression": 1,
        "nonzero differences": 1,
        "gencode ids": 1,
        "ensembl ids": 1,
        "immune cell": 1
    },
    "word counting": {
        "generator function": 36,
        "word counts": 12,
        "word counting": 11,
        "tokenization": 11,
        "natural language": 9,
        "token": 9,
        "natural language processing": 8,
        "stop words": 8,
        "tokens": 8,
        "sorted function": 4,
        "sorted word counts": 4,
        "file io": 3,
        "memory consumption": 3,
        "filenames": 3,
        "with statement": 3
    },
    "total request rate": {
        "total request rate": 18,
        "constant term": 18,
        "cpu": 12,
        "coefficient": 12,
        "multiple linear regression": 10,
        "predict method": 9,
        "x matrix": 9,
        "request": 6,
        "cpu load": 6,
        "average cpu usage": 4,
        "single linear regression": 4,
        "anomaly detection": 4,
        "width parameter": 4,
        "width variable": 3,
        "page views data": 2,
        "multiple features": 2,
        "confidance intervals": 2,
        "lassocv": 2,
        "gaussianprocess": 2,
        "ridgecv": 2
    },
    "word vectors": {
        "word vector": 10,
        "vocab": 8,
        "word2idx": 6,
        "word vectors": 5,
        "count value": 4,
        "dictionary comprehension": 4,
        "review data set": 4,
        "learning rate loss": 4,
        "training method": 4,
        "network error": 4,
        "activation function": 4,
        "hidden layers": 4,
        "batch size": 4,
        "10000 element long vectors": 4,
        "stochastic gradient descent": 4,
        "connected layer": 4,
        "animals": 4,
        "horse": 4,
        "lower case characters": 2,
        "pandas library": 2,
        "word frequency": 2,
        "review data": 2,
        "frame": 2,
        "key error": 2,
        "vocab dictionary": 2,
        "word2idx dictionary": 2,
        "function": 2,
        "hyperparameters": 2,
        "tflearn": 2,
        "network performance": 2,
        "test sets": 2,
        "softmax activation function": 2,
        "validation": 2,
        "tokens": 2,
        "python dict": 2,
        "wordvecs": 2,
        "ndarray word vectors": 2,
        "np": 2,
        "string names": 2,
        "imports": 1,
        "english model": 1,
        "default english corpus": 1,
        "spacy": 1
    },
    "matrix operations": {
        "bfs": 10,
        "breadth first search": 8,
        "ica": 7,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "kurtosis": 3,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3,
        "dist array": 3,
        "prev array": 3,
        "depth first search": 3,
        "demixing matrices": 2,
        "connected components": 2,
        "priors": 1,
        "symmetric": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "adjacency matrix": 1,
        "algebraic connectivity": 1,
        "laplacian matrix": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "ica": {
        "ica": 14,
        "integral calculator": 12,
        "numerical approximation": 12,
        "exact expression": 12,
        "gaussian random variable": 12,
        "peakedness": 12,
        "wolfram alpha": 12,
        "online service": 12,
        "kurtosis": 6,
        "demixing matrices": 4,
        "priors": 2,
        "symmetric": 2,
        "generated signals": 2,
        "recovered audio sources": 2,
        "normalization constant": 2,
        "sound clip": 2,
        "ambient sounds": 2,
        "gamma": 2,
        "ma": 2,
        "gaussian distributed": 2,
        "audio signals": 2
    },
    "feature extraction": {
        "complexity parameter": 7,
        "ocr": 6,
        "test set error": 5,
        "validation error": 5,
        "best fit model": 4,
        "test risk": 4,
        "validation": 4,
        "text frequency analysis": 3,
        "text processing": 3,
        "optical character recognition": 3,
        "image processing": 3,
        "descriptive analytics": 3,
        "scanned restaurant menu": 3,
        "data preparation": 3,
        "command prompt": 3,
        "tesseract library": 3,
        "reading errors": 3,
        "tesseract": 3,
        "validation set error": 3,
        "hypothesis set": 3,
        "polynomial degree": 3,
        "face images": 2,
        "mlp": 2,
        "0th order polynomials": 2,
        "test set errors": 2,
        "hyper": 2,
        "learner": 2,
        "test error": 2,
        "validation set errors": 2,
        "training error": 2,
        "20th order polynomials": 2,
        "narrow networks": 1,
        "wide networks": 1,
        "cnn": 1,
        "pooling layer": 1,
        "convolutional layer": 1,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1,
        "random splits": 1,
        "prediction error": 1,
        "multiple": 1,
        "validation process": 1,
        "validation errors": 1,
        "sine curve": 1,
        "hypothesis space": 1,
        "kfold": 1,
        "fold errors": 1,
        "dual problem": 1,
        "wildly behaving pilynomials": 1,
        "lagrange multipliers": 1,
        "bias": 1,
        "penalty term": 1,
        "processed image": 1
    },
    "list comprehensions": {
        "list comprehensions": 26,
        "breadth first search": 8,
        "inner loop": 8,
        "outer loop": 8,
        "bfs": 7,
        "assertion test": 6,
        "test case": 6,
        "hashtags": 6,
        "vertex names": 4,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "map()": 4,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3,
        "map function": 3,
        "double for loop": 2,
        "nested list": 2,
        "functional programming": 2,
        "long words": 2,
        "return value": 2,
        "filter()": 1
    },
    "learning rate": {
        "ica": 7,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "word vectors": 4,
        "word vector": 4,
        "leadership": 4,
        "kurtosis": 3,
        "nltk": 3,
        "nonempty sentences": 3,
        "demixing matrices": 2,
        "stopwords": 2,
        "tokenized sentences": 2,
        "datahub": 2,
        "follwing code block": 2,
        "word embeddings": 2,
        "empty cells": 2,
        "word relationships": 2,
        "gensim": 2,
        "cosine similarity": 2,
        "president": 2,
        "similarity score": 2,
        "smilarity score": 2,
        "cosine distance": 2,
        "mean vector": 2,
        "vector math": 2,
        "semantics": 2,
        "output vectors": 2,
        "queen": 2,
        "manliness": 2,
        "word vector king": 2,
        "feminine attribute": 2,
        "royalty": 2,
        "standardize x": 2,
        "priors": 1,
        "symmetric": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "subsample dataset": {
        "classification error": 13,
        "prediction path": 12,
        "early stopping conditions": 9,
        "safe loans": 6,
        "intermediate node": 6,
        "tree learning algorithm": 6,
        "validation error": 6,
        "validation data": 6,
        "lowest classification error": 4,
        "learning algorithm": 3,
        "api documentation": 3,
        "graphlab": 3,
        "loanee": 3,
        "binary decision trees": 3,
        "categorical data": 3,
        "binary data": 3,
        "home ownership status": 3,
        "feature columns": 3,
        "error reduction": 3,
        "risky loans": 3,
        "misclassified examples": 3,
        "majority class": 3,
        "minimum node size": 3,
        "minimum error reduction": 3,
        "if condition": 3,
        "tree model": 3,
        "function classify": 3,
        "predicted class": 3,
        "lowest": 2,
        "qu": 1,
        "complexity": 1
    },
    "normalizing term": {
        "beta function": 12,
        "bayesian analysis": 12,
        "counts": 10,
        "beta distribution": 6,
        "computational bayesian exercise": 6,
        "scaling term": 6,
        "math library": 6,
        "probability model": 6,
        "dirchilet distribution": 6,
        "binomial model": 6,
        "election": 6,
        "case study": 6,
        "grand old party": 6,
        "election88": 6,
        "age variable": 5,
        "age": 4,
        "polling data": 4,
        "bush support": 3,
        "groupby method": 3,
        "polling": 1,
        "electoral data": 1,
        "bayesian computation": 1,
        "closed form equation": 1,
        "bayesian formula": 1,
        "binomial distribution": 1,
        "probability": 1,
        "gamma function": 1,
        "gamma funciton": 1,
        "gammafunction": 1
    },
    "historical request rate": {
        "total request rate": 15,
        "request rates": 12,
        "cpu": 10,
        "inspection": 6,
        "data import": 6,
        "data wrangling": 6,
        "web request": 6,
        "web server": 6,
        "loaded data": 6,
        "head command": 6,
        "cpu column": 6,
        "numpy function": 6,
        "constant term": 6,
        "multiple linear regression": 5,
        "coefficient": 4,
        "predict method": 3,
        "x matrix": 3,
        "request": 2,
        "cpu load": 2,
        "average cpu usage": 2,
        "single linear regression": 2,
        "width parameter": 2,
        "multiple features": 1,
        "width variable": 1,
        "confidance intervals": 1,
        "anomaly detection": 1,
        "lassocv": 1,
        "gaussianprocess": 1,
        "ridgecv": 1
    },
    "probabilities": {
        "rmse": 17,
        "sampling distribution": 8,
        "mean birthweight": 6,
        "weights": 6,
        "birth weight": 6,
        "strata": 6,
        "survey": 6,
        "brfss data": 6,
        "log weights": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "residuals": 6,
        "plot percentiles": 6,
        "correlation": 6,
        "compute coefficient of determination": 6,
        "height information": 5,
        "sampling distributions": 5,
        "resampling": 5,
        "confidence interval": 3,
        "standard error": 2,
        "resample rows": 2,
        "mean height": 2,
        "column": 1,
        "finalwt": 1
    },
    "sampling weights": {
        "rmse": 17,
        "sampling distribution": 8,
        "mean birthweight": 6,
        "weights": 6,
        "birth weight": 6,
        "strata": 6,
        "survey": 6,
        "brfss data": 6,
        "log weights": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "residuals": 6,
        "plot percentiles": 6,
        "correlation": 6,
        "compute coefficient of determination": 6,
        "height information": 5,
        "sampling distributions": 5,
        "resampling": 5,
        "confidence interval": 3,
        "standard error": 2,
        "resample rows": 2,
        "mean height": 2,
        "column": 1,
        "finalwt": 1
    },
    "stratified survey design": {
        "rmse": 17,
        "sampling distribution": 8,
        "mean birthweight": 6,
        "weights": 6,
        "birth weight": 6,
        "strata": 6,
        "survey": 6,
        "brfss data": 6,
        "log weights": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "residuals": 6,
        "plot percentiles": 6,
        "correlation": 6,
        "compute coefficient of determination": 6,
        "height information": 5,
        "sampling distributions": 5,
        "resampling": 5,
        "confidence interval": 3,
        "standard error": 2,
        "resample rows": 2,
        "mean height": 2,
        "column": 1,
        "finalwt": 1
    },
    "random data set": {
        "kmeans classifier": 15,
        "centroids": 15,
        "classifiers": 6,
        "svms": 6,
        "knn": 6,
        "covariance": 6,
        "gaussian distribution": 6,
        "random initialization": 5,
        "km": 5,
        "cluster centers": 5,
        "marker types": 5,
        "syntax": 5,
        "initial centroid seeds": 5,
        "kmeans": 5,
        "target attributes": 4,
        "petal width": 4,
        "zip function": 4,
        "label parameter": 4,
        "marker colors": 4,
        "species": 4,
        "iris data set": 4,
        "predicted clusters": 1,
        "true clusters": 1,
        "unsupervised learning": 1,
        "silhouette coefficient": 1,
        "kmeans clusterer": 1
    },
    "harvard university": {
        "packages": 9,
        "predictors": 8,
        "factor variables": 7,
        "exhaustive feature search": 7,
        "collinearity issues": 7,
        "variable selection function": 7,
        "datatypes": 7,
        "cs109 repo": 7,
        "ridge regression": 5,
        "age": 4,
        "sklearn package": 3,
        "testing dataset": 2,
        "data selection": 2,
        "scatterplot": 2,
        "knn": 2,
        "flower type": 2,
        "regression methods": 1,
        "population": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "testing sets": 1,
        "bootstrap": 1,
        "confidence intervals": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "confidence interval": 1,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1,
        "fare predictor": 1,
        "passenger class": 1,
        "precision stats": 1,
        "petal width": 1,
        "virginia flowers": 1,
        "versicolour": 1,
        "petal length": 1,
        "virginica": 1,
        "sepal length": 1,
        "setosa": 1,
        "target": 1,
        "count row": 1,
        "categorical variables": 1,
        "groupby function": 1,
        "mean stats": 1,
        "normalization": 1,
        "pairplot() function": 1,
        "scatterplot matrix": 1,
        "predictor variables": 1
    },
    "modelling": {
        "data collection process": 16,
        "codebook": 16,
        "terrorism": 16,
        "embarkation ports": 8,
        "india": 7,
        "multiple attacks": 5,
        "iraq": 5,
        "missing ages": 4,
        "column mean": 4,
        "missing embarkation ports": 4,
        "embarkation port": 4,
        "ticket number": 4,
        "passenger class": 4,
        "sex": 3,
        "embarked columns": 3,
        "colorbar": 2,
        "women": 2,
        "wealth": 2,
        "age distributions": 2,
        "hypothesis testing": 2,
        "statistical method": 2,
        "internet": 2,
        "statistical hypothesis": 2,
        "null hypothesis": 2,
        "hypothesis test": 2,
        "age": 2,
        "alternative hypothesis": 2
    },
    "word2vec": {
        "nltk": 6,
        "nonempty sentences": 6,
        "word vectors": 6,
        "word vector": 6,
        "leadership": 6,
        "cosine similarity": 4,
        "stopwords": 4,
        "tokenized sentences": 4,
        "datahub": 4,
        "follwing code block": 4,
        "word embeddings": 4,
        "gensim": 4,
        "word2vec model": 3,
        "empty cells": 3,
        "word relationships": 3,
        "president": 3,
        "similarity score": 3,
        "smilarity score": 3,
        "cosine distance": 3,
        "mean vector": 3,
        "vector math": 3,
        "semantics": 3,
        "output vectors": 3,
        "queen": 3,
        "manliness": 3,
        "word vector king": 3,
        "feminine attribute": 3,
        "royalty": 3,
        "standardize x": 3,
        "total frequency": 2,
        "embedding layers": 1,
        "neural network": 1,
        "data preprocessing": 1,
        "integers": 1,
        "maximum review length": 1,
        "feature vector": 1,
        "deep learning networks": 1,
        "cosine similarities": 1,
        "learning rate": 1,
        "continous bag of words model": 1,
        "2vec": 1,
        "word2vec": 1,
        "gensim library": 1,
        "embeddings": 1,
        "movie reviews": 1,
        "code cell": 1
    },
    "standardizing": {
        "pca": 11,
        "covariance matrix": 11,
        "correlation matrix": 11,
        "eigendecomposition": 10,
        "eigenvectors": 9,
        "eigenvalues": 6,
        "projection matrix": 4,
        "computational efficiency": 3,
        "principal components": 3,
        "singular vector decomposition": 3,
        "standard": 2,
        "components": 2,
        "mean vector": 2,
        "numpy cov function": 2,
        "ance matrix": 2,
        "normalized covariance matrix": 2,
        "finance": 2,
        "standardized data": 2,
        "eigenvalue pairs": 2,
        "standardizing": 2,
        "pca implementations": 2,
        "axes": 2,
        "lowest eigenvalues": 2,
        "eigenpairs": 2,
        "explained variance": 2,
        "information": 2,
        "first principal component": 2,
        "second principal component": 2,
        "concatenated top k eigenvectors": 2,
        "maximum variance": 1,
        "machine learning algorithms": 1,
        "computer hardware": 1,
        "linear transformation methods": 1,
        "pattern classification problem": 1,
        "linear discriminant analysis": 1,
        "e": 1,
        "ctors": 1,
        "eigen": 1,
        "petal width": 1,
        "uci machine learning repository": 1,
        "tutorial": 1,
        "petal length": 1,
        "sepal length": 1,
        "python library": 1,
        "uci repository": 1,
        "flower sample": 1,
        "flower classes": 1
    },
    "vector operations": {
        "iloc": 9,
        "numpy functions": 6,
        "dfcars": 6,
        "listiness": 4,
        "readability": 3,
        "computer chips": 3,
        "broadcasting": 3,
        "lists": 3,
        "random numbers": 3,
        "matrix multiplication": 3,
        "mean": 3,
        "datetime objects": 3,
        "one dimensional iteration": 2,
        "idiom": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "booleans": 1,
        "handgun checks": 1,
        "vector operations": 1,
        "long gun background checks": 1,
        "frame": 1,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "series": {
        "exponentially weighted functions": 6,
        "variable name majors": 3,
        "fivethirtyeight": 3,
        "average unemployment rate": 3,
        "matplotlib plots": 3,
        "majors": 3,
        "low wage jobs": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "employment rates": 2,
        "cvlegend": 2,
        "calls dataframe": 2,
        "vertical bar plot": 2,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "women": 1,
        "part time rate": 1,
        "barh plot type": 1,
        "series class": 1,
        "value counts": 1,
        "countplot": 1,
        "seaborn library": 1,
        "countplot method": 1,
        "pandas plot": 1,
        "order parameter": 1,
        "cvdow field": 1,
        "coolindex": 1,
        "noise violation": 1,
        "seaborn plot": 1,
        "total noise violations": 1,
        "noise violation calls": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1,
        "autoregressive model": 1
    },
    "probability distribution": {
        "time delays": 9,
        "neg log likelihood": 5,
        "minimize function": 5,
        "predictive distribution": 5,
        "gp": 5,
        "likelihood function": 4,
        "mcmc": 4,
        "component kernel": 3,
        "gp object": 3,
        "overal kernel": 3,
        "joint model": 3,
        "gradient functions": 3,
        "predictive means": 3,
        "predictive mean": 3,
        "covariance matrix": 3,
        "individual components": 3,
        "agn reverberation mapping": 3,
        "posterior distribution": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "white noise standard deviation": 3,
        "likelihood surface": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "boolean variable": 2,
        "delayed times": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "optimization": 2,
        "gp hps": 2,
        "uncertainty estimates": 2,
        "posterior probability": 2,
        "confidence intervals": 2,
        "posterior function": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1,
        "list comprehensions": 1,
        "partition function": 1,
        "exponential function": 1,
        "parameter vectors": 1,
        "logarithm": 1,
        "list itertools": 1,
        "binary vectors": 1
    },
    "gradient boosted tree classifier": {
        "probability": 9,
        "false positives": 9,
        "gradient boosted trees": 6,
        "false negatives": 6,
        "decision trees": 6,
        "prediction accuracy": 6,
        "multiple decision trees": 5,
        "boosted trees": 5,
        "ensemble classifier": 5,
        "predictive power": 5,
        "sample validation data": 5,
        "safe loan": 5,
        "predict method": 5,
        "prediction probabilities": 5,
        "validation data": 4,
        "correctly classified examples": 4,
        "boosted tree model": 3,
        "learned": 3,
        "boosted trees model": 3,
        "decision tree model": 3,
        "probability predictions": 3,
        "probabilities": 3,
        "prediction probability": 3,
        "tree models": 2,
        "classification error": 2,
        "training errors": 2,
        "check": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation error": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1
    },
    "preprocessing": {
        "complexity parameter": 7,
        "ocr": 6,
        "test set error": 5,
        "validation error": 5,
        "best fit model": 4,
        "test risk": 4,
        "validation": 4,
        "text frequency analysis": 3,
        "text processing": 3,
        "optical character recognition": 3,
        "image processing": 3,
        "descriptive analytics": 3,
        "scanned restaurant menu": 3,
        "data preparation": 3,
        "command prompt": 3,
        "tesseract library": 3,
        "reading errors": 3,
        "tesseract": 3,
        "validation set error": 3,
        "hypothesis set": 3,
        "polynomial degree": 3,
        "bar plot": 2,
        "0th order polynomials": 2,
        "test set errors": 2,
        "hyper": 2,
        "learner": 2,
        "test error": 2,
        "validation set errors": 2,
        "training error": 2,
        "20th order polynomials": 2,
        "exploratory data analysis": 1,
        "deceased passengers": 1,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1,
        "random splits": 1,
        "prediction error": 1,
        "multiple": 1,
        "validation process": 1,
        "validation errors": 1,
        "sine curve": 1,
        "hypothesis space": 1,
        "kfold": 1,
        "fold errors": 1,
        "dual problem": 1,
        "wildly behaving pilynomials": 1,
        "lagrange multipliers": 1,
        "bias": 1,
        "penalty term": 1,
        "processed image": 1
    },
    "correlation matrix": {
        "correlation matrix": 13,
        "pca": 8,
        "eigenvectors": 8,
        "covariance matrix": 8,
        "eigendecomposition": 8,
        "eigenvalues": 5,
        "projection matrix": 4,
        "computational efficiency": 3,
        "principal components": 3,
        "singular vector decomposition": 3,
        "ance matrix": 2,
        "normalized covariance matrix": 2,
        "finance": 2,
        "standardized data": 2,
        "eigenvalue pairs": 2,
        "standardizing": 2,
        "pca implementations": 2,
        "axes": 2,
        "lowest eigenvalues": 2,
        "eigenpairs": 2,
        "explained variance": 2,
        "information": 2,
        "first principal component": 2,
        "second principal component": 2,
        "concatenated top k eigenvectors": 2,
        "correlations": 1,
        "linear operations": 1,
        "graph lasso": 1,
        "numpy method": 1,
        "normalized data": 1,
        "diagonal pattern": 1,
        "timeseries": 1,
        "affinity propagation": 1,
        "similarity scores": 1,
        "correlation coefficients": 1,
        "maximum variance": 1,
        "machine learning algorithms": 1,
        "computer hardware": 1,
        "linear transformation methods": 1,
        "pattern classification problem": 1,
        "linear discriminant analysis": 1,
        "e": 1,
        "ctors": 1,
        "eigen": 1,
        "petal width": 1,
        "uci machine learning repository": 1,
        "tutorial": 1,
        "petal length": 1,
        "sepal length": 1,
        "python library": 1,
        "uci repository": 1,
        "flower sample": 1,
        "flower classes": 1,
        "standard": 1,
        "components": 1,
        "mean vector": 1,
        "numpy cov function": 1
    },
    "reading featurecounts": {
        "featurecounts": 14,
        "fpkm": 13,
        "tpm": 8,
        "kallisto output": 4,
        "decimals": 4,
        "read counts": 4,
        "datatype": 4,
        "gene lengths": 4,
        "regular multiplication": 4,
        "log2 tpm": 4,
        "k": 4,
        "pm": 4,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "ode mouse v8": 3,
        "kallisto": 3,
        "star": 3,
        "standard deviations": 3,
        "gene ontology website": 1,
        "ontology enrichment": 1,
        "gene ontology enrichment": 1,
        "gene expression": 1,
        "nonzero differences": 1,
        "gene id version number": 1,
        "gencode": 1,
        "gencode ids": 1,
        "ensembl ids": 1,
        "immune cell": 1
    },
    "default figure size": {
        "cvlegend": 14,
        "offense": 5,
        "compressed files": 4,
        "zip archive": 4,
        "uncompressed files": 4,
        "larceny": 4,
        "barh plot type": 4,
        "value counts": 4,
        "calls dataframe": 4,
        "vertical bar plot": 4,
        "pathlib functionality": 3,
        "crime": 3,
        "groupby method": 3,
        "crime events": 3,
        "pandas plotting": 3,
        "regular bar plot": 3,
        "countplot": 3,
        "cvdow field": 3,
        "seaborn plot": 3,
        "noise violation": 3,
        "noise violation calls": 2,
        "answer3b": 2,
        "zip": 1,
        "data directory": 1,
        "lib": 1,
        "pathlib": 1,
        "glob": 1,
        "cvdow": 1,
        "offense type": 1,
        "case number": 1,
        "numerical columns": 1,
        "type information": 1,
        "ense": 1,
        "seaborn documentation": 1,
        "orn": 1,
        "series": 1,
        "pandas documentation": 1,
        "high level plotting library": 1,
        "matplotlib commands": 1,
        "plotting pandas": 1,
        "data visualization": 1,
        "se": 1,
        "series class": 1,
        "seaborn library": 1,
        "countplot method": 1,
        "pandas plot": 1,
        "order parameter": 1,
        "rotation argument": 1,
        "coolindex": 1,
        "total noise violations": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "fraud": 1,
        "calls reporting": 1,
        "reasoning": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "station metadata": {
        "station metadata": 7,
        "instrument response": 7,
        "international standard exchange format": 6,
        "matching channels": 5,
        "matching stations": 5,
        "waveform requests": 5,
        "instrument response information": 5,
        "instrument correction": 5,
        "narrow angular distance": 4,
        "search criteria": 4,
        "station objects": 3,
        "network objects": 3,
        "channel objects": 3,
        "fdsn stationxml": 3,
        "nested obspy inventory": 3,
        "inventory object": 3,
        "trace objects": 3,
        "ainformation": 3,
        "nested obspy inventory class": 3,
        "event metadata": 3,
        "large datasets": 3,
        "internal repeated webservice requests": 3,
        "local files": 2,
        "filetype": 2,
        "xml": 2,
        "array analysis": 2,
        "estimate travel times": 2,
        "seismic phases": 2,
        "cross correlation routines": 2,
        "event detection": 2,
        "plot ray paths": 2,
        "manipulation filtering": 2,
        "stationxml files": 1,
        "official schema": 1,
        "utcdatetime": 1,
        "timestamps": 1,
        "pling": 1,
        "command line utilities": 1,
        "wave": 1,
        "vertical 1 hz stream": 1,
        "stationxml": 1,
        "ampling": 1,
        "inventory": 1,
        "fdsn server": 1,
        "wildcard": 1,
        "waveform data": 1,
        "channel code": 1
    },
    "tweepy package": {
        "twitter": 12,
        "tweepy": 8,
        "authentication keys": 8,
        "tweetdeck": 5,
        "conda environment": 4,
        "api": 4,
        "twitter developer account": 4,
        "web site": 4,
        "access token secret": 4,
        "access token": 4,
        "consumer secret": 4,
        "developer account": 4,
        "twitter account": 4,
        "templates": 4,
        "coordinates": 4,
        "pandas documentation": 4,
        "null hypothesis": 4,
        "json": 3,
        "string method": 3,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "statistical test": 2,
        "numpy functions": 2,
        "hypothesis test": 2,
        "table": 2,
        "datascience": 2,
        "data 8": 2,
        "twitter web client": 2,
        "trump tweets": 1
    },
    "[": {
        "waveform data": 20,
        "preview plot": 16,
        "mainshock": 11,
        "spectrogram": 11,
        "earthquake": 11,
        "utcdatetime object": 9,
        "main shock": 7,
        "donwloaded data": 7,
        "aftershock": 5,
        "spectrogram plot": 5,
        "peak value": 5,
        "magnitude approximation": 3,
        "network magnitude approximation": 2,
        "large aftershock": 2,
        "dominant event frequency range": 1,
        "characteristic function": 1,
        "station metadata": 1,
        "local noise burst": 1,
        "seismic phase": 1,
        "bandpass filter": 1,
        "transient signals": 1,
        "estimatemagnitude function": 1,
        "aftershock spectrogram": 1
    },
    "obspy docs": {
        "waveform data": 20,
        "preview plot": 16,
        "mainshock": 11,
        "spectrogram": 11,
        "earthquake": 11,
        "utcdatetime object": 9,
        "main shock": 7,
        "donwloaded data": 7,
        "aftershock": 5,
        "spectrogram plot": 5,
        "peak value": 5,
        "magnitude approximation": 3,
        "network magnitude approximation": 2,
        "large aftershock": 2,
        "dominant event frequency range": 1,
        "characteristic function": 1,
        "station metadata": 1,
        "local noise burst": 1,
        "seismic phase": 1,
        "bandpass filter": 1,
        "transient signals": 1,
        "estimatemagnitude function": 1,
        "aftershock spectrogram": 1
    },
    "main shock": {
        "waveform data": 20,
        "preview plot": 16,
        "mainshock": 11,
        "spectrogram": 11,
        "earthquake": 11,
        "utcdatetime object": 9,
        "main shock": 7,
        "donwloaded data": 7,
        "aftershock": 5,
        "spectrogram plot": 5,
        "peak value": 5,
        "magnitude approximation": 3,
        "network magnitude approximation": 2,
        "large aftershock": 2,
        "dominant event frequency range": 1,
        "characteristic function": 1,
        "station metadata": 1,
        "local noise burst": 1,
        "seismic phase": 1,
        "bandpass filter": 1,
        "transient signals": 1,
        "estimatemagnitude function": 1,
        "aftershock spectrogram": 1
    },
    "2d arrays": {
        "iloc": 9,
        "numpy functions": 6,
        "dfcars": 6,
        "listiness property": 6,
        "listiness": 4,
        "lists": 3,
        "random numbers": 3,
        "matrix multiplication": 3,
        "mean": 3,
        "one dimensional iteration": 2,
        "idiom": 2,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "binary features": {
        "classification error": 13,
        "prediction path": 12,
        "early stopping conditions": 9,
        "intermediate node": 6,
        "tree learning algorithm": 6,
        "validation error": 6,
        "validation data": 6,
        "lowest classification error": 4,
        "api documentation": 3,
        "graphlab": 3,
        "loanee": 3,
        "binary decision trees": 3,
        "categorical data": 3,
        "binary data": 3,
        "home ownership status": 3,
        "feature columns": 3,
        "error reduction": 3,
        "risky loans": 3,
        "safe loans": 3,
        "misclassified examples": 3,
        "majority class": 3,
        "minimum node size": 3,
        "minimum error reduction": 3,
        "if condition": 3,
        "tree model": 3,
        "function classify": 3,
        "predicted class": 3,
        "lowest": 2,
        "qu": 1,
        "complexity": 1
    },
    "distributions": {
        "relative": 6,
        "sales data": 6,
        "rows": 6,
        "python indexing": 6,
        "list comprehensions": 6,
        "column names": 6,
        "loops": 6,
        "pregnancy": 4,
        "median remaining time": 4,
        "first marriage": 4,
        "age": 4,
        "sampling weights": 4,
        "divorce": 4,
        "survival curve": 4,
        "sampling error": 4,
        "resampling": 4,
        "distributions": 2,
        "individual cells": 2,
        "plotting function": 2,
        "counting": 2,
        "finger exercise solution": 2,
        "statistics": 1,
        "likelihood function": 1,
        "probability mass function": 1,
        "probability models": 1,
        "beta function": 1,
        "bayesian models": 1,
        "uniform distribution": 1,
        "euler number": 1,
        "tuning parameter": 1,
        "coin flip": 1,
        "bernoulli": 1,
        "bayesian analysis": 1,
        "binomial coefficient": 1,
        "multiplication rule": 1,
        "factorial": 1,
        "finger exercise 1": 1,
        "3 digit numbers": 1,
        "numeral": 1,
        "product rule": 1,
        "combination formula": 1,
        "non-distinct balls": 1,
        "gaussian trick": 1,
        "coin tossing": 1,
        "coin toss": 1,
        "bernoulli scheme": 1,
        "scipy stats library": 1,
        "probability distributions": 1,
        "discrete random variables": 1,
        "discrete distributions": 1,
        "fair coin": 1,
        "stats": 1,
        "100": 1,
        "scipy": 1,
        "coin flips": 1
    },
    "box plots": {
        "registered riders": 7,
        "hist": 5,
        "line plot": 4,
        "bar plot": 4,
        "style sheet": 4,
        "solid green line": 4,
        "indus": 4,
        "housing data": 4,
        "blue dashed line": 4,
        "age": 4,
        "casual riders": 4,
        "plot customizations": 3,
        "tutorial": 3,
        "time range": 3,
        "gran": 3,
        "registered": 3,
        "error bars": 3,
        "seaborn api": 3,
        "bootstrapping": 3,
        "total rider counts": 3,
        "distplot function": 3,
        "grouped histograms": 2,
        "ots": 2,
        "grouped box plots": 2,
        "statistics plotting library": 2,
        "title functions": 2,
        "motivational plots": 2,
        "flowchart": 2,
        "boston data dictionary": 2,
        "rider counts": 2,
        "matplotlib axes object": 2,
        "boxplot function": 2,
        "bikeshare membership": 2,
        "lmplot function": 2,
        "scatterplot": 2,
        "matplotlib commands": 2,
        "bar chart": 2,
        "horizontal bars": 2,
        "hue parameter": 1,
        "lmplot": 1,
        "weekday trips": 1,
        "weekend trips": 1,
        "fare predictor": 1,
        "passenger class": 1,
        "precision stats": 1,
        "predictors": 1,
        "outliers": 1,
        "median": 1
    },
    "cs61a": {
        "recursion": 10,
        "jupyter": 8,
        "color channels": 7,
        "mathematical expressions": 5,
        "rocket icon": 5,
        "loops": 5,
        "lambdas": 5,
        "anonymous functions": 5,
        "ellipsis": 5,
        "code icon": 5,
        "double100": 4,
        "integers": 4,
        "numpy library": 4,
        "docs": 4,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "human eye": 3,
        "gaussian blurring function": 3,
        "image": 3,
        "python pic": 2,
        "partial derivative": 2,
        "berkeley bowl": 2,
        "cantaloupes": 2,
        "vector dot products": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "fruit prices": 1,
        "final costs": 1,
        "fruit baskets": 1
    },
    "data structure": {
        "receiving node": 15,
        "marginalizing": 9,
        "nodes": 7,
        "factor graph": 7,
        "variable nodes": 7,
        "function marginalize": 6,
        "helper functions": 6,
        "factor": 5,
        "factor class": 5,
        "sending": 5,
        "functional programming": 5,
        "1d numpy arrays": 5,
        "tensor representations": 4,
        "numpy broadcasting": 4,
        "inference engine": 4,
        "single forward pass": 3,
        "single backward pass": 3,
        "marginal distribution": 3,
        "local marginals": 3,
        "message passing schemes": 3,
        "message passing algorithms": 2,
        "observed variables": 2,
        "latent variables": 2,
        "marginals": 2,
        "probabilistic queries": 2,
        "unobserved nodes": 1,
        "unnormalized log marginal distribution": 1,
        "variable class": 1
    },
    "unique responses": {
        "string methods": 11,
        "standardize": 11,
        "measurement systems": 11,
        "inches": 11,
        "height data": 11,
        "values": 7,
        "cs data": 6,
        "average heights": 4,
        "alpha value": 4,
        "statistical test": 4,
        "significance": 4,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "majors": 4,
        "average height values": 3,
        "pivot table": 3,
        "confounding variable": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3
    },
    "ynb file": {
        "softplus function": 12,
        "computation time": 7,
        "nearest neighbor algorithm": 5,
        "unlabeled point": 4,
        "nearest neighbor": 4,
        "distance matrix": 4,
        "distance compuation": 4,
        "function pydistance": 4,
        "higher performance": 4,
        "pybatch": 4,
        "correct": 4,
        "distance function": 4,
        "python nearest neighbor search": 4,
        "optimized nearest neighbor function": 4,
        "digit recognition task": 4,
        "speedup": 3,
        "module utils": 3,
        "input vector": 3,
        "high precision float64": 3,
        "input": 3,
        "rounding": 3,
        "inner python loop": 3,
        "optimization": 2,
        "python based implementation": 2,
        "lattice": 2,
        "markov chain": 2,
        "exercise": 2,
        "deterministic results": 2,
        "random seed": 2,
        "simulation": 2,
        "relative frequencies": 2,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1,
        "exercise sheet": 1,
        "partition function": 1,
        "exponential function": 1,
        "parameter vectors": 1,
        "logarithm": 1,
        "list itertools": 1,
        "binary vectors": 1
    },
    "exceptions": {
        "softplus function": 12,
        "computation time": 7,
        "nearest neighbor algorithm": 5,
        "unlabeled point": 4,
        "nearest neighbor": 4,
        "distance matrix": 4,
        "distance compuation": 4,
        "function pydistance": 4,
        "higher performance": 4,
        "pybatch": 4,
        "correct": 4,
        "distance function": 4,
        "python nearest neighbor search": 4,
        "optimized nearest neighbor function": 4,
        "digit recognition task": 4,
        "speedup": 3,
        "module utils": 3,
        "input vector": 3,
        "high precision float64": 3,
        "input": 3,
        "rounding": 3,
        "inner python loop": 3,
        "optimization": 2,
        "python based implementation": 2,
        "lattice": 2,
        "markov chain": 2,
        "exercise": 2,
        "deterministic results": 2,
        "random seed": 2,
        "simulation": 2,
        "relative frequencies": 2,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1,
        "exercise sheet": 1,
        "partition function": 1,
        "exponential function": 1,
        "parameter vectors": 1,
        "logarithm": 1,
        "list itertools": 1,
        "binary vectors": 1
    },
    "cosine similarity": {
        "lsi": 11,
        "newsgroups": 8,
        "docs": 7,
        "lsi space": 6,
        "document vectors": 6,
        "reuters 21578": 5,
        "unstructured text": 5,
        "reuters dataset": 4,
        "series object": 4,
        "mic": 4,
        "m": 4,
        "term frequency inverse document frequency": 4,
        "entropy function": 4,
        "term frequency": 4,
        "inverse document frequency components": 4,
        "tdmatrix": 3,
        "emmed test": 3,
        "document space": 2,
        "final matrix": 2,
        "linalg svd function": 2,
        "sigma matrix": 2,
        "tdm": 2,
        "term space": 2,
        "svd": 2,
        "diagonal matrix": 2,
        "cosine similarity": 2,
        "distance metric": 2,
        "reuters documents": 2,
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "cosine similarity score": 1,
        "predicted category": 1,
        "knn classifier": 1,
        "reuters document categorization": 1,
        "training document": 1,
        "reuters text categorization": 1
    },
    "id": {
        "tinder": 23,
        "tinder users": 11,
        "safe harbor method": 11,
        "population": 5,
        "sslerror": 3,
        "ssl module": 3,
        "https": 3,
        "zip code": 3,
        "productname": 3,
        "suppliers table": 3,
        "error message": 2,
        "unitprice": 2,
        "supplierid": 2,
        "postgresql": 2,
        "sql": 2,
        "aggregate functions": 2,
        "orders table": 2,
        "desc keyword": 1,
        "order by keyword": 1,
        "productid": 1,
        "sql aliases": 1,
        "sql alias syntax": 1,
        "query arguments": 1,
        "database table": 1,
        "alias as": 1,
        "company name": 1,
        "companyname": 1,
        "column": 1,
        "aliases": 1,
        "wildcards": 1,
        "where clause": 1,
        "missing letters": 1,
        "select distinct statement": 1,
        "distinct operator": 1,
        "istinct": 1,
        "lierid": 1,
        "limit operator": 1,
        "limit syntax": 1,
        "sql subqueries": 1,
        "group by statement": 1,
        "group by operator": 1,
        "orderid": 1,
        "unitprice quantity": 1,
        "having operator": 1,
        "having clause": 1,
        "revenue": 1,
        "else statement": 1,
        "united states": 1,
        "date documentation": 1,
        "select orderdate": 1,
        "freight": 1,
        "freightpermonth": 1,
        "shipcountry": 1,
        "average freight cost": 1,
        "women": 1,
        "employees table": 1
    },
    "mp": {
        "mpi": 15,
        "dependent variable": 12,
        "independent variables": 11,
        "linear regression model": 10,
        "dependent variables": 6,
        "multicollinearity": 6,
        "linear relationship": 6,
        "average night light": 6,
        "data preparation": 4,
        "libraries": 4,
        "country mapper": 4,
        "loans data": 4,
        "mpi poverty data": 4,
        "data anomalies": 4,
        "visual distribution": 4,
        "mp": 4,
        "mpi index": 4,
        "country code mapper": 4,
        "test assumptions": 4,
        "avgnightlight": 4,
        "model evaluation": 1
    },
    "double spiral": {
        "linear classifier": 15,
        "colored image": 8,
        "train set": 8,
        "machine learning algorithms": 8,
        "polynomial expansion": 8,
        "non-linear classification": 7,
        "non-linear classifier": 7,
        "polynomials": 7,
        "linear decision boundary": 7,
        "random forests": 7,
        "decision trees": 6,
        "double spiral problem": 6,
        "voting mechanism": 6,
        "matical representation": 6,
        "fine tuning": 5,
        "parameter tuning": 5,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial feature extraction": 1
    },
    "polynomial features": {
        "complexity parameter": 7,
        "ridge regression": 5,
        "test set error": 5,
        "validation error": 5,
        "best fit model": 4,
        "test risk": 4,
        "validation": 4,
        "20th order polynomials": 4,
        "validation set error": 3,
        "hypothesis set": 3,
        "training error": 3,
        "polynomial degree": 3,
        "population": 2,
        "polynomial model": 2,
        "design matrix": 2,
        "polynomial features": 2,
        "vandermonde matrix": 2,
        "polynomialfeatures": 2,
        "toy vector": 2,
        "0th order polynomials": 2,
        "test set errors": 2,
        "hyper": 2,
        "learner": 2,
        "test error": 2,
        "validation set errors": 2,
        "fold errors": 2,
        "dual problem": 2,
        "wildly behaving pilynomials": 2,
        "lagrange multipliers": 2,
        "bias": 2,
        "penalty term": 2,
        "random distribution": 1,
        "predictor": 1,
        "dataset": 1,
        "regression methods": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "testing sets": 1,
        "bootstrap": 1,
        "confidence intervals": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "confidence interval": 1,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "multilinear regression": 1,
        "random splits": 1,
        "prediction error": 1,
        "multiple": 1,
        "validation process": 1,
        "validation errors": 1,
        "sine curve": 1,
        "hypothesis space": 1,
        "kfold": 1
    },
    "page views data": {
        "width parameter": 14,
        "lassocv()": 9,
        "ridgecv()": 9,
        "multiple features": 7,
        "width variable": 7,
        "linear classifier": 7,
        "confidance intervals": 6,
        "lassocv": 6,
        "gaussianprocess()": 5,
        "noise level estimation": 4,
        "validation": 4,
        "colored image": 4,
        "train set": 4,
        "machine learning algorithms": 4,
        "polynomial expansion": 3,
        "non-linear classification": 3,
        "non-linear classifier": 3,
        "polynomials": 3,
        "linear decision boundary": 3,
        "decision trees": 2,
        "double spiral problem": 2,
        "voting mechanism": 2,
        "random forests": 2,
        "matical representation": 2,
        "fine tuning": 1,
        "parameter tuning": 1,
        "anomaly detection": 1,
        "gaussianprocess": 1,
        "ridgecv": 1
    },
    "singular value decomposition": {
        "lsi": 11,
        "newsgroups": 8,
        "docs": 7,
        "lsi space": 6,
        "document vectors": 6,
        "reuters 21578": 5,
        "unstructured text": 5,
        "reuters dataset": 4,
        "series object": 4,
        "mic": 4,
        "m": 4,
        "term frequency inverse document frequency": 4,
        "entropy function": 4,
        "term frequency": 4,
        "inverse document frequency components": 4,
        "tdmatrix": 3,
        "document space": 2,
        "final matrix": 2,
        "linalg svd function": 2,
        "sigma matrix": 2,
        "tdm": 2,
        "term space": 2,
        "svd": 2,
        "diagonal matrix": 2,
        "cosine similarity": 2,
        "distance metric": 2,
        "covariance": 1,
        "eigenvalue problem": 1,
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "cosine similarity score": 1,
        "reuters documents": 1,
        "predicted category": 1,
        "knn classifier": 1,
        "reuters document categorization": 1,
        "training document": 1,
        "reuters text categorization": 1,
        "emmed test": 1
    },
    "python code fragments": {
        "jupyter": 6,
        "numerical differentiation": 6,
        "ellipsis": 4,
        "cod": 4,
        "datadata": 4,
        "double100": 3,
        "integers": 3,
        "function median": 3,
        "median element": 3,
        "numpy data type": 3,
        "math operations": 3,
        "docs": 3,
        "ys": 3,
        "sin": 3,
        "linspace function": 3,
        "np": 3,
        "xs": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "derivative": 3,
        "multidimensional array": 2,
        "matrices": 2,
        "column labels": 2,
        "50x50 array": 2,
        "indexing": 2,
        "x": 2,
        "file1": 2,
        "colors": 2,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "stackoverflow": 1,
        "stack overflow": 1,
        "python list": 1,
        "pixel triplets": 1,
        "image processing": 1,
        "image": 1,
        "image1": 1,
        "string method split": 1,
        "color intensity": 1,
        "text file": 1,
        "expanded image": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1,
        "summer images": 1
    },
    "conditional gaussian distributions": {
        "kernel matrix": 7,
        "covariance matrix": 5,
        "data generating function": 4,
        "regression": 4,
        "periodic data": 4,
        "kernel function": 4,
        "gaussian process regression": 4,
        "univariate problem": 4,
        "training points": 4,
        "data vectors": 3,
        "marginal distribution": 3,
        "vectorization": 3,
        "covariance": 3,
        "inner loop": 3,
        "mean function": 3,
        "model uncertainty": 3,
        "bishop": 3,
        "sample mean functions": 3,
        "dashed line": 3,
        "theta values": 3,
        "uncertainty": 3,
        "predictive distribution": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "generative process": 3,
        "conditional models": 3,
        "hyperparameters": 2,
        "target noise": 2,
        "periodic data generator": 2,
        "2d toy dataset": 2,
        "linearly separable dataset": 2,
        "multivariate gaussian distribution": 2,
        "optimization problem": 1,
        "maximum margin problem": 1,
        "quadratic programming problem": 1,
        "support vectors": 1,
        "quadratic function": 1,
        "svm": 1,
        "decision boundary": 1,
        "lagrange multipliers": 1,
        "inequality constraints": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "partitioned gaussian distributions": {
        "kernel matrix": 7,
        "covariance matrix": 5,
        "data generating function": 4,
        "regression": 4,
        "periodic data": 4,
        "kernel function": 4,
        "gaussian process regression": 4,
        "univariate problem": 4,
        "training points": 4,
        "data vectors": 3,
        "marginal distribution": 3,
        "vectorization": 3,
        "covariance": 3,
        "inner loop": 3,
        "mean function": 3,
        "model uncertainty": 3,
        "bishop": 3,
        "sample mean functions": 3,
        "dashed line": 3,
        "theta values": 3,
        "uncertainty": 3,
        "predictive distribution": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "generative process": 3,
        "conditional models": 3,
        "hyperparameters": 2,
        "target noise": 2,
        "periodic data generator": 2,
        "2d toy dataset": 2,
        "linearly separable dataset": 2,
        "multivariate gaussian distribution": 2,
        "optimization problem": 1,
        "maximum margin problem": 1,
        "quadratic programming problem": 1,
        "support vectors": 1,
        "quadratic function": 1,
        "svm": 1,
        "decision boundary": 1,
        "lagrange multipliers": 1,
        "inequality constraints": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "key": {
        "vectors": 10,
        "orthonormal basis": 8,
        "linear algebra": 6,
        "dot product": 6,
        "2d vector": 4,
        "3d vector": 4,
        "2d array": 4,
        "2d vectors": 4,
        "unit vectors": 4,
        "standard basis": 4,
        "python library": 2,
        "vectors arrows velocity": 2,
        "3d space": 2,
        "finite dimensional euclidean space": 2,
        "vector notation": 2,
        "numpy library": 2,
        "python list": 2,
        "one dimensional array": 2,
        "word dimension": 2,
        "array dimension": 2,
        "vector dimension": 2,
        "1d array": 2,
        "matrix": 2,
        "arrows": 2,
        "inverted": 2,
        "scalar": 2,
        "1d arrays": 2,
        "mathematical notation": 2,
        "inner product": 2,
        "norm": 2,
        "unit vector": 2,
        "arbitrary vector": 2,
        "orthogonal vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "coordinate system": 2,
        "vector": 2,
        "ots": 2,
        "reconstruction": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "matrix notation": 2,
        "excercises": 2
    },
    "test score": {
        "sine function": 14,
        "ridge regression": 14,
        "optimal plot": 14,
        "colored image": 12,
        "train set": 12,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "fine tuning": 6,
        "parameter tuning": 6,
        "width variable": 6,
        "lassocv": 5,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "validation score": {
        "sine function": 14,
        "ridge regression": 14,
        "optimal plot": 14,
        "colored image": 12,
        "train set": 12,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "fine tuning": 6,
        "parameter tuning": 6,
        "width variable": 6,
        "lassocv": 5,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "average error": {
        "sine function": 14,
        "ridge regression": 14,
        "optimal plot": 14,
        "colored image": 12,
        "train set": 12,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "fine tuning": 6,
        "parameter tuning": 6,
        "width variable": 6,
        "lassocv": 5,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "set": {
        "sine function": 14,
        "ridge regression": 14,
        "optimal plot": 14,
        "colored image": 12,
        "train set": 12,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "fine tuning": 6,
        "parameter tuning": 6,
        "width variable": 6,
        "lassocv": 5,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "optimal degree": {
        "sine function": 14,
        "ridge regression": 14,
        "optimal plot": 14,
        "colored image": 12,
        "train set": 12,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "fine tuning": 6,
        "parameter tuning": 6,
        "width variable": 6,
        "lassocv": 5,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "regularisation parameter": {
        "sine function": 14,
        "ridge regression": 14,
        "optimal plot": 14,
        "colored image": 12,
        "train set": 12,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "fine tuning": 6,
        "parameter tuning": 6,
        "width variable": 6,
        "lassocv": 5,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "pandas datasets": {
        "gre score": 13,
        "pandas function": 7,
        "pivot table": 7,
        "bar chart": 7,
        "undergraduate schools": 7,
        "score": 7,
        "map() function": 7,
        "admission": 6,
        "admission rate": 4,
        "confidence interval": 4,
        "uncertainty": 4,
        "helper function": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "gpa": 4,
        "prestige": 4,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "flight delays": {
        "gre score": 13,
        "pandas function": 7,
        "pivot table": 7,
        "bar chart": 7,
        "undergraduate schools": 7,
        "score": 7,
        "map() function": 7,
        "admission": 6,
        "admission rate": 4,
        "confidence interval": 4,
        "uncertainty": 4,
        "helper function": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "gpa": 4,
        "prestige": 4,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "binary classifier": {
        "gre score": 13,
        "pandas function": 7,
        "pivot table": 7,
        "bar chart": 7,
        "undergraduate schools": 7,
        "score": 7,
        "map() function": 7,
        "admission": 6,
        "admission rate": 4,
        "confidence interval": 4,
        "uncertainty": 4,
        "helper function": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "gpa": 4,
        "prestige": 4,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "logistic": {
        "gre score": 13,
        "pandas function": 7,
        "pivot table": 7,
        "bar chart": 7,
        "undergraduate schools": 7,
        "score": 7,
        "map() function": 7,
        "admission": 6,
        "admission rate": 4,
        "confidence interval": 4,
        "uncertainty": 4,
        "helper function": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "gpa": 4,
        "prestige": 4,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "logistic regression classification": {
        "gre score": 13,
        "pandas function": 7,
        "pivot table": 7,
        "bar chart": 7,
        "undergraduate schools": 7,
        "score": 7,
        "map() function": 7,
        "admission": 6,
        "admission rate": 4,
        "confidence interval": 4,
        "uncertainty": 4,
        "helper function": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "gpa": 4,
        "prestige": 4,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "multiple python packages": {
        "gre score": 13,
        "pandas function": 7,
        "pivot table": 7,
        "bar chart": 7,
        "undergraduate schools": 7,
        "score": 7,
        "map() function": 7,
        "admission": 6,
        "admission rate": 4,
        "confidence interval": 4,
        "uncertainty": 4,
        "helper function": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "gpa": 4,
        "prestige": 4,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "graduate school admissions": {
        "gre score": 13,
        "pandas function": 7,
        "pivot table": 7,
        "bar chart": 7,
        "undergraduate schools": 7,
        "score": 7,
        "map() function": 7,
        "admission": 6,
        "admission rate": 4,
        "confidence interval": 4,
        "uncertainty": 4,
        "helper function": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "gpa": 4,
        "prestige": 4,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "binary target variable": {
        "gre score": 13,
        "pandas function": 7,
        "pivot table": 7,
        "bar chart": 7,
        "undergraduate schools": 7,
        "score": 7,
        "map() function": 7,
        "admission": 6,
        "admission rate": 4,
        "confidence interval": 4,
        "uncertainty": 4,
        "helper function": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "gpa": 4,
        "prestige": 4,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "horsepower": {
        "iloc": 9,
        "dfcars": 6,
        "listiness property": 6,
        "horsepower": 4,
        "listiness": 4,
        "null values": 3,
        "horsepower column": 3,
        "internet": 3,
        "unique model years": 3,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "model names": 1,
        "model": 1,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "fuel consumption": {
        "iloc": 9,
        "dfcars": 6,
        "listiness property": 6,
        "horsepower": 4,
        "listiness": 4,
        "null values": 3,
        "horsepower column": 3,
        "internet": 3,
        "unique model years": 3,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "model names": 1,
        "model": 1,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "pandas introduction": {
        "dataframe structures": 16,
        "column names": 8,
        "values method": 8,
        "credit dataset": 5,
        "data manipulation": 4,
        "data structures": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "selection": 4,
        "column headers": 4,
        "slicing": 4,
        "filtering": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "pandas exercises": 4,
        "dataset": 3,
        "numpy method": 2,
        "statistics table": 2,
        "attribute creditamount": 2,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "matplotlib exercises": 1,
        "black coloured markers": 1,
        "font size": 1,
        "age": 1,
        "attributes duration": 1
    },
    "iterative approach": {
        "income": 28,
        "10": 22,
        "log transforming": 22,
        "pandas method": 5,
        "log10": 4,
        "valueerror": 3,
        "zero values": 3,
        "math domain error": 3,
        "standard deviations": 3,
        "diistribution": 3,
        "transformantion": 3,
        "age": 3,
        "age mood": 1,
        "correlationship coefficient": 1,
        "stroger relationships": 1,
        "skewed data distributions": 1,
        "logbase10": 1,
        "incomes": 1,
        "logarithmic transforms": 1,
        "corrs variable": 1,
        "matplotlib visualizations": 1,
        "lambda expression": 1,
        "log transform": 1,
        "geometric means": 1,
        "log10 transformation": 1,
        "pand": 1,
        "log transforming data": 1,
        "log base 10": 1
    },
    "k2sc pipeline": {
        "time delays": 9,
        "neg log likelihood": 5,
        "minimize function": 5,
        "predictive distribution": 5,
        "gp": 5,
        "likelihood function": 4,
        "mcmc": 4,
        "component kernel": 3,
        "gp object": 3,
        "overal kernel": 3,
        "joint model": 3,
        "gradient functions": 3,
        "predictive means": 3,
        "predictive mean": 3,
        "covariance matrix": 3,
        "individual components": 3,
        "agn reverberation mapping": 3,
        "posterior distribution": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "white noise standard deviation": 3,
        "likelihood surface": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "boolean variable": 2,
        "delayed times": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "optimization": 2,
        "gp hps": 2,
        "uncertainty estimates": 2,
        "posterior probability": 2,
        "confidence intervals": 2,
        "posterior function": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "unstructured text processing": {
        "lsi": 11,
        "newsgroups": 8,
        "docs": 7,
        "lsi space": 6,
        "document vectors": 6,
        "reuters 21578": 5,
        "unstructured text": 5,
        "reuters dataset": 4,
        "series object": 4,
        "mic": 4,
        "m": 4,
        "term frequency inverse document frequency": 4,
        "entropy function": 4,
        "term frequency": 4,
        "inverse document frequency components": 4,
        "tdmatrix": 3,
        "document space": 2,
        "final matrix": 2,
        "linalg svd function": 2,
        "sigma matrix": 2,
        "tdm": 2,
        "term space": 2,
        "svd": 2,
        "diagonal matrix": 2,
        "cosine similarity": 2,
        "distance metric": 2,
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "cosine similarity score": 1,
        "reuters documents": 1,
        "predicted category": 1,
        "knn classifier": 1,
        "reuters document categorization": 1,
        "training document": 1,
        "reuters text categorization": 1,
        "emmed test": 1
    },
    "latent semantic indexing": {
        "lsi": 11,
        "newsgroups": 8,
        "docs": 7,
        "lsi space": 6,
        "document vectors": 6,
        "reuters 21578": 5,
        "unstructured text": 5,
        "reuters dataset": 4,
        "series object": 4,
        "mic": 4,
        "m": 4,
        "term frequency inverse document frequency": 4,
        "entropy function": 4,
        "term frequency": 4,
        "inverse document frequency components": 4,
        "tdmatrix": 3,
        "document space": 2,
        "final matrix": 2,
        "linalg svd function": 2,
        "sigma matrix": 2,
        "tdm": 2,
        "term space": 2,
        "svd": 2,
        "diagonal matrix": 2,
        "cosine similarity": 2,
        "distance metric": 2,
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "cosine similarity score": 1,
        "reuters documents": 1,
        "predicted category": 1,
        "knn classifier": 1,
        "reuters document categorization": 1,
        "training document": 1,
        "reuters text categorization": 1,
        "emmed test": 1
    },
    "unstructured text analytics": {
        "lsi": 11,
        "newsgroups": 8,
        "docs": 7,
        "lsi space": 6,
        "document vectors": 6,
        "reuters 21578": 5,
        "unstructured text": 5,
        "reuters dataset": 4,
        "series object": 4,
        "mic": 4,
        "m": 4,
        "term frequency inverse document frequency": 4,
        "entropy function": 4,
        "term frequency": 4,
        "inverse document frequency components": 4,
        "tdmatrix": 3,
        "document space": 2,
        "final matrix": 2,
        "linalg svd function": 2,
        "sigma matrix": 2,
        "tdm": 2,
        "term space": 2,
        "svd": 2,
        "diagonal matrix": 2,
        "cosine similarity": 2,
        "distance metric": 2,
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "cosine similarity score": 1,
        "reuters documents": 1,
        "predicted category": 1,
        "knn classifier": 1,
        "reuters document categorization": 1,
        "training document": 1,
        "reuters text categorization": 1,
        "emmed test": 1
    },
    "term frequency vectors": {
        "lsi": 11,
        "newsgroups": 8,
        "docs": 7,
        "lsi space": 6,
        "document vectors": 6,
        "reuters 21578": 5,
        "unstructured text": 5,
        "reuters dataset": 4,
        "series object": 4,
        "mic": 4,
        "m": 4,
        "term frequency inverse document frequency": 4,
        "entropy function": 4,
        "term frequency": 4,
        "inverse document frequency components": 4,
        "tdmatrix": 3,
        "document space": 2,
        "final matrix": 2,
        "linalg svd function": 2,
        "sigma matrix": 2,
        "tdm": 2,
        "term space": 2,
        "svd": 2,
        "diagonal matrix": 2,
        "cosine similarity": 2,
        "distance metric": 2,
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "cosine similarity score": 1,
        "reuters documents": 1,
        "predicted category": 1,
        "knn classifier": 1,
        "reuters document categorization": 1,
        "training document": 1,
        "reuters text categorization": 1,
        "emmed test": 1
    },
    "pairwise conceptual comparison": {
        "lsi": 11,
        "newsgroups": 8,
        "docs": 7,
        "lsi space": 6,
        "document vectors": 6,
        "reuters 21578": 5,
        "unstructured text": 5,
        "reuters dataset": 4,
        "series object": 4,
        "mic": 4,
        "m": 4,
        "term frequency inverse document frequency": 4,
        "entropy function": 4,
        "term frequency": 4,
        "inverse document frequency components": 4,
        "tdmatrix": 3,
        "document space": 2,
        "final matrix": 2,
        "linalg svd function": 2,
        "sigma matrix": 2,
        "tdm": 2,
        "term space": 2,
        "svd": 2,
        "diagonal matrix": 2,
        "cosine similarity": 2,
        "distance metric": 2,
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "cosine similarity score": 1,
        "reuters documents": 1,
        "predicted category": 1,
        "knn classifier": 1,
        "reuters document categorization": 1,
        "training document": 1,
        "reuters text categorization": 1,
        "emmed test": 1
    },
    "kaggle": {
        "benefits": 19,
        "basepay": 12,
        "overtimepay": 7,
        "lowest paid person": 6,
        "tokenization": 6,
        "spacy": 6,
        "api": 6,
        "token": 5,
        "nlp object": 3,
        "punctuation": 3,
        "urls": 3,
        "stop words": 3,
        "python function": 3,
        "counts keyword argument": 3,
        "word counts": 3,
        "salary": 2,
        "job title string": 2,
        "string representation": 2,
        "subset": 2,
        "row index": 2,
        "data1": 1,
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "log scale": 1,
        "2d scatter plot": 1,
        "line chart": 1,
        "word counting": 1
    },
    "zip files": {
        "zipfile": 9,
        "filenames": 5,
        "python docs": 5,
        "postal code": 5,
        "zipped data": 4,
        "text editor": 4,
        "web browser": 4,
        "datahub": 4,
        "vio dataframes": 4,
        "utilities": 4,
        "sanity checks": 4,
        "data frames": 4,
        "floating point values": 4,
        "testing function": 4,
        "rounding error": 4,
        "businesses file": 4,
        "primary keys": 4,
        "granularity": 4,
        "bus dataframe": 4,
        "zip code": 4,
        "bus data frame": 2,
        "python type command": 2,
        "business table": 2,
        "businesses": 2,
        "missing zip codes": 2,
        "fillna": 1,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "extended zip codes": 1,
        "extended postal codes": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94602": 1,
        "94545": 1,
        "business name": 1,
        "zip": 1,
        "zip codes": 1,
        "search engine": 1,
        "longitude values": 1,
        "longitude": 1,
        "latitude": 1
    },
    "source distribution": {
        "ica": 7,
        "whitened measurements": 6,
        "covariance matrix": 6,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "covariant algorithm": 5,
        "kurtosis": 3,
        "priors": 2,
        "covariance matrices": 2,
        "eigenvalue decomposition": 2,
        "sawtooth": 2,
        "sinewave": 2,
        "bias": 2,
        "scale changes": 2,
        "demixing matrices": 2,
        "ize": 1,
        "normalizing constant": 1,
        "gaussian function": 1,
        "triangle histogram": 1,
        "square wave": 1,
        "xw plot": 1,
        "circular pattern": 1,
        "learning algorithm": 1,
        "matrix inversions": 1,
        "symmetric": 1,
        "signals sawtooth": 1,
        "random wave": 1,
        "historgrams": 1,
        "triangle wave": 1,
        "gray boxes": 1,
        "boxes": 1,
        "diagonal matrix": 1,
        "alogrithm": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "covariance": 1,
        "consistent algorithm": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "whitening process": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "ica learning algorithm": {
        "ica": 7,
        "whitened measurements": 6,
        "covariance matrix": 6,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "covariant algorithm": 5,
        "kurtosis": 3,
        "priors": 2,
        "covariance matrices": 2,
        "eigenvalue decomposition": 2,
        "sawtooth": 2,
        "sinewave": 2,
        "bias": 2,
        "scale changes": 2,
        "demixing matrices": 2,
        "ize": 1,
        "normalizing constant": 1,
        "gaussian function": 1,
        "triangle histogram": 1,
        "square wave": 1,
        "xw plot": 1,
        "circular pattern": 1,
        "learning algorithm": 1,
        "matrix inversions": 1,
        "symmetric": 1,
        "signals sawtooth": 1,
        "random wave": 1,
        "historgrams": 1,
        "triangle wave": 1,
        "gray boxes": 1,
        "boxes": 1,
        "diagonal matrix": 1,
        "alogrithm": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "covariance": 1,
        "consistent algorithm": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "whitening process": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "normalizing constant": {
        "ica": 7,
        "whitened measurements": 6,
        "covariance matrix": 6,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "covariant algorithm": 5,
        "kurtosis": 3,
        "priors": 2,
        "covariance matrices": 2,
        "eigenvalue decomposition": 2,
        "sawtooth": 2,
        "sinewave": 2,
        "bias": 2,
        "scale changes": 2,
        "demixing matrices": 2,
        "ize": 1,
        "normalizing constant": 1,
        "gaussian function": 1,
        "triangle histogram": 1,
        "square wave": 1,
        "xw plot": 1,
        "circular pattern": 1,
        "learning algorithm": 1,
        "matrix inversions": 1,
        "symmetric": 1,
        "signals sawtooth": 1,
        "random wave": 1,
        "historgrams": 1,
        "triangle wave": 1,
        "gray boxes": 1,
        "boxes": 1,
        "diagonal matrix": 1,
        "alogrithm": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "covariance": 1,
        "consistent algorithm": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "whitening process": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "sframes": {
        "probability": 9,
        "gradient boosted trees": 6,
        "false positives": 6,
        "risky loans": 5,
        "learning algorithm": 5,
        "validation data": 5,
        "model parameters": 5,
        "multiple decision trees": 5,
        "boosted trees": 5,
        "ensemble classifier": 5,
        "predictive power": 5,
        "sample validation data": 5,
        "safe loan": 5,
        "predict method": 5,
        "prediction probabilities": 5,
        "false negatives": 3,
        "prediction accuracy": 3,
        "boosted trees model": 3,
        "decision trees": 3,
        "decision tree model": 3,
        "probabilities": 3,
        "prediction probability": 3,
        "tree models": 2,
        "classification error": 2,
        "training errors": 2,
        "check": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1
    },
    "code comments": {
        "probability": 9,
        "gradient boosted trees": 6,
        "false positives": 6,
        "risky loans": 5,
        "learning algorithm": 5,
        "validation data": 5,
        "model parameters": 5,
        "multiple decision trees": 5,
        "boosted trees": 5,
        "ensemble classifier": 5,
        "predictive power": 5,
        "sample validation data": 5,
        "safe loan": 5,
        "predict method": 5,
        "prediction probabilities": 5,
        "false negatives": 3,
        "prediction accuracy": 3,
        "boosted trees model": 3,
        "decision trees": 3,
        "decision tree model": 3,
        "probabilities": 3,
        "prediction probability": 3,
        "tree models": 2,
        "classification error": 2,
        "training errors": 2,
        "check": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1
    },
    "finance": {
        "probability": 9,
        "gradient boosted trees": 6,
        "false positives": 6,
        "risky loans": 5,
        "learning algorithm": 5,
        "validation data": 5,
        "model parameters": 5,
        "multiple decision trees": 5,
        "boosted trees": 5,
        "ensemble classifier": 5,
        "predictive power": 5,
        "sample validation data": 5,
        "safe loan": 5,
        "predict method": 5,
        "prediction probabilities": 5,
        "false negatives": 3,
        "prediction accuracy": 3,
        "boosted trees model": 3,
        "decision trees": 3,
        "decision tree model": 3,
        "probabilities": 3,
        "prediction probability": 3,
        "tree models": 2,
        "classification error": 2,
        "training errors": 2,
        "check": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1
    },
    "jupyter notebook environment": {
        "enron data set": 12,
        "series object": 12,
        "enron dataframe": 12,
        "reshaping series": 12,
        "shell companies": 6,
        "electrical grid failures": 6,
        "enron fraud": 6,
        "frozen concentrated orange juice futures": 6,
        "google sleuthing": 6,
        "enron": 6,
        "blockbuster movies": 6,
        "notebook": 4,
        "magic command": 4,
        "magic function": 4,
        "magic functions": 4,
        "ellipses": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2
    },
    "conda environment": {
        "latent space": 15,
        "mixing coefficients": 10,
        "binarized image": 7,
        "handwriting styles": 5,
        "multivariate bernoulli distribution": 5,
        "misclassifications": 5,
        "data labels": 5,
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "authentication keys": 4,
        "tweepy": 4,
        "api": 4,
        "twitter": 4,
        "coordinates": 4,
        "pandas documentation": 4,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "tweetdeck": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "null hypothesis": 2,
        "hyperparameters": 1
    },
    "python 3": {
        "train set": 7,
        "cross products": 5,
        "polynomial features extraction": 5,
        "optimal weights": 5,
        "multiple linear regression": 5,
        "polynomal expansion function": 5,
        "page views": 4,
        "cpu load": 4,
        "constant term": 4,
        "non-linear regression": 4,
        "web server": 3,
        "random noise": 3,
        "noise level": 3,
        "linear realationship": 2,
        "historical": 2,
        "total page views": 2,
        "coefficient": 2,
        "predict method": 2,
        "selection variable": 2,
        "backups": 2,
        "x matrix": 2,
        "coefficients": 2,
        "page view": 2,
        "random forests": 2,
        "support vector machines": 2,
        "noisy sine function": 2,
        "noise samples": 2,
        "functions": 2,
        "sine function": 2,
        "ridge regression": 2,
        "optimal plot": 2,
        "extrapolation": 2,
        "forecasting techniques": 2,
        "colored image": 2,
        "fine tuning": 2,
        "parameter tuning": 2,
        "anomaly detection": 1,
        "page views data": 1,
        "forecasting": 1,
        "page view data": 1,
        "linear regression model": 1,
        "historical page views": 1,
        "cpu": 1,
        "individual timeseries": 1,
        "individual pageviews": 1,
        "pageview format": 1,
        "total request rate": 1
    },
    "knn": {
        "decision boundaries": 8,
        "knn": 6,
        "data format": 6,
        "kneighborsclassifier": 4,
        "classification rate": 4,
        "predicted class": 4,
        "knn model": 4,
        "pandas manipulations": 4,
        "euclidean distance": 4,
        "knn classifier": 4,
        "distance function": 4,
        "knn algorithm": 4,
        "sklearn package": 3,
        "test data": 3,
        "sk": 3,
        "image": 3,
        "knn process": 3,
        "iris object": 2,
        "feature names": 2,
        "target data": 2,
        "flower class": 2,
        "testing dataset": 2,
        "data selection": 2,
        "scatterplot": 2,
        "packages": 2,
        "function predict": 2,
        "predicted class value": 2,
        "nearestneighborsclassifier": 2,
        "function distance": 2,
        "flower type": 2,
        "petal width": 1,
        "virginia flowers": 1,
        "versicolour": 1,
        "petal length": 1,
        "virginica": 1,
        "sepal length": 1,
        "setosa": 1,
        "target": 1,
        "count row": 1,
        "categorical variables": 1,
        "groupby function": 1,
        "mean stats": 1,
        "normalization": 1,
        "pairplot() function": 1,
        "scatterplot matrix": 1,
        "predictor variables": 1
    },
    "learning": {
        "minority class": 6,
        "machine learning algorithms": 5,
        "gradient descent": 5,
        "euclidean distance": 5,
        "objective functions": 5,
        "feature scaling": 5,
        "statistical summery table": 5,
        "feature distributions": 5,
        "standardize": 5,
        "horsepower": 4,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "null values": 3,
        "horsepower column": 3,
        "internet": 3,
        "unique model years": 3,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "code cell": 2,
        "model names": 1,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1,
        "string type": 1,
        "list comprehensions": 1,
        "str()": 1,
        "iterations": 1,
        "conditionals": 1,
        "model": 1
    },
    "seasonality": {
        "request rates": 12,
        "cpu": 10,
        "axis variable": 9,
        "total request rate": 9,
        "variable model": 8,
        "exact indices": 6,
        "data wrangling": 6,
        "web request": 6,
        "web server": 6,
        "loaded data": 6,
        "head command": 6,
        "cpu column": 6,
        "constant term": 6,
        "coefficient": 4,
        "predict method": 3,
        "x matrix": 3,
        "request": 2,
        "cpu load": 2,
        "linear regression model": 1,
        "width variable": 1
    },
    "keyword arguments": {
        "hamlettext": 22,
        "hamletwords": 12,
        "ate": 8,
        "numpy module functions": 8,
        "standard deviation 1": 8,
        "distribution": 8,
        "broadcasting": 8,
        "txt": 8,
        "double": 4,
        "keyword arguments": 4,
        "positional properties": 4,
        "string method count": 4,
        "string method lower": 4,
        "sanity check": 2,
        "unique words": 2,
        "dictionary keys": 2,
        "count method": 2,
        "dictionary comprehension": 2
    },
    "extrapolation": {
        "width parameter": 12,
        "lassocv()": 9,
        "ridgecv()": 9,
        "linear classifier": 7,
        "multiple features": 6,
        "width variable": 6,
        "gaussianprocess()": 5,
        "confidance intervals": 5,
        "lassocv": 5,
        "noise level estimation": 4,
        "validation": 4,
        "colored image": 4,
        "train set": 4,
        "machine learning algorithms": 4,
        "polynomial expansion": 3,
        "non-linear classification": 3,
        "non-linear classifier": 3,
        "polynomials": 3,
        "linear decision boundary": 3,
        "decision trees": 2,
        "double spiral problem": 2,
        "voting mechanism": 2,
        "random forests": 2,
        "matical representation": 2,
        "fine tuning": 1,
        "parameter tuning": 1
    },
    "forecasting": {
        "width parameter": 12,
        "lassocv()": 9,
        "ridgecv()": 9,
        "linear classifier": 7,
        "multiple features": 6,
        "width variable": 6,
        "gaussianprocess()": 5,
        "confidance intervals": 5,
        "lassocv": 5,
        "noise level estimation": 4,
        "validation": 4,
        "colored image": 4,
        "train set": 4,
        "machine learning algorithms": 4,
        "polynomial expansion": 3,
        "non-linear classification": 3,
        "non-linear classifier": 3,
        "polynomials": 3,
        "linear decision boundary": 3,
        "decision trees": 2,
        "double spiral problem": 2,
        "voting mechanism": 2,
        "random forests": 2,
        "matical representation": 2,
        "fine tuning": 1,
        "parameter tuning": 1
    },
    "ta feng table": {
        "lookup table": 5,
        "delimiter": 4,
        "ordinal": 4,
        "terminal window": 3,
        "postal codes": 3,
        "character encoding": 3,
        "big5": 3,
        "chinese characters": 3,
        "gzip": 3,
        "lookup tables": 3,
        "tafeng table": 3,
        "tafengfull": 3,
        "age classes": 3,
        "residence areas": 3,
        "left join": 3,
        "shopping": 3,
        "shopping trips": 3,
        "log transformation": 3,
        "age lookup table": 2,
        "tafengfull table": 2,
        "age class": 2,
        "temporal trends": 2,
        "customer behavior": 2,
        "cleanliness": 2,
        "distributions": 2,
        "missingness": 2,
        "level": 2,
        "business analyst": 2,
        "basket size": 2,
        "data exploration": 2,
        "purchase data": 2,
        "distribution shops": 2,
        "plotting region": 2,
        "quantile method": 2,
        "log transform": 1,
        "tick marks": 1,
        "symmetrize": 1,
        "carts": 1,
        "log transformed data": 1,
        "point cloud": 1,
        "vertical bands": 1,
        "over plotting": 1,
        "transaction time": 1,
        "transaction times": 1,
        "datetime64": 1,
        "unique customers": 1,
        "customer trends": 1,
        "customer counts": 1,
        "boxplots": 1,
        "holidays": 1,
        "shopping behavior": 1,
        "lunar new year": 1,
        "christmas": 1,
        "line": 1,
        "reference lines": 1
    },
    "minmum": {
        "request rates": 12,
        "cpu": 10,
        "axis variable": 9,
        "total request rate": 9,
        "variable model": 8,
        "exact indices": 6,
        "data wrangling": 6,
        "web request": 6,
        "web server": 6,
        "loaded data": 6,
        "head command": 6,
        "cpu column": 6,
        "constant term": 6,
        "coefficient": 4,
        "predict method": 3,
        "x matrix": 3,
        "request": 2,
        "cpu load": 2,
        "width variable": 1
    },
    "unseen data": {
        "request rates": 12,
        "cpu": 10,
        "axis variable": 9,
        "total request rate": 9,
        "variable model": 8,
        "exact indices": 6,
        "data wrangling": 6,
        "web request": 6,
        "web server": 6,
        "loaded data": 6,
        "head command": 6,
        "cpu column": 6,
        "constant term": 6,
        "coefficient": 4,
        "predict method": 3,
        "x matrix": 3,
        "request": 2,
        "cpu load": 2,
        "width variable": 1
    },
    "shape shifts": {
        "request rates": 12,
        "cpu": 10,
        "axis variable": 9,
        "total request rate": 9,
        "variable model": 8,
        "exact indices": 6,
        "data wrangling": 6,
        "web request": 6,
        "web server": 6,
        "loaded data": 6,
        "head command": 6,
        "cpu column": 6,
        "constant term": 6,
        "coefficient": 4,
        "predict method": 3,
        "x matrix": 3,
        "request": 2,
        "cpu load": 2,
        "width variable": 1
    },
    "hints": {
        "standardize": 11,
        "measurement systems": 11,
        "inches": 11,
        "height data": 11,
        "values": 7,
        "cs data": 6,
        "average heights": 4,
        "alpha value": 4,
        "statistical test": 4,
        "significance": 4,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "majors": 4,
        "average height values": 3,
        "pivot table": 3,
        "confounding variable": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3
    },
    "trailing whitespace": {
        "standardize": 11,
        "measurement systems": 11,
        "inches": 11,
        "height data": 11,
        "values": 7,
        "cs data": 6,
        "average heights": 4,
        "alpha value": 4,
        "statistical test": 4,
        "significance": 4,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "majors": 4,
        "average height values": 3,
        "pivot table": 3,
        "confounding variable": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3
    },
    "document vectors": {
        "lsi": 11,
        "newsgroups": 8,
        "docs": 7,
        "reuters 21578": 5,
        "unstructured text": 5,
        "reuters dataset": 4,
        "series object": 4,
        "mic": 4,
        "m": 4,
        "term frequency inverse document frequency": 4,
        "entropy function": 4,
        "term frequency": 4,
        "inverse document frequency components": 4,
        "tdmatrix": 3,
        "document space": 2,
        "final matrix": 2,
        "linalg svd function": 2,
        "sigma matrix": 2,
        "tdm": 2,
        "term space": 2,
        "svd": 2,
        "diagonal matrix": 2,
        "cosine similarity": 2,
        "distance metric": 2,
        "reuters documents": 2,
        "emmed test": 2,
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "cosine similarity score": 1,
        "lsi space": 1,
        "predicted category": 1,
        "knn classifier": 1,
        "reuters document categorization": 1,
        "training document": 1,
        "reuters text categorization": 1
    },
    "preliminaries": {
        "presidentialelections": 6,
        "elections table": 5,
        "cali table": 4,
        "democratic presidential candidate": 4,
        "logistic function": 3,
        "homework": 3,
        "voting": 3,
        "programming question": 3,
        "test cell": 3,
        "democrat column": 3,
        "percentages": 3,
        "numpy matrix": 2,
        "heaviside function": 2,
        "conditional probability": 2,
        "gradient ascent": 2,
        "fudge factor": 2,
        "signature": 2,
        "elections": 2,
        "dem states column": 2,
        "democratic votes": 2,
        "median carapace": 1,
        "length": 1,
        "lobsters": 1,
        "synthetic training set": 1,
        "synethetic data set": 1,
        "labeled data points": 1,
        "points matrix": 1,
        "numpy column vector labels": 1,
        "mathematical function": 1,
        "linear discriminant function": 1,
        "linear discriminant": 1,
        "aviside function": 1,
        "arithmetic operators": 1,
        "elementwise operations": 1,
        "test code": 1,
        "synthetic data": 1,
        "lobsters example": 1,
        "contour plot": 1,
        "sigmoid elementwise": 1,
        "gaussian distributions": 1,
        "maximum likelihood principle": 1,
        "objective function": 1,
        "arithm": 1,
        "joint probability": 1,
        "bernoulli trial": 1,
        "notational conventions": 1,
        "scalar argument": 1,
        "elementwise logarithm": 1,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "mle": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1,
        "spread function": 1,
        "call to group": 1,
        "democrat spread column": 1,
        "southern states": 1
    },
    "lsi space": {
        "lsi": 11,
        "newsgroups": 8,
        "docs": 7,
        "reuters 21578": 5,
        "unstructured text": 5,
        "reuters dataset": 4,
        "series object": 4,
        "mic": 4,
        "m": 4,
        "term frequency inverse document frequency": 4,
        "entropy function": 4,
        "term frequency": 4,
        "inverse document frequency components": 4,
        "tdmatrix": 3,
        "document space": 2,
        "final matrix": 2,
        "linalg svd function": 2,
        "sigma matrix": 2,
        "tdm": 2,
        "term space": 2,
        "svd": 2,
        "diagonal matrix": 2,
        "cosine similarity": 2,
        "distance metric": 2,
        "emmed test": 2,
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "cosine similarity score": 1,
        "reuters documents": 1,
        "lsi space": 1,
        "predicted category": 1,
        "knn classifier": 1,
        "reuters document categorization": 1,
        "training document": 1,
        "reuters text categorization": 1
    },
    "convolutional neural network": {
        "keras": 8,
        "convolutional neural network": 6,
        "flatten layer": 4,
        "mnist": 3,
        "sanitized traffic sign data": 3,
        "german traffic sign recognition benchmark": 3,
        "dataset": 3,
        "pickle files": 3,
        "traffic signs": 3,
        "feedforward neural network": 3,
        "pickle file": 3,
        "tensorflow": 3,
        "neural network": 3,
        "keras layer": 3,
        "neural network model": 3,
        "layer": 3,
        "max pool": 3,
        "keras sequential model": 3,
        "evaluation() function": 3,
        "activation model": 3,
        "metrics history": 3,
        "sequential model": 3,
        "loss functions": 3,
        "metrics": 3,
        "learning process": 3,
        "fit() function": 3,
        "stochastic gradient descent": 3,
        "training loss": 3,
        "adam optimizer": 2,
        "final neural network": 2,
        "validation accuracy": 2,
        "data processing": 2,
        "ker": 1,
        "traffic sign images": 1,
        "dense layer width": 1,
        "softmax activation function": 1,
        "relu activation function": 1,
        "keras documentation": 1,
        "categorical cross entropy": 1,
        "network compile": 1
    },
    "data mining": {
        "eigenvectors": 6,
        "pca": 6,
        "second principal components": 3,
        "point cloud": 3,
        "succeding component": 3,
        "residual noise": 3,
        "dimensionality reduction": 3,
        "principal component analysis": 3,
        "principal components": 3,
        "2d vectors": 3,
        "linear coefficients": 3,
        "pca space": 3,
        "iris data": 3,
        "plotting function": 2,
        "data matrix x": 2,
        "transaction size": 2,
        "alcohol": 2,
        "iris data set": 2,
        "dbscan": 2,
        "capital gain": 2,
        "bar plot": 2,
        "marital status": 2,
        "smaller visualizations": 1,
        "outlier data point": 1,
        "visualizations": 1,
        "outlier": 1,
        "liquor stores": 1,
        "liquor sales data": 1,
        "convenience stores": 1,
        "grocery stores": 1,
        "mean transaction size": 1,
        "mean": 1,
        "iowa": 1,
        "liquor": 1,
        "gross margin": 1,
        "liquor licensees": 1,
        "total sales dollars": 1,
        "alchohol beer": 1,
        "price": 1,
        "random state": 1,
        "iris": 1,
        "euclidean distance": 1,
        "cluster centers": 1,
        "clustering outcome": 1,
        "petal length": 1,
        "scaling": 1,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1,
        "exploratory data analysis": 1,
        "deceased passengers": 1,
        "capital gain value": 1,
        "pie chart": 1
    },
    "markdown cell": {
        "age": 15,
        "income": 14,
        "log10": 5,
        "student id number": 5,
        "github username": 5,
        "email address": 4,
        "incomes": 4,
        "mean income": 3,
        "income data": 3,
        "exponential decay function": 3,
        "valueerror": 3,
        "zero values": 3,
        "math domain error": 3,
        "standard deviations": 3,
        "diistribution": 3,
        "transformantion": 3,
        "python dictionary comprehension": 2,
        "zip function": 2,
        "outliers": 1,
        "income distribution": 1,
        "age mood": 1,
        "correlationship coefficient": 1,
        "stroger relationships": 1,
        "iterable": 1,
        "enumerate function": 1,
        "anaconda": 1,
        "data science modules": 1,
        "income graph": 1,
        "mathematical calculations": 1,
        "skewed data distributions": 1,
        "logbase10": 1,
        "logarithmic transforms": 1,
        "corrs variable": 1,
        "course id": 1,
        "matplotlib visualizations": 1,
        "lambda expression": 1,
        "log transform": 1,
        "geometric means": 1,
        "log10 transformation": 1,
        "pand": 1,
        "dataset size": 1,
        "log transforming data": 1,
        "log base 10": 1
    },
    "pendulum": {
        "lqr": 8,
        "gains matrix": 4,
        "algebraic riccati equation solution": 4,
        "algebraic ricatti equation": 4,
        "qr": 4,
        "linear algebra operations": 4,
        "api": 4,
        "algebraic riccati equation": 4,
        "feedback control law": 4,
        "quadratic cost function": 4,
        "unstable equilibrium state vector": 4,
        "control system": 4,
        "cost function": 4,
        "r cost matrices": 4,
        "lateral movement": 2,
        "coordinate system": 2,
        "helper functions": 2,
        "stable final state": 2,
        "pendulum": 2,
        "unstable equilibrium state": 2,
        "unstable equilibrium point": 2,
        "unstable equilibrium": 2,
        "feedback": 2,
        "state vector": 2,
        "closed loop full state feedback controller": 2,
        "linear quadratic regulator": 2,
        "optimal feedback gain": 2,
        "lqr solver": 2,
        "linearization": 2,
        "pend": 2,
        "small": 2,
        "angular speed": 2,
        "goal state": 2,
        "fixed goal state": 2,
        "initial values": 2,
        "nonlinear system": 2,
        "fixed end goal state": 2,
        "q": 2
    },
    "international data centers": {
        "international standard exchange format": 9,
        "event metadata": 8,
        "station metadata": 7,
        "local files": 4,
        "fdsn web services": 3,
        "seismological data centers": 3,
        "protocols": 3,
        "nested obspy event class structure": 3,
        "event objects": 3,
        "catalog object": 3,
        "station objects": 3,
        "network objects": 3,
        "channel objects": 3,
        "fdsn stationxml": 3,
        "nested obspy inventory": 3,
        "inventory object": 3,
        "trace objects": 3,
        "ainformation": 3,
        "nested obspy inventory class": 3,
        "filetype": 2,
        "waveform data": 2,
        "xml": 2,
        "stationxml files": 1,
        "official schema": 1,
        "channel codes": 1,
        "seismometer time series": 1,
        "utcdatetime": 1,
        "timestamps": 1,
        "instrument response": 1,
        "digitizer": 1,
        "amplitude": 1,
        "phase response": 1,
        "instrument correction": 1,
        "array analysis": 1,
        "estimate travel times": 1,
        "seismic phases": 1,
        "cross correlation routines": 1,
        "pling": 1,
        "event detection": 1,
        "command line utilities": 1,
        "plot ray paths": 1,
        "manipulation filtering": 1,
        "epicentral range": 1,
        "instrument corrected waveforms": 1,
        "interactive ipython help": 1,
        "obspy documentation": 1,
        "ipython tab completion": 1,
        "stationxml": 1,
        "fdsn server": 1,
        "wildcard": 1,
        "channel code": 1
    },
    "ground shaking": {
        "international standard exchange format": 9,
        "event metadata": 8,
        "station metadata": 7,
        "local files": 4,
        "fdsn web services": 3,
        "seismological data centers": 3,
        "protocols": 3,
        "nested obspy event class structure": 3,
        "event objects": 3,
        "catalog object": 3,
        "station objects": 3,
        "network objects": 3,
        "channel objects": 3,
        "fdsn stationxml": 3,
        "nested obspy inventory": 3,
        "inventory object": 3,
        "trace objects": 3,
        "ainformation": 3,
        "nested obspy inventory class": 3,
        "filetype": 2,
        "waveform data": 2,
        "xml": 2,
        "stationxml files": 1,
        "official schema": 1,
        "channel codes": 1,
        "seismometer time series": 1,
        "utcdatetime": 1,
        "timestamps": 1,
        "instrument response": 1,
        "digitizer": 1,
        "amplitude": 1,
        "phase response": 1,
        "instrument correction": 1,
        "array analysis": 1,
        "estimate travel times": 1,
        "seismic phases": 1,
        "cross correlation routines": 1,
        "pling": 1,
        "event detection": 1,
        "command line utilities": 1,
        "plot ray paths": 1,
        "manipulation filtering": 1,
        "epicentral range": 1,
        "instrument corrected waveforms": 1,
        "interactive ipython help": 1,
        "obspy documentation": 1,
        "ipython tab completion": 1,
        "stationxml": 1,
        "fdsn server": 1,
        "wildcard": 1,
        "channel code": 1
    },
    "waveforms": {
        "international standard exchange format": 9,
        "event metadata": 8,
        "station metadata": 7,
        "local files": 4,
        "fdsn web services": 3,
        "seismological data centers": 3,
        "protocols": 3,
        "nested obspy event class structure": 3,
        "event objects": 3,
        "catalog object": 3,
        "station objects": 3,
        "network objects": 3,
        "channel objects": 3,
        "fdsn stationxml": 3,
        "nested obspy inventory": 3,
        "inventory object": 3,
        "trace objects": 3,
        "ainformation": 3,
        "nested obspy inventory class": 3,
        "filetype": 2,
        "waveform data": 2,
        "xml": 2,
        "stationxml files": 1,
        "official schema": 1,
        "channel codes": 1,
        "seismometer time series": 1,
        "utcdatetime": 1,
        "timestamps": 1,
        "instrument response": 1,
        "digitizer": 1,
        "amplitude": 1,
        "phase response": 1,
        "instrument correction": 1,
        "array analysis": 1,
        "estimate travel times": 1,
        "seismic phases": 1,
        "cross correlation routines": 1,
        "pling": 1,
        "event detection": 1,
        "command line utilities": 1,
        "plot ray paths": 1,
        "manipulation filtering": 1,
        "epicentral range": 1,
        "instrument corrected waveforms": 1,
        "interactive ipython help": 1,
        "obspy documentation": 1,
        "ipython tab completion": 1,
        "stationxml": 1,
        "fdsn server": 1,
        "wildcard": 1,
        "channel code": 1
    },
    "earthquake": {
        "international standard exchange format": 9,
        "event metadata": 8,
        "station metadata": 7,
        "local files": 4,
        "fdsn web services": 3,
        "seismological data centers": 3,
        "protocols": 3,
        "nested obspy event class structure": 3,
        "event objects": 3,
        "catalog object": 3,
        "station objects": 3,
        "network objects": 3,
        "channel objects": 3,
        "fdsn stationxml": 3,
        "nested obspy inventory": 3,
        "inventory object": 3,
        "trace objects": 3,
        "ainformation": 3,
        "nested obspy inventory class": 3,
        "filetype": 2,
        "waveform data": 2,
        "xml": 2,
        "stationxml files": 1,
        "official schema": 1,
        "channel codes": 1,
        "seismometer time series": 1,
        "utcdatetime": 1,
        "timestamps": 1,
        "instrument response": 1,
        "digitizer": 1,
        "amplitude": 1,
        "phase response": 1,
        "instrument correction": 1,
        "array analysis": 1,
        "estimate travel times": 1,
        "seismic phases": 1,
        "cross correlation routines": 1,
        "pling": 1,
        "event detection": 1,
        "command line utilities": 1,
        "plot ray paths": 1,
        "manipulation filtering": 1,
        "epicentral range": 1,
        "instrument corrected waveforms": 1,
        "interactive ipython help": 1,
        "obspy documentation": 1,
        "ipython tab completion": 1,
        "stationxml": 1,
        "fdsn server": 1,
        "wildcard": 1,
        "channel code": 1
    },
    "earthquakes": {
        "international standard exchange format": 9,
        "event metadata": 8,
        "station metadata": 7,
        "local files": 4,
        "fdsn web services": 3,
        "seismological data centers": 3,
        "protocols": 3,
        "nested obspy event class structure": 3,
        "event objects": 3,
        "catalog object": 3,
        "station objects": 3,
        "network objects": 3,
        "channel objects": 3,
        "fdsn stationxml": 3,
        "nested obspy inventory": 3,
        "inventory object": 3,
        "trace objects": 3,
        "ainformation": 3,
        "nested obspy inventory class": 3,
        "filetype": 2,
        "waveform data": 2,
        "xml": 2,
        "stationxml files": 1,
        "official schema": 1,
        "channel codes": 1,
        "seismometer time series": 1,
        "utcdatetime": 1,
        "timestamps": 1,
        "instrument response": 1,
        "digitizer": 1,
        "amplitude": 1,
        "phase response": 1,
        "instrument correction": 1,
        "array analysis": 1,
        "estimate travel times": 1,
        "seismic phases": 1,
        "cross correlation routines": 1,
        "pling": 1,
        "event detection": 1,
        "command line utilities": 1,
        "plot ray paths": 1,
        "manipulation filtering": 1,
        "epicentral range": 1,
        "instrument corrected waveforms": 1,
        "interactive ipython help": 1,
        "obspy documentation": 1,
        "ipython tab completion": 1,
        "stationxml": 1,
        "fdsn server": 1,
        "wildcard": 1,
        "channel code": 1
    },
    "seismometer stations": {
        "international standard exchange format": 9,
        "event metadata": 8,
        "station metadata": 7,
        "local files": 4,
        "fdsn web services": 3,
        "seismological data centers": 3,
        "protocols": 3,
        "nested obspy event class structure": 3,
        "event objects": 3,
        "catalog object": 3,
        "station objects": 3,
        "network objects": 3,
        "channel objects": 3,
        "fdsn stationxml": 3,
        "nested obspy inventory": 3,
        "inventory object": 3,
        "trace objects": 3,
        "ainformation": 3,
        "nested obspy inventory class": 3,
        "filetype": 2,
        "waveform data": 2,
        "xml": 2,
        "stationxml files": 1,
        "official schema": 1,
        "channel codes": 1,
        "seismometer time series": 1,
        "utcdatetime": 1,
        "timestamps": 1,
        "instrument response": 1,
        "digitizer": 1,
        "amplitude": 1,
        "phase response": 1,
        "instrument correction": 1,
        "array analysis": 1,
        "estimate travel times": 1,
        "seismic phases": 1,
        "cross correlation routines": 1,
        "pling": 1,
        "event detection": 1,
        "command line utilities": 1,
        "plot ray paths": 1,
        "manipulation filtering": 1,
        "epicentral range": 1,
        "instrument corrected waveforms": 1,
        "interactive ipython help": 1,
        "obspy documentation": 1,
        "ipython tab completion": 1,
        "stationxml": 1,
        "fdsn server": 1,
        "wildcard": 1,
        "channel code": 1
    },
    "confidence intervals": {
        "sampling distribution": 13,
        "confidence interval": 6,
        "null hypothesis": 6,
        "lognormal distribution": 4,
        "clt": 4,
        "permutation": 4,
        "student t distribution": 4,
        "analytic distribution": 4,
        "central limit theorem": 4,
        "sampling distributions": 3,
        "standard error": 3,
        "estimated mean": 2,
        "arithmetic operations": 2,
        "normal class": 2,
        "normal distributions": 2,
        "normal probability plots": 2,
        "exponential variates": 2,
        "pareto distribution": 2,
        "infinite variance": 2,
        "correlated normal values": 2,
        "random variates": 2,
        "correlated values": 2,
        "probabilities": 2,
        "hypothesistest": 2,
        "cdf": 2,
        "simulation": 2,
        "birth weight": 2,
        "birth weights": 2,
        "multiplicative factors": 2,
        "random value": 2,
        "adult weights": 2,
        "difference in means": 2,
        "confidence intervals": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1,
        "gender gap": 1,
        "student engineering teams": 1,
        "class projects": 1,
        "standard errors": 1
    },
    "function definitions": {
        "bfs": 10,
        "unit tests": 10,
        "breadth first search": 8,
        "spark exercise": 6,
        "list comprehensions": 4,
        "vertex names": 4,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3,
        "dist array": 3,
        "prev array": 3,
        "depth first search": 3,
        "non_duplicates": 3,
        "rdd": 3,
        "cartesian product": 3,
        "line segment": 3,
        "connected components": 2,
        "adjacency matrix": 1,
        "algebraic connectivity": 1,
        "laplacian matrix": 1,
        "collinear points": 1,
        "r": 1,
        "spark rdd api": 1,
        "helper functions": 1,
        "assert statement unit tests": 1
    },
    "ica algorithms": {
        "ica": 7,
        "whitened measurements": 6,
        "covariance matrix": 6,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "covariant algorithm": 5,
        "kurtosis": 3,
        "covariance matrices": 2,
        "eigenvalue decomposition": 2,
        "sawtooth": 2,
        "sinewave": 2,
        "bias": 2,
        "scale changes": 2,
        "demixing matrices": 2,
        "xw plot": 1,
        "circular pattern": 1,
        "learning algorithm": 1,
        "matrix inversions": 1,
        "priors": 1,
        "symmetric": 1,
        "gray boxes": 1,
        "boxes": 1,
        "diagonal matrix": 1,
        "alogrithm": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "covariance": 1,
        "consistent algorithm": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "whitening process": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "dataset": {
        "ridge regression": 5,
        "displacement": 4,
        "acceleration": 4,
        "testing sets": 3,
        "horsepower": 2,
        "cylinders": 2,
        "vertex ids": 2,
        "vertex id": 2,
        "trip duration minutes": 2,
        "regression methods": 1,
        "population": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "bootstrap": 1,
        "confidence intervals": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "confidence interval": 1,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1,
        "tensorflow": 1,
        "neural network": 1,
        "keras layer": 1,
        "neural network model": 1,
        "layer": 1,
        "max pool": 1,
        "keras sequential model": 1,
        "flatten layer": 1,
        "evaluation() function": 1,
        "activation model": 1,
        "metrics history": 1,
        "sequential model": 1,
        "loss functions": 1,
        "metrics": 1,
        "learning process": 1,
        "keras": 1,
        "fit() function": 1,
        "stochastic gradient descent": 1,
        "training loss": 1,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "scatter plot plot": 1,
        "silhouette coefficient": 1,
        "kmeans clusterer": 1,
        "political blogs dataset": 1,
        "sqlite database": 1,
        "schema": 1,
        "maximum value": 1,
        "minimum value": 1,
        "vertex table": 1,
        "sql": 1,
        "test code": 1,
        "sanity check": 1,
        "leaning fields": 1,
        "outdegrees": 1,
        "indegrees": 1,
        "targeturl": 1,
        "sourceurl": 1,
        "targetleaning": 1,
        "pandas data frame": 1,
        "sourceleaning": 1,
        "source vertex": 1,
        "multi layer perceptron": 1,
        "trip duration class": 1,
        "k neighbors classifier": 1,
        "gaussian naive bayes": 1,
        "report classification results": 1,
        "recall": 1,
        "decision tree classifier": 1,
        "predict": 1,
        "aggregate quantities": 1
    },
    "file menu": {
        "presidentialelections": 6,
        "test cell": 5,
        "homework": 5,
        "elections table": 5,
        "ahs": 5,
        "cali table": 4,
        "democratic presidential candidate": 4,
        "voting": 3,
        "programming question": 3,
        "democrat column": 3,
        "percentages": 3,
        "answer cell": 2,
        "nable code cell": 2,
        "automatic tests": 2,
        "automated tests": 2,
        "home burglaries": 2,
        "summer vacation period": 2,
        "adt security systems": 2,
        "burglaries": 2,
        "labor day": 2,
        "memorial day": 2,
        "python code": 2,
        "compound expression": 2,
        "subexpressions": 2,
        "missing expression": 2,
        "elections": 2,
        "dem states column": 2,
        "democratic votes": 2,
        "data file": 2,
        "american housing survey": 2,
        "ahs dataset": 2,
        "housing unit": 2,
        "population column": 2,
        "year column": 2,
        "quantitative data": 2,
        "integer": 2,
        "spread function": 1,
        "call to group": 1,
        "democrat spread column": 1,
        "southern states": 1,
        "world population": 1,
        "standard metropolitan statistical area": 1,
        "join method": 1,
        "smsa": 1,
        "bar chart": 1
    },
    "gradescope": {
        "presidentialelections": 6,
        "test cell": 5,
        "homework": 5,
        "elections table": 5,
        "ahs": 5,
        "cali table": 4,
        "democratic presidential candidate": 4,
        "voting": 3,
        "programming question": 3,
        "democrat column": 3,
        "percentages": 3,
        "answer cell": 2,
        "nable code cell": 2,
        "automatic tests": 2,
        "automated tests": 2,
        "home burglaries": 2,
        "summer vacation period": 2,
        "adt security systems": 2,
        "burglaries": 2,
        "labor day": 2,
        "memorial day": 2,
        "python code": 2,
        "compound expression": 2,
        "subexpressions": 2,
        "missing expression": 2,
        "elections": 2,
        "dem states column": 2,
        "democratic votes": 2,
        "data file": 2,
        "american housing survey": 2,
        "ahs dataset": 2,
        "housing unit": 2,
        "population column": 2,
        "year column": 2,
        "quantitative data": 2,
        "integer": 2,
        "spread function": 1,
        "call to group": 1,
        "democrat spread column": 1,
        "southern states": 1,
        "world population": 1,
        "standard metropolitan statistical area": 1,
        "join method": 1,
        "smsa": 1,
        "bar chart": 1
    },
    "character class": {
        "test sentence": 20,
        "consonants": 8,
        "6": 6,
        "regexes": 6,
        "capital": 5,
        "challenge 7": 4,
        "challenge 6": 4,
        "regular expression": 4,
        "character classes": 4,
        "regular expressions": 4,
        "regex": 4,
        "metacharacters": 4,
        "parentheses": 4,
        "match object": 2,
        "match object instances": 2,
        "pattern object": 2,
        "numeric codes": 2,
        "data entry errors": 2,
        "robots": 2,
        "us phone number": 2,
        "area code": 2,
        "challenge 15": 2,
        "regular expression syntax": 2,
        "challenge 14": 2,
        "challenge 13": 2,
        "uring group skills": 2,
        "non-": 2
    },
    "fpkm": {
        "featurecounts": 12,
        "pm": 8,
        "fpkm": 8,
        "tpm": 8,
        "gene ids": 8,
        "split()": 6,
        "ids": 6,
        "coding region": 6,
        "function map": 6,
        "gene names": 6,
        "duplicate gene ids": 6,
        "align": 6,
        "kallisto log": 6,
        "spearman correlation": 6,
        "gene id version number": 3,
        "gencode": 3
    },
    "missingness": {
        "inclusion indicator": 18,
        "data generating process": 10,
        "pystan": 6,
        "polling data": 5,
        "data scientist": 4,
        "bayesian analysis": 4,
        "pymc": 4,
        "data containers": 2,
        "numpy container": 2,
        "regressions": 2,
        "regression models": 2,
        "classical logistic regression": 2,
        "trained model": 2,
        "numerical data": 2,
        "categorical data": 2,
        "average": 2,
        "random forest": 2,
        "relative performance": 2,
        "knn": 2,
        "statistical exposition": 2,
        "distribution": 2,
        "distributions": 2,
        "pymc model": 2,
        "bayesian logistic regression": 2,
        "bayesian logistic regression form": 2,
        "bernoulli method": 2,
        "univariate logistic regression": 2,
        "sigmoid function": 2,
        "bayesian model": 2,
        "computation segment": 2,
        "mcmc procedure": 2,
        "roc scores": 2,
        "non-bayesian logistic": 2,
        "observable variation": 1
    },
    "wind statistics": {
        "mean windspeeds": 11,
        "bonus question": 9,
        "speeds": 9,
        "ireland": 9,
        "knots": 9,
        "datetime index": 9,
        "2061": 9,
        "year": 9,
        "standard deviations": 9,
        "datetime64": 8,
        "mean windspeed": 5,
        "windspeeds": 4,
        "average windspeed": 4
    },
    "website": {
        "weekday mean": 6,
        "weekend mean": 6,
        "likelihoods": 6,
        "bayesian analysis": 6,
        "bayesian terms": 3,
        "beliefs": 3,
        "likelihood function": 3,
        "standard error": 3,
        "total probability": 3,
        "first hypothesis": 3,
        "second hypothesis": 3,
        "statistical test": 3,
        "probabilities": 3,
        "quotient": 3,
        "confidence interval interpretations": 3,
        "credible interval": 3,
        "credible": 3,
        "matplotlib graph": 3,
        "wait time": 2,
        "nerve pulses": 2,
        "jointplot": 2,
        "testing sets": 2,
        "empirical distribution": 1,
        "random variable": 1,
        "empirical distribution function": 1,
        "nerve pulse data": 1,
        "fomula": 1,
        "probability": 1,
        "cummulative distribution": 1,
        "estimate": 1,
        "finger exercises": 1,
        "bayesian computing library": 1,
        "normal likelihood": 1,
        "ecommerce customers csv file": 1,
        "yearly amount spent columns": 1,
        "time on website": 1,
        "2d hex bin plot": 1,
        "yearly amount spent": 1,
        "correlated feature": 1,
        "linear model plot": 1,
        "linearregression": 1,
        "l": 1,
        "scatterplot": 1,
        "predicted values": 1,
        "mean absolute error": 1,
        "root mean squared error": 1,
        "wikipedia": 1,
        "explained variance score": 1,
        "seaborn distplot": 1,
        "residuals": 1,
        "mobile app": 1,
        "website development": 1
    },
    "word embeddings": {
        "nltk": 6,
        "nonempty sentences": 6,
        "word vectors": 6,
        "word vector": 6,
        "leadership": 6,
        "stopwords": 4,
        "tokenized sentences": 4,
        "datahub": 4,
        "follwing code block": 4,
        "standardize x": 4,
        "word embeddings": 3,
        "empty cells": 3,
        "word relationships": 3,
        "gensim": 3,
        "cosine similarity": 3,
        "president": 3,
        "similarity score": 3,
        "smilarity score": 3,
        "cosine distance": 3,
        "mean vector": 3,
        "vector math": 3,
        "semantics": 3,
        "output vectors": 3,
        "queen": 3,
        "manliness": 3,
        "word vector king": 3,
        "feminine attribute": 3,
        "royalty": 3
    },
    "iris data": {
        "decision boundaries": 8,
        "knn": 4,
        "kneighborsclassifier": 4,
        "classification rate": 4,
        "predicted class": 4,
        "knn model": 4,
        "pandas manipulations": 4,
        "data format": 4,
        "euclidean distance": 4,
        "knn classifier": 4,
        "distance function": 4,
        "knn algorithm": 4,
        "flower class": 2,
        "dbscan": 2,
        "training error": 2,
        "generalization error": 2,
        "cross validation": 2,
        "label array": 2,
        "training classifications": 2,
        "iris set": 2,
        "misclassifications": 2,
        "cv": 2,
        "function predict": 2,
        "predicted class value": 2,
        "nearestneighborsclassifier": 2,
        "function distance": 2,
        "test data": 2,
        "sk": 2,
        "image": 2,
        "knn process": 2,
        "pca": 1,
        "list comprehensions": 1,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "regression": 1,
        "iris data": 1,
        "final classification": 1,
        "supervised machine learning": 1
    },
    "dictionary object": {
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "radial highways": 3,
        "residential land z": 3,
        "weighted distances": 3,
        "charles river dummy variable": 3,
        "rad index": 3,
        "tract bounds river": 3,
        "boston employment centres": 3,
        "descr attribute": 3,
        "non-retail business acres": 3,
        "black": 3,
        "nox nitric oxides concentration": 3,
        "crime rate": 3,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "training error": 2,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2,
        "outlier": 1,
        "test error": 1,
        "root mean squared error": 1,
        "average": 1
    },
    "central limit theorem": {
        "sampling distribution": 11,
        "central limit theorem": 7,
        "clt": 6,
        "null hypothesis": 6,
        "lognormal distribution": 4,
        "random variates": 4,
        "permutation": 4,
        "student t distribution": 4,
        "analytic distribution": 4,
        "sampling distributions": 3,
        "standard error": 3,
        "normal probability plots": 2,
        "exponential variates": 2,
        "pareto distribution": 2,
        "infinite variance": 2,
        "correlated normal values": 2,
        "correlated values": 2,
        "probabilities": 2,
        "hypothesistest": 2,
        "cdf": 2,
        "simulation": 2,
        "birth weight": 2,
        "birth weights": 2,
        "multiplicative factors": 2,
        "random value": 2,
        "adult weights": 2,
        "difference in means": 2,
        "confidence intervals": 2,
        "confidence interval": 2,
        "uniform distribution": 2,
        "gender gap": 1,
        "student engineering teams": 1,
        "class projects": 1,
        "standard errors": 1,
        "statistical modelling": 1,
        "probability distribution": 1,
        "random variable": 1,
        "alternate uniform distribution": 1,
        "uniform2": 1
    },
    "email addresses": {
        "tinder": 23,
        "tinder users": 11,
        "safe harbor method": 11,
        "population": 5,
        "json file": 4,
        "json": 3,
        "zip code": 3,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "tihs dataset": 2,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2,
        "stack overflow": 1,
        "stackoverflow": 1,
        "working email addresses": 1,
        "test cell": 1
    },
    "residence area": {
        "lookup table": 5,
        "terminal window": 3,
        "postal codes": 3,
        "character encoding": 3,
        "big5": 3,
        "chinese characters": 3,
        "gzip": 3,
        "lookup tables": 3,
        "tafeng table": 3,
        "tafengfull": 3,
        "age classes": 3,
        "residence areas": 3,
        "left join": 3,
        "shopping": 3,
        "shopping trips": 3,
        "log transformation": 3,
        "age lookup table": 2,
        "tafengfull table": 2,
        "age class": 2,
        "temporal trends": 2,
        "customer behavior": 2,
        "cleanliness": 2,
        "distributions": 2,
        "missingness": 2,
        "level": 2,
        "business analyst": 2,
        "basket size": 2,
        "data exploration": 2,
        "purchase data": 2,
        "distribution shops": 2,
        "plotting region": 2,
        "quantile method": 2,
        "log transform": 1,
        "tick marks": 1,
        "symmetrize": 1,
        "carts": 1,
        "log transformed data": 1,
        "point cloud": 1,
        "vertical bands": 1,
        "over plotting": 1,
        "transaction time": 1,
        "transaction times": 1,
        "datetime64": 1,
        "unique customers": 1,
        "customer trends": 1,
        "customer counts": 1,
        "boxplots": 1,
        "holidays": 1,
        "shopping behavior": 1,
        "lunar new year": 1,
        "christmas": 1,
        "line": 1,
        "reference lines": 1
    },
    "phase folded light curve": {
        "ls periodogram": 5,
        "periodic signal": 5,
        "simulated data": 4,
        "fourier transforms": 4,
        "fourier transform": 4,
        "fourier pairs": 4,
        "nyquist frequency": 4,
        "periodogram": 4,
        "continuous signal": 3,
        "power spectrum": 3,
        "discrete fourier transform": 3,
        "gaussian noise": 2,
        "phase folded data": 2,
        "fourier analysis": 2,
        "periodic signals": 2,
        "fourier transform operator": 2,
        "time shift": 2,
        "squared amplitude": 2,
        "linear operator": 2,
        "dominant frequency": 2,
        "power spectral density": 2,
        "phase shift": 2,
        "convolution theorem": 2,
        "convolution": 2,
        "frequncy information": 2,
        "real world observations": 2,
        "astrophysical sources": 2,
        "nyquist frequency limit": 2,
        "even samples": 2,
        "classical periodogram": 2,
        "unevenly sampled data": 1,
        "nyquist limit": 1,
        "sampling interval": 1,
        "window function": 1,
        "continuous integral": 1,
        "continous signal": 1,
        "finite interval": 1,
        "dirac comb function": 1,
        "delta functions": 1,
        "schuster periodogram": 1,
        "irregular sampling": 1,
        "observation times": 1,
        "kepler data": 1,
        "statistical": 1,
        "sinusoid model": 1,
        "non-varying reference model": 1,
        "individual measurements": 1,
        "observational uncertainty": 1,
        "uncertainties": 1,
        "scipy package": 1,
        "maximum frequnecy": 1,
        "minimum frequency": 1
    },
    "repetitive": {
        "ls periodogram": 5,
        "periodic signal": 5,
        "simulated data": 4,
        "fourier transforms": 4,
        "fourier transform": 4,
        "fourier pairs": 4,
        "nyquist frequency": 4,
        "periodogram": 4,
        "continuous signal": 3,
        "power spectrum": 3,
        "discrete fourier transform": 3,
        "gaussian noise": 2,
        "phase folded data": 2,
        "fourier analysis": 2,
        "periodic signals": 2,
        "fourier transform operator": 2,
        "time shift": 2,
        "squared amplitude": 2,
        "linear operator": 2,
        "dominant frequency": 2,
        "power spectral density": 2,
        "phase shift": 2,
        "convolution theorem": 2,
        "convolution": 2,
        "frequncy information": 2,
        "real world observations": 2,
        "astrophysical sources": 2,
        "nyquist frequency limit": 2,
        "even samples": 2,
        "classical periodogram": 2,
        "unevenly sampled data": 1,
        "nyquist limit": 1,
        "sampling interval": 1,
        "window function": 1,
        "continuous integral": 1,
        "continous signal": 1,
        "finite interval": 1,
        "dirac comb function": 1,
        "delta functions": 1,
        "schuster periodogram": 1,
        "irregular sampling": 1,
        "observation times": 1,
        "kepler data": 1,
        "statistical": 1,
        "sinusoid model": 1,
        "non-varying reference model": 1,
        "individual measurements": 1,
        "observational uncertainty": 1,
        "uncertainties": 1,
        "scipy package": 1,
        "maximum frequnecy": 1,
        "minimum frequency": 1
    },
    "up sampling": {
        "exponentially weighted functions": 6,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "frequency conversion": {
        "exponentially weighted functions": 6,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "down sampling": {
        "exponentially weighted functions": 6,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "amps": {
        "exponentially weighted functions": 6,
        "bin edges": 3,
        "downsampling": 3,
        "aggregation": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "economic data applications": 3,
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "max close price": {
        "bank": 9,
        "distplot": 8,
        "close price": 7,
        "returns": 6,
        "empty": 6,
        "bank stock ticker": 6,
        "returns column": 6,
        "close column": 6,
        "pairplot": 6,
        "returns dataframe": 6,
        "single day returns": 6,
        "worst": 6,
        "morgan stanley": 5,
        "bank of america": 4,
        "ly": 3,
        "visualization libraries": 3,
        "cufflinks": 3,
        "moving averages": 2,
        "heatmap": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "bollinger band plot": 1
    },
    "bank": {
        "bank": 9,
        "distplot": 8,
        "close price": 7,
        "returns": 6,
        "empty": 6,
        "bank stock ticker": 6,
        "returns column": 6,
        "close column": 6,
        "pairplot": 6,
        "returns dataframe": 6,
        "single day returns": 6,
        "worst": 6,
        "morgan stanley": 5,
        "bank of america": 4,
        "ly": 3,
        "visualization libraries": 3,
        "cufflinks": 3,
        "moving averages": 2,
        "heatmap": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "bollinger band plot": 1
    },
    "prediction function": {
        "sigmoid function": 19,
        "error functions": 15,
        "error function": 12,
        "decision boundary": 10,
        "predicted class": 10,
        "modelling function": 8,
        "logistic function": 8,
        "gradient descent": 5,
        "resholding": 2,
        "total cost function": 2,
        "last function approximation": 2,
        "learning rate": 2,
        "learning curve": 2,
        "regularization": 1,
        "predict()": 1,
        "correct guesses": 1,
        "guessed classes": 1,
        "predicted exam results": 1
    },
    "world bank population": {
        "population": 6,
        "democratic republic of the congo": 6,
        "sqlite3 library": 6,
        "world bank projects": 3,
        "hashemite kingdom of jordan": 3,
        "code cell": 3,
        "indicator data": 3,
        "merged data set": 3,
        "countrycode": 3,
        "json file": 3,
        "islamic republic": 3,
        "afghanistan": 3,
        "federal republic": 3,
        "bangladesh": 3,
        "nigeria": 3,
        "lebanese republic": 3,
        "democratic socialist republic": 3,
        "code": 3,
        "people's republic of bangladesh": 3,
        "federal republic of nigeria": 3,
        "tunisia": 3,
        "islamic republic of afghanistan": 3,
        "federative republic": 3,
        "merged table": 3,
        "brazil": 3,
        "sql query": 3,
        "sql": 3,
        "alter table command": 3,
        "sqlite3 database": 3,
        "sqlite": 3,
        "foreign key constraints": 3
    },
    "gdp data": {
        "population": 6,
        "democratic republic of the congo": 6,
        "sqlite3 library": 6,
        "world bank projects": 3,
        "hashemite kingdom of jordan": 3,
        "code cell": 3,
        "indicator data": 3,
        "merged data set": 3,
        "countrycode": 3,
        "json file": 3,
        "islamic republic": 3,
        "afghanistan": 3,
        "federal republic": 3,
        "bangladesh": 3,
        "nigeria": 3,
        "lebanese republic": 3,
        "democratic socialist republic": 3,
        "code": 3,
        "people's republic of bangladesh": 3,
        "federal republic of nigeria": 3,
        "tunisia": 3,
        "islamic republic of afghanistan": 3,
        "federative republic": 3,
        "merged table": 3,
        "brazil": 3,
        "sql query": 3,
        "sql": 3,
        "alter table command": 3,
        "sqlite3 database": 3,
        "sqlite": 3,
        "foreign key constraints": 3
    },
    "vectors arrows velocity": {
        "vectors": 6,
        "dot product": 6,
        "orthonormal basis": 6,
        "linear algebra": 4,
        "2d vector": 4,
        "3d vector": 4,
        "2d array": 4,
        "2d vectors": 4,
        "unit vectors": 4,
        "standard basis": 4,
        "finite dimensional euclidean space": 2,
        "vector notation": 2,
        "numpy library": 2,
        "python list": 2,
        "one dimensional array": 2,
        "word dimension": 2,
        "array dimension": 2,
        "vector dimension": 2,
        "1d array": 2,
        "matrix": 2,
        "arrows": 2,
        "inverted": 2,
        "scalar": 2,
        "1d arrays": 2,
        "mathematical notation": 2,
        "inner product": 2,
        "norm": 2,
        "unit vector": 2,
        "arbitrary vector": 2,
        "orthogonal vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "coordinate system": 2,
        "vector": 2,
        "ots": 2,
        "reconstruction": 2,
        "\\ld": 2,
        "basis vectors": 2
    },
    "3d space": {
        "vectors": 6,
        "dot product": 6,
        "orthonormal basis": 6,
        "linear algebra": 4,
        "2d vector": 4,
        "3d vector": 4,
        "2d array": 4,
        "2d vectors": 4,
        "unit vectors": 4,
        "standard basis": 4,
        "finite dimensional euclidean space": 2,
        "vector notation": 2,
        "numpy library": 2,
        "python list": 2,
        "one dimensional array": 2,
        "word dimension": 2,
        "array dimension": 2,
        "vector dimension": 2,
        "1d array": 2,
        "matrix": 2,
        "arrows": 2,
        "inverted": 2,
        "scalar": 2,
        "1d arrays": 2,
        "mathematical notation": 2,
        "inner product": 2,
        "norm": 2,
        "unit vector": 2,
        "arbitrary vector": 2,
        "orthogonal vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "coordinate system": 2,
        "vector": 2,
        "ots": 2,
        "reconstruction": 2,
        "\\ld": 2,
        "basis vectors": 2
    },
    "folium package": {
        "folium": 9,
        "searchable map": 9,
        "search function": 5,
        "united states": 5,
        "search object": 5,
        "constructor function": 5,
        "whole geographic areas": 5,
        "search map": 5,
        "rome": 5,
        "map coordinates": 5,
        "leaflet": 4,
        "geojson": 4,
        "datahub": 4,
        "draw tool": 4,
        "draw object": 3,
        "polygon": 3,
        "deepwater horizon oil spill": 3,
        "gulf of mexico": 3,
        "bermuda triangle": 3,
        "edinburgh": 2,
        "scotland": 2,
        "nashville": 2,
        "berkeley police department": 1,
        "call location data": 1,
        "barrows": 1,
        "call coordinates": 1,
        "polyline": 1,
        "heatmap": 1
    },
    "plugins": {
        "folium": 9,
        "searchable map": 9,
        "search function": 5,
        "united states": 5,
        "search object": 5,
        "constructor function": 5,
        "whole geographic areas": 5,
        "search map": 5,
        "rome": 5,
        "map coordinates": 5,
        "leaflet": 4,
        "geojson": 4,
        "datahub": 4,
        "draw tool": 4,
        "draw object": 3,
        "polygon": 3,
        "deepwater horizon oil spill": 3,
        "gulf of mexico": 3,
        "bermuda triangle": 3,
        "edinburgh": 2,
        "scotland": 2,
        "nashville": 2,
        "berkeley police department": 1,
        "call location data": 1,
        "barrows": 1,
        "call coordinates": 1,
        "polyline": 1,
        "heatmap": 1
    },
    "folium package components": {
        "folium": 9,
        "searchable map": 9,
        "search function": 5,
        "united states": 5,
        "search object": 5,
        "constructor function": 5,
        "whole geographic areas": 5,
        "search map": 5,
        "rome": 5,
        "map coordinates": 5,
        "leaflet": 4,
        "geojson": 4,
        "datahub": 4,
        "draw tool": 4,
        "draw object": 3,
        "polygon": 3,
        "deepwater horizon oil spill": 3,
        "gulf of mexico": 3,
        "bermuda triangle": 3,
        "edinburgh": 2,
        "scotland": 2,
        "nashville": 2,
        "berkeley police department": 1,
        "call location data": 1,
        "barrows": 1,
        "call coordinates": 1,
        "polyline": 1,
        "heatmap": 1
    },
    "folium mapping": {
        "folium": 9,
        "searchable map": 9,
        "search function": 5,
        "united states": 5,
        "search object": 5,
        "constructor function": 5,
        "whole geographic areas": 5,
        "search map": 5,
        "rome": 5,
        "map coordinates": 5,
        "leaflet": 4,
        "geojson": 4,
        "datahub": 4,
        "draw tool": 4,
        "draw object": 3,
        "polygon": 3,
        "deepwater horizon oil spill": 3,
        "gulf of mexico": 3,
        "bermuda triangle": 3,
        "edinburgh": 2,
        "scotland": 2,
        "nashville": 2,
        "berkeley police department": 1,
        "call location data": 1,
        "barrows": 1,
        "call coordinates": 1,
        "polyline": 1,
        "heatmap": 1
    },
    "contiguous memory": {
        "iloc": 9,
        "dfcars": 6,
        "listiness property": 6,
        "listiness": 4,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "floating": {
        "iloc": 9,
        "dfcars": 6,
        "listiness property": 6,
        "listiness": 4,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "type conversion": {
        "iloc": 9,
        "dfcars": 6,
        "listiness property": 6,
        "listiness": 4,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "lic": {
        "iloc": 9,
        "dfcars": 6,
        "listiness property": 6,
        "listiness": 4,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "iteration": {
        "iloc": 9,
        "dfcars": 6,
        "listiness property": 6,
        "listiness": 4,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "displacement": {
        "iloc": 9,
        "dfcars": 6,
        "listiness property": 6,
        "listiness": 4,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "biometrics": {
        "iloc": 9,
        "dfcars": 6,
        "listiness property": 6,
        "listiness": 4,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "multiple regression models": {
        "iloc": 9,
        "dfcars": 6,
        "listiness property": 6,
        "listiness": 4,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "automobile design": {
        "iloc": 9,
        "dfcars": 6,
        "listiness property": 6,
        "listiness": 4,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "forward gears": {
        "iloc": 9,
        "dfcars": 6,
        "listiness property": 6,
        "listiness": 4,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "carburetors": {
        "iloc": 9,
        "dfcars": 6,
        "listiness property": 6,
        "listiness": 4,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "rear axle ratio": {
        "iloc": 9,
        "dfcars": 6,
        "listiness property": 6,
        "listiness": 4,
        "arrcars": 2,
        "numpy function": 2,
        "genfromtxt": 2,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "enron data set": {
        "enron dataset": 12,
        "persons of interest": 5,
        "enron data": 5,
        "pois": 5,
        "file format": 5,
        "email addresses": 5,
        "poi names": 5,
        "incomplete data": 4,
        "wesley colwell": 3,
        "email messages": 3,
        "stock options": 3,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "unfilled features": 2,
        "email address": 2,
        "quantified salary": 2,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2,
        "payments": 1,
        "missing pois": 1
    },
    "operating system": {
        "latent space": 15,
        "mixing coefficients": 10,
        "binarized image": 7,
        "handwriting styles": 5,
        "multivariate bernoulli distribution": 5,
        "misclassifications": 5,
        "data labels": 5,
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "file system": 1,
        "man page": 1,
        "shell commands": 1,
        "ipython notebooks": 1,
        "data manipulation": 1,
        "command line": 1,
        "wc": 1,
        "word counting tool": 1,
        "delimeter": 1,
        "cut command": 1,
        "head command": 1,
        "one liners": 1,
        "pipes": 1,
        "data folder": 1,
        "user exploration": 1,
        "structured data": 1,
        "scatterplot": 1,
        "survey responses": 1,
        "numeric features": 1,
        "simple line graph": 1,
        "uci machine learning": 1,
        "file contents": 1,
        "decision tree learning": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1,
        "hyperparameters": 1
    },
    "heatmap": {
        "heatmap": 27,
        "folium map": 6,
        "iraq": 5,
        "map": 4,
        "folium": 4,
        "python visualizer": 4,
        "united states": 4,
        "key note": 4,
        "berkeley pd call data": 4,
        "calls table": 4,
        "longitude data": 4,
        "select function": 4,
        "heatmapwithtime": 4,
        "l": 3,
        "stacking function call": 3,
        "longitude": 3,
        "longitudes": 3,
        "colorbar": 2,
        "usa": 2,
        "dummy location data": 1,
        "dates": 1,
        "constructor function": 1,
        "berkeley calls": 1,
        "transposed latitudes": 1,
        "call location data": 1
    },
    "keras": {
        "keras": 8,
        "convolutional neural network": 6,
        "mnist": 3,
        "sanitized traffic sign data": 3,
        "german traffic sign recognition benchmark": 3,
        "dataset": 3,
        "pickle files": 3,
        "traffic signs": 3,
        "feedforward neural network": 3,
        "pickle file": 3,
        "flatten layer": 3,
        "concatenation": 2,
        "training data requirements": 2,
        "tensorflow": 2,
        "neural network": 2,
        "keras layer": 2,
        "neural network model": 2,
        "layer": 2,
        "max pool": 2,
        "keras sequential model": 2,
        "evaluation() function": 2,
        "activation model": 2,
        "metrics history": 2,
        "sequential model": 2,
        "loss functions": 2,
        "metrics": 2,
        "learning process": 2,
        "fit() function": 2,
        "stochastic gradient descent": 2,
        "training loss": 2,
        "adam optimizer": 2,
        "final neural network": 2,
        "validation accuracy": 2,
        "data processing": 2,
        "interface": 1,
        "keras hints": 1,
        "noise distribution": 1,
        "kernel density estimation plot": 1,
        "python variable": 1,
        "ker": 1,
        "traffic sign images": 1,
        "dense layer width": 1,
        "softmax activation function": 1,
        "relu activation function": 1,
        "keras documentation": 1,
        "categorical cross entropy": 1,
        "network compile": 1
    },
    "large statistical samples": {
        "pdf": 10,
        "middle aged men": 9,
        "chinups": 7,
        "density estimation": 6,
        "tophat kernel": 4,
        "histogram plots": 3,
        "waist size": 2,
        "pulse": 2,
        "weight": 2,
        "situps": 2,
        "jumps": 2,
        "linnerud data set": 2,
        "default settings": 2,
        "bin centers": 2,
        "continuous distribution": 2,
        "bin width": 2,
        "variable width bins": 2,
        "bin edges": 2,
        "bin choices": 2,
        "rug plot": 2,
        "chinup measurements": 2,
        "transparency": 2,
        "bin grouping": 2,
        "user choices": 2,
        "bin centering": 2,
        "univariate data": 2,
        "bin": 2,
        "output histogram": 2,
        "ering": 2,
        "epanechnikov": 2,
        "kernel density estimation": 2,
        "minimal mean square error": 2,
        "inverted parabola": 2,
        "discrete data": 2,
        "normalized kernel function": 2,
        "continuous data": 1,
        "bandwidth selection": 1,
        "epanechnikov kernel": 1
    },
    "probability density function": {
        "pdf": 10,
        "middle aged men": 9,
        "chinups": 7,
        "density estimation": 6,
        "tophat kernel": 4,
        "histogram plots": 3,
        "waist size": 2,
        "pulse": 2,
        "weight": 2,
        "situps": 2,
        "jumps": 2,
        "linnerud data set": 2,
        "default settings": 2,
        "bin centers": 2,
        "continuous distribution": 2,
        "bin width": 2,
        "variable width bins": 2,
        "bin edges": 2,
        "bin choices": 2,
        "rug plot": 2,
        "chinup measurements": 2,
        "transparency": 2,
        "bin grouping": 2,
        "user choices": 2,
        "bin centering": 2,
        "univariate data": 2,
        "bin": 2,
        "output histogram": 2,
        "ering": 2,
        "epanechnikov": 2,
        "kernel density estimation": 2,
        "minimal mean square error": 2,
        "inverted parabola": 2,
        "discrete data": 2,
        "normalized kernel function": 2,
        "continuous data": 1,
        "bandwidth selection": 1,
        "epanechnikov kernel": 1
    },
    "sdss": {
        "pdf": 10,
        "middle aged men": 9,
        "chinups": 7,
        "density estimation": 6,
        "tophat kernel": 4,
        "histogram plots": 3,
        "waist size": 2,
        "pulse": 2,
        "weight": 2,
        "situps": 2,
        "jumps": 2,
        "linnerud data set": 2,
        "default settings": 2,
        "bin centers": 2,
        "continuous distribution": 2,
        "bin width": 2,
        "variable width bins": 2,
        "bin edges": 2,
        "bin choices": 2,
        "rug plot": 2,
        "chinup measurements": 2,
        "transparency": 2,
        "bin grouping": 2,
        "user choices": 2,
        "bin centering": 2,
        "univariate data": 2,
        "bin": 2,
        "output histogram": 2,
        "ering": 2,
        "epanechnikov": 2,
        "kernel density estimation": 2,
        "minimal mean square error": 2,
        "inverted parabola": 2,
        "discrete data": 2,
        "normalized kernel function": 2,
        "continuous data": 1,
        "bandwidth selection": 1,
        "epanechnikov kernel": 1
    },
    "data volume": {
        "pdf": 10,
        "middle aged men": 9,
        "chinups": 7,
        "density estimation": 6,
        "tophat kernel": 4,
        "histogram plots": 3,
        "waist size": 2,
        "pulse": 2,
        "weight": 2,
        "situps": 2,
        "jumps": 2,
        "linnerud data set": 2,
        "default settings": 2,
        "bin centers": 2,
        "continuous distribution": 2,
        "bin width": 2,
        "variable width bins": 2,
        "bin edges": 2,
        "bin choices": 2,
        "rug plot": 2,
        "chinup measurements": 2,
        "transparency": 2,
        "bin grouping": 2,
        "user choices": 2,
        "bin centering": 2,
        "univariate data": 2,
        "bin": 2,
        "output histogram": 2,
        "ering": 2,
        "epanechnikov": 2,
        "kernel density estimation": 2,
        "minimal mean square error": 2,
        "inverted parabola": 2,
        "discrete data": 2,
        "normalized kernel function": 2,
        "continuous data": 1,
        "bandwidth selection": 1,
        "epanechnikov kernel": 1
    },
    "2mass": {
        "pdf": 10,
        "middle aged men": 9,
        "chinups": 7,
        "density estimation": 6,
        "tophat kernel": 4,
        "histogram plots": 3,
        "waist size": 2,
        "pulse": 2,
        "weight": 2,
        "situps": 2,
        "jumps": 2,
        "linnerud data set": 2,
        "default settings": 2,
        "bin centers": 2,
        "continuous distribution": 2,
        "bin width": 2,
        "variable width bins": 2,
        "bin edges": 2,
        "bin choices": 2,
        "rug plot": 2,
        "chinup measurements": 2,
        "transparency": 2,
        "bin grouping": 2,
        "user choices": 2,
        "bin centering": 2,
        "univariate data": 2,
        "bin": 2,
        "output histogram": 2,
        "ering": 2,
        "epanechnikov": 2,
        "kernel density estimation": 2,
        "minimal mean square error": 2,
        "inverted parabola": 2,
        "discrete data": 2,
        "normalized kernel function": 2,
        "continuous data": 1,
        "bandwidth selection": 1,
        "epanechnikov kernel": 1
    },
    "tflearn": {
        "word vector": 6,
        "word vectors": 5,
        "batch size": 5,
        "vocab": 4,
        "word2idx": 4,
        "tflearn": 4,
        "learning rate loss": 4,
        "training method": 4,
        "network error": 4,
        "activation function": 4,
        "hidden layers": 4,
        "10000 element long vectors": 4,
        "stochastic gradient descent": 4,
        "connected layer": 4,
        "hyperparameters": 3,
        "lower case characters": 2,
        "pandas library": 2,
        "word frequency": 2,
        "review data": 2,
        "frame": 2,
        "count value": 2,
        "dictionary comprehension": 2,
        "key error": 2,
        "vocab dictionary": 2,
        "word2idx dictionary": 2,
        "function": 2,
        "review data set": 2,
        "network performance": 2,
        "test sets": 2,
        "softmax activation function": 2,
        "validation": 2,
        "tensorflow": 2,
        "validation accuracy": 1,
        "hyperparameter adjustments": 1,
        "set": 1
    },
    "ex": {
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression object": 2,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1
    },
    "exercises": {
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression object": 2,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1
    },
    "bike sharing dataset": {
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression object": 2,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1
    },
    "ises": {
        "datatypes": 6,
        "info()": 6,
        "ols()": 6,
        "atemp column": 5,
        "registered columns": 5,
        "instant column": 5,
        "columns": 5,
        "correlations": 5,
        "fit()": 5,
        "distributions": 4,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression object": 2,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1
    },
    "article level metrics": {
        "article level metrics": 8,
        "california institute of technology": 8,
        "api": 6,
        "alm data": 4,
        "search": 4,
        "affiliation term": 4,
        "os": 4,
        "caltech": 4,
        "advanced search functionality": 4,
        "plos": 4,
        "plos alm api": 4,
        "variable dois": 4,
        "alm api": 4,
        "europepubmedcentral citations": 4,
        "facebook posts": 4,
        "plos article level metrics": 4,
        "europepmc citations": 4,
        "tweets": 4,
        "variable caltech": 4,
        "alm": 2,
        "is": 2,
        "plos search api": 2,
        "publisher api": 2,
        "twitter handles": 2,
        "unique account names": 2,
        "twitter account handles": 2
    },
    "date string": {
        "exponentially weighted functions": 6,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "customized tim series datetime indices": {
        "exponentially weighted functions": 6,
        "frequency offsets": 3,
        "multipliers": 3,
        "datetime indexing": 3,
        "timestamps": 3,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "plotting library": {
        "registered riders": 7,
        "hist": 5,
        "casual riders": 4,
        "plot customizations": 3,
        "tutorial": 3,
        "record index": 3,
        "normalized temperature": 3,
        "normalized feeling temperature": 3,
        "normalized percent humidity": 3,
        "bikeshare": 3,
        "normalized wind speed": 3,
        "time range": 3,
        "gran": 3,
        "matplotlib methods": 3,
        "syntax": 3,
        "python library": 3,
        "seaborn functions": 3,
        "complex statistical plots": 3,
        "statistical plotting": 3,
        "registered": 3,
        "error bars": 3,
        "seaborn api": 3,
        "bootstrapping": 3,
        "total rider counts": 3,
        "distplot function": 3,
        "rider counts": 2,
        "matplotlib axes object": 2,
        "boxplot function": 2,
        "bikeshare membership": 2,
        "lmplot function": 2,
        "scatterplot": 2,
        "hue parameter": 1,
        "lmplot": 1,
        "weekday trips": 1,
        "weekend trips": 1,
        "seaborn tutorials": 1,
        "matplotlib tutorial": 1
    },
    "plotting libraries": {
        "registered riders": 7,
        "hist": 5,
        "casual riders": 4,
        "plot customizations": 3,
        "tutorial": 3,
        "record index": 3,
        "normalized temperature": 3,
        "normalized feeling temperature": 3,
        "normalized percent humidity": 3,
        "bikeshare": 3,
        "normalized wind speed": 3,
        "time range": 3,
        "gran": 3,
        "matplotlib methods": 3,
        "syntax": 3,
        "python library": 3,
        "seaborn functions": 3,
        "complex statistical plots": 3,
        "statistical plotting": 3,
        "registered": 3,
        "error bars": 3,
        "seaborn api": 3,
        "bootstrapping": 3,
        "total rider counts": 3,
        "distplot function": 3,
        "rider counts": 2,
        "matplotlib axes object": 2,
        "boxplot function": 2,
        "bikeshare membership": 2,
        "lmplot function": 2,
        "scatterplot": 2,
        "hue parameter": 1,
        "lmplot": 1,
        "weekday trips": 1,
        "weekend trips": 1,
        "seaborn tutorials": 1,
        "matplotlib tutorial": 1
    },
    "plotlib plots": {
        "registered riders": 7,
        "hist": 5,
        "casual riders": 4,
        "plot customizations": 3,
        "tutorial": 3,
        "record index": 3,
        "normalized temperature": 3,
        "normalized feeling temperature": 3,
        "normalized percent humidity": 3,
        "bikeshare": 3,
        "normalized wind speed": 3,
        "time range": 3,
        "gran": 3,
        "matplotlib methods": 3,
        "syntax": 3,
        "python library": 3,
        "seaborn functions": 3,
        "complex statistical plots": 3,
        "statistical plotting": 3,
        "registered": 3,
        "error bars": 3,
        "seaborn api": 3,
        "bootstrapping": 3,
        "total rider counts": 3,
        "distplot function": 3,
        "rider counts": 2,
        "matplotlib axes object": 2,
        "boxplot function": 2,
        "bikeshare membership": 2,
        "lmplot function": 2,
        "scatterplot": 2,
        "hue parameter": 1,
        "lmplot": 1,
        "weekday trips": 1,
        "weekend trips": 1,
        "seaborn tutorials": 1,
        "matplotlib tutorial": 1
    },
    "learning algorithms": {
        "ica": 17,
        "covariant algorithm": 5,
        "sawtooth": 4,
        "kurtosis": 3,
        "priors": 2,
        "gaussian distribution": 2,
        "random wave": 2,
        "independent random variables": 2,
        "covariance matrices": 2,
        "gaussian noise source": 2,
        "learning algorithms": 2,
        "block wave": 2,
        "mixing matrix": 2,
        "sine wave": 2,
        "information theory": 2,
        "rotation": 2,
        "eigenvalue decomposition": 2,
        "sinewave": 2,
        "bias": 2,
        "scale changes": 2,
        "demixing matrices": 2,
        "ize": 1,
        "normalizing constant": 1,
        "gaussian function": 1,
        "triangle histogram": 1,
        "square wave": 1,
        "xw plot": 1,
        "circular pattern": 1,
        "learning algorithm": 1,
        "matrix inversions": 1,
        "symmetric": 1,
        "source signals": 1,
        "central limit theorem": 1,
        "signal": 1,
        "gaussian distributions": 1,
        "signals sawtooth": 1,
        "historgrams": 1,
        "triangle wave": 1,
        "gray boxes": 1,
        "boxes": 1,
        "diagonal matrix": 1,
        "alogrithm": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "measurement": 1,
        "gaussian noise": 1,
        "covariance": 1,
        "consistent algorithm": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "i": 1,
        "whitening process": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "independent component analysis algorithm": {
        "ica": 17,
        "covariant algorithm": 5,
        "sawtooth": 4,
        "kurtosis": 3,
        "priors": 2,
        "gaussian distribution": 2,
        "random wave": 2,
        "independent random variables": 2,
        "covariance matrices": 2,
        "gaussian noise source": 2,
        "learning algorithms": 2,
        "block wave": 2,
        "mixing matrix": 2,
        "sine wave": 2,
        "information theory": 2,
        "rotation": 2,
        "eigenvalue decomposition": 2,
        "sinewave": 2,
        "bias": 2,
        "scale changes": 2,
        "demixing matrices": 2,
        "ize": 1,
        "normalizing constant": 1,
        "gaussian function": 1,
        "triangle histogram": 1,
        "square wave": 1,
        "xw plot": 1,
        "circular pattern": 1,
        "learning algorithm": 1,
        "matrix inversions": 1,
        "symmetric": 1,
        "source signals": 1,
        "central limit theorem": 1,
        "signal": 1,
        "gaussian distributions": 1,
        "signals sawtooth": 1,
        "historgrams": 1,
        "triangle wave": 1,
        "gray boxes": 1,
        "boxes": 1,
        "diagonal matrix": 1,
        "alogrithm": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "measurement": 1,
        "gaussian noise": 1,
        "covariance": 1,
        "consistent algorithm": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "i": 1,
        "whitening process": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "source matrix": {
        "ica": 17,
        "covariant algorithm": 5,
        "sawtooth": 4,
        "kurtosis": 3,
        "priors": 2,
        "gaussian distribution": 2,
        "random wave": 2,
        "independent random variables": 2,
        "covariance matrices": 2,
        "gaussian noise source": 2,
        "learning algorithms": 2,
        "block wave": 2,
        "mixing matrix": 2,
        "sine wave": 2,
        "information theory": 2,
        "rotation": 2,
        "eigenvalue decomposition": 2,
        "sinewave": 2,
        "bias": 2,
        "scale changes": 2,
        "demixing matrices": 2,
        "ize": 1,
        "normalizing constant": 1,
        "gaussian function": 1,
        "triangle histogram": 1,
        "square wave": 1,
        "xw plot": 1,
        "circular pattern": 1,
        "learning algorithm": 1,
        "matrix inversions": 1,
        "symmetric": 1,
        "source signals": 1,
        "central limit theorem": 1,
        "signal": 1,
        "gaussian distributions": 1,
        "signals sawtooth": 1,
        "historgrams": 1,
        "triangle wave": 1,
        "gray boxes": 1,
        "boxes": 1,
        "diagonal matrix": 1,
        "alogrithm": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "measurement": 1,
        "gaussian noise": 1,
        "covariance": 1,
        "consistent algorithm": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "i": 1,
        "whitening process": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "elementwise non-linearity": {
        "ica": 17,
        "covariant algorithm": 5,
        "sawtooth": 4,
        "kurtosis": 3,
        "priors": 2,
        "gaussian distribution": 2,
        "random wave": 2,
        "independent random variables": 2,
        "covariance matrices": 2,
        "gaussian noise source": 2,
        "learning algorithms": 2,
        "block wave": 2,
        "mixing matrix": 2,
        "sine wave": 2,
        "information theory": 2,
        "rotation": 2,
        "eigenvalue decomposition": 2,
        "sinewave": 2,
        "bias": 2,
        "scale changes": 2,
        "demixing matrices": 2,
        "ize": 1,
        "normalizing constant": 1,
        "gaussian function": 1,
        "triangle histogram": 1,
        "square wave": 1,
        "xw plot": 1,
        "circular pattern": 1,
        "learning algorithm": 1,
        "matrix inversions": 1,
        "symmetric": 1,
        "source signals": 1,
        "central limit theorem": 1,
        "signal": 1,
        "gaussian distributions": 1,
        "signals sawtooth": 1,
        "historgrams": 1,
        "triangle wave": 1,
        "gray boxes": 1,
        "boxes": 1,
        "diagonal matrix": 1,
        "alogrithm": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "measurement": 1,
        "gaussian noise": 1,
        "covariance": 1,
        "consistent algorithm": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "i": 1,
        "whitening process": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "information theory": {
        "ica": 17,
        "covariant algorithm": 5,
        "sawtooth": 4,
        "kurtosis": 3,
        "priors": 2,
        "gaussian distribution": 2,
        "random wave": 2,
        "independent random variables": 2,
        "covariance matrices": 2,
        "gaussian noise source": 2,
        "learning algorithms": 2,
        "block wave": 2,
        "mixing matrix": 2,
        "sine wave": 2,
        "information theory": 2,
        "rotation": 2,
        "eigenvalue decomposition": 2,
        "sinewave": 2,
        "bias": 2,
        "scale changes": 2,
        "demixing matrices": 2,
        "ize": 1,
        "normalizing constant": 1,
        "gaussian function": 1,
        "triangle histogram": 1,
        "square wave": 1,
        "xw plot": 1,
        "circular pattern": 1,
        "learning algorithm": 1,
        "matrix inversions": 1,
        "symmetric": 1,
        "source signals": 1,
        "central limit theorem": 1,
        "signal": 1,
        "gaussian distributions": 1,
        "signals sawtooth": 1,
        "historgrams": 1,
        "triangle wave": 1,
        "gray boxes": 1,
        "boxes": 1,
        "diagonal matrix": 1,
        "alogrithm": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "measurement": 1,
        "gaussian noise": 1,
        "covariance": 1,
        "consistent algorithm": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "i": 1,
        "whitening process": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "source signal values": {
        "ica": 17,
        "covariant algorithm": 5,
        "sawtooth": 4,
        "kurtosis": 3,
        "priors": 2,
        "gaussian distribution": 2,
        "random wave": 2,
        "independent random variables": 2,
        "covariance matrices": 2,
        "gaussian noise source": 2,
        "learning algorithms": 2,
        "block wave": 2,
        "mixing matrix": 2,
        "sine wave": 2,
        "information theory": 2,
        "rotation": 2,
        "eigenvalue decomposition": 2,
        "sinewave": 2,
        "bias": 2,
        "scale changes": 2,
        "demixing matrices": 2,
        "ize": 1,
        "normalizing constant": 1,
        "gaussian function": 1,
        "triangle histogram": 1,
        "square wave": 1,
        "xw plot": 1,
        "circular pattern": 1,
        "learning algorithm": 1,
        "matrix inversions": 1,
        "symmetric": 1,
        "source signals": 1,
        "central limit theorem": 1,
        "signal": 1,
        "gaussian distributions": 1,
        "signals sawtooth": 1,
        "historgrams": 1,
        "triangle wave": 1,
        "gray boxes": 1,
        "boxes": 1,
        "diagonal matrix": 1,
        "alogrithm": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "measurement": 1,
        "gaussian noise": 1,
        "covariance": 1,
        "consistent algorithm": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "i": 1,
        "whitening process": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "stackoverflow": {
        "mpi": 12,
        "linear regression model": 7,
        "dependent variable": 6,
        "independent variables": 6,
        "data preparation": 4,
        "libraries": 4,
        "country mapper": 4,
        "loans data": 4,
        "mpi poverty data": 4,
        "data anomalies": 4,
        "visual distribution": 4,
        "mp": 4,
        "mpi index": 4,
        "country code mapper": 4,
        "test assumptions": 4,
        "dependent variables": 3,
        "multicollinearity": 3,
        "linear relationship": 3,
        "average night light": 3,
        "avgnightlight": 2,
        "double": 1,
        "meanrdd": 1,
        "reducebykey": 1,
        "dummy data": 1,
        "color intensity": 1,
        "colors": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1,
        "model evaluation": 1
    },
    "logged tpm correlation": {
        "expressed genes": 8,
        "featurecounts": 6,
        "statistical function": 4,
        "spearman": 4,
        "non-linear correlation": 4,
        "genes": 4,
        "rna": 4,
        "syntax": 4,
        "jointplot": 4,
        "gene lengths": 4,
        "regular multiplication": 4,
        "log2 tpm": 4,
        "pm": 4,
        "fpkm": 4,
        "tpm": 4,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "gene id version number": 1,
        "gencode": 1
    },
    "lab 4": {
        "table functions": 10,
        "join function": 6,
        "twitter accounts": 5,
        "3": 5,
        "friends": 5,
        "visual inspection": 5,
        "twitter data": 5,
        "age": 4,
        "variable info": 4,
        "twitter": 3,
        "gender breakdown": 2,
        "group function": 2,
        "column name": 2,
        "twitter users": 2,
        "test expression": 2,
        "aggregator": 1,
        "aggregation function": 1,
        "counting": 1,
        "group": 1,
        "result table": 1,
        "groups function": 1,
        "pivot function": 1,
        "readable output": 1,
        "contingency table": 1,
        "pivot table": 1,
        "img": 1,
        "keyword return": 1,
        "assignment statements": 1,
        "parentheses": 1,
        "closed parenthesis": 1,
        "function call expression": 1,
        "name expression": 1,
        "abs": 1,
        "boolean value": 1,
        "numerical arguments": 1,
        "print": 1,
        "assignment statement": 1,
        "print function": 1,
        "conditional statements": 1,
        "if statement": 1,
        "condition expression": 1,
        "test expressions": 1,
        "programming": 1,
        "remainder operator": 1,
        "modulus operator": 1,
        "fizzbuzz": 1,
        "twitter dataset": 1,
        "apply function": 1,
        "addition": 1,
        "total": 1,
        "addition function": 1,
        "total connections": 1
    },
    "maximum depth": {
        "classification error": 13,
        "prediction path": 12,
        "early stopping conditions": 9,
        "intermediate node": 6,
        "tree learning algorithm": 6,
        "validation error": 6,
        "validation data": 6,
        "lowest classification error": 4,
        "error reduction": 3,
        "risky loans": 3,
        "safe loans": 3,
        "misclassified examples": 3,
        "majority class": 3,
        "minimum node size": 3,
        "minimum error reduction": 3,
        "if condition": 3,
        "tree model": 3,
        "function classify": 3,
        "predicted class": 3,
        "lowest": 2,
        "qu": 1,
        "complexity": 1
    },
    "binary tree implementation": {
        "classification error": 13,
        "prediction path": 12,
        "early stopping conditions": 9,
        "intermediate node": 6,
        "tree learning algorithm": 6,
        "validation error": 6,
        "validation data": 6,
        "lowest classification error": 4,
        "error reduction": 3,
        "risky loans": 3,
        "safe loans": 3,
        "misclassified examples": 3,
        "majority class": 3,
        "minimum node size": 3,
        "minimum error reduction": 3,
        "if condition": 3,
        "tree model": 3,
        "function classify": 3,
        "predicted class": 3,
        "lowest": 2,
        "qu": 1,
        "complexity": 1
    },
    "maximum depth stopping condition": {
        "classification error": 13,
        "prediction path": 12,
        "early stopping conditions": 9,
        "intermediate node": 6,
        "tree learning algorithm": 6,
        "validation error": 6,
        "validation data": 6,
        "lowest classification error": 4,
        "error reduction": 3,
        "risky loans": 3,
        "safe loans": 3,
        "misclassified examples": 3,
        "majority class": 3,
        "minimum node size": 3,
        "minimum error reduction": 3,
        "if condition": 3,
        "tree model": 3,
        "function classify": 3,
        "predicted class": 3,
        "lowest": 2,
        "qu": 1,
        "complexity": 1
    },
    "stopping": {
        "classification error": 13,
        "prediction path": 12,
        "early stopping conditions": 9,
        "intermediate node": 6,
        "tree learning algorithm": 6,
        "validation error": 6,
        "validation data": 6,
        "lowest classification error": 4,
        "error reduction": 3,
        "risky loans": 3,
        "safe loans": 3,
        "misclassified examples": 3,
        "majority class": 3,
        "minimum node size": 3,
        "minimum error reduction": 3,
        "if condition": 3,
        "tree model": 3,
        "function classify": 3,
        "predicted class": 3,
        "lowest": 2,
        "qu": 1,
        "complexity": 1
    },
    "data generating process": {
        "inclusion indicator": 18,
        "pystan": 6,
        "data generating process": 5,
        "polling data": 5,
        "data scientist": 4,
        "bayesian analysis": 4,
        "pymc": 4,
        "data containers": 2,
        "numpy container": 2,
        "regressions": 2,
        "regression models": 2,
        "classical logistic regression": 2,
        "trained model": 2,
        "numerical data": 2,
        "categorical data": 2,
        "average": 2,
        "random forest": 2,
        "relative performance": 2,
        "knn": 2,
        "statistical exposition": 2,
        "distribution": 2,
        "distributions": 2,
        "pymc model": 2,
        "bayesian logistic regression": 2,
        "bayesian logistic regression form": 2,
        "bernoulli method": 2,
        "univariate logistic regression": 2,
        "sigmoid function": 2,
        "bayesian model": 2,
        "computation segment": 2,
        "mcmc procedure": 2,
        "roc scores": 2,
        "non-bayesian logistic": 2,
        "observable variation": 1
    },
    "learn": {
        "pca": 6,
        "covariance matrix": 6,
        "correlation matrix": 6,
        "eigenvectors": 5,
        "eigendecomposition": 5,
        "variable name majors": 3,
        "fivethirtyeight": 3,
        "average unemployment rate": 3,
        "matplotlib plots": 3,
        "majors": 3,
        "low wage jobs": 3,
        "projection matrix": 3,
        "eigenvalues": 3,
        "employment rates": 2,
        "computational efficiency": 2,
        "principal components": 2,
        "singular vector decomposition": 2,
        "women": 1,
        "part time rate": 1,
        "maximum variance": 1,
        "machine learning algorithms": 1,
        "computer hardware": 1,
        "linear transformation methods": 1,
        "pattern classification problem": 1,
        "linear discriminant analysis": 1,
        "e": 1,
        "ctors": 1,
        "eigen": 1,
        "petal width": 1,
        "uci machine learning repository": 1,
        "tutorial": 1,
        "petal length": 1,
        "sepal length": 1,
        "python library": 1,
        "uci repository": 1,
        "flower sample": 1,
        "flower classes": 1,
        "standard": 1,
        "components": 1,
        "mean vector": 1,
        "numpy cov function": 1,
        "ance matrix": 1,
        "normalized covariance matrix": 1,
        "finance": 1,
        "standardized data": 1,
        "eigenvalue pairs": 1,
        "standardizing": 1,
        "pca implementations": 1,
        "axes": 1,
        "lowest eigenvalues": 1,
        "eigenpairs": 1,
        "explained variance": 1,
        "information": 1,
        "first principal component": 1,
        "second principal component": 1,
        "concatenated top k eigenvectors": 1
    },
    "workbook": {
        "population": 6,
        "democratic republic of the congo": 6,
        "sqlite3 library": 6,
        "hashemite kingdom of jordan": 3,
        "code cell": 3,
        "indicator data": 3,
        "merged data set": 3,
        "countrycode": 3,
        "json file": 3,
        "islamic republic": 3,
        "afghanistan": 3,
        "federal republic": 3,
        "bangladesh": 3,
        "nigeria": 3,
        "lebanese republic": 3,
        "democratic socialist republic": 3,
        "code": 3,
        "people's republic of bangladesh": 3,
        "federal republic of nigeria": 3,
        "tunisia": 3,
        "islamic republic of afghanistan": 3,
        "federative republic": 3,
        "merged table": 3,
        "brazil": 3,
        "sql query": 3,
        "sql": 3,
        "alter table command": 3,
        "sqlite3 database": 3,
        "sqlite": 3,
        "foreign key constraints": 3
    },
    "country code variables": {
        "population": 6,
        "democratic republic of the congo": 6,
        "sqlite3 library": 6,
        "hashemite kingdom of jordan": 3,
        "code cell": 3,
        "indicator data": 3,
        "merged data set": 3,
        "countrycode": 3,
        "json file": 3,
        "islamic republic": 3,
        "afghanistan": 3,
        "federal republic": 3,
        "bangladesh": 3,
        "nigeria": 3,
        "lebanese republic": 3,
        "democratic socialist republic": 3,
        "code": 3,
        "people's republic of bangladesh": 3,
        "federal republic of nigeria": 3,
        "tunisia": 3,
        "islamic republic of afghanistan": 3,
        "federative republic": 3,
        "merged table": 3,
        "brazil": 3,
        "sql query": 3,
        "sql": 3,
        "alter table command": 3,
        "sqlite3 database": 3,
        "sqlite": 3,
        "foreign key constraints": 3
    },
    "world bank data": {
        "population": 6,
        "democratic republic of the congo": 6,
        "sqlite3 library": 6,
        "hashemite kingdom of jordan": 3,
        "code cell": 3,
        "indicator data": 3,
        "merged data set": 3,
        "countrycode": 3,
        "json file": 3,
        "islamic republic": 3,
        "afghanistan": 3,
        "federal republic": 3,
        "bangladesh": 3,
        "nigeria": 3,
        "lebanese republic": 3,
        "democratic socialist republic": 3,
        "code": 3,
        "people's republic of bangladesh": 3,
        "federal republic of nigeria": 3,
        "tunisia": 3,
        "islamic republic of afghanistan": 3,
        "federative republic": 3,
        "merged table": 3,
        "brazil": 3,
        "sql query": 3,
        "sql": 3,
        "alter table command": 3,
        "sqlite3 database": 3,
        "sqlite": 3,
        "foreign key constraints": 3
    },
    "resam": {
        "rmse": 17,
        "sampling distribution": 8,
        "brfss data": 6,
        "log weights": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "residuals": 6,
        "plot percentiles": 6,
        "correlation": 6,
        "compute coefficient of determination": 6,
        "height information": 5,
        "sampling distributions": 5,
        "resampling": 5,
        "confidence interval": 3,
        "standard error": 2,
        "resample rows": 2,
        "mean height": 2,
        "column": 1,
        "finalwt": 1
    },
    "correct weighting": {
        "rmse": 17,
        "sampling distribution": 8,
        "brfss data": 6,
        "log weights": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "residuals": 6,
        "plot percentiles": 6,
        "correlation": 6,
        "compute coefficient of determination": 6,
        "height information": 5,
        "sampling distributions": 5,
        "resampling": 5,
        "confidence interval": 3,
        "standard error": 2,
        "resample rows": 2,
        "mean height": 2,
        "column": 1,
        "finalwt": 1
    },
    "sampling weight": {
        "rmse": 17,
        "sampling distribution": 8,
        "brfss data": 6,
        "log weights": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "residuals": 6,
        "plot percentiles": 6,
        "correlation": 6,
        "compute coefficient of determination": 6,
        "height information": 5,
        "sampling distributions": 5,
        "resampling": 5,
        "confidence interval": 3,
        "standard error": 2,
        "resample rows": 2,
        "mean height": 2,
        "column": 1,
        "finalwt": 1
    },
    "linear least squares": {
        "rmse": 17,
        "sampling distribution": 8,
        "brfss data": 6,
        "log weights": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "residuals": 6,
        "plot percentiles": 6,
        "correlation": 6,
        "compute coefficient of determination": 6,
        "height information": 5,
        "sampling distributions": 5,
        "resampling": 5,
        "confidence interval": 3,
        "standard error": 2,
        "resample rows": 2,
        "mean height": 2,
        "column": 1,
        "finalwt": 1
    },
    "standard error": {
        "rmse": 17,
        "sampling distribution": 8,
        "brfss data": 6,
        "log weights": 6,
        "estimate intercept": 6,
        "inverse transform": 6,
        "residuals": 6,
        "plot percentiles": 6,
        "correlation": 6,
        "compute coefficient of determination": 6,
        "height information": 5,
        "sampling distributions": 5,
        "resampling": 5,
        "confidence interval": 3,
        "standard error": 2,
        "resample rows": 2,
        "mean height": 2,
        "column": 1,
        "finalwt": 1
    },
    "data modeling": {
        "magic function": 8,
        "pickle module": 6,
        "working directory": 6,
        "enron data": 6,
        "python dictionary": 6,
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2,
        "historical page views": 1,
        "web server": 1,
        "cpu": 1,
        "individual timeseries": 1,
        "individual pageviews": 1,
        "pageview format": 1,
        "total request rate": 1
    },
    "recursion": {
        "jupyter": 16,
        "docs": 8,
        "image values": 8,
        "image files": 8,
        "pixel value": 8,
        "image formats": 8,
        "ar": 8,
        "ellipsis": 5,
        "code icon": 5,
        "cantaloupes": 4,
        "vector dot products": 2,
        "berkeley bowl": 2,
        "bananas": 2,
        "fruit bowls": 2,
        "apples": 2,
        "sam": 2,
        "matrix expression": 2,
        "keyword argument": 2,
        "positional argument": 1,
        "slicing": 1,
        "arange": 1,
        "prime numbers": 1
    },
    "kmeans class": {
        "kmeans classifier": 15,
        "centroids": 15,
        "random initialization": 5,
        "km": 5,
        "cluster centers": 5,
        "marker types": 5,
        "syntax": 5,
        "initial centroid seeds": 5,
        "kmeans": 5,
        "target attributes": 4,
        "petal width": 4,
        "zip function": 4,
        "label parameter": 4,
        "marker colors": 4,
        "species": 4,
        "iris data set": 4,
        "predicted clusters": 1,
        "true clusters": 1,
        "unsupervised learning": 1,
        "silhouette coefficient": 1,
        "kmeans clusterer": 1
    },
    "outlier detection": {
        "predictive models": 7,
        "learn": 7,
        "tutorial": 7,
        "scikit-learn": 7,
        "titanic survival dataset": 7,
        "sklearn library": 7,
        "categorical variables": 7,
        "exploratory data analysis": 7,
        "age": 7,
        "numerical variables": 7,
        "iris data set": 2,
        "dbscan": 2,
        "random state": 1,
        "iris": 1,
        "euclidean distance": 1,
        "cluster centers": 1,
        "clustering outcome": 1,
        "petal length": 1,
        "scaling": 1,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1
    },
    "astronomical time series": {
        "ls periodogram": 5,
        "periodic signal": 5,
        "fourier transforms": 4,
        "fourier transform": 4,
        "fourier pairs": 4,
        "nyquist frequency": 4,
        "periodogram": 4,
        "continuous signal": 3,
        "power spectrum": 3,
        "discrete fourier transform": 3,
        "fourier analysis": 2,
        "periodic signals": 2,
        "fourier transform operator": 2,
        "time shift": 2,
        "squared amplitude": 2,
        "linear operator": 2,
        "dominant frequency": 2,
        "power spectral density": 2,
        "phase shift": 2,
        "convolution theorem": 2,
        "convolution": 2,
        "frequncy information": 2,
        "real world observations": 2,
        "astrophysical sources": 2,
        "nyquist frequency limit": 2,
        "even samples": 2,
        "simulated data": 2,
        "classical periodogram": 2,
        "unevenly sampled data": 1,
        "nyquist limit": 1,
        "sampling interval": 1,
        "window function": 1,
        "continuous integral": 1,
        "continous signal": 1,
        "finite interval": 1,
        "dirac comb function": 1,
        "delta functions": 1,
        "schuster periodogram": 1,
        "irregular sampling": 1,
        "observation times": 1,
        "kepler data": 1,
        "statistical": 1,
        "sinusoid model": 1,
        "non-varying reference model": 1,
        "individual measurements": 1,
        "observational uncertainty": 1,
        "uncertainties": 1,
        "scipy package": 1,
        "maximum frequnecy": 1,
        "minimum frequency": 1
    },
    "fourier analysis": {
        "ls periodogram": 5,
        "periodic signal": 5,
        "fourier transforms": 4,
        "fourier transform": 4,
        "fourier pairs": 4,
        "nyquist frequency": 4,
        "periodogram": 4,
        "continuous signal": 3,
        "power spectrum": 3,
        "discrete fourier transform": 3,
        "fourier analysis": 2,
        "periodic signals": 2,
        "fourier transform operator": 2,
        "time shift": 2,
        "squared amplitude": 2,
        "linear operator": 2,
        "dominant frequency": 2,
        "power spectral density": 2,
        "phase shift": 2,
        "convolution theorem": 2,
        "convolution": 2,
        "frequncy information": 2,
        "real world observations": 2,
        "astrophysical sources": 2,
        "nyquist frequency limit": 2,
        "even samples": 2,
        "simulated data": 2,
        "classical periodogram": 2,
        "unevenly sampled data": 1,
        "nyquist limit": 1,
        "sampling interval": 1,
        "window function": 1,
        "continuous integral": 1,
        "continous signal": 1,
        "finite interval": 1,
        "dirac comb function": 1,
        "delta functions": 1,
        "schuster periodogram": 1,
        "irregular sampling": 1,
        "observation times": 1,
        "kepler data": 1,
        "statistical": 1,
        "sinusoid model": 1,
        "non-varying reference model": 1,
        "individual measurements": 1,
        "observational uncertainty": 1,
        "uncertainties": 1,
        "scipy package": 1,
        "maximum frequnecy": 1,
        "minimum frequency": 1
    },
    "pulsating stars": {
        "ls periodogram": 5,
        "periodic signal": 5,
        "fourier transforms": 4,
        "fourier transform": 4,
        "fourier pairs": 4,
        "nyquist frequency": 4,
        "periodogram": 4,
        "continuous signal": 3,
        "power spectrum": 3,
        "discrete fourier transform": 3,
        "fourier analysis": 2,
        "periodic signals": 2,
        "fourier transform operator": 2,
        "time shift": 2,
        "squared amplitude": 2,
        "linear operator": 2,
        "dominant frequency": 2,
        "power spectral density": 2,
        "phase shift": 2,
        "convolution theorem": 2,
        "convolution": 2,
        "frequncy information": 2,
        "real world observations": 2,
        "astrophysical sources": 2,
        "nyquist frequency limit": 2,
        "even samples": 2,
        "simulated data": 2,
        "classical periodogram": 2,
        "unevenly sampled data": 1,
        "nyquist limit": 1,
        "sampling interval": 1,
        "window function": 1,
        "continuous integral": 1,
        "continous signal": 1,
        "finite interval": 1,
        "dirac comb function": 1,
        "delta functions": 1,
        "schuster periodogram": 1,
        "irregular sampling": 1,
        "observation times": 1,
        "kepler data": 1,
        "statistical": 1,
        "sinusoid model": 1,
        "non-varying reference model": 1,
        "individual measurements": 1,
        "observational uncertainty": 1,
        "uncertainties": 1,
        "scipy package": 1,
        "maximum frequnecy": 1,
        "minimum frequency": 1
    },
    "singular vector decomposition": {
        "pca": 8,
        "eigenvectors": 7,
        "correlation matrix": 7,
        "covariance matrix": 6,
        "eigenvalues": 5,
        "eigendecomposition": 5,
        "projection matrix": 4,
        "computational efficiency": 3,
        "principal components": 3,
        "singular vector decomposition": 3,
        "pca implementations": 2,
        "axes": 2,
        "lowest eigenvalues": 2,
        "eigenpairs": 2,
        "explained variance": 2,
        "information": 2,
        "first principal component": 2,
        "second principal component": 2,
        "concatenated top k eigenvectors": 2,
        "maximum variance": 1,
        "machine learning algorithms": 1,
        "computer hardware": 1,
        "linear transformation methods": 1,
        "pattern classification problem": 1,
        "linear discriminant analysis": 1,
        "e": 1,
        "ctors": 1,
        "eigen": 1,
        "petal width": 1,
        "uci machine learning repository": 1,
        "tutorial": 1,
        "petal length": 1,
        "sepal length": 1,
        "python library": 1,
        "uci repository": 1,
        "flower sample": 1,
        "flower classes": 1,
        "standard": 1,
        "components": 1,
        "mean vector": 1,
        "numpy cov function": 1,
        "ance matrix": 1,
        "normalized covariance matrix": 1,
        "finance": 1,
        "standardized data": 1,
        "eigenvalue pairs": 1,
        "standardizing": 1
    },
    "anonymized datasets": {
        "tinder": 23,
        "beautiful soup library": 16,
        "conda package manager": 16,
        "tinder users": 11,
        "safe harbor method": 11,
        "population": 5,
        "sslerror": 3,
        "ssl module": 3,
        "https": 3,
        "zip code": 3,
        "error message": 2
    },
    "onymization": {
        "tinder": 23,
        "beautiful soup library": 16,
        "conda package manager": 16,
        "tinder users": 11,
        "safe harbor method": 11,
        "population": 5,
        "sslerror": 3,
        "ssl module": 3,
        "https": 3,
        "zip code": 3,
        "error message": 2
    },
    "dataprivacy": {
        "tinder": 23,
        "beautiful soup library": 16,
        "conda package manager": 16,
        "tinder users": 11,
        "safe harbor method": 11,
        "population": 5,
        "sslerror": 3,
        "ssl module": 3,
        "https": 3,
        "zip code": 3,
        "error message": 2
    },
    "datagathering": {
        "tinder": 23,
        "beautiful soup library": 16,
        "conda package manager": 16,
        "tinder users": 11,
        "safe harbor method": 11,
        "population": 5,
        "sslerror": 3,
        "ssl module": 3,
        "https": 3,
        "zip code": 3,
        "error message": 2
    },
    "safe harbor method": {
        "tinder": 23,
        "beautiful soup library": 16,
        "conda package manager": 16,
        "tinder users": 11,
        "safe harbor method": 11,
        "population": 5,
        "sslerror": 3,
        "ssl module": 3,
        "https": 3,
        "zip code": 3,
        "error message": 2
    },
    "individuals privacy": {
        "tinder": 23,
        "beautiful soup library": 16,
        "conda package manager": 16,
        "tinder users": 11,
        "safe harbor method": 11,
        "population": 5,
        "sslerror": 3,
        "ssl module": 3,
        "https": 3,
        "zip code": 3,
        "error message": 2
    },
    "safe harbour method": {
        "tinder": 23,
        "beautiful soup library": 16,
        "conda package manager": 16,
        "tinder users": 11,
        "safe harbor method": 11,
        "population": 5,
        "sslerror": 3,
        "ssl module": 3,
        "https": 3,
        "zip code": 3,
        "error message": 2
    },
    "random forest classification model": {
        "dummy variables": 21,
        "categorical features": 11,
        "purpose column": 11,
        "decisiontreeclassifier": 9,
        "decision tree model": 9,
        "dtree": 9,
        "decisiontreeclassifier()": 9,
        "confusion matrix": 9,
        "randomforestclassifier": 4,
        "random forest model": 4
    },
    "heaviside function": {
        "logistic function": 6,
        "conditional probability": 4,
        "gradient ascent": 4,
        "fudge factor": 4,
        "signature": 4,
        "heaviside function": 2,
        "lobsters example": 2,
        "contour plot": 2,
        "sigmoid elementwise": 2,
        "numpy matrix": 2,
        "gaussian distributions": 2,
        "maximum likelihood principle": 2,
        "objective function": 2,
        "arithm": 2,
        "joint probability": 2,
        "bernoulli trial": 2,
        "notational conventions": 2,
        "scalar argument": 2,
        "elementwise logarithm": 2,
        "truncated taylor series": 2,
        "scalar function": 2,
        "taylor approximation": 2,
        "mle": 2,
        "step iteration variable": 2,
        "column vector": 2,
        "matrix thetas": 2,
        "code skeleton": 2,
        "gradient ascent procedure": 2,
        "gradient ascent trajectory": 2,
        "approximation": 2,
        "taylor series approximation": 2,
        "newton step": 2,
        "moral equivalent": 2,
        "linear equations": 2,
        "multidimensional variables": 2,
        "scalar objective function": 2,
        "elementwise multiplication": 2,
        "elementwise product": 2,
        "mathematical function": 1,
        "linear discriminant function": 1,
        "linear discriminant": 1,
        "aviside function": 1,
        "arithmetic operators": 1,
        "elementwise operations": 1,
        "test code": 1,
        "synthetic data": 1
    },
    "selenium": {
        "html": 10,
        "restaurant names": 8,
        "soup object": 6,
        "html objct": 6,
        "bs4": 6,
        "google chrome": 6,
        "inspect": 6,
        "restaurant number of bookings": 4,
        "web scraper": 4,
        "restaurant prices": 4,
        "html page": 4,
        "commas": 4,
        "tag objects": 4,
        "python string": 4,
        "beautiful soup": 4,
        "tag object": 4,
        "restaurant locations": 4,
        "barmini": 4,
        "search results": 4
    },
    "clustering algorithms": {
        "clustering algorithms": 9,
        "eigenvectors": 6,
        "pca": 6,
        "unsupervised techniques": 6,
        "clustering parameters": 6,
        "flame dataset": 6,
        "plotting function": 5,
        "second principal components": 3,
        "point cloud": 3,
        "succeding component": 3,
        "residual noise": 3,
        "dimensionality reduction": 3,
        "principal component analysis": 3,
        "principal components": 3,
        "2d vectors": 3,
        "linear coefficients": 3,
        "pca space": 3,
        "iris data": 3,
        "hierarchical clustering": 3,
        "omerative": 3,
        "agg dataset": 3,
        "data matrix x": 2,
        "comp dataset": 2,
        "jain dataset": 2,
        "pathbased dataset": 2,
        "r15 dataset": 1
    },
    "metacharacters": {
        "test sentence": 13,
        "capital": 10,
        "regexes": 6,
        "consonants": 4,
        "challenge 7": 4,
        "challenge 6": 4,
        "regular expression": 4,
        "character classes": 4,
        "regex": 4,
        "metacharacters": 4,
        "parentheses": 4,
        "6": 3,
        "regular expressions": 3,
        "regular expression syntax": 3,
        "challenge 14": 3,
        "challenge 13": 3,
        "uring group skills": 3,
        "non-": 3,
        "match object": 2,
        "pattern object": 2,
        "us phone number": 2,
        "area code": 2,
        "match object instances": 1,
        "numeric codes": 1,
        "data entry errors": 1,
        "robots": 1,
        "challenge 15": 1
    },
    "dataframe structure": {
        "iloc": 9,
        "dfcars": 6,
        "listiness property": 6,
        "listiness": 4,
        "series objects": 2,
        "da rx4": 2,
        "mazda rx4": 2,
        "dictionary syntax": 2,
        "column": 2,
        "python variables": 2,
        "dictionary keys": 2,
        "complex indexing": 2,
        "list operations": 2,
        "statistics": 2,
        "containers": 2,
        "automobile data loaded": 2,
        "attribute shape": 2,
        "set length": 2,
        "len function": 2,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "indexing": 2,
        "loc property indexes": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "indented code block": {
        "list comprehensions": 6,
        "if statement": 4,
        "programming": 4,
        "docstring": 4,
        "keyword arguments": 4,
        "if code block": 2,
        "assignment": 2,
        "<div style": 2,
        "boolean value": 2,
        "boolean": 2,
        "else blocks": 2,
        "elif": 2,
        "continue statements": 2,
        "if block": 2,
        "nested indentation": 2,
        "integers": 2,
        "variable word": 2,
        "value word": 2,
        "iterators": 2,
        "enumerate()": 2,
        "loop iteration": 2,
        "multiple assignment": 2,
        "items()": 2,
        "even valued perfect squares": 2,
        "if statements": 2,
        "functions": 2,
        "code execution": 2,
        "code duplication": 2,
        "programming languages": 2,
        "print() function": 2,
        "python interpreter": 2,
        "exception": 2,
        "variable names": 2,
        "large programs": 2,
        "control flow structures": 2,
        "local scoping": 2,
        "variable scope": 2,
        "nameerror": 2,
        "variable": 2,
        "nested list": 2,
        "code block": 2
    },
    "toy dataset": {
        "computation time": 7,
        "nearest neighbor algorithm": 5,
        "digit recognition task": 4,
        "radial highways": 3,
        "residential land z": 3,
        "weighted distances": 3,
        "charles river dummy variable": 3,
        "rad index": 3,
        "tract bounds river": 3,
        "boston employment centres": 3,
        "descr attribute": 3,
        "non-retail business acres": 3,
        "black": 3,
        "nox nitric oxides concentration": 3,
        "crime rate": 3,
        "speedup": 3,
        "weekly time series": 3,
        "apple stock quarterly": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "training error": 2,
        "optimization": 2,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "outlier": 1,
        "test error": 1,
        "root mean squared error": 1,
        "average": 1,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1,
        "autoregressive model": 1
    },
    "bin edges": {
        "exponentially weighted functions": 6,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "matshow functions": 1,
        "matrices": 1,
        "bitmapped image file": 1,
        "imshow": 1,
        "color channels": 1,
        "grayscale image": 1,
        "autoregressive model": 1
    },
    "whitened measurements": {
        "ica": 7,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "covariant algorithm": 5,
        "kurtosis": 3,
        "covariance matrices": 2,
        "eigenvalue decomposition": 2,
        "sawtooth": 2,
        "sinewave": 2,
        "bias": 2,
        "scale changes": 2,
        "demixing matrices": 2,
        "xw plot": 1,
        "circular pattern": 1,
        "learning algorithm": 1,
        "matrix inversions": 1,
        "priors": 1,
        "symmetric": 1,
        "gray boxes": 1,
        "boxes": 1,
        "diagonal matrix": 1,
        "alogrithm": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "covariance": 1,
        "consistent algorithm": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "whitening process": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "berkeley crime calls": {
        "heatmap": 27,
        "folium map": 6,
        "map": 4,
        "folium": 4,
        "python visualizer": 4,
        "united states": 4,
        "key note": 4,
        "berkeley pd call data": 4,
        "calls table": 4,
        "longitude data": 4,
        "select function": 4,
        "heatmapwithtime": 4,
        "l": 3,
        "stacking function call": 3,
        "longitude": 3,
        "longitudes": 3,
        "usa": 2,
        "dummy location data": 1,
        "dates": 1,
        "constructor function": 1,
        "berkeley calls": 1,
        "transposed latitudes": 1,
        "call location data": 1
    },
    "source website": {
        "heatmap": 27,
        "folium map": 6,
        "map": 4,
        "folium": 4,
        "python visualizer": 4,
        "united states": 4,
        "key note": 4,
        "berkeley pd call data": 4,
        "calls table": 4,
        "longitude data": 4,
        "select function": 4,
        "heatmapwithtime": 4,
        "l": 3,
        "stacking function call": 3,
        "longitude": 3,
        "longitudes": 3,
        "usa": 2,
        "dummy location data": 1,
        "dates": 1,
        "constructor function": 1,
        "berkeley calls": 1,
        "transposed latitudes": 1,
        "call location data": 1
    },
    "skimage": {
        "cost array": 9,
        "seed points": 4,
        "command prompt": 3,
        "tesseract library": 3,
        "ocr": 3,
        "reading errors": 3,
        "tesseract": 3,
        "overlap region": 3,
        "utility function": 3,
        "construct cost array": 3,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "optimal path": 3,
        "mcp": 3,
        "ransac transform estimation": 3,
        "random element": 3,
        "negative mask": 3,
        "numpy masked array conventions": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "final mask": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1,
        "processed image": 1
    },
    "odds ratios": {
        "minority class": 6,
        "machine learning algorithms": 5,
        "gradient descent": 5,
        "euclidean distance": 5,
        "objective functions": 5,
        "feature scaling": 5,
        "statistical summery table": 5,
        "feature distributions": 5,
        "standardize": 5,
        "fair coin flip": 4,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "odds ratio": 1,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "iterative numerical optimization": {
        "gradient ascent": 5,
        "heaviside function": 4,
        "logistic function": 3,
        "fudge factor": 3,
        "numpy matrix": 2,
        "conditional probability": 2,
        "moral equivalent": 2,
        "mle": 2,
        "signature": 2,
        "preliminaries": 1,
        "marine biologists": 1,
        "predators": 1,
        "rock lobsters": 1,
        "median carapace": 1,
        "length": 1,
        "lobsters": 1,
        "binary label": 1,
        "initial dummy coordinate": 1,
        "binary vector": 1,
        "synthetic data sets": 1,
        "synthetic training set": 1,
        "synethetic data set": 1,
        "labeled data points": 1,
        "points matrix": 1,
        "numpy column vector labels": 1,
        "linear boundary": 1,
        "synthetic data example": 1,
        "linear discriminants": 1,
        "mathematical function": 1,
        "linear discriminant function": 1,
        "linear discriminant": 1,
        "aviside function": 1,
        "arithmetic operators": 1,
        "elementwise operations": 1,
        "test code": 1,
        "synthetic data": 1,
        "our plot": 1,
        "lobsters example": 1,
        "contour plot": 1,
        "sigmoid elementwise": 1,
        "gaussian distributions": 1,
        "statistics": 1,
        "normal equations": 1,
        "synthetic dataset": 1,
        "maximum likelihood estimation": 1,
        "maximum likelihood principle": 1,
        "objective function": 1,
        "arithm": 1,
        "joint probability": 1,
        "bernoulli trial": 1,
        "notational conventions": 1,
        "scalar argument": 1,
        "elementwise logarithm": 1,
        "least squares minimization": 1,
        "mle solution": 1,
        "numerical optimization procedures": 1,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "step size": 1,
        "numerical optimization": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "hessian": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1
    },
    "multiclass": {
        "gradient ascent": 5,
        "heaviside function": 4,
        "logistic function": 3,
        "fudge factor": 3,
        "numpy matrix": 2,
        "conditional probability": 2,
        "moral equivalent": 2,
        "mle": 2,
        "signature": 2,
        "preliminaries": 1,
        "marine biologists": 1,
        "predators": 1,
        "rock lobsters": 1,
        "median carapace": 1,
        "length": 1,
        "lobsters": 1,
        "binary label": 1,
        "initial dummy coordinate": 1,
        "binary vector": 1,
        "synthetic data sets": 1,
        "synthetic training set": 1,
        "synethetic data set": 1,
        "labeled data points": 1,
        "points matrix": 1,
        "numpy column vector labels": 1,
        "linear boundary": 1,
        "synthetic data example": 1,
        "linear discriminants": 1,
        "mathematical function": 1,
        "linear discriminant function": 1,
        "linear discriminant": 1,
        "aviside function": 1,
        "arithmetic operators": 1,
        "elementwise operations": 1,
        "test code": 1,
        "synthetic data": 1,
        "our plot": 1,
        "lobsters example": 1,
        "contour plot": 1,
        "sigmoid elementwise": 1,
        "gaussian distributions": 1,
        "statistics": 1,
        "normal equations": 1,
        "synthetic dataset": 1,
        "maximum likelihood estimation": 1,
        "maximum likelihood principle": 1,
        "objective function": 1,
        "arithm": 1,
        "joint probability": 1,
        "bernoulli trial": 1,
        "notational conventions": 1,
        "scalar argument": 1,
        "elementwise logarithm": 1,
        "least squares minimization": 1,
        "mle solution": 1,
        "numerical optimization procedures": 1,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "step size": 1,
        "numerical optimization": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "hessian": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1
    },
    "labeled data points": {
        "gradient ascent": 5,
        "heaviside function": 4,
        "logistic function": 3,
        "fudge factor": 3,
        "numpy matrix": 2,
        "conditional probability": 2,
        "moral equivalent": 2,
        "mle": 2,
        "signature": 2,
        "preliminaries": 1,
        "marine biologists": 1,
        "predators": 1,
        "rock lobsters": 1,
        "median carapace": 1,
        "length": 1,
        "lobsters": 1,
        "binary label": 1,
        "initial dummy coordinate": 1,
        "binary vector": 1,
        "synthetic data sets": 1,
        "synthetic training set": 1,
        "synethetic data set": 1,
        "labeled data points": 1,
        "points matrix": 1,
        "numpy column vector labels": 1,
        "linear boundary": 1,
        "synthetic data example": 1,
        "linear discriminants": 1,
        "mathematical function": 1,
        "linear discriminant function": 1,
        "linear discriminant": 1,
        "aviside function": 1,
        "arithmetic operators": 1,
        "elementwise operations": 1,
        "test code": 1,
        "synthetic data": 1,
        "our plot": 1,
        "lobsters example": 1,
        "contour plot": 1,
        "sigmoid elementwise": 1,
        "gaussian distributions": 1,
        "statistics": 1,
        "normal equations": 1,
        "synthetic dataset": 1,
        "maximum likelihood estimation": 1,
        "maximum likelihood principle": 1,
        "objective function": 1,
        "arithm": 1,
        "joint probability": 1,
        "bernoulli trial": 1,
        "notational conventions": 1,
        "scalar argument": 1,
        "elementwise logarithm": 1,
        "least squares minimization": 1,
        "mle solution": 1,
        "numerical optimization procedures": 1,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "step size": 1,
        "numerical optimization": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "hessian": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1
    },
    "ab": {
        "gradient ascent": 5,
        "heaviside function": 4,
        "logistic function": 3,
        "fudge factor": 3,
        "numpy matrix": 2,
        "conditional probability": 2,
        "moral equivalent": 2,
        "mle": 2,
        "signature": 2,
        "preliminaries": 1,
        "marine biologists": 1,
        "predators": 1,
        "rock lobsters": 1,
        "median carapace": 1,
        "length": 1,
        "lobsters": 1,
        "binary label": 1,
        "initial dummy coordinate": 1,
        "binary vector": 1,
        "synthetic data sets": 1,
        "synthetic training set": 1,
        "synethetic data set": 1,
        "labeled data points": 1,
        "points matrix": 1,
        "numpy column vector labels": 1,
        "linear boundary": 1,
        "synthetic data example": 1,
        "linear discriminants": 1,
        "mathematical function": 1,
        "linear discriminant function": 1,
        "linear discriminant": 1,
        "aviside function": 1,
        "arithmetic operators": 1,
        "elementwise operations": 1,
        "test code": 1,
        "synthetic data": 1,
        "our plot": 1,
        "lobsters example": 1,
        "contour plot": 1,
        "sigmoid elementwise": 1,
        "gaussian distributions": 1,
        "statistics": 1,
        "normal equations": 1,
        "synthetic dataset": 1,
        "maximum likelihood estimation": 1,
        "maximum likelihood principle": 1,
        "objective function": 1,
        "arithm": 1,
        "joint probability": 1,
        "bernoulli trial": 1,
        "notational conventions": 1,
        "scalar argument": 1,
        "elementwise logarithm": 1,
        "least squares minimization": 1,
        "mle solution": 1,
        "numerical optimization procedures": 1,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "step size": 1,
        "numerical optimization": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "hessian": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1
    },
    "conditional statements": {
        "bfs": 10,
        "breadth first search": 8,
        "integers": 6,
        "warmup section": 5,
        "integer": 4,
        "overlap laughter": 4,
        "list comprehensions": 4,
        "vertex names": 4,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3,
        "dist array": 3,
        "prev array": 3,
        "depth first search": 3,
        "connected components": 2,
        "adjacency matrix": 1,
        "algebraic connectivity": 1,
        "laplacian matrix": 1
    },
    "zip code": {
        "tinder": 23,
        "tinder users": 11,
        "safe harbor method": 11,
        "postal code": 7,
        "zip code": 5,
        "extended zip codes": 5,
        "extended postal codes": 5,
        "population": 5,
        "zip codes": 4,
        "missing zip codes": 2,
        "businesses": 1,
        "fillna": 1,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94602": 1,
        "94545": 1,
        "business name": 1,
        "zip": 1,
        "search engine": 1
    },
    "granularity": {
        "postal code": 13,
        "zip code": 8,
        "bus data frame": 6,
        "business table": 6,
        "extended zip codes": 5,
        "extended postal codes": 5,
        "zip codes": 4,
        "longitude": 4,
        "latitude": 4,
        "variable postal code": 4,
        "business dataframe": 3,
        "population": 3,
        "nonmissing values": 3,
        "python type command": 2,
        "businesses": 2,
        "missing zip codes": 2,
        "inspection": 2,
        "inspection dataframe": 2,
        "fillna": 1,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94602": 1,
        "94545": 1,
        "business name": 1,
        "zip": 1,
        "search engine": 1,
        "longitude values": 1
    },
    "signal process": {
        "attributes": 8,
        "attribute values": 4,
        "train file": 4,
        "test file": 4,
        "test data": 4,
        "standardize function": 4,
        "tensorflow": 3,
        "input data pipeline": 2,
        "sampled data": 2,
        "particle detectors": 2,
        "higgs dataset": 2,
        "background": 2,
        "monte carlo simulations": 2,
        "kinematic properties": 2,
        "signal process": 2,
        "higgs bosons": 2,
        "local testing": 2,
        "edx": 2,
        "test datasets": 2,
        "network training": 2,
        "configuration file": 2,
        "debugging purposes": 2,
        "config file": 2,
        "yaml file": 2,
        "file": 2,
        "feature vectors": 2,
        "training examples": 2,
        "wikipedia feature scaling article": 2,
        "distribution mean": 2,
        "weights": 1,
        "tf variables": 1,
        "biases": 1,
        "mini batch": 1,
        "tf graph": 1,
        "tf placeholders": 1,
        "helper function": 1,
        "bias dictionary": 1,
        "learnable parameters": 1,
        "bias matrices": 1,
        "network model": 1,
        "weights dictionary": 1,
        "training time": 1,
        "feedforward network model": 1,
        "hidden layers": 1,
        "output layer": 1,
        "sigmoid activation function": 1
    },
    "higgs bosons": {
        "attributes": 8,
        "attribute values": 4,
        "train file": 4,
        "test file": 4,
        "test data": 4,
        "standardize function": 4,
        "tensorflow": 3,
        "input data pipeline": 2,
        "sampled data": 2,
        "particle detectors": 2,
        "higgs dataset": 2,
        "background": 2,
        "monte carlo simulations": 2,
        "kinematic properties": 2,
        "signal process": 2,
        "higgs bosons": 2,
        "local testing": 2,
        "edx": 2,
        "test datasets": 2,
        "network training": 2,
        "configuration file": 2,
        "debugging purposes": 2,
        "config file": 2,
        "yaml file": 2,
        "file": 2,
        "feature vectors": 2,
        "training examples": 2,
        "wikipedia feature scaling article": 2,
        "distribution mean": 2,
        "weights": 1,
        "tf variables": 1,
        "biases": 1,
        "mini batch": 1,
        "tf graph": 1,
        "tf placeholders": 1,
        "helper function": 1,
        "bias dictionary": 1,
        "learnable parameters": 1,
        "bias matrices": 1,
        "network model": 1,
        "weights dictionary": 1,
        "training time": 1,
        "feedforward network model": 1,
        "hidden layers": 1,
        "output layer": 1,
        "sigmoid activation function": 1
    },
    "babyname datasets": {
        "cache": 6,
        "fetch": 6,
        "end index": 6,
        "row id": 6,
        "column id": 6,
        "compound expressions": 5,
        "boolean arrays": 5,
        "data aggregration": 4,
        "mkdir()": 3,
        "()": 3,
        "path object": 3,
        "os library": 3,
        "functionality": 3,
        "pandas row index": 3,
        "python slicing functionality": 3,
        "pandas slicing function": 3,
        "iloc[]": 3,
        "row index": 3,
        "loc[]": 3,
        "array slicing syntax": 3,
        "frame": 2,
        "tabular data": 1,
        "groupby function": 1,
        "groupby animation": 1,
        "rotten tomatoes": 1,
        "revenue": 1,
        "helper": 1,
        "row selection": 1,
        "label column selection": 1,
        "column names": 1
    },
    "machine learnist": {
        "magic function": 8,
        "pickle module": 6,
        "working directory": 6,
        "enron data": 6,
        "python dictionary": 6,
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2
    },
    "email corpus": {
        "magic function": 8,
        "pickle module": 6,
        "working directory": 6,
        "enron data": 6,
        "python dictionary": 6,
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2
    },
    "training set size": {
        "magic function": 8,
        "pickle module": 6,
        "working directory": 6,
        "enron data": 6,
        "python dictionary": 6,
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2
    },
    "data modeling section": {
        "magic function": 8,
        "pickle module": 6,
        "working directory": 6,
        "enron data": 6,
        "python dictionary": 6,
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2
    },
    "enron finance": {
        "magic function": 8,
        "pickle module": 6,
        "working directory": 6,
        "enron data": 6,
        "python dictionary": 6,
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2
    },
    "email data": {
        "magic function": 8,
        "pickle module": 6,
        "working directory": 6,
        "enron data": 6,
        "python dictionary": 6,
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2
    },
    "diction": {
        "magic function": 8,
        "pickle module": 6,
        "working directory": 6,
        "enron data": 6,
        "python dictionary": 6,
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2
    },
    "nested data structures": {
        "magic function": 8,
        "pickle module": 6,
        "working directory": 6,
        "enron data": 6,
        "python dictionary": 6,
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2
    },
    "modeling": {
        "pipeline": 6,
        "target": 4,
        "randomforestregressor model": 4,
        "gridsearchcv": 4,
        "tweet list": 4,
        "positive sentiment list": 4,
        "lasso": 3,
        "sklearn object": 3,
        "scaler object": 3,
        "randomforestregressor": 2,
        "model parameters": 2,
        "university of pittsburgh": 2,
        "google scholar": 2,
        "positive sentiment": 2,
        "negative sentiment": 2,
        "internet": 2,
        "positive polarity words": 2,
        "word stems": 2,
        "web address": 2,
        "file name": 2,
        "current directory": 2,
        "quotation marks": 2,
        "url path": 2,
        "string object": 2,
        "windows computer": 2,
        "operating system": 2,
        "positive words": 2,
        "positive texts": 2,
        "positive counts": 2,
        "squared loss function": 1,
        "loss calculation": 1,
        "selectkbest": 1,
        "shufflesplit": 1,
        "scaler": 1,
        "preprocessing steps": 1,
        "optimal pipeline": 1,
        "optimal preprocessing": 1,
        "pipelines": 1,
        "model selection": 1,
        "pre": 1,
        "hyperparameter tuning": 1,
        "sql query": 1,
        "presidential election": 1,
        "measurement": 1,
        "caluclation": 1
    },
    "binary indicator variables": {
        "helper function": 8,
        "odds ratio": 4,
        "ucla": 4,
        "admission rate": 4,
        "confidence interval": 4,
        "uncertainty": 4,
        "predicted probability": 4,
        "maximum value": 4,
        "cartesian()": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "gpa": 4,
        "prestige": 4,
        "flight delay prediction": 3,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2,
        "binary indicators": 2,
        "intercept": 2,
        "float64": 1,
        "int64": 1
    },
    "data generating function": {
        "kernel matrix": 7,
        "kernel function": 4,
        "gaussian process regression": 4,
        "univariate problem": 4,
        "training points": 4,
        "data vectors": 3,
        "marginal distribution": 3,
        "vectorization": 3,
        "covariance": 3,
        "inner loop": 3,
        "mean function": 3,
        "model uncertainty": 3,
        "bishop": 3,
        "sample mean functions": 3,
        "dashed line": 3,
        "theta values": 3,
        "uncertainty": 3,
        "predictive distribution": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "covariance matrix": 3,
        "generative process": 3,
        "conditional models": 3,
        "hyperparameters": 2,
        "target noise": 2,
        "periodic data generator": 2,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "periodic data": {
        "kernel matrix": 7,
        "kernel function": 4,
        "gaussian process regression": 4,
        "univariate problem": 4,
        "training points": 4,
        "data vectors": 3,
        "marginal distribution": 3,
        "vectorization": 3,
        "covariance": 3,
        "inner loop": 3,
        "mean function": 3,
        "model uncertainty": 3,
        "bishop": 3,
        "sample mean functions": 3,
        "dashed line": 3,
        "theta values": 3,
        "uncertainty": 3,
        "predictive distribution": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "covariance matrix": 3,
        "generative process": 3,
        "conditional models": 3,
        "hyperparameters": 2,
        "target noise": 2,
        "periodic data generator": 2,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "cs students": {
        "women": 8,
        "cogsci": 8,
        "compsci": 8,
        "majors": 8,
        "average height values": 6,
        "pivot table": 6,
        "confounding variable": 6,
        "ordinary least squares": 6,
        "linear models": 6,
        "design matrices": 6,
        "patsy": 6,
        "average heights": 4,
        "alpha value": 4,
        "statistical test": 4,
        "significance": 4
    },
    "enron data": {
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "shell companies": 6,
        "electrical grid failures": 6,
        "enron fraud": 6,
        "frozen concentrated orange juice futures": 6,
        "google sleuthing": 6,
        "enron": 6,
        "blockbuster movies": 6,
        "notebook": 4,
        "magic command": 4,
        "magic function": 4,
        "magic functions": 4,
        "ellipses": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2
    },
    "programming assignment 1": {
        "collinear points": 10,
        "unit tests": 10,
        "spark exercise": 9,
        "helper functions": 4,
        "collinearity": 3,
        "geometry": 3,
        "pyspark library functions": 3,
        "v": 3,
        "test cases": 3,
        "hidden test cases": 3,
        "hidden tests": 3,
        "assert statement unit test cells": 3,
        "collin": 3,
        "grading": 3,
        "pyspark": 3,
        "notebook setup": 3,
        "coll": 3,
        "function definitions": 3,
        "non_duplicates": 3,
        "rdd": 3,
        "cartesian product": 3,
        "line segment": 3,
        "r": 1,
        "spark rdd api": 1,
        "assert statement unit tests": 1
    },
    "multidimensional poverty index": {
        "mpi": 12,
        "linear regression model": 7,
        "dependent variable": 6,
        "independent variables": 6,
        "data preparation": 4,
        "libraries": 4,
        "country mapper": 4,
        "loans data": 4,
        "mpi poverty data": 4,
        "data anomalies": 4,
        "visual distribution": 4,
        "mp": 4,
        "mpi index": 4,
        "country code mapper": 4,
        "test assumptions": 4,
        "dependent variables": 3,
        "multicollinearity": 3,
        "linear relationship": 3,
        "average night light": 3,
        "avgnightlight": 2,
        "model evaluation": 1
    },
    "boolean values": {
        "values": 7,
        "cs data": 6,
        "arithmetic operators": 6,
        "donald knuth": 5,
        "string method lower": 5,
        "average heights": 4,
        "alpha value": 4,
        "statistical test": 4,
        "significance": 4,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "majors": 4,
        "lists": 4,
        "average height values": 3,
        "pivot table": 3,
        "confounding variable": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3,
        "square brackets": 3
    },
    "difference sizes": {
        "sampling distribution": 11,
        "null hypothesis": 6,
        "lognormal distribution": 4,
        "clt": 4,
        "permutation": 4,
        "student t distribution": 4,
        "analytic distribution": 4,
        "central limit theorem": 4,
        "sampling distributions": 3,
        "standard error": 3,
        "normal probability plots": 2,
        "exponential variates": 2,
        "pareto distribution": 2,
        "infinite variance": 2,
        "correlated normal values": 2,
        "random variates": 2,
        "correlated values": 2,
        "probabilities": 2,
        "hypothesistest": 2,
        "cdf": 2,
        "simulation": 2,
        "birth weight": 2,
        "birth weights": 2,
        "multiplicative factors": 2,
        "random value": 2,
        "adult weights": 2,
        "difference in means": 2,
        "confidence intervals": 2,
        "confidence interval": 2,
        "gender gap": 1,
        "student engineering teams": 1,
        "class projects": 1,
        "standard errors": 1
    },
    "independent variates": {
        "sampling distribution": 11,
        "null hypothesis": 6,
        "lognormal distribution": 4,
        "clt": 4,
        "permutation": 4,
        "student t distribution": 4,
        "analytic distribution": 4,
        "central limit theorem": 4,
        "sampling distributions": 3,
        "standard error": 3,
        "normal probability plots": 2,
        "exponential variates": 2,
        "pareto distribution": 2,
        "infinite variance": 2,
        "correlated normal values": 2,
        "random variates": 2,
        "correlated values": 2,
        "probabilities": 2,
        "hypothesistest": 2,
        "cdf": 2,
        "simulation": 2,
        "birth weight": 2,
        "birth weights": 2,
        "multiplicative factors": 2,
        "random value": 2,
        "adult weights": 2,
        "difference in means": 2,
        "confidence intervals": 2,
        "confidence interval": 2,
        "gender gap": 1,
        "student engineering teams": 1,
        "class projects": 1,
        "standard errors": 1
    },
    "travel time": {
        "docsting": 14,
        "rug plot": 13,
        "lesson notebook": 11,
        "test cases": 8,
        "kde": 6,
        "airtime column": 5,
        "willard airport": 5,
        "plot rug plots": 5,
        "random jitter": 5,
        "plot": 3,
        "sample": 3,
        "gaussian kernels": 3,
        "docstring": 2,
        "optimal kde bandwidth": 2,
        "guassian kernels": 2,
        "plot histograms": 1,
        "kernel density estimate": 1
    },
    "kernel density estimation": {
        "docsting": 14,
        "rug plot": 13,
        "lesson notebook": 11,
        "test cases": 8,
        "kde": 6,
        "airtime column": 5,
        "willard airport": 5,
        "plot rug plots": 5,
        "random jitter": 5,
        "plot": 3,
        "sample": 3,
        "gaussian kernels": 3,
        "docstring": 2,
        "optimal kde bandwidth": 2,
        "guassian kernels": 2,
        "plot histograms": 1,
        "kernel density estimate": 1
    },
    "rug plots": {
        "docsting": 14,
        "rug plot": 13,
        "lesson notebook": 11,
        "test cases": 8,
        "kde": 6,
        "airtime column": 5,
        "willard airport": 5,
        "plot rug plots": 5,
        "random jitter": 5,
        "plot": 3,
        "sample": 3,
        "gaussian kernels": 3,
        "docstring": 2,
        "optimal kde bandwidth": 2,
        "guassian kernels": 2,
        "plot histograms": 1,
        "kernel density estimate": 1
    },
    "folium labs": {
        "heatmap": 27,
        "folium map": 6,
        "map": 4,
        "folium": 4,
        "python visualizer": 4,
        "united states": 4,
        "berkeley pd call data": 4,
        "calls table": 4,
        "longitude data": 4,
        "select function": 4,
        "heatmapwithtime": 4,
        "l": 3,
        "stacking function call": 3,
        "longitude": 3,
        "longitudes": 3,
        "usa": 2,
        "dummy location data": 1,
        "dates": 1,
        "constructor function": 1,
        "berkeley calls": 1,
        "transposed latitudes": 1,
        "call location data": 1
    },
    "interactive heat map": {
        "heatmap": 27,
        "folium map": 6,
        "map": 4,
        "folium": 4,
        "python visualizer": 4,
        "united states": 4,
        "berkeley pd call data": 4,
        "calls table": 4,
        "longitude data": 4,
        "select function": 4,
        "heatmapwithtime": 4,
        "l": 3,
        "stacking function call": 3,
        "longitude": 3,
        "longitudes": 3,
        "usa": 2,
        "dummy location data": 1,
        "dates": 1,
        "constructor function": 1,
        "berkeley calls": 1,
        "transposed latitudes": 1,
        "call location data": 1
    },
    "pareto distribution": {
        "pareto world": 8,
        "exponential distribution": 7,
        "pareto model": 5,
        "lognormal model": 5,
        "normal probability plot": 5,
        "ccdf": 5,
        "straight": 5,
        "pareto variate": 5,
        "blue man group": 5,
        "stats": 5,
        "analytic distributions": 5,
        "scipy": 5,
        "frozen random variable": 5,
        "pareto distribution": 4,
        "human height": 4,
        "mean height": 4,
        "weibull distribution": 2,
        "cdf": 1,
        "failure analysis": 1,
        "empirical distribution": 1,
        "analytic distribution": 1,
        "random values": 1
    },
    "pareto cdf": {
        "pareto world": 8,
        "exponential distribution": 7,
        "pareto model": 5,
        "lognormal model": 5,
        "normal probability plot": 5,
        "ccdf": 5,
        "straight": 5,
        "pareto variate": 5,
        "blue man group": 5,
        "stats": 5,
        "analytic distributions": 5,
        "scipy": 5,
        "frozen random variable": 5,
        "pareto distribution": 4,
        "human height": 4,
        "mean height": 4,
        "weibull distribution": 2,
        "cdf": 1,
        "failure analysis": 1,
        "empirical distribution": 1,
        "analytic distribution": 1,
        "random values": 1
    },
    "student id": {
        "student id number": 7,
        "github username": 7,
        "steps data": 5,
        "email address": 5,
        "outlier": 4,
        "step values": 4,
        "age histogram": 4,
        "0 steps": 4,
        "step data": 4,
        "outliers": 4,
        "ordinary least squares": 3,
        "linearmodels": 3,
        "linear models": 3,
        "design matrices": 3,
        "gaussian curve": 3,
        "steps variable plot": 2,
        "default value": 2,
        "python dictionary comprehension": 2,
        "zip function": 2,
        "income spectrum": 2,
        "course id": 2,
        "0 incomes": 2,
        "income axis": 2,
        "replotting": 1,
        "data transformation": 1,
        "income data": 1,
        "income": 1,
        "iterable": 1,
        "enumerate function": 1,
        "anaconda": 1,
        "data science modules": 1,
        "0 income": 1,
        "income graph": 1
    },
    "kaggle competition": {
        "titanic": 10,
        "kaggle": 8,
        "women": 6,
        "age": 5,
        "predictive modelling": 5,
        "test sets": 5,
        "labelled data": 5,
        "analytics competitions": 5,
        "model training": 5,
        "bar plot": 5,
        "kaggle data documentation": 4,
        "datatypes": 4,
        "numeric columns": 4,
        "data manipulation": 3,
        "passengerid": 3,
        "response variable": 3,
        "observation": 3,
        "titanic dataset feature": 2,
        "bar plots": 2,
        "men": 1
    },
    "latent space": {
        "latent space": 15,
        "mixing coefficients": 10,
        "handwriting styles": 10,
        "multivariate bernoulli distribution": 10,
        "vector representation": 10,
        "multivariate": 10,
        "logvar": 10,
        "misclassifications": 5,
        "data labels": 5,
        "hyperparameters": 3
    },
    "chinook database": {
        "chinook database": 14,
        "genre table": 10,
        "sql queries": 7,
        "music": 7,
        "chinookdatabase": 7,
        "sqlalchemy engine": 7,
        "sql select statement": 7,
        "limit": 7,
        "track table": 6,
        "mediatype table": 3,
        "t4": 2,
        "t5": 2,
        "t6": 1,
        "sql query": 1,
        "unitprice": 1,
        "t7": 1,
        "j1": 1,
        "average track length": 1,
        "genre tables": 1,
        "genreid": 1,
        "table information": 1
    },
    "inspection": {
        "request rates": 12,
        "cpu": 10,
        "total request rate": 9,
        "data wrangling": 6,
        "web request": 6,
        "web server": 6,
        "loaded data": 6,
        "head command": 6,
        "cpu column": 6,
        "constant term": 6,
        "coefficient": 4,
        "predict method": 3,
        "x matrix": 3,
        "request": 2,
        "cpu load": 2,
        "width variable": 1
    },
    "data import": {
        "request rates": 12,
        "cpu": 10,
        "total request rate": 9,
        "data wrangling": 6,
        "web request": 6,
        "web server": 6,
        "loaded data": 6,
        "head command": 6,
        "cpu column": 6,
        "constant term": 6,
        "coefficient": 4,
        "predict method": 3,
        "x matrix": 3,
        "request": 2,
        "cpu load": 2,
        "width variable": 1
    },
    "word counts": {
        "graphlab create": 4,
        "majority class classifier": 4,
        "logistic regression classifier": 3,
        "false positives": 3,
        "subset": 2,
        "row index": 2,
        "negative sentiments": 2,
        "ratings": 2,
        "word counts": 2,
        "test sets": 2,
        "precision": 2,
        "recall": 2,
        "amazon dataset": 2,
        "sentiment": 2,
        "performance metric": 2,
        "correctly classified data points": 2,
        "total data points": 2,
        "majority": 2,
        "baseline": 2,
        "majority classifier": 2,
        "majority class prediction": 2,
        "false negatives": 2,
        "confusion matrix": 2,
        "true negatives": 2,
        "true positives": 2,
        "incorrect predictions": 2,
        "binary classification": 2,
        "quiz": 2,
        "data1": 1,
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1,
        "correctly classified reviews": 1,
        "baby product": 1,
        "negative reviews": 1,
        "false alarms": 1,
        "log scale": 1,
        "2d scatter plot": 1,
        "line chart": 1
    },
    "downsampling": {
        "exponentially weighted functions": 6,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "aggregation": {
        "exponentially weighted functions": 6,
        "stocks": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "datetimeindex": 3,
        "time axis": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "exponentialy weighted rolling functions": 3,
        "decay factor": 3,
        "shift operators": 3,
        "rolling correlation function": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "recall": {
        "graphlab create": 6,
        "majority class classifier": 6,
        "false positives": 5,
        "performance metric": 4,
        "correctly classified data points": 4,
        "total data points": 4,
        "false negatives": 4,
        "confusion matrix": 4,
        "true negatives": 4,
        "true positives": 4,
        "incorrect predictions": 4,
        "binary classification": 4,
        "quiz": 4,
        "logistic regression classifier": 3,
        "negative sentiments": 2,
        "ratings": 2,
        "word counts": 2,
        "test sets": 2,
        "precision": 2,
        "recall": 2,
        "amazon dataset": 2,
        "sentiment": 2,
        "majority": 2,
        "baseline": 2,
        "majority classifier": 2,
        "majority class prediction": 2,
        "correctly classified reviews": 1,
        "baby product": 1,
        "negative reviews": 1,
        "false alarms": 1
    },
    "inplace parameter": {
        "cache": 6,
        "fetch": 6,
        "end index": 6,
        "row id": 6,
        "column id": 6,
        "compound expressions": 5,
        "boolean arrays": 5,
        "data aggregration": 4,
        "mkdir()": 3,
        "()": 3,
        "path object": 3,
        "os library": 3,
        "functionality": 3,
        "pandas row index": 3,
        "python slicing functionality": 3,
        "pandas slicing function": 3,
        "iloc[]": 3,
        "row index": 3,
        "loc[]": 3,
        "array slicing syntax": 3,
        "frame": 2,
        "tabular data": 1,
        "groupby function": 1,
        "groupby animation": 1,
        "rotten tomatoes": 1,
        "revenue": 1
    },
    "helper": {
        "cache": 6,
        "fetch": 6,
        "end index": 6,
        "row id": 6,
        "column id": 6,
        "compound expressions": 5,
        "boolean arrays": 5,
        "data aggregration": 4,
        "mkdir()": 3,
        "()": 3,
        "path object": 3,
        "os library": 3,
        "functionality": 3,
        "pandas row index": 3,
        "python slicing functionality": 3,
        "pandas slicing function": 3,
        "iloc[]": 3,
        "row index": 3,
        "loc[]": 3,
        "array slicing syntax": 3,
        "frame": 2,
        "tabular data": 1,
        "groupby function": 1,
        "groupby animation": 1,
        "rotten tomatoes": 1,
        "revenue": 1
    },
    "json files": {
        "tfidfvectorizer": 9,
        "default parameters": 9,
        "unigrams": 9,
        "stop words": 9,
        "minimum feature term": 7,
        "bigrams": 7,
        "maximum frequency": 7,
        "linearsvc": 7,
        "trigrams": 7,
        "code cell": 3,
        "tokenize method": 3,
        "porter stemmer": 3,
        "kmeans": 3,
        "clustering analysis": 2,
        "cluster labels": 1,
        "12 angry men": 1
    },
    "numpy data type": {
        "jupyter": 6,
        "numerical differentiation": 6,
        "math operations": 3,
        "docs": 3,
        "ys": 3,
        "sin": 3,
        "linspace function": 3,
        "np": 3,
        "xs": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "derivative": 3,
        "50x50 array": 2,
        "indexing": 2,
        "x": 2,
        "file1": 2,
        "colors": 2,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "stackoverflow": 1,
        "stack overflow": 1,
        "python list": 1,
        "pixel triplets": 1,
        "image processing": 1,
        "image": 1,
        "image1": 1,
        "string method split": 1,
        "color intensity": 1,
        "text file": 1,
        "expanded image": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1,
        "summer images": 1
    },
    "dirchilet distribution": {
        "counts": 10,
        "probability model": 6,
        "dirchilet distribution": 6,
        "binomial model": 6,
        "election": 6,
        "case study": 6,
        "grand old party": 6,
        "bayesian analysis": 6,
        "election88": 6,
        "age variable": 5,
        "age": 4,
        "polling data": 4,
        "bush support": 3,
        "groupby method": 3,
        "polling": 1,
        "electoral data": 1,
        "bayesian computation": 1,
        "closed form equation": 1,
        "bayesian formula": 1,
        "binomial distribution": 1,
        "probability": 1,
        "gamma function": 1,
        "gamma funciton": 1,
        "gammafunction": 1
    },
    "logistic regression performance": {
        "minority class": 6,
        "machine learning algorithms": 5,
        "gradient descent": 5,
        "euclidean distance": 5,
        "objective functions": 5,
        "feature scaling": 5,
        "statistical summery table": 5,
        "feature distributions": 5,
        "standardize": 5,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "predictive performance": {
        "minority class": 6,
        "machine learning algorithms": 5,
        "gradient descent": 5,
        "euclidean distance": 5,
        "objective functions": 5,
        "feature scaling": 5,
        "statistical summery table": 5,
        "feature distributions": 5,
        "standardize": 5,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "binary values": {
        "minority class": 6,
        "machine learning algorithms": 5,
        "gradient descent": 5,
        "euclidean distance": 5,
        "objective functions": 5,
        "feature scaling": 5,
        "statistical summery table": 5,
        "feature distributions": 5,
        "standardize": 5,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "churn column": {
        "minority class": 6,
        "machine learning algorithms": 5,
        "gradient descent": 5,
        "euclidean distance": 5,
        "objective functions": 5,
        "feature scaling": 5,
        "statistical summery table": 5,
        "feature distributions": 5,
        "standardize": 5,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "area code": {
        "minority class": 6,
        "machine learning algorithms": 5,
        "gradient descent": 5,
        "euclidean distance": 5,
        "objective functions": 5,
        "feature scaling": 5,
        "statistical summery table": 5,
        "feature distributions": 5,
        "standardize": 5,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "bar plots": {
        "line plot": 6,
        "bar plot": 6,
        "style sheet": 6,
        "solid green line": 6,
        "indus": 6,
        "housing data": 6,
        "blue dashed line": 6,
        "grouped histograms": 4,
        "ots": 4,
        "grouped box plots": 4,
        "statistics plotting library": 4,
        "title functions": 4,
        "motivational plots": 4,
        "flowchart": 4,
        "boston data dictionary": 4,
        "matplotlib commands": 4,
        "bar chart": 4,
        "horizontal bars": 4
    },
    "reuters corpus": {
        "tfidfvectorizer": 9,
        "default parameters": 9,
        "unigrams": 9,
        "stop words": 9,
        "minimum feature term": 7,
        "bigrams": 7,
        "maximum frequency": 7,
        "linearsvc": 7,
        "trigrams": 7,
        "code cell": 3,
        "tokenize method": 3,
        "porter stemmer": 3,
        "kmeans": 3,
        "clustering analysis": 2,
        "cluster labels": 1
    },
    "ltk docs": {
        "tfidfvectorizer": 9,
        "default parameters": 9,
        "unigrams": 9,
        "stop words": 9,
        "minimum feature term": 7,
        "bigrams": 7,
        "maximum frequency": 7,
        "linearsvc": 7,
        "trigrams": 7,
        "code cell": 3,
        "tokenize method": 3,
        "porter stemmer": 3,
        "kmeans": 3,
        "clustering analysis": 2,
        "cluster labels": 1
    },
    "python import json": {
        "tfidfvectorizer": 9,
        "default parameters": 9,
        "unigrams": 9,
        "stop words": 9,
        "minimum feature term": 7,
        "bigrams": 7,
        "maximum frequency": 7,
        "linearsvc": 7,
        "trigrams": 7,
        "code cell": 3,
        "tokenize method": 3,
        "porter stemmer": 3,
        "kmeans": 3,
        "clustering analysis": 2,
        "cluster labels": 1
    },
    "prestige column": {
        "helper function": 8,
        "odds ratio": 4,
        "ucla": 4,
        "admission rate": 4,
        "confidence interval": 4,
        "uncertainty": 4,
        "predicted probability": 4,
        "maximum value": 4,
        "cartesian()": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "gpa": 4,
        "prestige": 4,
        "flight delay prediction": 3,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "prestige": {
        "helper function": 8,
        "odds ratio": 4,
        "ucla": 4,
        "admission rate": 4,
        "confidence interval": 4,
        "uncertainty": 4,
        "predicted probability": 4,
        "maximum value": 4,
        "cartesian()": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "gpa": 4,
        "prestige": 4,
        "flight delay prediction": 3,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "sigmoid function": {
        "error functions": 15,
        "error function": 12,
        "predicted class": 10,
        "sigmoid function": 9,
        "gradient descent": 7,
        "tensorflow": 4,
        "learning rate": 3,
        "total cost function": 2,
        "last function approximation": 2,
        "learning curve": 2,
        "regularization": 1,
        "predict()": 1,
        "correct guesses": 1,
        "guessed classes": 1,
        "predicted exam results": 1,
        "true labels": 1,
        "trained model": 1,
        "input variable": 1,
        "mnist dataset": 1,
        "bias vectors": 1,
        "gradient descent training": 1,
        "softmax regression function": 1,
        "softmax implementation": 1,
        "negative log probability": 1,
        "softmax regression": 1,
        "classification function": 1,
        "cross entropy loss": 1,
        "cross entropy loss function": 1,
        "tutorials": 1
    },
    "python libraries": {
        "registered riders": 7,
        "hist": 5,
        "casual riders": 4,
        "gpa": 4,
        "gre": 4,
        "plot customizations": 3,
        "tutorial": 3,
        "time range": 3,
        "gran": 3,
        "registered": 3,
        "error bars": 3,
        "seaborn api": 3,
        "bootstrapping": 3,
        "total rider counts": 3,
        "distplot function": 3,
        "rider counts": 2,
        "matplotlib axes object": 2,
        "boxplot function": 2,
        "bikeshare membership": 2,
        "lmplot function": 2,
        "scatterplot": 2,
        "summary table": 2,
        "drop data points": 2,
        "missing data": 2,
        "count()": 2,
        "dropna()": 2,
        "box plots": 2,
        "hue parameter": 1,
        "lmplot": 1,
        "weekday trips": 1,
        "weekend trips": 1,
        "outliers": 1,
        "median": 1,
        "distribution": 1
    },
    "interest rate": {
        "color hue": 11,
        "countplot": 11,
        "interest rate": 11,
        "fico score": 11,
        "lmplots": 11,
        "dummy variables": 10,
        "dtree": 9,
        "decisiontreeclassifier()": 9,
        "confusion matrix": 1
    },
    "lending": {
        "color hue": 11,
        "countplot": 11,
        "interest rate": 11,
        "fico score": 11,
        "lmplots": 11,
        "dummy variables": 10,
        "dtree": 9,
        "decisiontreeclassifier()": 9,
        "confusion matrix": 1
    },
    "credit underwriting criteria": {
        "color hue": 11,
        "countplot": 11,
        "interest rate": 11,
        "fico score": 11,
        "lmplots": 11,
        "dummy variables": 10,
        "dtree": 9,
        "decisiontreeclassifier()": 9,
        "confusion matrix": 1
    },
    "random forest project": {
        "color hue": 11,
        "countplot": 11,
        "interest rate": 11,
        "fico score": 11,
        "lmplots": 11,
        "dummy variables": 10,
        "dtree": 9,
        "decisiontreeclassifier()": 9,
        "confusion matrix": 1
    },
    "lending club": {
        "color hue": 11,
        "countplot": 11,
        "interest rate": 11,
        "fico score": 11,
        "lmplots": 11,
        "dummy variables": 10,
        "dtree": 9,
        "decisiontreeclassifier()": 9,
        "confusion matrix": 1
    },
    "fico": {
        "color hue": 11,
        "countplot": 11,
        "interest rate": 11,
        "fico score": 11,
        "lmplots": 11,
        "dummy variables": 10,
        "dtree": 9,
        "decisiontreeclassifier()": 9,
        "confusion matrix": 1
    },
    "credit score": {
        "color hue": 11,
        "countplot": 11,
        "interest rate": 11,
        "fico score": 11,
        "lmplots": 11,
        "dummy variables": 10,
        "dtree": 9,
        "decisiontreeclassifier()": 9,
        "confusion matrix": 1
    },
    "ending": {
        "color hue": 11,
        "countplot": 11,
        "interest rate": 11,
        "fico score": 11,
        "lmplots": 11,
        "dummy variables": 10,
        "dtree": 9,
        "decisiontreeclassifier()": 9,
        "confusion matrix": 1
    },
    "monthly installments": {
        "color hue": 11,
        "countplot": 11,
        "interest rate": 11,
        "fico score": 11,
        "lmplots": 11,
        "dummy variables": 10,
        "dtree": 9,
        "decisiontreeclassifier()": 9,
        "confusion matrix": 1
    },
    "credit card billing cycle": {
        "color hue": 11,
        "countplot": 11,
        "interest rate": 11,
        "fico score": 11,
        "lmplots": 11,
        "dummy variables": 10,
        "dtree": 9,
        "decisiontreeclassifier()": 9,
        "confusion matrix": 1
    },
    "data use pandas": {
        "color hue": 11,
        "countplot": 11,
        "interest rate": 11,
        "fico score": 11,
        "lmplots": 11,
        "dummy variables": 10,
        "dtree": 9,
        "decisiontreeclassifier()": 9,
        "confusion matrix": 1
    },
    "cassandra python database driver": {
        "weather table": 8,
        "weather underground": 5,
        "historical weather data": 5,
        "shared cassandra cluster": 5,
        "netids": 5,
        "table name": 5,
        "schema": 5,
        "where clause": 5,
        "wdire attribute": 5,
        "id column": 4,
        "cassandra database": 4,
        "weather data observations": 4,
        "date column": 4,
        "id attribute": 3,
        "cassandra server": 3,
        "micrsoft azure": 3,
        "attributes": 2,
        "cassandra": 2,
        "default port": 2,
        "wspdi value": 2,
        "conds attribute": 2,
        "visi value": 1
    },
    "cassandra query language": {
        "weather table": 8,
        "weather underground": 5,
        "historical weather data": 5,
        "shared cassandra cluster": 5,
        "netids": 5,
        "table name": 5,
        "schema": 5,
        "where clause": 5,
        "wdire attribute": 5,
        "id column": 4,
        "cassandra database": 4,
        "weather data observations": 4,
        "date column": 4,
        "id attribute": 3,
        "cassandra server": 3,
        "micrsoft azure": 3,
        "attributes": 2,
        "cassandra": 2,
        "default port": 2,
        "wspdi value": 2,
        "conds attribute": 2,
        "visi value": 1
    },
    "ipython": {
        "vertex names": 4,
        "matrix operations": 4,
        "breadth first search": 4,
        "graph traversal": 4,
        "path length": 3,
        "distbfs()": 3,
        "bfs": 3,
        "edge weights": 3,
        "execution time": 3,
        "plot command": 2,
        "bar chart": 2,
        "alcohol consumption": 2,
        "hist function": 2,
        "vectorised functions": 2,
        "python code": 2,
        "user exploration": 1,
        "structured data": 1,
        "scatterplot": 1,
        "survey responses": 1,
        "numeric features": 1,
        "simple line graph": 1,
        "uci machine learning": 1,
        "file contents": 1,
        "decision tree learning": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1,
        "booleans": 1,
        "diseased patients": 1,
        "healthy patients": 1,
        "red dots": 1,
        "marker size": 1,
        "marker style": 1,
        "diseased people": 1,
        "python function": 1,
        "nested loop": 1,
        "execution speed": 1,
        "linear regression implementation": 1,
        "code cells": 1,
        "print function": 1,
        "parentheses": 1,
        "kernel": 1,
        "python interpreter": 1,
        "kernel state": 1,
        "magics": 1,
        "ipython commands": 1,
        "keyboard shortcuts": 1,
        "user interface tour": 1,
        "coding assignments": 1,
        "test cells": 1
    },
    "survival analysis": {
        "hazard function": 16,
        "survival function": 12,
        "first marriage": 8,
        "resampling": 8,
        "complementary cdf": 4,
        "weighted resampling": 4,
        "sfs": 4,
        "pregnancy": 4,
        "median remaining time": 4,
        "age": 4,
        "sampling weights": 4,
        "divorce": 4,
        "survival curve": 4,
        "sampling error": 4
    },
    "cdf": {
        "hazard function": 16,
        "survival function": 12,
        "first marriage": 8,
        "resampling": 8,
        "complementary cdf": 4,
        "weighted resampling": 4,
        "sfs": 4,
        "pregnancy": 4,
        "median remaining time": 4,
        "age": 4,
        "sampling weights": 4,
        "divorce": 4,
        "survival curve": 4,
        "sampling error": 4
    },
    "nsfg dataset": {
        "hazard function": 16,
        "survival function": 12,
        "first marriage": 8,
        "resampling": 8,
        "complementary cdf": 4,
        "weighted resampling": 4,
        "sfs": 4,
        "pregnancy": 4,
        "median remaining time": 4,
        "age": 4,
        "sampling weights": 4,
        "divorce": 4,
        "survival curve": 4,
        "sampling error": 4
    },
    "complete lifetimes": {
        "hazard function": 16,
        "survival function": 12,
        "first marriage": 8,
        "resampling": 8,
        "complementary cdf": 4,
        "weighted resampling": 4,
        "sfs": 4,
        "pregnancy": 4,
        "median remaining time": 4,
        "age": 4,
        "sampling weights": 4,
        "divorce": 4,
        "survival curve": 4,
        "sampling error": 4
    },
    "double100": {
        "jupyter": 14,
        "docs": 7,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "math operations": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "numerical differentiation": 3,
        "cantaloupes": 2,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "colors": 1,
        "bar chart": 1,
        "vector dot products": 1,
        "berkeley bowl": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1
    },
    "delivery service": {
        "foodwheel": 13,
        "pie chart": 8,
        "restaurants": 8,
        "cuisines": 4,
        "restautants": 4,
        "axis": 4,
        "cuisine": 4,
        "plt": 4,
        "average order size": 4,
        "orders": 4,
        "dataframe orders": 4,
        "function split": 4,
        "bar chart": 4,
        "group orders": 3,
        "average order amount": 3,
        "error bars": 2,
        "average order": 2,
        "error capsize": 2,
        "standard deviations": 2,
        "titel": 1
    },
    "seism": {
        "event metadata": 6,
        "international standard exchange format": 6,
        "station metadata": 5,
        "local files": 4,
        "fdsn web services": 3,
        "seismological data centers": 3,
        "protocols": 3,
        "nested obspy event class structure": 2,
        "event objects": 2,
        "catalog object": 2,
        "station objects": 2,
        "network objects": 2,
        "channel objects": 2,
        "fdsn stationxml": 2,
        "nested obspy inventory": 2,
        "inventory object": 2,
        "filetype": 2,
        "trace objects": 2,
        "ainformation": 2,
        "nested obspy inventory class": 2,
        "stationxml files": 1,
        "official schema": 1,
        "waveform data": 1,
        "channel codes": 1,
        "seismometer time series": 1,
        "xml": 1,
        "utcdatetime": 1,
        "timestamps": 1,
        "instrument response": 1,
        "digitizer": 1,
        "amplitude": 1,
        "phase response": 1,
        "instrument correction": 1,
        "array analysis": 1,
        "estimate travel times": 1,
        "seismic phases": 1,
        "cross correlation routines": 1,
        "pling": 1,
        "event detection": 1,
        "command line utilities": 1,
        "plot ray paths": 1,
        "manipulation filtering": 1,
        "epicentral range": 1,
        "instrument corrected waveforms": 1,
        "interactive ipython help": 1,
        "obspy documentation": 1,
        "ipython tab completion": 1,
        "stationxml": 1
    },
    "null matrix": {
        "dataframe structures": 12,
        "column names": 8,
        "values method": 8,
        "data manipulation": 4,
        "data structures": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "column headers": 4,
        "slicing": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1
    },
    "3 x 3 identity matrix": {
        "dataframe structures": 12,
        "column names": 8,
        "values method": 8,
        "data manipulation": 4,
        "data structures": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "column headers": 4,
        "slicing": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1
    },
    "maximum values": {
        "dataframe structures": 12,
        "column names": 8,
        "values method": 8,
        "data manipulation": 4,
        "data structures": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "column headers": 4,
        "slicing": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1
    },
    "non-zero elements": {
        "dataframe structures": 12,
        "column names": 8,
        "values method": 8,
        "data manipulation": 4,
        "data structures": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "column headers": 4,
        "slicing": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1
    },
    "random matrices": {
        "dataframe structures": 12,
        "column names": 8,
        "values method": 8,
        "data manipulation": 4,
        "data structures": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "column headers": 4,
        "slicing": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1
    },
    "random vector": {
        "dataframe structures": 12,
        "column names": 8,
        "values method": 8,
        "data manipulation": 4,
        "data structures": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "column headers": 4,
        "slicing": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1
    },
    "random matrix": {
        "dataframe structures": 12,
        "column names": 8,
        "values method": 8,
        "data manipulation": 4,
        "data structures": 4,
        "series objects": 4,
        "tabular data structure": 4,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "column headers": 4,
        "slicing": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1
    },
    "covariance": {
        "covariance matrix": 7,
        "kernel matrix": 4,
        "augmented vector": 4,
        "outer product": 4,
        "predictive distribution": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "generative process": 3,
        "conditional models": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "matrices": 2,
        "lower left matrix": 2,
        "outer product average": 2,
        "average": 2,
        "autoregressive model": 1,
        "linear kernel": 1,
        "2d dataset": 1,
        "analysis": 1,
        "eigenvector decomposition": 1,
        "homework": 1,
        "rdd": 1,
        "arithmetic operations": 1,
        "covariance": 1,
        "n x n matrix": 1,
        "1 x n matrix": 1,
        "x n matrix": 1,
        "x": 1,
        "nansum": 1,
        "n x": 1
    },
    "kneighborsclassifier": {
        "knn model": 18,
        "predict method": 5,
        "confusion matrix": 4,
        "kneighborsclassifier": 4,
        "decision boundaries": 4,
        "knn": 2,
        "classification rate": 2,
        "predicted class": 2,
        "pandas manipulations": 2,
        "data format": 2,
        "euclidean distance": 2,
        "knn classifier": 2,
        "distance function": 2,
        "knn algorithm": 2,
        "tfidfvectorizer": 2,
        "english stop words": 2,
        "minimum feature term": 2,
        "bigrams": 2,
        "maximum frequency": 2,
        "snowball": 2,
        "trigrams": 2,
        "nowball": 2,
        "stemming algorithm": 2,
        "unigrams": 2,
        "tokenize function": 2,
        "function predict": 1,
        "predicted class value": 1,
        "nearestneighborsclassifier": 1,
        "function distance": 1,
        "test data": 1,
        "sk": 1,
        "image": 1,
        "knn process": 1
    },
    "gaussian parameters": {
        "pca": 8,
        "eigenvectors": 6,
        "residual noise": 4,
        "dimensionality reduction": 4,
        "principal components": 4,
        "second principal components": 3,
        "point cloud": 3,
        "succeding component": 3,
        "principal component analysis": 3,
        "2d vectors": 3,
        "linear coefficients": 3,
        "pca space": 3,
        "pca eigenvectors": 3,
        "orient": 3,
        "pca axes": 3,
        "pca components": 3,
        "principal component": 3,
        "iris data": 3,
        "plotting function": 2,
        "dimensionality reduction techniques": 2,
        "alternate pca": 2,
        "randomizedpca": 2,
        "handwritten digits": 2,
        "data matrix x": 2,
        "labeled faces": 1,
        "lfw exercise": 1,
        "eigenfaces": 1,
        "eigendigits": 1,
        "facial recognition exercise": 1
    },
    "negative covariance coefficient": {
        "pca": 8,
        "eigenvectors": 6,
        "residual noise": 4,
        "dimensionality reduction": 4,
        "principal components": 4,
        "second principal components": 3,
        "point cloud": 3,
        "succeding component": 3,
        "principal component analysis": 3,
        "2d vectors": 3,
        "linear coefficients": 3,
        "pca space": 3,
        "pca eigenvectors": 3,
        "orient": 3,
        "pca axes": 3,
        "pca components": 3,
        "principal component": 3,
        "iris data": 3,
        "plotting function": 2,
        "dimensionality reduction techniques": 2,
        "alternate pca": 2,
        "randomizedpca": 2,
        "handwritten digits": 2,
        "data matrix x": 2,
        "labeled faces": 1,
        "lfw exercise": 1,
        "eigenfaces": 1,
        "eigendigits": 1,
        "facial recognition exercise": 1
    },
    "delays": {
        "time delays": 9,
        "gp": 5,
        "likelihood function": 4,
        "mcmc": 4,
        "agn reverberation mapping": 3,
        "posterior distribution": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "white noise standard deviation": 3,
        "likelihood surface": 3,
        "associated gradient functions": 2,
        "predictive distribution": 2,
        "neg log likelihood": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "boolean variable": 2,
        "delayed times": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "minimize function": 2,
        "posterior uncertainties": 2,
        "optimization": 2,
        "gp hps": 2,
        "uncertainty estimates": 2,
        "posterior probability": 2,
        "confidence intervals": 2,
        "posterior function": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "iterators": {
        "hamlettext": 11,
        "hamletwords": 6,
        "umpy": 4,
        "specfic task": 4,
        "method": 4,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "keyword arguments": 4,
        "positional properties": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1,
        "dictionary comprehension": 1
    },
    "trained model": {
        "pipeline": 6,
        "pystan": 6,
        "target": 4,
        "randomforestregressor model": 4,
        "pymc": 4,
        "gridsearchcv": 4,
        "lasso": 3,
        "sklearn object": 3,
        "scaler object": 3,
        "numerical data": 2,
        "categorical data": 2,
        "average": 2,
        "relative performance": 2,
        "knn": 2,
        "statistical exposition": 2,
        "distribution": 2,
        "distributions": 2,
        "pymc model": 2,
        "univariate logistic regression": 2,
        "sigmoid function": 2,
        "mcmc procedure": 2,
        "roc scores": 2,
        "non-bayesian logistic": 2,
        "randomforestregressor": 2,
        "model parameters": 2,
        "selectkbest": 1,
        "shufflesplit": 1,
        "scaler": 1,
        "preprocessing steps": 1,
        "optimal pipeline": 1,
        "optimal preprocessing": 1,
        "pipelines": 1,
        "model selection": 1,
        "pre": 1,
        "hyperparameter tuning": 1,
        "sql query": 1,
        "standardize x": 1
    },
    "conditionals": {
        "help message": 4,
        "str()": 3,
        "indentation": 2,
        "conditional statement": 2,
        "python observation": 2,
        "variable observation": 2,
        "str() function": 2,
        "typecasting": 2,
        "year": 2,
        "mathematical operators": 2,
        "leap year": 2,
        "conditional statements": 2,
        "variable year": 2,
        "arguments": 2,
        "online resources": 2,
        "stack overflow": 2,
        "google search": 2,
        "python workflow": 2,
        "python documentation": 2,
        "positional arguments": 2,
        "keyword arguments": 2,
        "function call": 2,
        "input": 2,
        "default input values": 2,
        "default values": 2,
        "docstring": 2,
        "source code": 2,
        "fahrenheit": 2,
        "code cell": 2,
        "control flow structure": 1,
        "python program": 1,
        "united states": 1,
        "canada": 1,
        "print function": 1,
        "rectangle area": 1,
        "jupyter notebooks": 1,
        "ipython": 1,
        "function type": 1,
        "double equals sign": 1,
        "single equals sign": 1,
        "boolean": 1,
        "bool": 1,
        "boolean comparisons": 1,
        "autograded jupyter notebook cell": 1,
        "bonus exercises": 1,
        "string type": 1,
        "list comprehensions": 1,
        "iterations": 1,
        "conditionals": 1
    },
    "error function": {
        "error functions": 15,
        "error function": 14,
        "predicted class": 10,
        "sigmoid function": 9,
        "gradient descent": 5,
        "total cost function": 4,
        "last function approximation": 4,
        "learning rate": 4,
        "learning curve": 4,
        "regularization": 2,
        "predict()": 2,
        "correct guesses": 2,
        "guessed classes": 2,
        "predicted exam results": 2,
        "timestep size": 1,
        "simulation": 1
    },
    "mle": {
        "pystan": 3,
        "traceplot": 3,
        "maximum probability": 2,
        "least square technique": 2,
        "parameter estimation": 2,
        "likelihood function": 2,
        "product chain": 2,
        "logarithm": 2,
        "bernoulli scheme": 2,
        "iterative numerical methods": 2,
        "binary targets": 2,
        "finger exercises": 2,
        "constraint optimization problem": 2,
        "least square problems": 2,
        "grand old party": 2,
        "bayesian analysis": 2,
        "election": 2,
        "case study": 2,
        "predictors": 2,
        "polling data": 2,
        "pystan logistic regression model": 2,
        "parameter graphs": 2,
        "summary stats": 2,
        "quartile": 2,
        "signature": 2,
        "pystan docs": 2,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1,
        "bayesian regression": 1,
        "pandas dictionary": 1,
        "trace": 1,
        "extracted": 1,
        "pandas data frame": 1,
        "python function": 1,
        "bayesian models": 1,
        "predictor function": 1,
        "predfunction": 1,
        "linspace form numpy": 1,
        "coeffecient medians": 1,
        "pyplot": 1
    },
    "axis parameter": {
        "end index": 6,
        "cache": 5,
        "fetch": 5,
        "row id": 5,
        "column id": 5,
        "compound expressions": 4,
        "boolean arrays": 4,
        "data aggregration": 4,
        "mkdir()": 3,
        "()": 3,
        "path object": 3,
        "os library": 3,
        "functionality": 3,
        "pandas row index": 3,
        "python slicing functionality": 3,
        "pandas slicing function": 3,
        "iloc[]": 3,
        "row index": 3,
        "loc[]": 3,
        "array slicing syntax": 2,
        "frame": 2,
        "tabular data": 1,
        "groupby function": 1,
        "groupby animation": 1,
        "rotten tomatoes": 1,
        "revenue": 1
    },
    "offense": {
        "cvlegend": 10,
        "barh plot type": 5,
        "value counts": 5,
        "countplot": 4,
        "calls dataframe": 4,
        "vertical bar plot": 4,
        "noise violation": 4,
        "crime events": 3,
        "regular bar plot": 3,
        "series class": 2,
        "seaborn library": 2,
        "countplot method": 2,
        "pandas plot": 2,
        "order parameter": 2,
        "cvdow field": 2,
        "coolindex": 2,
        "seaborn plot": 2,
        "total noise violations": 2,
        "noise violation calls": 2,
        "eventtm": 2,
        "fraud crimes": 2,
        "pandas bar plot": 2,
        "interquartile range": 2,
        "aborn": 2,
        "crime type": 2,
        "pandas boxplot": 2,
        "seaborn boxplot": 2,
        "answer3b": 2
    },
    "binary classification problem": {
        "attributes": 4,
        "standardize function": 4,
        "tensorflow": 3,
        "input data pipeline": 2,
        "sampled data": 2,
        "particle detectors": 2,
        "higgs dataset": 2,
        "background": 2,
        "monte carlo simulations": 2,
        "kinematic properties": 2,
        "signal process": 2,
        "higgs bosons": 2,
        "attribute values": 2,
        "train file": 2,
        "test file": 2,
        "local testing": 2,
        "edx": 2,
        "test datasets": 2,
        "network training": 2,
        "configuration file": 2,
        "debugging purposes": 2,
        "config file": 2,
        "yaml file": 2,
        "file": 2,
        "test data": 2,
        "feature vectors": 2,
        "training examples": 2,
        "wikipedia feature scaling article": 2,
        "distribution mean": 2,
        "weights": 1,
        "tf variables": 1,
        "biases": 1,
        "mini batch": 1,
        "tf graph": 1,
        "tf placeholders": 1,
        "helper function": 1,
        "bias dictionary": 1,
        "learnable parameters": 1,
        "bias matrices": 1,
        "network model": 1,
        "weights dictionary": 1,
        "training time": 1,
        "feedforward network model": 1,
        "hidden layers": 1,
        "output layer": 1,
        "sigmoid activation function": 1
    },
    "tensorflow code": {
        "attributes": 4,
        "standardize function": 4,
        "tensorflow": 3,
        "input data pipeline": 2,
        "sampled data": 2,
        "particle detectors": 2,
        "higgs dataset": 2,
        "background": 2,
        "monte carlo simulations": 2,
        "kinematic properties": 2,
        "signal process": 2,
        "higgs bosons": 2,
        "attribute values": 2,
        "train file": 2,
        "test file": 2,
        "local testing": 2,
        "edx": 2,
        "test datasets": 2,
        "network training": 2,
        "configuration file": 2,
        "debugging purposes": 2,
        "config file": 2,
        "yaml file": 2,
        "file": 2,
        "test data": 2,
        "feature vectors": 2,
        "training examples": 2,
        "wikipedia feature scaling article": 2,
        "distribution mean": 2,
        "weights": 1,
        "tf variables": 1,
        "biases": 1,
        "mini batch": 1,
        "tf graph": 1,
        "tf placeholders": 1,
        "helper function": 1,
        "bias dictionary": 1,
        "learnable parameters": 1,
        "bias matrices": 1,
        "network model": 1,
        "weights dictionary": 1,
        "training time": 1,
        "feedforward network model": 1,
        "hidden layers": 1,
        "output layer": 1,
        "sigmoid activation function": 1
    },
    "return keyword": {
        "bfs": 10,
        "breadth first search": 8,
        "vertex names": 4,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3,
        "dist array": 3,
        "prev array": 3,
        "depth first search": 3,
        "connected components": 2,
        "help message": 2,
        "adjacency matrix": 1,
        "algebraic connectivity": 1,
        "laplacian matrix": 1,
        "positional arguments": 1,
        "keyword arguments": 1,
        "function call": 1,
        "input": 1,
        "default input values": 1,
        "default values": 1,
        "docstring": 1,
        "source code": 1,
        "fahrenheit": 1
    },
    "test sentence": {
        "regexes": 9,
        "challenge 7": 6,
        "challenge 6": 6,
        "regular expression": 6,
        "character classes": 6,
        "regex": 6,
        "capital": 5,
        "regular expressions": 3,
        "match object": 3,
        "pattern object": 3,
        "us phone number": 3,
        "area code": 3,
        "regular expression syntax": 3,
        "challenge 14": 3,
        "metacharacters": 3,
        "parentheses": 3,
        "challenge 13": 3,
        "uring group skills": 3,
        "non-": 3
    },
    "projection matrix": {
        "pca": 7,
        "covariance matrix": 6,
        "correlation matrix": 6,
        "eigenvectors": 5,
        "eigendecomposition": 5,
        "projection matrix": 4,
        "eigenvalues": 3,
        "computational efficiency": 2,
        "principal components": 2,
        "singular vector decomposition": 2,
        "concatenated top k eigenvectors": 2,
        "maximum variance": 1,
        "machine learning algorithms": 1,
        "computer hardware": 1,
        "linear transformation methods": 1,
        "pattern classification problem": 1,
        "linear discriminant analysis": 1,
        "e": 1,
        "ctors": 1,
        "eigen": 1,
        "petal width": 1,
        "uci machine learning repository": 1,
        "tutorial": 1,
        "petal length": 1,
        "sepal length": 1,
        "python library": 1,
        "uci repository": 1,
        "flower sample": 1,
        "flower classes": 1,
        "standard": 1,
        "components": 1,
        "mean vector": 1,
        "numpy cov function": 1,
        "ance matrix": 1,
        "normalized covariance matrix": 1,
        "finance": 1,
        "standardized data": 1,
        "eigenvalue pairs": 1,
        "standardizing": 1,
        "pca implementations": 1,
        "axes": 1,
        "lowest eigenvalues": 1,
        "eigenpairs": 1,
        "explained variance": 1,
        "information": 1,
        "first principal component": 1,
        "second principal component": 1
    },
    "compsci": {
        "majors": 8,
        "values": 7,
        "cs data": 6,
        "average height values": 6,
        "pivot table": 6,
        "confounding variable": 6,
        "average heights": 4,
        "alpha value": 4,
        "statistical test": 4,
        "significance": 4,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3
    },
    "covariant algorithm": {
        "ica": 7,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "covariant algorithm": 5,
        "kurtosis": 3,
        "bias": 2,
        "scale changes": 2,
        "demixing matrices": 2,
        "learning algorithm": 1,
        "matrix inversions": 1,
        "priors": 1,
        "symmetric": 1,
        "alogrithm": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "covariance": 1,
        "consistent algorithm": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "predicted value": {
        "error functions": 15,
        "error function": 12,
        "predicted class": 10,
        "sigmoid function": 9,
        "gradient descent": 5,
        "total cost function": 2,
        "last function approximation": 2,
        "learning rate": 2,
        "learning curve": 2,
        "dependent variable": 1,
        "predicted values": 1,
        "lstat": 1,
        "variable combinations": 1,
        "exercise": 1,
        "formula": 1,
        "quadratic regression": 1,
        "medv": 1,
        "python functions": 1,
        "patsy": 1,
        "dummy variables": 1,
        "categorical variables": 1,
        "patsy formulas": 1,
        "crim": 1,
        "fit models": 1,
        "regularization": 1,
        "predict()": 1,
        "correct guesses": 1,
        "guessed classes": 1,
        "predicted exam results": 1
    },
    "arrtime": {
        "departure delay": 8,
        "iata airport code": 4,
        "scheduled arrival time": 4,
        "crsarrtime": 4,
        "crsdeptime": 4,
        "depdelay": 4,
        "scheduled departure time": 4,
        "ord": 4,
        "faa": 4,
        "hyperparameters": 3,
        "split function": 3,
        "returned dataframes": 3,
        "code cell": 3,
        "returned values": 3,
        "int64": 3,
        "normalized value": 3,
        "machine learning technique": 3,
        "maximum values": 3,
        "float64": 3,
        "unit tests": 3,
        "trained model": 3,
        "validation": 3
    },
    "scikit learn machine learning libraries": {
        "default parameters": 8,
        "countvectorizer": 7,
        "linearsvc": 7,
        "stop words": 6,
        "reuters data set": 5,
        "fileids": 5,
        "reuters corpus": 5,
        "test sets": 4,
        "document term matrix": 3,
        "nltk corpus object": 3,
        "text data mining": 3,
        "categories": 3,
        "stackoverflow": 2,
        "kaggle": 2,
        "stratifiedshufflesplit": 2,
        "ratifiedshufflesplit": 2,
        "machine learning models": 2,
        "news story": 2,
        "linearsvc algorithm": 2,
        "news document": 2,
        "logisticregression": 1,
        "tfidfvectorizer": 1,
        "svm": 1
    },
    "text classificatoin tasks": {
        "default parameters": 8,
        "countvectorizer": 7,
        "linearsvc": 7,
        "stop words": 6,
        "reuters data set": 5,
        "fileids": 5,
        "reuters corpus": 5,
        "test sets": 4,
        "document term matrix": 3,
        "nltk corpus object": 3,
        "text data mining": 3,
        "categories": 3,
        "stackoverflow": 2,
        "kaggle": 2,
        "stratifiedshufflesplit": 2,
        "ratifiedshufflesplit": 2,
        "machine learning models": 2,
        "news story": 2,
        "linearsvc algorithm": 2,
        "news document": 2,
        "logisticregression": 1,
        "tfidfvectorizer": 1,
        "svm": 1
    },
    "moers": {
        "pandas data frame": 20,
        "seperator": 10,
        "semicolon": 10,
        "filtering": 9,
        "horizontal bar chart": 7,
        "concat": 6,
        "df16": 6,
        "calculator": 5,
        "jupyter notebook cell": 5
    },
    "open data": {
        "pandas data frame": 20,
        "seperator": 10,
        "semicolon": 10,
        "filtering": 9,
        "horizontal bar chart": 7,
        "concat": 6,
        "df16": 6,
        "calculator": 5,
        "jupyter notebook cell": 5
    },
    "baby name files": {
        "pandas data frame": 20,
        "seperator": 10,
        "semicolon": 10,
        "filtering": 9,
        "horizontal bar chart": 7,
        "concat": 6,
        "df16": 6,
        "calculator": 5,
        "jupyter notebook cell": 5
    },
    "binary decision tree helper functions": {
        "classification error": 13,
        "prediction path": 12,
        "early stopping conditions": 9,
        "validation error": 6,
        "validation data": 6,
        "lowest classification error": 4,
        "misclassified examples": 3,
        "majority class": 3,
        "minimum node size": 3,
        "minimum error reduction": 3,
        "if condition": 3,
        "tree model": 3,
        "function classify": 3,
        "predicted class": 3,
        "lowest": 2,
        "qu": 1,
        "complexity": 1
    },
    "datashader": {
        "bokeh plot": 8,
        "datashader": 4,
        "dask": 4,
        "taxi trips": 4,
        "2d grid": 4,
        "rgb element": 4,
        "plotting program": 4,
        "datashader operation": 4,
        "pixel colors": 4,
        "plot size": 4,
        "dynamic operation": 4,
        "zoom level": 4,
        "linked streams": 4,
        "datashade": 4,
        "interactivity": 2,
        "hover tools": 2,
        "bokeh": 2,
        "big data": 2,
        "distribution": 2,
        "geoviews": 2,
        "bokeh wmtstilesource": 2,
        "taxi dropoffs": 2,
        "aggregator functions": 2
    },
    "student names": {
        "tweet list": 4,
        "positive sentiment list": 4,
        "federal government": 3,
        "matplotlib plotting package": 3,
        "tutorial": 3,
        "data visualization": 3,
        "university of pittsburgh": 2,
        "google scholar": 2,
        "positive sentiment": 2,
        "negative sentiment": 2,
        "internet": 2,
        "positive polarity words": 2,
        "word stems": 2,
        "web address": 2,
        "file name": 2,
        "current directory": 2,
        "quotation marks": 2,
        "url path": 2,
        "string object": 2,
        "windows computer": 2,
        "operating system": 2,
        "positive words": 2,
        "positive texts": 2,
        "positive counts": 2,
        "lead readings": 2,
        "pseudocode": 2,
        "presidential election": 1,
        "measurement": 1,
        "caluclation": 1,
        "genome sequencing": 1,
        "flowchart": 1,
        "maximum overlap": 1,
        "single": 1,
        "overlapping segments": 1,
        "combined string": 1,
        "unit test": 1,
        "imput strings": 1,
        "unit testing": 1,
        "unit tests": 1,
        "plots": 1,
        "overall lead levels": 1,
        "calculations": 1,
        "mean value": 1,
        "flint water": 1
    },
    "noisy sine function": {
        "colored image": 12,
        "train set": 12,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "fine tuning": 6,
        "parameter tuning": 6,
        "width variable": 6,
        "lassocv": 5,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "noise samples": {
        "colored image": 12,
        "train set": 12,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "fine tuning": 6,
        "parameter tuning": 6,
        "width variable": 6,
        "lassocv": 5,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "optimal plot": {
        "colored image": 12,
        "train set": 12,
        "extrapolation": 8,
        "non-linear regression": 8,
        "forecasting techniques": 8,
        "fine tuning": 6,
        "parameter tuning": 6,
        "width variable": 6,
        "lassocv": 5,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "python dictionary": {
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2,
        "element matrix": 2,
        "training characters": 2,
        "character data": 2,
        "training samples": 2,
        "test data": 2,
        "character labels": 2,
        "integers": 2,
        "euclidean distance": 2,
        "feature vectors": 1,
        "cosine distance": 1,
        "classify": 1,
        "nearest neighbour classifier": 1,
        "alaphabet": 1,
        "divergence function": 1,
        "variances": 1,
        "character pairs": 1
    },
    "scikit": {
        "pca": 6,
        "covariance matrix": 6,
        "correlation matrix": 6,
        "eigenvectors": 5,
        "eigendecomposition": 5,
        "projection matrix": 3,
        "eigenvalues": 3,
        "computational efficiency": 2,
        "principal components": 2,
        "singular vector decomposition": 2,
        "maximum variance": 1,
        "machine learning algorithms": 1,
        "computer hardware": 1,
        "linear transformation methods": 1,
        "pattern classification problem": 1,
        "linear discriminant analysis": 1,
        "e": 1,
        "ctors": 1,
        "eigen": 1,
        "petal width": 1,
        "uci machine learning repository": 1,
        "tutorial": 1,
        "petal length": 1,
        "sepal length": 1,
        "python library": 1,
        "uci repository": 1,
        "flower sample": 1,
        "flower classes": 1,
        "standard": 1,
        "components": 1,
        "mean vector": 1,
        "numpy cov function": 1,
        "ance matrix": 1,
        "normalized covariance matrix": 1,
        "finance": 1,
        "standardized data": 1,
        "eigenvalue pairs": 1,
        "standardizing": 1,
        "pca implementations": 1,
        "axes": 1,
        "lowest eigenvalues": 1,
        "eigenpairs": 1,
        "explained variance": 1,
        "information": 1,
        "first principal component": 1,
        "second principal component": 1,
        "concatenated top k eigenvectors": 1
    },
    "position": {
        "pca": 6,
        "covariance matrix": 6,
        "correlation matrix": 6,
        "eigenvectors": 5,
        "eigendecomposition": 5,
        "projection matrix": 3,
        "eigenvalues": 3,
        "computational efficiency": 2,
        "principal components": 2,
        "singular vector decomposition": 2,
        "maximum variance": 1,
        "machine learning algorithms": 1,
        "computer hardware": 1,
        "linear transformation methods": 1,
        "pattern classification problem": 1,
        "linear discriminant analysis": 1,
        "e": 1,
        "ctors": 1,
        "eigen": 1,
        "petal width": 1,
        "uci machine learning repository": 1,
        "tutorial": 1,
        "petal length": 1,
        "sepal length": 1,
        "python library": 1,
        "uci repository": 1,
        "flower sample": 1,
        "flower classes": 1,
        "standard": 1,
        "components": 1,
        "mean vector": 1,
        "numpy cov function": 1,
        "ance matrix": 1,
        "normalized covariance matrix": 1,
        "finance": 1,
        "standardized data": 1,
        "eigenvalue pairs": 1,
        "standardizing": 1,
        "pca implementations": 1,
        "axes": 1,
        "lowest eigenvalues": 1,
        "eigenpairs": 1,
        "explained variance": 1,
        "information": 1,
        "first principal component": 1,
        "second principal component": 1,
        "concatenated top k eigenvectors": 1
    },
    "igenvectors": {
        "pca": 6,
        "covariance matrix": 6,
        "correlation matrix": 6,
        "eigenvectors": 5,
        "eigendecomposition": 5,
        "projection matrix": 3,
        "eigenvalues": 3,
        "computational efficiency": 2,
        "principal components": 2,
        "singular vector decomposition": 2,
        "maximum variance": 1,
        "machine learning algorithms": 1,
        "computer hardware": 1,
        "linear transformation methods": 1,
        "pattern classification problem": 1,
        "linear discriminant analysis": 1,
        "e": 1,
        "ctors": 1,
        "eigen": 1,
        "petal width": 1,
        "uci machine learning repository": 1,
        "tutorial": 1,
        "petal length": 1,
        "sepal length": 1,
        "python library": 1,
        "uci repository": 1,
        "flower sample": 1,
        "flower classes": 1,
        "standard": 1,
        "components": 1,
        "mean vector": 1,
        "numpy cov function": 1,
        "ance matrix": 1,
        "normalized covariance matrix": 1,
        "finance": 1,
        "standardized data": 1,
        "eigenvalue pairs": 1,
        "standardizing": 1,
        "pca implementations": 1,
        "axes": 1,
        "lowest eigenvalues": 1,
        "eigenpairs": 1,
        "explained variance": 1,
        "information": 1,
        "first principal component": 1,
        "second principal component": 1,
        "concatenated top k eigenvectors": 1
    },
    "ellipsis": {
        "jupyter": 14,
        "docs": 7,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "math operations": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "numerical differentiation": 3,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "colors": 1,
        "bar chart": 1,
        "vector dot products": 1
    },
    "colebrook equation": {
        "upstream pressure": 10,
        "simulation": 4,
        "colebrook": 4,
        "dynamic balances": 4,
        "computer tut 1": 4,
        "gas flow system": 4,
        "pressuresystem": 4,
        "colebrook function": 4,
        "200 kpa": 4,
        "steady state value": 4,
        "tank pressure": 2,
        "time interval": 2,
        "pressure values": 2,
        "odeint": 2,
        "mpr": 2,
        "pressure signal": 2,
        "control valve": 2,
        "air pressure": 2,
        "spring": 2,
        "equations of motion": 2,
        "damping": 2,
        "higher order differential equations": 2,
        "diaphragm": 2,
        "vector equation": 2,
        "air pressure signals": 2
    },
    "confusion matrix": {
        "gridsearch": 4,
        "graphlab create": 4,
        "majority class classifier": 4,
        "quiz": 4,
        "gridsearchcv": 3,
        "confusion matrix": 3,
        "logistic regression classifier": 3,
        "false positives": 3,
        "confusion matrices": 2,
        "grid model": 2,
        "negative sentiments": 2,
        "ratings": 2,
        "word counts": 2,
        "test sets": 2,
        "precision": 2,
        "recall": 2,
        "amazon dataset": 2,
        "sentiment": 2,
        "performance metric": 2,
        "correctly classified data points": 2,
        "total data points": 2,
        "majority": 2,
        "baseline": 2,
        "majority classifier": 2,
        "majority class prediction": 2,
        "false negatives": 2,
        "true negatives": 2,
        "true positives": 2,
        "incorrect predictions": 2,
        "binary classification": 2,
        "correctly classified reviews": 1,
        "baby product": 1,
        "negative reviews": 1,
        "false alarms": 1
    },
    "difference image": {
        "cost array": 9,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "seed points": 4,
        "overlap region": 3,
        "utility function": 3,
        "construct cost array": 3,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "optimal path": 3,
        "mcp": 3,
        "ransac transform estimation": 3,
        "random element": 3,
        "negative mask": 3,
        "numpy masked array conventions": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "final mask": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "web scraper": {
        "soup object": 6,
        "html objct": 6,
        "bs4": 6,
        "html": 6,
        "google chrome": 6,
        "inspect": 6,
        "html page": 4,
        "commas": 4,
        "tag objects": 4,
        "python string": 4,
        "restaurant names": 4,
        "beautiful soup": 4,
        "tag object": 4,
        "restaurant locations": 4,
        "barmini": 4,
        "search results": 4
    },
    "urllib": {
        "soup object": 4,
        "html objct": 4,
        "bs4": 4,
        "html page": 4,
        "html": 4,
        "google chrome": 4,
        "inspect": 4,
        "commas": 4,
        "tag objects": 4,
        "python string": 4,
        "restaurant names": 4,
        "beautiful soup": 4,
        "tag object": 4,
        "restaurant locations": 4,
        "barmini": 4,
        "search results": 4,
        "file contents": 1,
        "decision tree learning": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1
    },
    "computational seismology workshop": {
        "waveform data": 13,
        "preview plot": 10,
        "mainshock": 7,
        "spectrogram": 7,
        "earthquake": 7,
        "donwloaded data": 7,
        "utcdatetime object": 6,
        "main shock": 5,
        "aftershock": 3,
        "spectrogram plot": 3,
        "peak value": 3,
        "magnitude approximation": 2,
        "network magnitude approximation": 1,
        "large aftershock": 1
    },
    "np": {
        "income": 19,
        "polyfit": 9,
        "output parameters": 4,
        "integer age": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "numerical differentiation": 3,
        "age": 3,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "color intensity": 1,
        "colors": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1,
        "prediction power": 1,
        "steps": 1
    },
    "random variates": {
        "pareto world": 8,
        "exponential distribution": 7,
        "ccdf": 5,
        "straight": 5,
        "pareto variate": 5,
        "blue man group": 5,
        "stats": 5,
        "analytic distributions": 5,
        "scipy": 5,
        "frozen random variable": 5,
        "pareto distribution": 4,
        "human height": 4,
        "mean height": 4,
        "weibull distribution": 2,
        "cdf": 1,
        "failure analysis": 1,
        "empirical distribution": 1,
        "analytic distribution": 1,
        "random values": 1
    },
    "analytic cdf": {
        "pareto world": 8,
        "exponential distribution": 7,
        "ccdf": 5,
        "straight": 5,
        "pareto variate": 5,
        "blue man group": 5,
        "stats": 5,
        "analytic distributions": 5,
        "scipy": 5,
        "frozen random variable": 5,
        "pareto distribution": 4,
        "human height": 4,
        "mean height": 4,
        "weibull distribution": 2,
        "cdf": 1,
        "failure analysis": 1,
        "empirical distribution": 1,
        "analytic distribution": 1,
        "random values": 1
    },
    "teaching": {
        "kernel function": 4,
        "gaussian process regression": 4,
        "univariate problem": 4,
        "kernel matrix": 4,
        "predictive distribution": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "covariance matrix": 3,
        "generative process": 3,
        "conditional models": 3,
        "trainingset": 2,
        "mnist": 1,
        "testing arrays": 1,
        "true class labels": 1,
        "istic regression": 1,
        "normalized distribution": 1,
        "multiclass": 1,
        "class label": 1,
        "normalizing factor": 1,
        "unnormalized probabilities": 1,
        "unnormalized probability": 1,
        "intermediate vector": 1,
        "conditional probability": 1,
        "datapoint": 1,
        "ifcation neural network": 1,
        "derive gradient equations": 1,
        "grad": 1,
        "bias parameters": 1,
        "ients": 1,
        "validation": 1,
        "sgd iterations": 1,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "mlp": 1,
        "hidden layer": 1,
        "non-linear activation function": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "false positives": {
        "age": 4,
        "parmaters": 4,
        "prediction accuracy": 3,
        "boosted trees model": 3,
        "decision trees": 3,
        "decision tree model": 3,
        "probabilities": 3,
        "prediction probability": 3,
        "quiz": 2,
        "tree models": 2,
        "classification error": 2,
        "training errors": 2,
        "missing": 2,
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1,
        "check": 1,
        "gradient boosted trees": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1,
        "contingency table": 1,
        "pivot": 1,
        "status": 1,
        "sum function": 1,
        "cancer test": 1,
        "population members": 1,
        "icon array": 1,
        "dropna": 1,
        "pandas dataframes": 1,
        "labels": 1
    },
    "enron dataset": {
        "shell companies": 6,
        "electrical grid failures": 6,
        "enron fraud": 6,
        "frozen concentrated orange juice futures": 6,
        "google sleuthing": 6,
        "enron": 6,
        "blockbuster movies": 6,
        "ellipses": 4,
        "notebook": 4,
        "magic command": 4,
        "magic function": 4,
        "magic functions": 4,
        "emails": 4,
        "optional exercises": 4,
        "email": 4
    },
    "vector norms": {
        "finite difference method": 8,
        "approximation": 7,
        "infinite float number": 5,
        "exponent": 5,
        "stepping interval": 5,
        "sissa machines": 5,
        "finite differences": 5,
        "central finite difference approximation": 4,
        "central finite differences": 4,
        "cancellation errors": 3,
        "error plots": 3,
        "cfd": 3,
        "central finite different method": 3,
        "cancellation error": 3,
        "first order derivatives": 3,
        "approximation methods": 3,
        "matrices": 3,
        "fortran": 2
    },
    "random floats": {
        "finite difference method": 8,
        "approximation": 7,
        "infinite float number": 5,
        "exponent": 5,
        "stepping interval": 5,
        "sissa machines": 5,
        "finite differences": 5,
        "central finite difference approximation": 4,
        "central finite differences": 4,
        "cancellation errors": 3,
        "error plots": 3,
        "cfd": 3,
        "central finite different method": 3,
        "cancellation error": 3,
        "first order derivatives": 3,
        "approximation methods": 3,
        "matrices": 3,
        "fortran": 2
    },
    "web": {
        "end index": 6,
        "cache": 4,
        "fetch": 4,
        "row id": 4,
        "column id": 4,
        "mkdir()": 3,
        "()": 3,
        "path object": 3,
        "os library": 3,
        "functionality": 3,
        "pandas row index": 3,
        "python slicing functionality": 3,
        "pandas slicing function": 3,
        "iloc[]": 3,
        "row index": 3,
        "loc[]": 3,
        "compound expressions": 3,
        "boolean arrays": 3,
        "data aggregration": 2,
        "tabular data": 1,
        "groupby function": 1,
        "groupby animation": 1,
        "rotten tomatoes": 1,
        "revenue": 1,
        "helper": 1,
        "row selection": 1,
        "label column selection": 1,
        "array slicing syntax": 1,
        "column names": 1
    },
    "command line": {
        "structured data": 3,
        "scatterplot": 3,
        "numeric features": 3,
        "simple line graph": 3,
        "uci machine learning": 3,
        "file contents": 3,
        "matplotlib documentation": 3,
        "3d plotting": 3,
        "feature vector": 3,
        "versicolor": 3,
        "correctly classified examples": 3,
        "target": 3,
        "decision model": 3,
        "misclassification percentage": 3,
        "decision tree classifier": 3,
        "wc": 2,
        "word counting tool": 2,
        "delimeter": 2,
        "cut command": 2,
        "head command": 2,
        "one liners": 2,
        "pipes": 2,
        "data folder": 2,
        "user exploration": 2,
        "survey responses": 2,
        "decision tree learning": 2,
        "file system": 1,
        "man page": 1,
        "shell commands": 1,
        "ipython notebooks": 1,
        "data manipulation": 1,
        "command line": 1
    },
    "docs": {
        "lsi": 6,
        "mic": 4,
        "m": 4,
        "term frequency inverse document frequency": 4,
        "entropy function": 4,
        "term frequency": 4,
        "inverse document frequency components": 4,
        "docs": 3,
        "tdmatrix": 3,
        "document space": 2,
        "final matrix": 2,
        "linalg svd function": 2,
        "sigma matrix": 2,
        "tdm": 2,
        "term space": 2,
        "svd": 2,
        "diagonal matrix": 2,
        "cosine similarity": 2,
        "distance metric": 2,
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "cosine similarity score": 1,
        "reuters documents": 1,
        "lsi space": 1,
        "predicted category": 1,
        "knn classifier": 1,
        "reuters document categorization": 1,
        "training document": 1,
        "reuters text categorization": 1,
        "emmed test": 1
    },
    "reuters dataset": {
        "lsi": 6,
        "mic": 4,
        "m": 4,
        "term frequency inverse document frequency": 4,
        "entropy function": 4,
        "term frequency": 4,
        "inverse document frequency components": 4,
        "docs": 3,
        "tdmatrix": 3,
        "document space": 2,
        "final matrix": 2,
        "linalg svd function": 2,
        "sigma matrix": 2,
        "tdm": 2,
        "term space": 2,
        "svd": 2,
        "diagonal matrix": 2,
        "cosine similarity": 2,
        "distance metric": 2,
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "cosine similarity score": 1,
        "reuters documents": 1,
        "lsi space": 1,
        "predicted category": 1,
        "knn classifier": 1,
        "reuters document categorization": 1,
        "training document": 1,
        "reuters text categorization": 1,
        "emmed test": 1
    },
    "series object": {
        "lsi": 6,
        "mic": 4,
        "m": 4,
        "term frequency inverse document frequency": 4,
        "entropy function": 4,
        "term frequency": 4,
        "inverse document frequency components": 4,
        "docs": 3,
        "tdmatrix": 3,
        "document space": 2,
        "final matrix": 2,
        "linalg svd function": 2,
        "sigma matrix": 2,
        "tdm": 2,
        "term space": 2,
        "svd": 2,
        "diagonal matrix": 2,
        "cosine similarity": 2,
        "distance metric": 2,
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "cosine similarity score": 1,
        "reuters documents": 1,
        "lsi space": 1,
        "predicted category": 1,
        "knn classifier": 1,
        "reuters document categorization": 1,
        "training document": 1,
        "reuters text categorization": 1,
        "emmed test": 1
    },
    "tensors": {
        "latent space": 15,
        "mixing coefficients": 10,
        "binarized image": 7,
        "handwriting styles": 5,
        "multivariate bernoulli distribution": 5,
        "misclassifications": 5,
        "data labels": 5,
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 1,
        "matrix multiplications": 1,
        "traceback": 1,
        "matrix multiplication": 1,
        "size mismatch": 1,
        "runtimeerror": 1
    },
    "indexing": {
        "iloc": 9,
        "variable name majors": 3,
        "fivethirtyeight": 3,
        "average unemployment rate": 3,
        "matplotlib plots": 3,
        "majors": 3,
        "low wage jobs": 3,
        "employment rates": 2,
        "loc property indexes": 2,
        "dfcars": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "color intensity": 1,
        "colors": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1,
        "women": 1,
        "part time rate": 1,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "matrix multiplication": {
        "receiving node": 10,
        "marginalizing": 9,
        "marginals": 6,
        "joint distributions": 6,
        "function marginalize": 6,
        "sending": 5,
        "functional programming": 5,
        "1d numpy arrays": 5,
        "tensor representations": 4,
        "numpy broadcasting": 4,
        "berkeley bowl": 2,
        "cantaloupes": 2,
        "vector dot products": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "fruit prices": 1,
        "final costs": 1,
        "fruit baskets": 1
    },
    "control structures": {
        "bfs": 10,
        "breadth first search": 8,
        "list comprehensions": 4,
        "vertex names": 4,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3,
        "dist array": 3,
        "prev array": 3,
        "depth first search": 3,
        "connected components": 2,
        "adjacency matrix": 1,
        "algebraic connectivity": 1,
        "laplacian matrix": 1
    },
    "syntax errors": {
        "bfs": 10,
        "breadth first search": 8,
        "list comprehensions": 4,
        "vertex names": 4,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3,
        "dist array": 3,
        "prev array": 3,
        "depth first search": 3,
        "connected components": 2,
        "adjacency matrix": 1,
        "algebraic connectivity": 1,
        "laplacian matrix": 1
    },
    "indentation": {
        "bfs": 10,
        "breadth first search": 8,
        "list comprehensions": 4,
        "vertex names": 4,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3,
        "dist array": 3,
        "prev array": 3,
        "depth first search": 3,
        "connected components": 2,
        "adjacency matrix": 1,
        "algebraic connectivity": 1,
        "laplacian matrix": 1
    },
    "interactive shell": {
        "bfs": 10,
        "breadth first search": 8,
        "list comprehensions": 4,
        "vertex names": 4,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3,
        "dist array": 3,
        "prev array": 3,
        "depth first search": 3,
        "connected components": 2,
        "adjacency matrix": 1,
        "algebraic connectivity": 1,
        "laplacian matrix": 1
    },
    "lo": {
        "bfs": 10,
        "breadth first search": 8,
        "list comprehensions": 4,
        "vertex names": 4,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3,
        "dist array": 3,
        "prev array": 3,
        "depth first search": 3,
        "connected components": 2,
        "adjacency matrix": 1,
        "algebraic connectivity": 1,
        "laplacian matrix": 1
    },
    "binary decision tree implementation": {
        "classification error": 13,
        "prediction path": 12,
        "early stopping conditions": 9,
        "validation error": 6,
        "validation data": 6,
        "lowest classification error": 4,
        "minimum node size": 3,
        "minimum error reduction": 3,
        "if condition": 3,
        "tree model": 3,
        "function classify": 3,
        "predicted class": 3,
        "lowest": 2,
        "qu": 1,
        "complexity": 1
    },
    "marriage": {
        "hazard function": 12,
        "first marriage": 8,
        "survival function": 8,
        "resampling": 8,
        "weighted resampling": 4,
        "sfs": 4,
        "pregnancy": 4,
        "median remaining time": 4,
        "age": 4,
        "sampling weights": 4,
        "divorce": 4,
        "survival curve": 4,
        "sampling error": 4
    },
    "first marriage": {
        "hazard function": 12,
        "first marriage": 8,
        "survival function": 8,
        "resampling": 8,
        "weighted resampling": 4,
        "sfs": 4,
        "pregnancy": 4,
        "median remaining time": 4,
        "age": 4,
        "sampling weights": 4,
        "divorce": 4,
        "survival curve": 4,
        "sampling error": 4
    },
    "nsfg respondent file": {
        "hazard function": 12,
        "first marriage": 8,
        "survival function": 8,
        "resampling": 8,
        "weighted resampling": 4,
        "sfs": 4,
        "pregnancy": 4,
        "median remaining time": 4,
        "age": 4,
        "sampling weights": 4,
        "divorce": 4,
        "survival curve": 4,
        "sampling error": 4
    },
    "model evaluation": {
        "embarkation ports": 4,
        "majority class classifier": 4,
        "false positives": 3,
        "missing ages": 2,
        "column mean": 2,
        "missing embarkation ports": 2,
        "embarkation port": 2,
        "ticket number": 2,
        "performance metric": 2,
        "correctly classified data points": 2,
        "total data points": 2,
        "graphlab create": 2,
        "majority": 2,
        "baseline": 2,
        "majority classifier": 2,
        "majority class prediction": 2,
        "false negatives": 2,
        "confusion matrix": 2,
        "true negatives": 2,
        "true positives": 2,
        "incorrect predictions": 2,
        "binary classification": 2,
        "quiz": 2,
        "passenger class": 2,
        "correctly classified reviews": 1,
        "baby product": 1,
        "negative reviews": 1,
        "false alarms": 1,
        "logistic regression classifier": 1,
        "women": 1,
        "wealth": 1,
        "age distributions": 1,
        "hypothesis testing": 1,
        "statistical method": 1,
        "internet": 1,
        "statistical hypothesis": 1,
        "null hypothesis": 1,
        "hypothesis test": 1,
        "age": 1,
        "alternative hypothesis": 1,
        "sex": 1,
        "embarked columns": 1,
        "test assumptions": 1
    },
    "test statistic": {
        "values": 7,
        "cs data": 6,
        "average heights": 4,
        "alpha value": 4,
        "statistical test": 4,
        "significance": 4,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "majors": 4,
        "average height values": 3,
        "pivot table": 3,
        "confounding variable": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3,
        "first babies": 1,
        "statistical significance": 1,
        "false negative rate": 1,
        "nsfg data": 1,
        "hypothesis test": 1
    },
    "pandas data frame": {
        "concat": 12,
        "seperator": 10,
        "semicolon": 10,
        "handwritten": 4,
        "numerical dataset": 4,
        "pandas data frame": 4,
        "adjusted rand index": 4,
        "standardize": 3,
        "elbow method": 2,
        "inflection point": 2,
        "elbow plot": 2,
        "default parameters": 2,
        "digits dataset": 2,
        "permutation": 2,
        "rand index": 2,
        "ari score": 2,
        "random labeling": 2,
        "true clusterings": 2
    },
    "unstructured data": {
        "ocr": 6,
        "text frequency analysis": 3,
        "text processing": 3,
        "optical character recognition": 3,
        "image processing": 3,
        "descriptive analytics": 3,
        "scanned restaurant menu": 3,
        "data preparation": 3,
        "command prompt": 3,
        "tesseract library": 3,
        "reading errors": 3,
        "tesseract": 3,
        "user exploration": 1,
        "structured data": 1,
        "scatterplot": 1,
        "survey responses": 1,
        "numeric features": 1,
        "simple line graph": 1,
        "uci machine learning": 1,
        "file contents": 1,
        "decision tree learning": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1,
        "processed image": 1
    },
    "markov decision processes": {
        "value iteration": 12,
        "randomly generated mdp": 6,
        "policy iteration": 5,
        "transition probability distribution": 3,
        "operations": 3,
        "markov decision processes": 3,
        "optimal policy": 3,
        "reward function": 3,
        "initial state distribution": 3,
        "value function": 3,
        "value iteration update": 3,
        "bellman backup operator value operator": 3,
        "optimal value function": 3,
        "m": 3,
        "3d arrays": 3,
        "randomly generated mdps": 3,
        "linear system": 2,
        "linear equation": 2,
        "state value function": 2,
        "exact policy iteration": 2,
        "\\gamma": 1
    },
    "kernel menu": {
        "value iteration": 12,
        "randomly generated mdp": 6,
        "policy iteration": 5,
        "transition probability distribution": 3,
        "operations": 3,
        "markov decision processes": 3,
        "optimal policy": 3,
        "reward function": 3,
        "initial state distribution": 3,
        "value function": 3,
        "value iteration update": 3,
        "bellman backup operator value operator": 3,
        "optimal value function": 3,
        "m": 3,
        "3d arrays": 3,
        "randomly generated mdps": 3,
        "linear system": 2,
        "linear equation": 2,
        "state value function": 2,
        "exact policy iteration": 2,
        "\\gamma": 1
    },
    "stopping criterion": {
        "cutpoint": 17,
        "classification error": 8,
        "validation data": 6,
        "training error": 6,
        "lowest classification error": 4,
        "lowest": 2,
        "qu": 2,
        "complexity": 2,
        "predicted probability": 2,
        "response variable": 2,
        "decision tree algorithm": 2,
        "classification error rate": 2,
        "gini index": 2,
        "mean response value": 1,
        "observation": 1,
        "tree diagram": 1,
        "predictive feature": 1,
        "high": 1,
        "high school graduation rate": 1,
        "high population density": 1,
        "maximum value": 1,
        "splitting criteria": 1,
        "classification trees": 1,
        "node purity": 1,
        "titanic": 1,
        "sex": 1,
        "age": 1
    },
    "keras keras": {
        "convolutional neural network": 6,
        "keras": 6,
        "mnist": 3,
        "sanitized traffic sign data": 3,
        "german traffic sign recognition benchmark": 3,
        "dataset": 3,
        "pickle files": 3,
        "traffic signs": 3,
        "feedforward neural network": 3,
        "pickle file": 3,
        "flatten layer": 2,
        "adam optimizer": 2,
        "final neural network": 2,
        "validation accuracy": 2,
        "data processing": 2,
        "ker": 1,
        "tensorflow": 1,
        "neural network": 1,
        "keras layer": 1,
        "neural network model": 1,
        "layer": 1,
        "max pool": 1,
        "keras sequential model": 1,
        "traffic sign images": 1,
        "dense layer width": 1,
        "softmax activation function": 1,
        "relu activation function": 1,
        "keras documentation": 1,
        "evaluation() function": 1,
        "activation model": 1,
        "metrics history": 1,
        "sequential model": 1,
        "loss functions": 1,
        "metrics": 1,
        "learning process": 1,
        "fit() function": 1,
        "stochastic gradient descent": 1,
        "training loss": 1,
        "categorical cross entropy": 1,
        "network compile": 1
    },
    "traffic sign classification": {
        "convolutional neural network": 6,
        "keras": 6,
        "mnist": 3,
        "sanitized traffic sign data": 3,
        "german traffic sign recognition benchmark": 3,
        "dataset": 3,
        "pickle files": 3,
        "traffic signs": 3,
        "feedforward neural network": 3,
        "pickle file": 3,
        "flatten layer": 2,
        "adam optimizer": 2,
        "final neural network": 2,
        "validation accuracy": 2,
        "data processing": 2,
        "ker": 1,
        "tensorflow": 1,
        "neural network": 1,
        "keras layer": 1,
        "neural network model": 1,
        "layer": 1,
        "max pool": 1,
        "keras sequential model": 1,
        "traffic sign images": 1,
        "dense layer width": 1,
        "softmax activation function": 1,
        "relu activation function": 1,
        "keras documentation": 1,
        "evaluation() function": 1,
        "activation model": 1,
        "metrics history": 1,
        "sequential model": 1,
        "loss functions": 1,
        "metrics": 1,
        "learning process": 1,
        "fit() function": 1,
        "stochastic gradient descent": 1,
        "training loss": 1,
        "categorical cross entropy": 1,
        "network compile": 1
    },
    "statistical test": {
        "weekday mean": 6,
        "weekend mean": 6,
        "likelihoods": 6,
        "bayesian analysis": 6,
        "bayesian terms": 3,
        "beliefs": 3,
        "likelihood function": 3,
        "standard error": 3,
        "total probability": 3,
        "first hypothesis": 3,
        "second hypothesis": 3,
        "statistical test": 3,
        "probabilities": 3,
        "quotient": 3,
        "confidence interval interpretations": 3,
        "credible interval": 3,
        "credible": 3,
        "matplotlib graph": 3,
        "null hypothesis": 2,
        "finger exercises": 1,
        "bayesian computing library": 1,
        "normal likelihood": 1
    },
    "arithmetic operations": {
        "timestamps": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "augmented vector": 2,
        "outer product": 2,
        "autoregressive model": 1,
        "lower left matrix": 1,
        "outer product average": 1,
        "average": 1
    },
    "hypothesis testing": {
        "hypothesis testing": 4,
        "jury selection": 4,
        "ncvs": 4,
        "property losses": 4,
        "bin widths": 4,
        "first babies": 3,
        "null hypothesis": 3,
        "population": 2,
        "racial composition": 2,
        "ncvs data": 2,
        "statistical significance": 2,
        "test statistic": 2,
        "age": 2,
        "hypothesis test": 2,
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1,
        "pregnancy length": 1,
        "random sampling": 1,
        "simulated samples": 1,
        "birth weight": 1,
        "correlation": 1,
        "false negative rate": 1,
        "nsfg data": 1,
        "internet": 1,
        "statistical hypothesis": 1,
        "passenger class": 1,
        "alternative hypothesis": 1,
        "sex": 1,
        "embarked columns": 1
    },
    "spark dataframe": {
        "ticker names": 6,
        "spark dataframe": 5,
        "tickers": 5,
        "movieid": 4,
        "tickerinfo": 4,
        "covariance matrix": 3,
        "rdd": 2,
        "movielens": 2,
        "textfile": 2,
        "test lists": 2,
        "training examples": 2,
        "test list": 2,
        "test examples": 2,
        "train example": 2,
        "tick": 2,
        "diff rolumns": 2,
        "eigenvalues": 2,
        "eigenvectors": 2,
        "company name": 2,
        "sector ids": 2,
        "sector id": 2,
        "spark context": 1,
        "import dependencies": 1,
        "stock price": 1,
        "sp500": 1,
        "partition columns": 1,
        "numpy vectors": 1,
        "eigenval": 1,
        "eigh function": 1,
        "computecov function": 1,
        "cov key": 1,
        "spectral analysis": 1,
        "directory figs": 1,
        "holiday shopping": 1,
        "income distribution": 1
    },
    "multidimensional arrays": {
        "identity matrix": 4,
        "boolean mask": 3,
        "response times": 2,
        "average response time": 2,
        "figure object": 2,
        "matshow": 2,
        "squared exponential distance": 2,
        "ave": 2,
        "structured matrices": 2,
        "element types": 2,
        "eye() function": 2,
        "diag()": 2,
        "element type": 2,
        "numpy array variables": 2,
        "indexing": 2,
        "response time": 1,
        "mean function": 1,
        "np": 1,
        "axis flag": 1,
        "axis argument": 1,
        "magic function": 1,
        "imports": 1,
        "pyplot module": 1,
        "trial numbers": 1,
        "trials array": 1,
        "descriptive statistics": 1,
        "axis object": 1,
        "multiple subplots": 1,
        "axis objects": 1,
        "medians": 1,
        "trial means": 1,
        "trial medians": 1,
        "keyword argument": 1,
        "marker symbols": 1,
        "axis labels": 1,
        "plotting function": 1,
        "panda": 1,
        "pixel intensities": 1,
        "2d array": 1,
        "heatmap": 1,
        "pixel intensity values": 1,
        "colormap": 1,
        "cmap": 1,
        "exercise": 1,
        "green cells": 1,
        "docstring": 1,
        "importing idiom": 1,
        "dictionary types": 1,
        "multidimensional arrays": 1,
        "commas": 1,
        "indexing notation": 1,
        "integer indices": 1,
        "indirect addressing": 1
    },
    "outliers": {
        "income": 7,
        "iterative approach": 5,
        "data cleaning": 5,
        "pandas method": 5,
        "10": 4,
        "log transforming": 4,
        "age": 3,
        "subtle outliers": 2,
        "outliers": 2,
        "data values": 2,
        "dbscan": 2,
        "mean value": 1,
        "age mood": 1,
        "correlationship coefficient": 1,
        "stroger relationships": 1,
        "corrs variable": 1,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "regression": 1,
        "iris data": 1,
        "final classification": 1,
        "supervised machine learning": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1,
        "matplotlib visualizations": 1,
        "lambda expression": 1,
        "pand": 1
    },
    "code editors": {
        "list comprehensions": 6,
        "programming": 4,
        "docstring": 4,
        "keyword arguments": 4,
        "integers": 2,
        "variable word": 2,
        "value word": 2,
        "iterators": 2,
        "enumerate()": 2,
        "loop iteration": 2,
        "multiple assignment": 2,
        "items()": 2,
        "even valued perfect squares": 2,
        "if statements": 2,
        "functions": 2,
        "code execution": 2,
        "code duplication": 2,
        "programming languages": 2,
        "print() function": 2,
        "python interpreter": 2,
        "exception": 2,
        "variable names": 2,
        "large programs": 2,
        "control flow structures": 2,
        "local scoping": 2,
        "variable scope": 2,
        "nameerror": 2,
        "variable": 2,
        "nested list": 2,
        "code block": 2
    },
    "data manipulation": {
        "crime": 9,
        "cash values": 9,
        "sample size": 6,
        "datascience module": 5,
        "law of averages": 2,
        "population parameter estimation": 2,
        "hypothesis testing": 2,
        "population": 2,
        "jury selection": 2,
        "racial composition": 2,
        "ncvs": 2,
        "property losses": 2,
        "bin widths": 2,
        "wc": 1,
        "word counting tool": 1,
        "delimeter": 1,
        "cut command": 1,
        "head command": 1,
        "one liners": 1,
        "pipes": 1,
        "data folder": 1,
        "structured data": 1,
        "scatterplot": 1,
        "numeric features": 1,
        "simple line graph": 1,
        "uci machine learning": 1,
        "file contents": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1
    },
    "python object": {
        "tweetdeck": 5,
        "pandas documentation": 4,
        "null hypothesis": 4,
        "tensorflow": 4,
        "json": 3,
        "string method": 3,
        "hash map": 2,
        "phonebook": 2,
        "programming": 2,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "statistical test": 2,
        "numpy functions": 2,
        "hypothesis test": 2,
        "table": 2,
        "datascience": 2,
        "data 8": 2,
        "twitter web client": 2,
        "tutorials": 2,
        "trump tweets": 1,
        "learning rate": 1,
        "gradient descent": 1,
        "cross entropy loss function": 1,
        "optimization": 1,
        "stochastic gradient descent": 1,
        "python object": 1
    },
    "control system": {
        "lqr": 5,
        "lateral movement": 2,
        "coordinate system": 2,
        "helper functions": 2,
        "stable final state": 2,
        "pendulum": 2,
        "unstable equilibrium state": 2,
        "unstable equilibrium point": 2,
        "unstable equilibrium": 2,
        "feedback": 2,
        "state vector": 2,
        "closed loop full state feedback controller": 2,
        "linear quadratic regulator": 2,
        "optimal feedback gain": 2,
        "gains matrix": 2,
        "algebraic riccati equation solution": 2,
        "algebraic ricatti equation": 2,
        "qr": 2,
        "linear algebra operations": 2,
        "api": 2,
        "algebraic riccati equation": 2,
        "feedback control law": 2,
        "quadratic cost function": 2,
        "unstable equilibrium state vector": 2,
        "control system": 2,
        "cost function": 2,
        "r cost matrices": 2,
        "lqr solver": 2,
        "q": 2,
        "linearization": 1,
        "pend": 1,
        "small": 1,
        "angular speed": 1,
        "goal state": 1,
        "fixed goal state": 1,
        "initial values": 1,
        "nonlinear system": 1,
        "fixed end goal state": 1
    },
    "interface": {
        "complexity parameter": 7,
        "test set error": 5,
        "validation error": 5,
        "best fit model": 4,
        "test risk": 4,
        "validation": 4,
        "validation set error": 3,
        "hypothesis set": 3,
        "polynomial degree": 3,
        "0th order polynomials": 2,
        "test set errors": 2,
        "hyper": 2,
        "learner": 2,
        "test error": 2,
        "validation set errors": 2,
        "training error": 2,
        "20th order polynomials": 2,
        "concatenation": 1,
        "training data requirements": 1,
        "random splits": 1,
        "prediction error": 1,
        "multiple": 1,
        "validation process": 1,
        "validation errors": 1,
        "sine curve": 1,
        "hypothesis space": 1,
        "kfold": 1,
        "fold errors": 1,
        "dual problem": 1,
        "wildly behaving pilynomials": 1,
        "lagrange multipliers": 1,
        "bias": 1,
        "penalty term": 1
    },
    "eigenvectors": {
        "correlation matrix": 6,
        "covariance matrix": 5,
        "eigendecomposition": 5,
        "eigenvectors": 4,
        "pca": 4,
        "tickerinfo": 4,
        "ticker names": 4,
        "eigenvalues": 3,
        "singular vector decomposition": 2,
        "eigenpairs": 2,
        "projection matrix": 2,
        "tickers": 2,
        "company name": 2,
        "sector ids": 2,
        "sector id": 2,
        "covariance": 1,
        "eigenvalue problem": 1,
        "components": 1,
        "mean vector": 1,
        "numpy cov function": 1,
        "ance matrix": 1,
        "normalized covariance matrix": 1,
        "finance": 1,
        "standardized data": 1,
        "eigenvalue pairs": 1,
        "standardizing": 1,
        "computational efficiency": 1,
        "pca implementations": 1,
        "axes": 1,
        "lowest eigenvalues": 1,
        "explained variance": 1,
        "principal components": 1,
        "information": 1,
        "first principal component": 1,
        "second principal component": 1,
        "concatenated top k eigenvectors": 1
    },
    "umpy": {
        "hamlettext": 11,
        "hamletwords": 6,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "keyword arguments": 4,
        "positional properties": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1,
        "dictionary comprehension": 1
    },
    "specfic task": {
        "hamlettext": 11,
        "hamletwords": 6,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "keyword arguments": 4,
        "positional properties": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1,
        "dictionary comprehension": 1
    },
    "mathematical function": {
        "hamlettext": 11,
        "hamletwords": 6,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "keyword arguments": 4,
        "positional properties": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1,
        "dictionary comprehension": 1
    },
    "pr": {
        "hamlettext": 11,
        "hamletwords": 6,
        "multiple default values": 4,
        "default argument": 4,
        "double": 4,
        "keyword arguments": 4,
        "positional properties": 4,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1,
        "dictionary comprehension": 1
    },
    "matrix decomposition": {
        "predictive models": 7,
        "learn": 7,
        "tutorial": 7,
        "scikit-learn": 7,
        "titanic survival dataset": 7,
        "sklearn library": 7,
        "categorical variables": 7,
        "exploratory data analysis": 7,
        "age": 7,
        "numerical variables": 7
    },
    "logistic function": {
        "error functions": 15,
        "error function": 12,
        "predicted class": 10,
        "sigmoid function": 9,
        "gradient descent": 5,
        "total cost function": 2,
        "last function approximation": 2,
        "learning rate": 2,
        "learning curve": 2,
        "logistic function": 1,
        "logit link function": 1,
        "odds ratios": 1,
        "college admissions data": 1,
        "logistic regression prediction line": 1,
        "binary class": 1,
        "regularization": 1,
        "predict()": 1,
        "correct guesses": 1,
        "guessed classes": 1,
        "predicted exam results": 1
    },
    "row index": {
        "nat entry": 3,
        "datetimeindex": 3,
        "timestamps": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "column name index": {
        "nat entry": 3,
        "datetimeindex": 3,
        "timestamps": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "knn classification": {
        "knn": 6,
        "iris data": 4,
        "kneighborsclassifier": 4,
        "decision boundaries": 4,
        "iris object": 2,
        "feature names": 2,
        "target data": 2,
        "datatypes": 2,
        "flower class": 2,
        "classification rate": 2,
        "automated cross validation": 2,
        "decision boundary": 2,
        "predicted class": 2,
        "knn model": 2,
        "machine learning algorithms": 2,
        "standard deviations": 2,
        "normalization": 2,
        "pandas manipulations": 2,
        "pixel values": 2,
        "mnist handwritten digit set": 2,
        "image dataset": 2,
        "data format": 2,
        "euclidean distance": 2,
        "knn classifier": 2,
        "distance function": 2,
        "knn algorithm": 2,
        "function predict": 1,
        "predicted class value": 1,
        "nearestneighborsclassifier": 1,
        "function distance": 1,
        "test data": 1,
        "sk": 1,
        "image": 1,
        "knn process": 1
    },
    "fisher iris dataset": {
        "knn": 6,
        "iris data": 4,
        "kneighborsclassifier": 4,
        "decision boundaries": 4,
        "iris object": 2,
        "feature names": 2,
        "target data": 2,
        "datatypes": 2,
        "flower class": 2,
        "classification rate": 2,
        "automated cross validation": 2,
        "decision boundary": 2,
        "predicted class": 2,
        "knn model": 2,
        "machine learning algorithms": 2,
        "standard deviations": 2,
        "normalization": 2,
        "pandas manipulations": 2,
        "pixel values": 2,
        "mnist handwritten digit set": 2,
        "image dataset": 2,
        "data format": 2,
        "euclidean distance": 2,
        "knn classifier": 2,
        "distance function": 2,
        "knn algorithm": 2,
        "function predict": 1,
        "predicted class value": 1,
        "nearestneighborsclassifier": 1,
        "function distance": 1,
        "test data": 1,
        "sk": 1,
        "image": 1,
        "knn process": 1
    },
    "playing cards": {
        "bayes rule": 8,
        "probability distribution": 8,
        "log likelihood": 6,
        "conditional probability": 4,
        "probabilistic graphical model": 4,
        "noise property": 4,
        "deterministic process": 4,
        "inference problem": 4,
        "gaussian likelihood function": 4,
        "straight line": 4,
        "mean model": 4,
        "gaussian distribution": 4,
        "model parameters": 4,
        "likelihood": 4,
        "lambda function": 2,
        "2d distribution": 2
    },
    "bayes rule example": {
        "bayes rule": 8,
        "probability distribution": 8,
        "log likelihood": 6,
        "conditional probability": 4,
        "probabilistic graphical model": 4,
        "noise property": 4,
        "deterministic process": 4,
        "inference problem": 4,
        "gaussian likelihood function": 4,
        "straight line": 4,
        "mean model": 4,
        "gaussian distribution": 4,
        "model parameters": 4,
        "likelihood": 4,
        "lambda function": 2,
        "2d distribution": 2
    },
    "analytic methods": {
        "sampling distribution": 11,
        "null hypothesis": 6,
        "permutation": 4,
        "student t distribution": 4,
        "analytic distribution": 4,
        "central limit theorem": 4,
        "sampling distributions": 3,
        "standard error": 3,
        "probabilities": 2,
        "hypothesistest": 2,
        "cdf": 2,
        "simulation": 2,
        "lognormal distribution": 2,
        "birth weight": 2,
        "birth weights": 2,
        "multiplicative factors": 2,
        "random value": 2,
        "adult weights": 2,
        "difference in means": 2,
        "confidence intervals": 2,
        "confidence interval": 2,
        "gender gap": 1,
        "student engineering teams": 1,
        "class projects": 1,
        "standard errors": 1
    },
    "finite mean": {
        "sampling distribution": 11,
        "null hypothesis": 6,
        "permutation": 4,
        "student t distribution": 4,
        "analytic distribution": 4,
        "central limit theorem": 4,
        "sampling distributions": 3,
        "standard error": 3,
        "probabilities": 2,
        "hypothesistest": 2,
        "cdf": 2,
        "simulation": 2,
        "lognormal distribution": 2,
        "birth weight": 2,
        "birth weights": 2,
        "multiplicative factors": 2,
        "random value": 2,
        "adult weights": 2,
        "difference in means": 2,
        "confidence intervals": 2,
        "confidence interval": 2,
        "gender gap": 1,
        "student engineering teams": 1,
        "class projects": 1,
        "standard errors": 1
    },
    "distance function": {
        "computation time": 7,
        "nearest neighbor algorithm": 5,
        "unlabeled point": 4,
        "nearest neighbor": 4,
        "distance matrix": 4,
        "distance compuation": 4,
        "function pydistance": 4,
        "higher performance": 4,
        "pybatch": 4,
        "correct": 4,
        "distance function": 4,
        "python nearest neighbor search": 4,
        "optimized nearest neighbor function": 4,
        "digit recognition task": 4,
        "speedup": 3,
        "optimization": 2,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1,
        "test data": 1
    },
    "key note": {
        "heatmap": 23,
        "folium map": 6,
        "berkeley pd call data": 4,
        "calls table": 4,
        "longitude data": 4,
        "select function": 4,
        "heatmapwithtime": 4,
        "l": 3,
        "stacking function call": 3,
        "longitude": 3,
        "longitudes": 3,
        "usa": 2,
        "dummy location data": 1,
        "dates": 1,
        "constructor function": 1,
        "berkeley calls": 1,
        "transposed latitudes": 1,
        "call location data": 1
    },
    "trace objects": {
        "waveforms": 4,
        "stream": 4,
        "sampling rate": 4,
        "trace": 4,
        "arithmetic operations": 4,
        "numpy functions": 4,
        "standard ascii files": 4,
        "cross correlations": 4,
        "trace objects": 4,
        "beamforming": 4,
        "stream objects": 4,
        "lowpass filter": 4,
        "corner frequency": 4,
        "preview": 4,
        "gaussian noise": 3,
        "spectrograms": 2,
        "spectrogram plot": 2,
        "logarithmic frequency scale": 2,
        "tapering": 1,
        "lowpass": 1,
        "array": 1,
        "non": 1
    },
    "hash tables": {
        "bfs": 10,
        "breadth first search": 8,
        "vertex names": 4,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3,
        "dist array": 3,
        "prev array": 3,
        "depth first search": 3,
        "connected components": 2,
        "adjacency matrix": 1,
        "algebraic connectivity": 1,
        "laplacian matrix": 1
    },
    "adjacency lists": {
        "bfs": 10,
        "breadth first search": 8,
        "vertex names": 4,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3,
        "dist array": 3,
        "prev array": 3,
        "depth first search": 3,
        "connected components": 2,
        "adjacency matrix": 1,
        "algebraic connectivity": 1,
        "laplacian matrix": 1
    },
    "edge lookups": {
        "bfs": 10,
        "breadth first search": 8,
        "vertex names": 4,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3,
        "dist array": 3,
        "prev array": 3,
        "depth first search": 3,
        "connected components": 2,
        "adjacency matrix": 1,
        "algebraic connectivity": 1,
        "laplacian matrix": 1
    },
    "dense graphs": {
        "bfs": 10,
        "breadth first search": 8,
        "vertex names": 4,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3,
        "dist array": 3,
        "prev array": 3,
        "depth first search": 3,
        "connected components": 2,
        "adjacency matrix": 1,
        "algebraic connectivity": 1,
        "laplacian matrix": 1
    },
    "adjacency matrices": {
        "bfs": 10,
        "breadth first search": 8,
        "vertex names": 4,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3,
        "dist array": 3,
        "prev array": 3,
        "depth first search": 3,
        "connected components": 2,
        "adjacency matrix": 1,
        "algebraic connectivity": 1,
        "laplacian matrix": 1
    },
    "data structures": {
        "bfs": 10,
        "breadth first search": 8,
        "vertex names": 4,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3,
        "dist array": 3,
        "prev array": 3,
        "depth first search": 3,
        "connected components": 2,
        "adjacency matrix": 1,
        "algebraic connectivity": 1,
        "laplacian matrix": 1
    },
    "sparse graphs": {
        "bfs": 10,
        "breadth first search": 8,
        "vertex names": 4,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3,
        "dist array": 3,
        "prev array": 3,
        "depth first search": 3,
        "connected components": 2,
        "adjacency matrix": 1,
        "algebraic connectivity": 1,
        "laplacian matrix": 1
    },
    "seishub": {
        "instrument response": 7,
        "range": 5,
        "obspy documentation": 5,
        "depth range": 5,
        "magnitude range": 5,
        "matching channels": 5,
        "matching stations": 5,
        "waveform requests": 5,
        "instrument response information": 5,
        "instrument correction": 5,
        "narrow angular distance": 4,
        "search criteria": 4,
        "large datasets": 3,
        "internal repeated webservice requests": 3,
        "wave": 1,
        "station metadata": 1,
        "vertical 1 hz stream": 1
    },
    "seedlink": {
        "instrument response": 7,
        "range": 5,
        "obspy documentation": 5,
        "depth range": 5,
        "magnitude range": 5,
        "matching channels": 5,
        "matching stations": 5,
        "waveform requests": 5,
        "instrument response information": 5,
        "instrument correction": 5,
        "narrow angular distance": 4,
        "search criteria": 4,
        "large datasets": 3,
        "internal repeated webservice requests": 3,
        "wave": 1,
        "station metadata": 1,
        "vertical 1 hz stream": 1
    },
    "seiscomp": {
        "instrument response": 7,
        "range": 5,
        "obspy documentation": 5,
        "depth range": 5,
        "magnitude range": 5,
        "matching channels": 5,
        "matching stations": 5,
        "waveform requests": 5,
        "instrument response information": 5,
        "instrument correction": 5,
        "narrow angular distance": 4,
        "search criteria": 4,
        "large datasets": 3,
        "internal repeated webservice requests": 3,
        "wave": 1,
        "station metadata": 1,
        "vertical 1 hz stream": 1
    },
    "local seismological database": {
        "instrument response": 7,
        "range": 5,
        "obspy documentation": 5,
        "depth range": 5,
        "magnitude range": 5,
        "matching channels": 5,
        "matching stations": 5,
        "waveform requests": 5,
        "instrument response information": 5,
        "instrument correction": 5,
        "narrow angular distance": 4,
        "search criteria": 4,
        "large datasets": 3,
        "internal repeated webservice requests": 3,
        "wave": 1,
        "station metadata": 1,
        "vertical 1 hz stream": 1
    },
    "fdsn webservices": {
        "instrument response": 7,
        "range": 5,
        "obspy documentation": 5,
        "depth range": 5,
        "magnitude range": 5,
        "matching channels": 5,
        "matching stations": 5,
        "waveform requests": 5,
        "instrument response information": 5,
        "instrument correction": 5,
        "narrow angular distance": 4,
        "search criteria": 4,
        "large datasets": 3,
        "internal repeated webservice requests": 3,
        "wave": 1,
        "station metadata": 1,
        "vertical 1 hz stream": 1
    },
    "data centers": {
        "instrument response": 7,
        "range": 5,
        "obspy documentation": 5,
        "depth range": 5,
        "magnitude range": 5,
        "matching channels": 5,
        "matching stations": 5,
        "waveform requests": 5,
        "instrument response information": 5,
        "instrument correction": 5,
        "narrow angular distance": 4,
        "search criteria": 4,
        "large datasets": 3,
        "internal repeated webservice requests": 3,
        "wave": 1,
        "station metadata": 1,
        "vertical 1 hz stream": 1
    },
    "arclink": {
        "instrument response": 7,
        "range": 5,
        "obspy documentation": 5,
        "depth range": 5,
        "magnitude range": 5,
        "matching channels": 5,
        "matching stations": 5,
        "waveform requests": 5,
        "instrument response information": 5,
        "instrument correction": 5,
        "narrow angular distance": 4,
        "search criteria": 4,
        "large datasets": 3,
        "internal repeated webservice requests": 3,
        "wave": 1,
        "station metadata": 1,
        "vertical 1 hz stream": 1
    },
    "fdsn": {
        "instrument response": 7,
        "range": 5,
        "obspy documentation": 5,
        "depth range": 5,
        "magnitude range": 5,
        "matching channels": 5,
        "matching stations": 5,
        "waveform requests": 5,
        "instrument response information": 5,
        "instrument correction": 5,
        "narrow angular distance": 4,
        "search criteria": 4,
        "large datasets": 3,
        "internal repeated webservice requests": 3,
        "wave": 1,
        "station metadata": 1,
        "vertical 1 hz stream": 1
    },
    "earthworm": {
        "instrument response": 7,
        "range": 5,
        "obspy documentation": 5,
        "depth range": 5,
        "magnitude range": 5,
        "matching channels": 5,
        "matching stations": 5,
        "waveform requests": 5,
        "instrument response information": 5,
        "instrument correction": 5,
        "narrow angular distance": 4,
        "search criteria": 4,
        "large datasets": 3,
        "internal repeated webservice requests": 3,
        "wave": 1,
        "station metadata": 1,
        "vertical 1 hz stream": 1
    },
    "fdsn webserv": {
        "instrument response": 7,
        "range": 5,
        "obspy documentation": 5,
        "depth range": 5,
        "magnitude range": 5,
        "matching channels": 5,
        "matching stations": 5,
        "waveform requests": 5,
        "instrument response information": 5,
        "instrument correction": 5,
        "narrow angular distance": 4,
        "search criteria": 4,
        "large datasets": 3,
        "internal repeated webservice requests": 3,
        "wave": 1,
        "station metadata": 1,
        "vertical 1 hz stream": 1
    },
    "custom processing workflows": {
        "instrument response": 7,
        "range": 5,
        "obspy documentation": 5,
        "depth range": 5,
        "magnitude range": 5,
        "matching channels": 5,
        "matching stations": 5,
        "waveform requests": 5,
        "instrument response information": 5,
        "instrument correction": 5,
        "narrow angular distance": 4,
        "search criteria": 4,
        "large datasets": 3,
        "internal repeated webservice requests": 3,
        "wave": 1,
        "station metadata": 1,
        "vertical 1 hz stream": 1
    },
    "web service": {
        "instrument response": 7,
        "range": 5,
        "obspy documentation": 5,
        "depth range": 5,
        "magnitude range": 5,
        "matching channels": 5,
        "matching stations": 5,
        "waveform requests": 5,
        "instrument response information": 5,
        "instrument correction": 5,
        "narrow angular distance": 4,
        "search criteria": 4,
        "large datasets": 3,
        "internal repeated webservice requests": 3,
        "wave": 1,
        "station metadata": 1,
        "vertical 1 hz stream": 1
    },
    "majors": {
        "values": 7,
        "cs data": 6,
        "women": 5,
        "average heights": 4,
        "alpha value": 4,
        "statistical test": 4,
        "significance": 4,
        "cogsci": 4,
        "compsci": 4,
        "majors": 4,
        "average height values": 3,
        "pivot table": 3,
        "confounding variable": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3,
        "part time rate": 1
    },
    "square euclidean distance": {
        "computation time": 7,
        "nearest neighbor algorithm": 5,
        "unlabeled point": 4,
        "nearest neighbor": 4,
        "distance matrix": 4,
        "distance compuation": 4,
        "function pydistance": 4,
        "higher performance": 4,
        "pybatch": 4,
        "correct": 4,
        "distance function": 4,
        "python nearest neighbor search": 4,
        "optimized nearest neighbor function": 4,
        "digit recognition task": 4,
        "speedup": 3,
        "optimization": 2,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1
    },
    "python nearest neighbor": {
        "computation time": 7,
        "nearest neighbor algorithm": 5,
        "unlabeled point": 4,
        "nearest neighbor": 4,
        "distance matrix": 4,
        "distance compuation": 4,
        "function pydistance": 4,
        "higher performance": 4,
        "pybatch": 4,
        "correct": 4,
        "distance function": 4,
        "python nearest neighbor search": 4,
        "optimized nearest neighbor function": 4,
        "digit recognition task": 4,
        "speedup": 3,
        "optimization": 2,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1
    },
    "tokens": {
        "generator function": 13,
        "word counts": 12,
        "tokens": 10,
        "sorted function": 4,
        "sorted word counts": 4,
        "file io": 3,
        "memory consumption": 3,
        "filenames": 3,
        "with statement": 3,
        "tokenization": 3,
        "word counting": 2,
        "nltk corpus": 2,
        "nltk reuters corpus": 2,
        "tokenize song lyrics": 1,
        "kaggle hosted dataset": 1,
        "songlyrics": 1,
        "song lyrics": 1
    },
    "conda": {
        "latent space": 15,
        "mixing coefficients": 10,
        "binarized image": 7,
        "handwriting styles": 5,
        "multivariate bernoulli distribution": 5,
        "misclassifications": 5,
        "data labels": 5,
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 1
    },
    "written digits": {
        "latent space": 15,
        "mixing coefficients": 10,
        "binarized image": 7,
        "handwriting styles": 5,
        "multivariate bernoulli distribution": 5,
        "misclassifications": 5,
        "data labels": 5,
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 1
    },
    "handwritten numbers": {
        "latent space": 15,
        "mixing coefficients": 10,
        "binarized image": 7,
        "handwriting styles": 5,
        "multivariate bernoulli distribution": 5,
        "misclassifications": 5,
        "data labels": 5,
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 1
    },
    "mnist data loader": {
        "latent space": 15,
        "mixing coefficients": 10,
        "binarized image": 7,
        "handwriting styles": 5,
        "multivariate bernoulli distribution": 5,
        "misclassifications": 5,
        "data labels": 5,
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 1
    },
    "function binarize": {
        "latent space": 15,
        "mixing coefficients": 10,
        "binarized image": 7,
        "handwriting styles": 5,
        "multivariate bernoulli distribution": 5,
        "misclassifications": 5,
        "data labels": 5,
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 1
    },
    "binary images": {
        "latent space": 15,
        "mixing coefficients": 10,
        "binarized image": 7,
        "handwriting styles": 5,
        "multivariate bernoulli distribution": 5,
        "misclassifications": 5,
        "data labels": 5,
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 1
    },
    "mnist data": {
        "latent space": 15,
        "mixing coefficients": 10,
        "binarized image": 7,
        "handwriting styles": 5,
        "multivariate bernoulli distribution": 5,
        "misclassifications": 5,
        "data labels": 5,
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 1
    },
    "sql queries": {
        "postgresql": 8,
        "catalog": 8,
        "product data": 6,
        "shipping time": 3,
        "sql tables": 2,
        "anothertable": 2,
        "onetable": 2,
        "yetathird": 2,
        "variable names": 2,
        "underscores": 2,
        "alphanumeric characters": 2,
        "python assert": 2,
        "vertex ids": 2,
        "vertex id": 2,
        "column variables": 1,
        "valid variable names": 1,
        "equals sign": 1,
        "input string": 1,
        "equality string": 1,
        "political blogs dataset": 1,
        "sqlite database": 1,
        "schema": 1,
        "maximum value": 1,
        "minimum value": 1,
        "vertex table": 1,
        "sql": 1,
        "test code": 1,
        "sanity check": 1,
        "leaning fields": 1,
        "outdegrees": 1,
        "indegrees": 1,
        "targeturl": 1,
        "sourceurl": 1,
        "targetleaning": 1,
        "pandas data frame": 1,
        "sourceleaning": 1,
        "source vertex": 1
    },
    "randomforestclassifier": {
        "probabilistic predictions": 3,
        "paremeters": 3,
        "iris": 3,
        "iris data set": 3,
        "1d array": 2,
        "supervised models": 2,
        "d array": 2,
        "unsupervised models": 2,
        "distance matrix": 2,
        "cluster centers": 2,
        "dbscan": 2,
        "confusion matrix": 1,
        "iris target": 1,
        "clustering algorithms": 1,
        "2d plot": 1,
        "sepal length": 1,
        "unsupervised machine learning": 1,
        "data mining": 1,
        "outlier detection": 1,
        "supervised learning": 1,
        "convex clusters": 1,
        "astronomy": 1,
        "pseudocode": 1,
        "convex": 1,
        "lsst": 1,
        "random state": 1,
        "euclidean distance": 1,
        "clustering outcome": 1,
        "petal length": 1,
        "scaling": 1,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "regression": 1,
        "iris data": 1,
        "final classification": 1,
        "supervised machine learning": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1,
        "average auc": 1,
        "code cell": 1
    },
    "alm data": {
        "california institute of technology": 6,
        "plos alm api": 4,
        "variable dois": 4,
        "alm api": 4,
        "europepubmedcentral citations": 4,
        "article level metrics": 4,
        "facebook posts": 4,
        "plos article level metrics": 4,
        "europepmc citations": 4,
        "tweets": 4,
        "api": 4,
        "variable caltech": 4,
        "search": 2,
        "affiliation term": 2,
        "os": 2,
        "caltech": 2,
        "advanced search functionality": 2,
        "plos": 2,
        "twitter handles": 2,
        "unique account names": 2,
        "twitter account handles": 2
    },
    "estim": {
        "complexity parameter": 7,
        "test set error": 5,
        "validation error": 5,
        "best fit model": 4,
        "test risk": 4,
        "validation": 4,
        "validation set error": 3,
        "hypothesis set": 3,
        "polynomial degree": 3,
        "0th order polynomials": 2,
        "test set errors": 2,
        "hyper": 2,
        "learner": 2,
        "test error": 2,
        "validation set errors": 2,
        "training error": 2,
        "20th order polynomials": 2,
        "random splits": 1,
        "prediction error": 1,
        "multiple": 1,
        "validation process": 1,
        "validation errors": 1,
        "sine curve": 1,
        "hypothesis space": 1,
        "kfold": 1,
        "fold errors": 1,
        "dual problem": 1,
        "wildly behaving pilynomials": 1,
        "lagrange multipliers": 1,
        "bias": 1,
        "penalty term": 1
    },
    "utility functions": {
        "complexity parameter": 7,
        "test set error": 5,
        "validation error": 5,
        "best fit model": 4,
        "test risk": 4,
        "validation": 4,
        "validation set error": 3,
        "hypothesis set": 3,
        "polynomial degree": 3,
        "0th order polynomials": 2,
        "test set errors": 2,
        "hyper": 2,
        "learner": 2,
        "test error": 2,
        "validation set errors": 2,
        "training error": 2,
        "20th order polynomials": 2,
        "random splits": 1,
        "prediction error": 1,
        "multiple": 1,
        "validation process": 1,
        "validation errors": 1,
        "sine curve": 1,
        "hypothesis space": 1,
        "kfold": 1,
        "fold errors": 1,
        "dual problem": 1,
        "wildly behaving pilynomials": 1,
        "lagrange multipliers": 1,
        "bias": 1,
        "penalty term": 1
    },
    "estimators": {
        "complexity parameter": 7,
        "test set error": 5,
        "validation error": 5,
        "best fit model": 4,
        "test risk": 4,
        "validation": 4,
        "validation set error": 3,
        "hypothesis set": 3,
        "polynomial degree": 3,
        "0th order polynomials": 2,
        "test set errors": 2,
        "hyper": 2,
        "learner": 2,
        "test error": 2,
        "validation set errors": 2,
        "training error": 2,
        "20th order polynomials": 2,
        "random splits": 1,
        "prediction error": 1,
        "multiple": 1,
        "validation process": 1,
        "validation errors": 1,
        "sine curve": 1,
        "hypothesis space": 1,
        "kfold": 1,
        "fold errors": 1,
        "dual problem": 1,
        "wildly behaving pilynomials": 1,
        "lagrange multipliers": 1,
        "bias": 1,
        "penalty term": 1
    },
    "estimator interface": {
        "complexity parameter": 7,
        "test set error": 5,
        "validation error": 5,
        "best fit model": 4,
        "test risk": 4,
        "validation": 4,
        "validation set error": 3,
        "hypothesis set": 3,
        "polynomial degree": 3,
        "0th order polynomials": 2,
        "test set errors": 2,
        "hyper": 2,
        "learner": 2,
        "test error": 2,
        "validation set errors": 2,
        "training error": 2,
        "20th order polynomials": 2,
        "random splits": 1,
        "prediction error": 1,
        "multiple": 1,
        "validation process": 1,
        "validation errors": 1,
        "sine curve": 1,
        "hypothesis space": 1,
        "kfold": 1,
        "fold errors": 1,
        "dual problem": 1,
        "wildly behaving pilynomials": 1,
        "lagrange multipliers": 1,
        "bias": 1,
        "penalty term": 1
    },
    "incantation": {
        "complexity parameter": 7,
        "test set error": 5,
        "validation error": 5,
        "best fit model": 4,
        "test risk": 4,
        "validation": 4,
        "validation set error": 3,
        "hypothesis set": 3,
        "polynomial degree": 3,
        "0th order polynomials": 2,
        "test set errors": 2,
        "hyper": 2,
        "learner": 2,
        "test error": 2,
        "validation set errors": 2,
        "training error": 2,
        "20th order polynomials": 2,
        "random splits": 1,
        "prediction error": 1,
        "multiple": 1,
        "validation process": 1,
        "validation errors": 1,
        "sine curve": 1,
        "hypothesis space": 1,
        "kfold": 1,
        "fold errors": 1,
        "dual problem": 1,
        "wildly behaving pilynomials": 1,
        "lagrange multipliers": 1,
        "bias": 1,
        "penalty term": 1
    },
    "predictor interface": {
        "complexity parameter": 7,
        "test set error": 5,
        "validation error": 5,
        "best fit model": 4,
        "test risk": 4,
        "validation": 4,
        "validation set error": 3,
        "hypothesis set": 3,
        "polynomial degree": 3,
        "0th order polynomials": 2,
        "test set errors": 2,
        "hyper": 2,
        "learner": 2,
        "test error": 2,
        "validation set errors": 2,
        "training error": 2,
        "20th order polynomials": 2,
        "random splits": 1,
        "prediction error": 1,
        "multiple": 1,
        "validation process": 1,
        "validation errors": 1,
        "sine curve": 1,
        "hypothesis space": 1,
        "kfold": 1,
        "fold errors": 1,
        "dual problem": 1,
        "wildly behaving pilynomials": 1,
        "lagrange multipliers": 1,
        "bias": 1,
        "penalty term": 1
    },
    "complementary interfaces": {
        "complexity parameter": 7,
        "test set error": 5,
        "validation error": 5,
        "best fit model": 4,
        "test risk": 4,
        "validation": 4,
        "validation set error": 3,
        "hypothesis set": 3,
        "polynomial degree": 3,
        "0th order polynomials": 2,
        "test set errors": 2,
        "hyper": 2,
        "learner": 2,
        "test error": 2,
        "validation set errors": 2,
        "training error": 2,
        "20th order polynomials": 2,
        "random splits": 1,
        "prediction error": 1,
        "multiple": 1,
        "validation process": 1,
        "validation errors": 1,
        "sine curve": 1,
        "hypothesis space": 1,
        "kfold": 1,
        "fold errors": 1,
        "dual problem": 1,
        "wildly behaving pilynomials": 1,
        "lagrange multipliers": 1,
        "bias": 1,
        "penalty term": 1
    },
    "lab 10": {
        "covariates": 4,
        "response vector": 4,
        "housing price": 4,
        "cross validation": 4,
        "dictionary object": 2,
        "toy dataset": 2,
        "house prices": 2,
        "radial highways": 2,
        "residential land z": 2,
        "weighted distances": 2,
        "charles river dummy variable": 2,
        "rad index": 2,
        "tract bounds river": 2,
        "boston employment centres": 2,
        "descr attribute": 2,
        "non-retail business acres": 2,
        "black": 2,
        "nox nitric oxides concentration": 2,
        "crime rate": 2,
        "test sets": 2,
        "identity line": 2,
        "1": 2,
        "root mean squared error": 2,
        "predicted responses": 2,
        "validation sets": 2,
        "validation error": 2,
        "split indices": 2,
        "cross validation function": 2,
        "feature sets": 2,
        "housing prices": 1,
        "linear classifier": 1
    },
    "icon arrays": {
        "icon array": 20,
        "green marble": 6,
        "marbles": 4,
        "icon arrays": 4,
        "icon colors": 4,
        "full icon array": 4,
        "conditional probability": 3,
        "green marbles": 2,
        "contingency table": 2,
        "pivot": 2,
        "status": 2,
        "sum function": 2,
        "cancer test": 2,
        "population members": 2,
        "chemotherapy": 1,
        "radiation": 1,
        "women": 1,
        "probability distributions": 1,
        "cancer screening": 1,
        "medical tests": 1,
        "breast cancer": 1,
        "false positives": 1,
        "basic cancer statistics": 1
    },
    "spatial data": {
        "data collection process": 16,
        "codebook": 16,
        "terrorism": 16,
        "india": 7,
        "multiple attacks": 5,
        "iraq": 5,
        "colorbar": 2
    },
    "networks lab": {
        "data collection process": 16,
        "codebook": 16,
        "terrorism": 16,
        "india": 7,
        "multiple attacks": 5,
        "iraq": 5,
        "colorbar": 2
    },
    "component kernel": {
        "time delays": 6,
        "neg log likelihood": 5,
        "minimize function": 5,
        "predictive distribution": 5,
        "gradient functions": 3,
        "agn reverberation mapping": 3,
        "posterior distribution": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "optimization": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "gp object": {
        "time delays": 6,
        "neg log likelihood": 5,
        "minimize function": 5,
        "predictive distribution": 5,
        "gradient functions": 3,
        "agn reverberation mapping": 3,
        "posterior distribution": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "optimization": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "overal kernel": {
        "time delays": 6,
        "neg log likelihood": 5,
        "minimize function": 5,
        "predictive distribution": 5,
        "gradient functions": 3,
        "agn reverberation mapping": 3,
        "posterior distribution": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "optimization": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "joint model": {
        "time delays": 6,
        "neg log likelihood": 5,
        "minimize function": 5,
        "predictive distribution": 5,
        "gradient functions": 3,
        "agn reverberation mapping": 3,
        "posterior distribution": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "associated gradient functions": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "posterior uncertainties": 2,
        "optimization": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "lateral movement": {
        "lqr": 4,
        "lateral movement": 2,
        "coordinate system": 2,
        "helper functions": 2,
        "stable final state": 2,
        "pendulum": 2,
        "unstable equilibrium state": 2,
        "unstable equilibrium point": 2,
        "unstable equilibrium": 2,
        "feedback": 2,
        "state vector": 2,
        "closed loop full state feedback controller": 2,
        "linear quadratic regulator": 2,
        "optimal feedback gain": 2,
        "gains matrix": 2,
        "algebraic riccati equation solution": 2,
        "algebraic ricatti equation": 2,
        "qr": 2,
        "linear algebra operations": 2,
        "api": 2,
        "algebraic riccati equation": 2,
        "feedback control law": 2,
        "quadratic cost function": 2,
        "unstable equilibrium state vector": 2,
        "control system": 2,
        "cost function": 2,
        "r cost matrices": 2,
        "lqr solver": 1,
        "linearization": 1,
        "pend": 1,
        "small": 1,
        "angular speed": 1,
        "goal state": 1,
        "fixed goal state": 1,
        "initial values": 1,
        "nonlinear system": 1,
        "fixed end goal state": 1,
        "q": 1
    },
    "underactuated system": {
        "lqr": 4,
        "lateral movement": 2,
        "coordinate system": 2,
        "helper functions": 2,
        "stable final state": 2,
        "pendulum": 2,
        "unstable equilibrium state": 2,
        "unstable equilibrium point": 2,
        "unstable equilibrium": 2,
        "feedback": 2,
        "state vector": 2,
        "closed loop full state feedback controller": 2,
        "linear quadratic regulator": 2,
        "optimal feedback gain": 2,
        "gains matrix": 2,
        "algebraic riccati equation solution": 2,
        "algebraic ricatti equation": 2,
        "qr": 2,
        "linear algebra operations": 2,
        "api": 2,
        "algebraic riccati equation": 2,
        "feedback control law": 2,
        "quadratic cost function": 2,
        "unstable equilibrium state vector": 2,
        "control system": 2,
        "cost function": 2,
        "r cost matrices": 2,
        "lqr solver": 1,
        "linearization": 1,
        "pend": 1,
        "small": 1,
        "angular speed": 1,
        "goal state": 1,
        "fixed goal state": 1,
        "initial values": 1,
        "nonlinear system": 1,
        "fixed end goal state": 1,
        "q": 1
    },
    "degree of freedom": {
        "lqr": 4,
        "lateral movement": 2,
        "coordinate system": 2,
        "helper functions": 2,
        "stable final state": 2,
        "pendulum": 2,
        "unstable equilibrium state": 2,
        "unstable equilibrium point": 2,
        "unstable equilibrium": 2,
        "feedback": 2,
        "state vector": 2,
        "closed loop full state feedback controller": 2,
        "linear quadratic regulator": 2,
        "optimal feedback gain": 2,
        "gains matrix": 2,
        "algebraic riccati equation solution": 2,
        "algebraic ricatti equation": 2,
        "qr": 2,
        "linear algebra operations": 2,
        "api": 2,
        "algebraic riccati equation": 2,
        "feedback control law": 2,
        "quadratic cost function": 2,
        "unstable equilibrium state vector": 2,
        "control system": 2,
        "cost function": 2,
        "r cost matrices": 2,
        "lqr solver": 1,
        "linearization": 1,
        "pend": 1,
        "small": 1,
        "angular speed": 1,
        "goal state": 1,
        "fixed goal state": 1,
        "initial values": 1,
        "nonlinear system": 1,
        "fixed end goal state": 1,
        "q": 1
    },
    "degrees of freedom": {
        "lqr": 4,
        "lateral movement": 2,
        "coordinate system": 2,
        "helper functions": 2,
        "stable final state": 2,
        "pendulum": 2,
        "unstable equilibrium state": 2,
        "unstable equilibrium point": 2,
        "unstable equilibrium": 2,
        "feedback": 2,
        "state vector": 2,
        "closed loop full state feedback controller": 2,
        "linear quadratic regulator": 2,
        "optimal feedback gain": 2,
        "gains matrix": 2,
        "algebraic riccati equation solution": 2,
        "algebraic ricatti equation": 2,
        "qr": 2,
        "linear algebra operations": 2,
        "api": 2,
        "algebraic riccati equation": 2,
        "feedback control law": 2,
        "quadratic cost function": 2,
        "unstable equilibrium state vector": 2,
        "control system": 2,
        "cost function": 2,
        "r cost matrices": 2,
        "lqr solver": 1,
        "linearization": 1,
        "pend": 1,
        "small": 1,
        "angular speed": 1,
        "goal state": 1,
        "fixed goal state": 1,
        "initial values": 1,
        "nonlinear system": 1,
        "fixed end goal state": 1,
        "q": 1
    },
    "altair": {
        "altair": 17,
        "json representation": 5,
        "visualization channel": 3,
        "aggregate function": 3,
        "bar chart": 3,
        "histogtram": 3,
        "aggregate function count": 3,
        "bar plot": 3,
        "bin object": 3,
        "labels": 3,
        "axis object": 3,
        "scatter plot plot": 3,
        "visualization encodings": 2,
        "json dictionary": 2,
        "chart mark types": 2,
        "altair github documentation": 1,
        "environment": 1,
        "d": 1,
        "chart mark": 1,
        "point mark": 1,
        "visual encodings": 1,
        "overlapping circles": 1,
        "facet plots": 1,
        "data encoding": 1
    },
    "congressional voting data": {
        "eigenvalues": 12,
        "eigenvectors": 12,
        "explained variance": 10,
        "covariance matrix": 6,
        "eigenpairs": 5,
        "principal componants": 5,
        "cumulative explained variance": 5,
        "scikit learn": 5,
        "pca": 5,
        "x variable": 2
    },
    "nltk": {
        "linearsvc": 7,
        "default parameters": 7,
        "countvectorizer": 6,
        "reuters data set": 5,
        "fileids": 5,
        "reuters corpus": 5,
        "stop words": 5,
        "nltk corpus object": 3,
        "text data mining": 3,
        "categories": 3,
        "machine learning models": 2,
        "news story": 2,
        "test sets": 2,
        "linearsvc algorithm": 2,
        "news document": 2,
        "document term matrix": 2,
        "tfidfvectorizer": 1,
        "svm": 1,
        "inaugural corpus": 1,
        "word usage": 1,
        "chat data": 1,
        "summary stats": 1
    },
    "scatter matrix": {
        "values": 7,
        "cs data": 6,
        "average heights": 4,
        "alpha value": 4,
        "statistical test": 4,
        "significance": 4,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "majors": 4,
        "average height values": 3,
        "pivot table": 3,
        "confounding variable": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3
    },
    "bar chart plot": {
        "values": 7,
        "cs data": 6,
        "average heights": 4,
        "alpha value": 4,
        "statistical test": 4,
        "significance": 4,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "majors": 4,
        "average height values": 3,
        "pivot table": 3,
        "confounding variable": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3
    },
    "ice cream flavour": {
        "values": 7,
        "cs data": 6,
        "average heights": 4,
        "alpha value": 4,
        "statistical test": 4,
        "significance": 4,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "majors": 4,
        "average height values": 3,
        "pivot table": 3,
        "confounding variable": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3
    },
    "unique favourite ice cream": {
        "values": 7,
        "cs data": 6,
        "average heights": 4,
        "alpha value": 4,
        "statistical test": 4,
        "significance": 4,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "majors": 4,
        "average height values": 3,
        "pivot table": 3,
        "confounding variable": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3
    },
    "alpha significance value": {
        "values": 7,
        "cs data": 6,
        "average heights": 4,
        "alpha value": 4,
        "statistical test": 4,
        "significance": 4,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "majors": 4,
        "average height values": 3,
        "pivot table": 3,
        "confounding variable": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3
    },
    "feature scaling": {
        "randomforestclassifier": 4,
        "random forest classifier": 4,
        "score function": 4,
        "leaf specimens": 3,
        "csv data file": 3,
        "digital images": 3,
        "plant species": 3,
        "specimen number": 3,
        "cryptocurrencies": 2,
        "ml problem": 2,
        "gradient descent": 2,
        "closing price": 2,
        "exercise": 2,
        "data points": 2,
        "quantity of interest": 2,
        "ethereum": 2,
        "bitcoin": 2,
        "scatterplots": 2,
        "student task": 2,
        "pipeline anova rfc": 2,
        "anova filter": 2,
        "random forest classification": 2,
        "svc classification": 2,
        "ord": 1,
        "binary indicator": 1,
        "depdelay variables": 1,
        "feature scaling": 1,
        "recursive feature elimination": 1,
        "gridsearchcv": 1,
        "svc algorithm": 1,
        "c parameter": 1,
        "decisiontreeclassifier": 1
    },
    "fs": {
        "biased pmf": 8,
        "observed mean": 4,
        "biased sample": 4,
        "inverse operation": 4,
        "column names": 4,
        "normal indexing": 4,
        "loc attribute": 4,
        "iloc attribute": 4,
        "integer indices": 4,
        "row labels": 4,
        "integer index": 4,
        "class size paradox": 4,
        "nsfg respondent variable": 4,
        "biased distribution": 4,
        "biased distributions": 4,
        "pairwise differences": 1,
        "first babies": 1
    },
    "pmf objects": {
        "biased pmf": 8,
        "observed mean": 4,
        "biased sample": 4,
        "inverse operation": 4,
        "column names": 4,
        "normal indexing": 4,
        "loc attribute": 4,
        "iloc attribute": 4,
        "integer indices": 4,
        "row labels": 4,
        "integer index": 4,
        "class size paradox": 4,
        "nsfg respondent variable": 4,
        "biased distribution": 4,
        "biased distributions": 4,
        "pairwise differences": 1,
        "first babies": 1
    },
    "pie chart": {
        "restaurants": 4,
        "foodwheel": 4,
        "restautants": 4,
        "pie chart": 4,
        "axis": 4,
        "cuisine": 4,
        "plt": 4,
        "function split": 4,
        "bar chart": 4,
        "group orders": 3,
        "average order amount": 3,
        "error bars": 2,
        "average order": 2,
        "error capsize": 2,
        "standard deviations": 2,
        "passenger class": 2,
        "titel": 1,
        "women": 1,
        "wealth": 1,
        "age distributions": 1,
        "hypothesis testing": 1,
        "statistical method": 1,
        "internet": 1,
        "statistical hypothesis": 1,
        "null hypothesis": 1,
        "hypothesis test": 1,
        "age": 1,
        "alternative hypothesis": 1,
        "sex": 1,
        "embarked columns": 1
    },
    "conditional probability": {
        "icon array": 15,
        "green marble": 4,
        "contingency table": 3,
        "pivot": 3,
        "status": 3,
        "sum function": 3,
        "cancer test": 3,
        "population members": 3,
        "marbles": 2,
        "icon arrays": 2,
        "icon colors": 2,
        "full icon array": 2,
        "green marbles": 2,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "mlp": 1,
        "hidden layer": 1,
        "non-linear activation function": 1,
        "conditional probability": 1,
        "chemotherapy": 1,
        "radiation": 1,
        "women": 1,
        "probability distributions": 1,
        "cancer screening": 1,
        "medical tests": 1,
        "breast cancer": 1,
        "false positives": 1
    },
    "backpropagation": {
        "computational graph": 4,
        "deep learning": 4,
        "activation function": 4,
        "variable naming convention": 3,
        "local gradients": 2,
        "exact variable names": 2,
        "artificial neural networks": 2,
        "weighted inputs": 2,
        "neural network": 2,
        "tensors": 2,
        "pytorch": 2,
        "matrices": 2,
        "linear algebra operations": 2,
        "rgb color images": 2,
        "biases": 2,
        "weights": 2,
        "momentum term": 2,
        "l2 regularization term": 2,
        "l2 regularization": 2,
        "regularizatino constant": 2,
        "batch size": 2,
        "relu": 2,
        "rectified linear unit": 2,
        "squared loss layer tasks": 1,
        "squared loss white box": 1,
        "squared loss black box": 1,
        "forward pass tasks": 1,
        "matrix multiplications": 1,
        "traceback": 1,
        "matrix multiplication": 1,
        "size mismatch": 1,
        "runtimeerror": 1,
        "forward propogration": 1,
        "backward pass": 1,
        "learning rate": 1,
        "regularization constant": 1
    },
    "collinearity": {
        "unit tests": 10,
        "spark exercise": 9,
        "collinear points": 4,
        "pyspark library functions": 3,
        "v": 3,
        "test cases": 3,
        "hidden test cases": 3,
        "hidden tests": 3,
        "assert statement unit test cells": 3,
        "collin": 3,
        "grading": 3,
        "coll": 3,
        "non_duplicates": 3,
        "rdd": 3,
        "cartesian product": 3,
        "line segment": 3,
        "r": 1,
        "spark rdd api": 1,
        "helper functions": 1,
        "assert statement unit tests": 1
    },
    "geometry": {
        "unit tests": 10,
        "spark exercise": 9,
        "collinear points": 4,
        "pyspark library functions": 3,
        "v": 3,
        "test cases": 3,
        "hidden test cases": 3,
        "hidden tests": 3,
        "assert statement unit test cells": 3,
        "collin": 3,
        "grading": 3,
        "coll": 3,
        "non_duplicates": 3,
        "rdd": 3,
        "cartesian product": 3,
        "line segment": 3,
        "r": 1,
        "spark rdd api": 1,
        "helper functions": 1,
        "assert statement unit tests": 1
    },
    "nsfg": {
        "percentile rank": 10,
        "cdf": 8,
        "first babies": 6,
        "random sample": 6,
        "birth weight": 4,
        "percentilerank": 4,
        "live births": 4,
        "percentile": 2,
        "percentiles": 2,
        "cumulative distribution function": 2,
        "prob": 2,
        "pregnancy lengths": 2,
        "inverse cdf": 2,
        "distributions": 2,
        "cdfs": 2,
        "pmfs": 2,
        "interquartile range": 2,
        "sample": 2,
        "nsfg data": 2
    },
    "covariant ica algorithm": {
        "ica": 7,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "kurtosis": 3,
        "demixing matrices": 2,
        "priors": 1,
        "symmetric": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "c code": {
        "ica": 7,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "kurtosis": 3,
        "demixing matrices": 2,
        "priors": 1,
        "symmetric": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "demixing matrix": {
        "ica": 7,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "kurtosis": 3,
        "demixing matrices": 2,
        "priors": 1,
        "symmetric": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "retreived signals": {
        "ica": 7,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "kurtosis": 3,
        "demixing matrices": 2,
        "priors": 1,
        "symmetric": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "found demixing matrix": {
        "ica": 7,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "kurtosis": 3,
        "demixing matrices": 2,
        "priors": 1,
        "symmetric": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "audio demixing": {
        "ica": 7,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "kurtosis": 3,
        "demixing matrices": 2,
        "priors": 1,
        "symmetric": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "non-singular mixing matrix": {
        "ica": 7,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "kurtosis": 3,
        "demixing matrices": 2,
        "priors": 1,
        "symmetric": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "sound files": {
        "ica": 7,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "kurtosis": 3,
        "demixing matrices": 2,
        "priors": 1,
        "symmetric": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "cocktail party effect": {
        "ica": 7,
        "integral calculator": 6,
        "numerical approximation": 6,
        "exact expression": 6,
        "gaussian random variable": 6,
        "peakedness": 6,
        "wolfram alpha": 6,
        "online service": 6,
        "kurtosis": 3,
        "demixing matrices": 2,
        "priors": 1,
        "symmetric": 1,
        "generated signals": 1,
        "recovered audio sources": 1,
        "normalization constant": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "gamma": 1,
        "ma": 1,
        "gaussian distributed": 1,
        "audio signals": 1
    },
    "pandas dataframe objects": {
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2,
        "bar plot": 2,
        "exploratory data analysis": 1,
        "deceased passengers": 1
    },
    "northwind database": {
        "usstates": 8,
        "productname": 3,
        "suppliers table": 3,
        "unitprice": 2,
        "supplierid": 2,
        "postgresql": 2,
        "sql": 2,
        "aggregate functions": 2,
        "orders table": 2,
        "desc keyword": 1,
        "order by keyword": 1,
        "productid": 1,
        "sql aliases": 1,
        "sql alias syntax": 1,
        "query arguments": 1,
        "database table": 1,
        "alias as": 1,
        "company name": 1,
        "companyname": 1,
        "column": 1,
        "aliases": 1,
        "wildcards": 1,
        "where clause": 1,
        "missing letters": 1,
        "select distinct statement": 1,
        "distinct operator": 1,
        "istinct": 1,
        "lierid": 1,
        "limit operator": 1,
        "limit syntax": 1,
        "sql subqueries": 1,
        "group by statement": 1,
        "group by operator": 1,
        "orderid": 1,
        "unitprice quantity": 1,
        "having operator": 1,
        "having clause": 1,
        "revenue": 1,
        "else statement": 1,
        "united states": 1,
        "date documentation": 1,
        "select orderdate": 1,
        "freight": 1,
        "freightpermonth": 1,
        "shipcountry": 1,
        "average freight cost": 1,
        "women": 1,
        "employees table": 1
    },
    "codelab": {
        "bfs": 10,
        "breadth first search": 8,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3,
        "dist array": 3,
        "prev array": 3,
        "depth first search": 3,
        "connected components": 2,
        "adjacency matrix": 1,
        "algebraic connectivity": 1,
        "laplacian matrix": 1
    },
    "numpy package": {
        "bfs": 10,
        "breadth first search": 8,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3,
        "dist array": 3,
        "prev array": 3,
        "depth first search": 3,
        "connected components": 2,
        "adjacency matrix": 1,
        "algebraic connectivity": 1,
        "laplacian matrix": 1
    },
    "minority class": {
        "minority class": 6,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "statistical test": 4,
        "significance level alpha": 4,
        "test statistic": 4,
        "hypothesis testing": 4,
        "alternative hypothesis": 4,
        "distribution means": 4,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1
    },
    "functional programming": {
        "list comprehensions": 18,
        "map()": 4,
        "inner loop": 4,
        "outer loop": 4,
        "assertion test": 3,
        "map function": 3,
        "test case": 2,
        "double for loop": 2,
        "nested list": 2,
        "functional programming": 2,
        "long words": 2,
        "return value": 2,
        "hashtags": 2,
        "filter()": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "programming languages": {
        "character classes": 6,
        "regexr": 6,
        "literals": 2,
        "basic regular expression syntax": 2,
        "character class negation": 2,
        "solution breakdown": 2,
        "brackets": 2,
        "text snippet": 2,
        "shorthand character classes": 2,
        "anchor": 2,
        "character class": 2,
        "regex": 2,
        "print function": 2,
        "test expression": 2,
        "img": 1,
        "keyword return": 1,
        "assignment statements": 1,
        "parentheses": 1,
        "closed parenthesis": 1,
        "function call expression": 1,
        "name expression": 1,
        "abs": 1,
        "boolean value": 1,
        "numerical arguments": 1,
        "feedback": 1,
        "print": 1,
        "assignment statement": 1,
        "conditional statements": 1,
        "if statement": 1,
        "condition expression": 1,
        "test expressions": 1,
        "programming": 1,
        "remainder operator": 1,
        "modulus operator": 1,
        "fizzbuzz": 1,
        "twitter dataset": 1,
        "twitter data": 1,
        "apply function": 1,
        "addition": 1,
        "total": 1,
        "addition function": 1,
        "total connections": 1
    },
    "dataanalysis": {
        "income": 22,
        "polyfit": 9,
        "mean value": 6,
        "age": 6,
        "pandas method": 5,
        "output parameters": 4,
        "integer age": 3,
        "age mood": 1,
        "correlationship coefficient": 1,
        "stroger relationships": 1,
        "prediction power": 1,
        "steps": 1,
        "corrs variable": 1,
        "matplotlib visualizations": 1,
        "lambda expression": 1,
        "pand": 1
    },
    "polyfit function": {
        "income": 22,
        "polyfit": 9,
        "mean value": 6,
        "age": 6,
        "pandas method": 5,
        "output parameters": 4,
        "integer age": 3,
        "age mood": 1,
        "correlationship coefficient": 1,
        "stroger relationships": 1,
        "prediction power": 1,
        "steps": 1,
        "corrs variable": 1,
        "matplotlib visualizations": 1,
        "lambda expression": 1,
        "pand": 1
    },
    "predictor types": {
        "predictors": 8,
        "factor variables": 7,
        "exhaustive feature search": 7,
        "collinearity issues": 7,
        "variable selection function": 7,
        "datatypes": 7,
        "cs109 repo": 7,
        "packages": 7,
        "age": 4,
        "fare predictor": 1,
        "passenger class": 1,
        "precision stats": 1
    },
    "kallisto dataframe": {
        "featurecounts": 10,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "ode mouse v8": 3,
        "kallisto": 3,
        "star": 3,
        "standard deviations": 3,
        "gene ontology website": 1,
        "ontology enrichment": 1,
        "gene ontology enrichment": 1,
        "fpkm": 1,
        "gene expression": 1,
        "nonzero differences": 1,
        "gene id version number": 1,
        "gencode": 1,
        "gencode ids": 1,
        "ensembl ids": 1,
        "immune cell": 1
    },
    "odds ratio": {
        "admission rate": 4,
        "confidence interval": 4,
        "uncertainty": 4,
        "helper function": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "gpa": 4,
        "prestige": 4,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2,
        "logistic function": 1,
        "logit link function": 1,
        "odds ratios": 1,
        "college admissions data": 1,
        "logistic regression prediction line": 1,
        "binary class": 1
    },
    "tokenized words": {
        "generator function": 13,
        "word counts": 12,
        "tokens": 10,
        "sorted function": 4,
        "sorted word counts": 4,
        "file io": 3,
        "memory consumption": 3,
        "filenames": 3,
        "with statement": 3,
        "tokenization": 3,
        "word counting": 2,
        "tokenize song lyrics": 1,
        "kaggle hosted dataset": 1,
        "songlyrics": 1,
        "song lyrics": 1
    },
    "generator function": {
        "generator function": 13,
        "word counts": 12,
        "tokens": 10,
        "sorted function": 4,
        "sorted word counts": 4,
        "file io": 3,
        "memory consumption": 3,
        "filenames": 3,
        "with statement": 3,
        "tokenization": 3,
        "word counting": 2,
        "tokenize song lyrics": 1,
        "kaggle hosted dataset": 1,
        "songlyrics": 1,
        "song lyrics": 1
    },
    "q1 visualize": {
        "company name": 11,
        "national identification number": 11,
        "excel file": 6,
        "coname": 6,
        "set index": 5,
        "postcode": 5,
        "column names": 4,
        "row index": 4,
        "compute logarithm": 3,
        "plot distributions": 2,
        "times": 2,
        "plot distribution": 2,
        "linear regression line": 1,
        "confidence bands": 1,
        "densitites": 1
    },
    "russian companies": {
        "company name": 11,
        "national identification number": 11,
        "excel file": 6,
        "coname": 6,
        "set index": 5,
        "postcode": 5,
        "column names": 4,
        "row index": 4,
        "compute logarithm": 3,
        "plot distributions": 2,
        "times": 2,
        "plot distribution": 2,
        "linear regression line": 1,
        "confidence bands": 1,
        "densitites": 1
    },
    "beautiful soup library": {
        "tinder": 23,
        "tinder users": 11,
        "safe harbor method": 11,
        "population": 5,
        "sslerror": 3,
        "ssl module": 3,
        "https": 3,
        "zip code": 3,
        "error message": 2
    },
    "conda package manager": {
        "tinder": 23,
        "tinder users": 11,
        "safe harbor method": 11,
        "population": 5,
        "sslerror": 3,
        "ssl module": 3,
        "https": 3,
        "zip code": 3,
        "error message": 2
    },
    "global seismometer recordings": {
        "event metadata": 4,
        "local files": 4,
        "fdsn web services": 3,
        "seismological data centers": 3,
        "protocols": 3,
        "international standard exchange format": 3,
        "station metadata": 3,
        "filetype": 2,
        "nested obspy event class structure": 1,
        "event objects": 1,
        "catalog object": 1,
        "station objects": 1,
        "network objects": 1,
        "channel objects": 1,
        "fdsn stationxml": 1,
        "nested obspy inventory": 1,
        "inventory object": 1,
        "stationxml files": 1,
        "official schema": 1,
        "waveform data": 1,
        "channel codes": 1,
        "seismometer time series": 1,
        "trace objects": 1,
        "ainformation": 1,
        "xml": 1,
        "nested obspy inventory class": 1,
        "utcdatetime": 1,
        "timestamps": 1,
        "instrument response": 1,
        "digitizer": 1,
        "amplitude": 1,
        "phase response": 1,
        "instrument correction": 1,
        "array analysis": 1,
        "estimate travel times": 1,
        "seismic phases": 1,
        "cross correlation routines": 1,
        "pling": 1,
        "event detection": 1,
        "command line utilities": 1,
        "plot ray paths": 1,
        "manipulation filtering": 1,
        "epicentral range": 1,
        "instrument corrected waveforms": 1,
        "interactive ipython help": 1,
        "obspy documentation": 1,
        "ipython tab completion": 1
    },
    "dataframe structures": {
        "column names": 8,
        "dataframe structures": 8,
        "values method": 8,
        "empty dataframe": 4,
        "datasets": 4,
        "observation": 4,
        "column headers": 4,
        "slicing": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "feature extraction": 4,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1
    },
    "anaconda": {
        "shot distance": 7,
        "kernel density estimate": 6,
        "vertex names": 4,
        "matrix operations": 4,
        "breadth first search": 4,
        "graph traversal": 4,
        "zip file": 4,
        "path length": 3,
        "distbfs()": 3,
        "bfs": 3,
        "edge weights": 3,
        "moving average": 3,
        "average point increment": 3,
        "average success ratio": 2,
        "ols regression line": 1,
        "draw scatter plot": 1,
        "mysqrt": 1,
        "sqrt()": 1,
        "modulo operation": 1,
        "mysqrt()": 1,
        "internet": 1,
        "python sieve": 1,
        "sieve": 1,
        "eratosthenes": 1,
        "prime numbers": 1
    },
    "graph": {
        "cost array": 9,
        "seed points": 4,
        "overlap region": 3,
        "utility function": 3,
        "construct cost array": 3,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "optimal path": 3,
        "mcp": 3,
        "ransac transform estimation": 3,
        "random element": 3,
        "negative mask": 3,
        "numpy masked array conventions": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "final mask": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "modified difference image": {
        "cost array": 9,
        "seed points": 4,
        "overlap region": 3,
        "utility function": 3,
        "construct cost array": 3,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "optimal path": 3,
        "mcp": 3,
        "ransac transform estimation": 3,
        "random element": 3,
        "negative mask": 3,
        "numpy masked array conventions": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "final mask": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "seamless image stitching": {
        "cost array": 9,
        "seed points": 4,
        "overlap region": 3,
        "utility function": 3,
        "construct cost array": 3,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "optimal path": 3,
        "mcp": 3,
        "ransac transform estimation": 3,
        "random element": 3,
        "negative mask": 3,
        "numpy masked array conventions": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "final mask": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "bias term": {
        "error functions": 15,
        "error function": 12,
        "predicted class": 10,
        "sigmoid function": 9,
        "gradient descent": 5,
        "total cost function": 2,
        "last function approximation": 2,
        "learning rate": 2,
        "learning curve": 2,
        "regularization": 1,
        "predict()": 1,
        "correct guesses": 1,
        "guessed classes": 1,
        "predicted exam results": 1
    },
    "free term": {
        "error functions": 15,
        "error function": 12,
        "predicted class": 10,
        "sigmoid function": 9,
        "gradient descent": 5,
        "total cost function": 2,
        "last function approximation": 2,
        "learning rate": 2,
        "learning curve": 2,
        "regularization": 1,
        "predict()": 1,
        "correct guesses": 1,
        "guessed classes": 1,
        "predicted exam results": 1
    },
    "sigmoid value": {
        "error functions": 15,
        "error function": 12,
        "predicted class": 10,
        "sigmoid function": 9,
        "gradient descent": 5,
        "total cost function": 2,
        "last function approximation": 2,
        "learning rate": 2,
        "learning curve": 2,
        "regularization": 1,
        "predict()": 1,
        "correct guesses": 1,
        "guessed classes": 1,
        "predicted exam results": 1
    },
    "index slicing": {
        "timestamps": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "nanoseond resolution": {
        "timestamps": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "pandas stores timestamps": {
        "timestamps": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "frequency offsets": {
        "timestamps": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "multipliers": {
        "timestamps": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "datetime indexing": {
        "timestamps": 3,
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "opentable": {
        "soup object": 4,
        "html objct": 4,
        "bs4": 4,
        "html page": 4,
        "html": 4,
        "google chrome": 4,
        "inspect": 4,
        "commas": 4,
        "tag objects": 4,
        "python string": 4,
        "restaurant names": 4,
        "beautiful soup": 4,
        "tag object": 4,
        "restaurant locations": 4,
        "barmini": 4,
        "search results": 4
    },
    "neural nets": {
        "character classes": 6,
        "regexr": 6,
        "literals": 2,
        "basic regular expression syntax": 2,
        "character class negation": 2,
        "solution breakdown": 2,
        "brackets": 2,
        "text snippet": 2,
        "shorthand character classes": 2,
        "anchor": 2,
        "character class": 2,
        "regex": 2,
        "matplolib": 1,
        "deep learning": 1,
        "neural network": 1,
        "standard scaling": 1,
        "standardize": 1,
        "scaler": 1,
        "scaling": 1,
        "scaled feature values": 1,
        "labels": 1,
        "tensorflow": 1,
        "n": 1,
        "scikit learn": 1,
        "testing sets": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "plot logged tpm": {
        "featurecounts": 6,
        "gene lengths": 4,
        "regular multiplication": 4,
        "log2 tpm": 4,
        "pm": 4,
        "fpkm": 4,
        "tpm": 4,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "gene id version number": 1,
        "gencode": 1
    },
    "expressed genes": {
        "featurecounts": 6,
        "gene lengths": 4,
        "regular multiplication": 4,
        "log2 tpm": 4,
        "pm": 4,
        "fpkm": 4,
        "tpm": 4,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "gene id version number": 1,
        "gencode": 1
    },
    "statistical function": {
        "featurecounts": 6,
        "gene lengths": 4,
        "regular multiplication": 4,
        "log2 tpm": 4,
        "pm": 4,
        "fpkm": 4,
        "tpm": 4,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "gene id version number": 1,
        "gencode": 1
    },
    "spearmanr": {
        "featurecounts": 6,
        "gene lengths": 4,
        "regular multiplication": 4,
        "log2 tpm": 4,
        "pm": 4,
        "fpkm": 4,
        "tpm": 4,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "gene id version number": 1,
        "gencode": 1
    },
    "kallisto output": {
        "featurecounts": 6,
        "gene lengths": 4,
        "regular multiplication": 4,
        "log2 tpm": 4,
        "pm": 4,
        "fpkm": 4,
        "tpm": 4,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "gene id version number": 1,
        "gencode": 1
    },
    "decimals": {
        "featurecounts": 6,
        "gene lengths": 4,
        "regular multiplication": 4,
        "log2 tpm": 4,
        "pm": 4,
        "fpkm": 4,
        "tpm": 4,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "gene id version number": 1,
        "gencode": 1
    },
    "read counts": {
        "featurecounts": 6,
        "gene lengths": 4,
        "regular multiplication": 4,
        "log2 tpm": 4,
        "pm": 4,
        "fpkm": 4,
        "tpm": 4,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "gene id version number": 1,
        "gencode": 1
    },
    "datatype": {
        "featurecounts": 6,
        "gene lengths": 4,
        "regular multiplication": 4,
        "log2 tpm": 4,
        "pm": 4,
        "fpkm": 4,
        "tpm": 4,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "gene id version number": 1,
        "gencode": 1
    },
    "assert statements": {
        "airtime": 5,
        "arrdelay": 5,
        "multivariate regresion model": 3,
        "predictor variable": 3,
        "regression model": 3,
        "random number generator": 3,
        "myfiles": 2,
        "output redirection": 2,
        "ls": 2,
        "txt": 2,
        "directory mydirectory": 2,
        "python dictionary comprehension": 2,
        "zip function": 2,
        "test sets": 2,
        "multiple independent variables": 2,
        "dependent variable": 2,
        "patsy formula": 2,
        "multivariate regression model": 2,
        "iterable": 1,
        "enumerate function": 1,
        "anaconda": 1,
        "data science modules": 1,
        "unit tests": 1,
        "distance": 1,
        "stats": 1,
        "rmdir": 1,
        "class repository": 1,
        "project gutenberg": 1,
        "grep": 1,
        "filters": 1,
        "matching line numbers": 1,
        "word count tool": 1,
        "matching lines": 1,
        "unique tokens": 1,
        "siddhartha": 1
    },
    "housing market": {
        "multiple regression": 6,
        "predictive performance": 4,
        "test": 4,
        "attributes": 4,
        "optimal coefficient": 4,
        "house price": 4,
        "prediction error": 4,
        "house size": 4,
        "predicted price": 4,
        "prediction errors": 4,
        "predicted prices": 4,
        "regression": 3,
        "correlation": 3,
        "house market": 3,
        "random number": 2,
        "number": 2,
        "residuals": 1,
        "test errors": 1,
        "3 series": 1,
        "one column dataframe": 1
    },
    "use": {
        "end index": 6,
        "mkdir()": 3,
        "()": 3,
        "path object": 3,
        "os library": 3,
        "cache": 3,
        "fetch": 3,
        "functionality": 3,
        "pandas row index": 3,
        "python slicing functionality": 3,
        "pandas slicing function": 3,
        "iloc[]": 3,
        "row id": 3,
        "row index": 3,
        "column id": 3,
        "loc[]": 3,
        "compound expressions": 2,
        "boolean arrays": 2,
        "data aggregration": 2,
        "tabular data": 1,
        "groupby function": 1,
        "groupby animation": 1,
        "rotten tomatoes": 1,
        "revenue": 1
    },
    "lsi": {
        "docs": 6,
        "tdmatrix": 6,
        "lsi": 5,
        "mic": 4,
        "m": 4,
        "term frequency inverse document frequency": 4,
        "entropy function": 4,
        "term frequency": 4,
        "inverse document frequency components": 4,
        "emmed test": 4,
        "reuters documents": 3,
        "conceptual similarity": 2,
        "document folding": 2,
        "document vectors": 2,
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "cosine similarity": 1,
        "distance metric": 1,
        "cosine similarity score": 1
    },
    "variable class attributes": {
        "svm model": 9,
        "rawphot": 3,
        "foreign": 3,
        "lcfeats": 3,
        "map reduce procedure": 3,
        "brokerlc features": 3,
        "lcfeats table": 3,
        "lsst light curves": 3,
        "seriel solution": 3,
        "feats": 3,
        "directview implemenation": 3,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "zip code values": {
        "postal code": 7,
        "extended zip codes": 5,
        "extended postal codes": 5,
        "zip codes": 4,
        "longitude": 4,
        "latitude": 4,
        "business dataframe": 3,
        "population": 3,
        "nonmissing values": 3,
        "zip code": 2,
        "businesses": 2,
        "missing zip codes": 2,
        "inspection": 2,
        "inspection dataframe": 2,
        "fillna": 1,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94602": 1,
        "94545": 1,
        "business name": 1,
        "zip": 1,
        "search engine": 1,
        "longitude values": 1
    },
    "counts": {
        "postal code": 7,
        "extended zip codes": 5,
        "extended postal codes": 5,
        "zip codes": 4,
        "longitude": 4,
        "latitude": 4,
        "business dataframe": 3,
        "population": 3,
        "nonmissing values": 3,
        "zip code": 2,
        "businesses": 2,
        "missing zip codes": 2,
        "inspection": 2,
        "inspection dataframe": 2,
        "fillna": 1,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94602": 1,
        "94545": 1,
        "business name": 1,
        "zip": 1,
        "search engine": 1,
        "longitude values": 1
    },
    "lab 3": {
        "registered riders": 7,
        "hist": 5,
        "casual riders": 4,
        "plot customizations": 3,
        "tutorial": 3,
        "time range": 3,
        "gran": 3,
        "registered": 3,
        "error bars": 3,
        "seaborn api": 3,
        "bootstrapping": 3,
        "total rider counts": 3,
        "distplot function": 3,
        "rider counts": 2,
        "matplotlib axes object": 2,
        "boxplot function": 2,
        "bikeshare membership": 2,
        "lmplot function": 2,
        "scatterplot": 2,
        "hue parameter": 1,
        "lmplot": 1,
        "weekday trips": 1,
        "weekend trips": 1
    },
    "scatterplots": {
        "registered riders": 7,
        "hist": 5,
        "casual riders": 4,
        "plot customizations": 3,
        "tutorial": 3,
        "time range": 3,
        "gran": 3,
        "registered": 3,
        "error bars": 3,
        "seaborn api": 3,
        "bootstrapping": 3,
        "total rider counts": 3,
        "distplot function": 3,
        "rider counts": 2,
        "matplotlib axes object": 2,
        "boxplot function": 2,
        "bikeshare membership": 2,
        "lmplot function": 2,
        "scatterplot": 2,
        "hue parameter": 1,
        "lmplot": 1,
        "weekday trips": 1,
        "weekend trips": 1
    },
    "bar charts": {
        "registered riders": 7,
        "hist": 5,
        "casual riders": 4,
        "plot customizations": 3,
        "tutorial": 3,
        "time range": 3,
        "gran": 3,
        "registered": 3,
        "error bars": 3,
        "seaborn api": 3,
        "bootstrapping": 3,
        "total rider counts": 3,
        "distplot function": 3,
        "rider counts": 2,
        "matplotlib axes object": 2,
        "boxplot function": 2,
        "bikeshare membership": 2,
        "lmplot function": 2,
        "scatterplot": 2,
        "hue parameter": 1,
        "lmplot": 1,
        "weekday trips": 1,
        "weekend trips": 1
    },
    "record index": {
        "registered riders": 7,
        "hist": 5,
        "casual riders": 4,
        "time range": 3,
        "gran": 3,
        "matplotlib methods": 3,
        "syntax": 3,
        "registered": 3,
        "error bars": 3,
        "seaborn api": 3,
        "bootstrapping": 3,
        "total rider counts": 3,
        "distplot function": 3,
        "rider counts": 2,
        "matplotlib axes object": 2,
        "boxplot function": 2,
        "bikeshare membership": 2,
        "lmplot function": 2,
        "scatterplot": 2,
        "hue parameter": 1,
        "lmplot": 1,
        "weekday trips": 1,
        "weekend trips": 1
    },
    "normalized temperature": {
        "registered riders": 7,
        "hist": 5,
        "casual riders": 4,
        "time range": 3,
        "gran": 3,
        "matplotlib methods": 3,
        "syntax": 3,
        "registered": 3,
        "error bars": 3,
        "seaborn api": 3,
        "bootstrapping": 3,
        "total rider counts": 3,
        "distplot function": 3,
        "rider counts": 2,
        "matplotlib axes object": 2,
        "boxplot function": 2,
        "bikeshare membership": 2,
        "lmplot function": 2,
        "scatterplot": 2,
        "hue parameter": 1,
        "lmplot": 1,
        "weekday trips": 1,
        "weekend trips": 1
    },
    "normalized feeling temperature": {
        "registered riders": 7,
        "hist": 5,
        "casual riders": 4,
        "time range": 3,
        "gran": 3,
        "matplotlib methods": 3,
        "syntax": 3,
        "registered": 3,
        "error bars": 3,
        "seaborn api": 3,
        "bootstrapping": 3,
        "total rider counts": 3,
        "distplot function": 3,
        "rider counts": 2,
        "matplotlib axes object": 2,
        "boxplot function": 2,
        "bikeshare membership": 2,
        "lmplot function": 2,
        "scatterplot": 2,
        "hue parameter": 1,
        "lmplot": 1,
        "weekday trips": 1,
        "weekend trips": 1
    },
    "normalized percent humidity": {
        "registered riders": 7,
        "hist": 5,
        "casual riders": 4,
        "time range": 3,
        "gran": 3,
        "matplotlib methods": 3,
        "syntax": 3,
        "registered": 3,
        "error bars": 3,
        "seaborn api": 3,
        "bootstrapping": 3,
        "total rider counts": 3,
        "distplot function": 3,
        "rider counts": 2,
        "matplotlib axes object": 2,
        "boxplot function": 2,
        "bikeshare membership": 2,
        "lmplot function": 2,
        "scatterplot": 2,
        "hue parameter": 1,
        "lmplot": 1,
        "weekday trips": 1,
        "weekend trips": 1
    },
    "bikeshare": {
        "registered riders": 7,
        "hist": 5,
        "casual riders": 4,
        "time range": 3,
        "gran": 3,
        "matplotlib methods": 3,
        "syntax": 3,
        "registered": 3,
        "error bars": 3,
        "seaborn api": 3,
        "bootstrapping": 3,
        "total rider counts": 3,
        "distplot function": 3,
        "rider counts": 2,
        "matplotlib axes object": 2,
        "boxplot function": 2,
        "bikeshare membership": 2,
        "lmplot function": 2,
        "scatterplot": 2,
        "hue parameter": 1,
        "lmplot": 1,
        "weekday trips": 1,
        "weekend trips": 1
    },
    "normalized wind speed": {
        "registered riders": 7,
        "hist": 5,
        "casual riders": 4,
        "time range": 3,
        "gran": 3,
        "matplotlib methods": 3,
        "syntax": 3,
        "registered": 3,
        "error bars": 3,
        "seaborn api": 3,
        "bootstrapping": 3,
        "total rider counts": 3,
        "distplot function": 3,
        "rider counts": 2,
        "matplotlib axes object": 2,
        "boxplot function": 2,
        "bikeshare membership": 2,
        "lmplot function": 2,
        "scatterplot": 2,
        "hue parameter": 1,
        "lmplot": 1,
        "weekday trips": 1,
        "weekend trips": 1
    },
    "amazon review dataset": {
        "graphlab create": 4,
        "majority class classifier": 4,
        "logistic regression classifier": 3,
        "false positives": 3,
        "negative sentiments": 2,
        "ratings": 2,
        "word counts": 2,
        "test sets": 2,
        "precision": 2,
        "recall": 2,
        "amazon dataset": 2,
        "sentiment": 2,
        "performance metric": 2,
        "correctly classified data points": 2,
        "total data points": 2,
        "majority": 2,
        "baseline": 2,
        "majority classifier": 2,
        "majority class prediction": 2,
        "false negatives": 2,
        "confusion matrix": 2,
        "true negatives": 2,
        "true positives": 2,
        "incorrect predictions": 2,
        "binary classification": 2,
        "quiz": 2,
        "correctly classified reviews": 1,
        "baby product": 1,
        "negative reviews": 1,
        "false alarms": 1
    },
    "accuracy": {
        "graphlab create": 4,
        "majority class classifier": 4,
        "logistic regression classifier": 3,
        "false positives": 3,
        "negative sentiments": 2,
        "ratings": 2,
        "word counts": 2,
        "test sets": 2,
        "precision": 2,
        "recall": 2,
        "amazon dataset": 2,
        "sentiment": 2,
        "performance metric": 2,
        "correctly classified data points": 2,
        "total data points": 2,
        "majority": 2,
        "baseline": 2,
        "majority classifier": 2,
        "majority class prediction": 2,
        "false negatives": 2,
        "confusion matrix": 2,
        "true negatives": 2,
        "true positives": 2,
        "incorrect predictions": 2,
        "binary classification": 2,
        "quiz": 2,
        "correctly classified reviews": 1,
        "baby product": 1,
        "negative reviews": 1,
        "false alarms": 1
    },
    "classifiers": {
        "graphlab create": 4,
        "majority class classifier": 4,
        "logistic regression classifier": 3,
        "false positives": 3,
        "negative sentiments": 2,
        "ratings": 2,
        "word counts": 2,
        "test sets": 2,
        "precision": 2,
        "recall": 2,
        "amazon dataset": 2,
        "sentiment": 2,
        "performance metric": 2,
        "correctly classified data points": 2,
        "total data points": 2,
        "majority": 2,
        "baseline": 2,
        "majority classifier": 2,
        "majority class prediction": 2,
        "false negatives": 2,
        "confusion matrix": 2,
        "true negatives": 2,
        "true positives": 2,
        "incorrect predictions": 2,
        "binary classification": 2,
        "quiz": 2,
        "correctly classified reviews": 1,
        "baby product": 1,
        "negative reviews": 1,
        "false alarms": 1
    },
    "decision tree module": {
        "graphlab create": 4,
        "majority class classifier": 4,
        "logistic regression classifier": 3,
        "false positives": 3,
        "negative sentiments": 2,
        "ratings": 2,
        "word counts": 2,
        "test sets": 2,
        "precision": 2,
        "recall": 2,
        "amazon dataset": 2,
        "sentiment": 2,
        "performance metric": 2,
        "correctly classified data points": 2,
        "total data points": 2,
        "majority": 2,
        "baseline": 2,
        "majority classifier": 2,
        "majority class prediction": 2,
        "false negatives": 2,
        "confusion matrix": 2,
        "true negatives": 2,
        "true positives": 2,
        "incorrect predictions": 2,
        "binary classification": 2,
        "quiz": 2,
        "correctly classified reviews": 1,
        "baby product": 1,
        "negative reviews": 1,
        "false alarms": 1
    },
    "amazon review": {
        "graphlab create": 4,
        "majority class classifier": 4,
        "logistic regression classifier": 3,
        "false positives": 3,
        "negative sentiments": 2,
        "ratings": 2,
        "word counts": 2,
        "test sets": 2,
        "precision": 2,
        "recall": 2,
        "amazon dataset": 2,
        "sentiment": 2,
        "performance metric": 2,
        "correctly classified data points": 2,
        "total data points": 2,
        "majority": 2,
        "baseline": 2,
        "majority classifier": 2,
        "majority class prediction": 2,
        "false negatives": 2,
        "confusion matrix": 2,
        "true negatives": 2,
        "true positives": 2,
        "incorrect predictions": 2,
        "binary classification": 2,
        "quiz": 2,
        "correctly classified reviews": 1,
        "baby product": 1,
        "negative reviews": 1,
        "false alarms": 1
    },
    "load amazon review dataset": {
        "graphlab create": 4,
        "majority class classifier": 4,
        "logistic regression classifier": 3,
        "false positives": 3,
        "negative sentiments": 2,
        "ratings": 2,
        "word counts": 2,
        "test sets": 2,
        "precision": 2,
        "recall": 2,
        "amazon dataset": 2,
        "sentiment": 2,
        "performance metric": 2,
        "correctly classified data points": 2,
        "total data points": 2,
        "majority": 2,
        "baseline": 2,
        "majority classifier": 2,
        "majority class prediction": 2,
        "false negatives": 2,
        "confusion matrix": 2,
        "true negatives": 2,
        "true positives": 2,
        "incorrect predictions": 2,
        "binary classification": 2,
        "quiz": 2,
        "correctly classified reviews": 1,
        "baby product": 1,
        "negative reviews": 1,
        "false alarms": 1
    },
    "mpi": {
        "dependent variable": 12,
        "independent variables": 10,
        "dependent variables": 6,
        "multicollinearity": 6,
        "linear relationship": 6,
        "linear regression model": 6,
        "average night light": 6,
        "mpi": 6,
        "avgnightlight": 4
    },
    "marine biologists": {
        "logistic function": 3,
        "heaviside function": 2,
        "conditional probability": 2,
        "gradient ascent": 2,
        "fudge factor": 2,
        "signature": 2,
        "median carapace": 1,
        "length": 1,
        "lobsters": 1,
        "synthetic training set": 1,
        "synethetic data set": 1,
        "labeled data points": 1,
        "points matrix": 1,
        "numpy column vector labels": 1,
        "mathematical function": 1,
        "linear discriminant function": 1,
        "linear discriminant": 1,
        "aviside function": 1,
        "arithmetic operators": 1,
        "elementwise operations": 1,
        "test code": 1,
        "synthetic data": 1,
        "lobsters example": 1,
        "contour plot": 1,
        "sigmoid elementwise": 1,
        "numpy matrix": 1,
        "gaussian distributions": 1,
        "maximum likelihood principle": 1,
        "objective function": 1,
        "arithm": 1,
        "joint probability": 1,
        "bernoulli trial": 1,
        "notational conventions": 1,
        "scalar argument": 1,
        "elementwise logarithm": 1,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "mle": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1
    },
    "predators": {
        "logistic function": 3,
        "heaviside function": 2,
        "conditional probability": 2,
        "gradient ascent": 2,
        "fudge factor": 2,
        "signature": 2,
        "median carapace": 1,
        "length": 1,
        "lobsters": 1,
        "synthetic training set": 1,
        "synethetic data set": 1,
        "labeled data points": 1,
        "points matrix": 1,
        "numpy column vector labels": 1,
        "mathematical function": 1,
        "linear discriminant function": 1,
        "linear discriminant": 1,
        "aviside function": 1,
        "arithmetic operators": 1,
        "elementwise operations": 1,
        "test code": 1,
        "synthetic data": 1,
        "lobsters example": 1,
        "contour plot": 1,
        "sigmoid elementwise": 1,
        "numpy matrix": 1,
        "gaussian distributions": 1,
        "maximum likelihood principle": 1,
        "objective function": 1,
        "arithm": 1,
        "joint probability": 1,
        "bernoulli trial": 1,
        "notational conventions": 1,
        "scalar argument": 1,
        "elementwise logarithm": 1,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "mle": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1
    },
    "rock lobsters": {
        "logistic function": 3,
        "heaviside function": 2,
        "conditional probability": 2,
        "gradient ascent": 2,
        "fudge factor": 2,
        "signature": 2,
        "median carapace": 1,
        "length": 1,
        "lobsters": 1,
        "synthetic training set": 1,
        "synethetic data set": 1,
        "labeled data points": 1,
        "points matrix": 1,
        "numpy column vector labels": 1,
        "mathematical function": 1,
        "linear discriminant function": 1,
        "linear discriminant": 1,
        "aviside function": 1,
        "arithmetic operators": 1,
        "elementwise operations": 1,
        "test code": 1,
        "synthetic data": 1,
        "lobsters example": 1,
        "contour plot": 1,
        "sigmoid elementwise": 1,
        "numpy matrix": 1,
        "gaussian distributions": 1,
        "maximum likelihood principle": 1,
        "objective function": 1,
        "arithm": 1,
        "joint probability": 1,
        "bernoulli trial": 1,
        "notational conventions": 1,
        "scalar argument": 1,
        "elementwise logarithm": 1,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "mle": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1
    },
    "panorama": {
        "cost array": 6,
        "warped images": 5,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "output": {
        "cost array": 6,
        "warped images": 5,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "stationary image": {
        "cost array": 6,
        "warped images": 5,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "input images": {
        "cost array": 6,
        "warped images": 5,
        "warping method": 4,
        "interpolation": 4,
        "boundary effect": 4,
        "edge pixels": 4,
        "vertical path": 4,
        "difference image": 4,
        "panoramas": 4,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "input training images": {
        "latent space": 15,
        "mixing coefficients": 10,
        "handwriting styles": 5,
        "multivariate bernoulli distribution": 5,
        "misclassifications": 5,
        "data labels": 5,
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 1
    },
    "return statement": {
        "latent space": 15,
        "mixing coefficients": 10,
        "handwriting styles": 5,
        "multivariate bernoulli distribution": 5,
        "misclassifications": 5,
        "data labels": 5,
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 1
    },
    "reconstructed digits": {
        "latent space": 15,
        "mixing coefficients": 10,
        "handwriting styles": 5,
        "multivariate bernoulli distribution": 5,
        "misclassifications": 5,
        "data labels": 5,
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 1
    },
    "stats": {
        "sampling rate": 4,
        "trace": 4,
        "arithmetic operations": 4,
        "numpy functions": 4,
        "standard ascii files": 4,
        "cross correlations": 4,
        "trace objects": 4,
        "beamforming": 4,
        "stream objects": 4,
        "lowpass filter": 4,
        "corner frequency": 4,
        "preview": 4,
        "gaussian noise": 3,
        "spectrograms": 2,
        "spectrogram plot": 2,
        "logarithmic frequency scale": 2,
        "tapering": 1,
        "lowpass": 1,
        "array": 1,
        "non": 1
    },
    "trace object": {
        "sampling rate": 4,
        "trace": 4,
        "arithmetic operations": 4,
        "numpy functions": 4,
        "standard ascii files": 4,
        "cross correlations": 4,
        "trace objects": 4,
        "beamforming": 4,
        "stream objects": 4,
        "lowpass filter": 4,
        "corner frequency": 4,
        "preview": 4,
        "gaussian noise": 3,
        "spectrograms": 2,
        "spectrogram plot": 2,
        "logarithmic frequency scale": 2,
        "tapering": 1,
        "lowpass": 1,
        "array": 1,
        "non": 1
    },
    "start time sampling rate": {
        "sampling rate": 4,
        "trace": 4,
        "arithmetic operations": 4,
        "numpy functions": 4,
        "standard ascii files": 4,
        "cross correlations": 4,
        "trace objects": 4,
        "beamforming": 4,
        "stream objects": 4,
        "lowpass filter": 4,
        "corner frequency": 4,
        "preview": 4,
        "gaussian noise": 3,
        "spectrograms": 2,
        "spectrogram plot": 2,
        "logarithmic frequency scale": 2,
        "tapering": 1,
        "lowpass": 1,
        "array": 1,
        "non": 1
    },
    "regularly spaced time series": {
        "sampling rate": 4,
        "trace": 4,
        "arithmetic operations": 4,
        "numpy functions": 4,
        "standard ascii files": 4,
        "cross correlations": 4,
        "trace objects": 4,
        "beamforming": 4,
        "stream objects": 4,
        "lowpass filter": 4,
        "corner frequency": 4,
        "preview": 4,
        "gaussian noise": 3,
        "spectrograms": 2,
        "spectrogram plot": 2,
        "logarithmic frequency scale": 2,
        "tapering": 1,
        "lowpass": 1,
        "array": 1,
        "non": 1
    },
    "trace": {
        "sampling rate": 4,
        "trace": 4,
        "arithmetic operations": 4,
        "numpy functions": 4,
        "standard ascii files": 4,
        "cross correlations": 4,
        "trace objects": 4,
        "beamforming": 4,
        "stream objects": 4,
        "lowpass filter": 4,
        "corner frequency": 4,
        "preview": 4,
        "gaussian noise": 3,
        "spectrograms": 2,
        "spectrogram plot": 2,
        "logarithmic frequency scale": 2,
        "tapering": 1,
        "lowpass": 1,
        "array": 1,
        "non": 1
    },
    "docker container": {
        "rdd": 6,
        "movielens": 6,
        "arrival delay": 5,
        "text file": 4,
        "head command": 4,
        "spark dataframe": 4,
        "movieid": 4,
        "depdelay": 3,
        "rdd code": 3,
        "arrdelay column": 3,
        "depdelay column": 3,
        "binary labels": 3,
        "arrdealy": 2,
        "labeledpoint": 2,
        "departure delay": 2,
        "textfile": 2,
        "rdealy": 1,
        "faa": 1,
        "logisticregression": 1,
        "default parameters": 1,
        "iterations": 1
    },
    "stocks": {
        "toy dataset": 3,
        "data buckets": 3,
        "upsampling": 3,
        "interpolation": 3,
        "weekly time series": 3,
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "ordinary least squares model": {
        "ols()": 6,
        "fit()": 5,
        "boxplots": 4,
        "relationships": 4,
        "humidity": 4,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression object": 2,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "ridgecv": 1,
        "hours distribution": 1
    },
    "row selection": {
        "end index": 6,
        "row id": 6,
        "column id": 6,
        "compound expressions": 5,
        "boolean arrays": 5,
        "data aggregration": 4,
        "pandas row index": 3,
        "python slicing functionality": 3,
        "pandas slicing function": 3,
        "iloc[]": 3,
        "row index": 3,
        "loc[]": 3,
        "array slicing syntax": 3,
        "frame": 2,
        "tabular data": 1,
        "groupby function": 1,
        "groupby animation": 1,
        "rotten tomatoes": 1,
        "revenue": 1
    },
    "label column selection": {
        "end index": 6,
        "row id": 6,
        "column id": 6,
        "compound expressions": 5,
        "boolean arrays": 5,
        "data aggregration": 4,
        "pandas row index": 3,
        "python slicing functionality": 3,
        "pandas slicing function": 3,
        "iloc[]": 3,
        "row index": 3,
        "loc[]": 3,
        "array slicing syntax": 3,
        "frame": 2,
        "tabular data": 1,
        "groupby function": 1,
        "groupby animation": 1,
        "rotten tomatoes": 1,
        "revenue": 1
    },
    "magic function": {
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "execution time": 3,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2,
        "vectorised functions": 2,
        "execution speed": 1,
        "linear regression implementation": 1
    },
    "maximum likelihood estimation": {
        "binomial": 6,
        "likelihood function": 4,
        "gradient ascent": 2,
        "fudge factor": 2,
        "signature": 2,
        "likelihood": 2,
        "maximum likelihood estimate": 2,
        "binomial distribution": 2,
        "learning rate": 2,
        "learning curve": 2,
        "maximum likelihood principle": 1,
        "objective function": 1,
        "arithm": 1,
        "joint probability": 1,
        "bernoulli trial": 1,
        "notational conventions": 1,
        "scalar argument": 1,
        "elementwise logarithm": 1,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "mle": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1,
        "maximum likelihood estimation": 1,
        "interctive plotting": 1,
        "regularization": 1,
        "predict()": 1,
        "correct guesses": 1,
        "guessed classes": 1,
        "predicted exam results": 1
    },
    "gradient ascent": {
        "signature": 5,
        "approximation": 3,
        "taylor series approximation": 3,
        "newton step": 3,
        "moral equivalent": 3,
        "linear equations": 3,
        "multidimensional variables": 3,
        "scalar objective function": 3,
        "elementwise multiplication": 3,
        "elementwise product": 3,
        "gradient ascent": 2,
        "fudge factor": 2,
        "column vector": 2,
        "matrix thetas": 2,
        "code skeleton": 2,
        "gradient ascent procedure": 2,
        "gradient ascent trajectory": 2,
        "learning rate": 2,
        "learning curve": 2,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "mle": 1,
        "step iteration variable": 1,
        "regularization": 1,
        "predict()": 1,
        "correct guesses": 1,
        "guessed classes": 1,
        "predicted exam results": 1
    },
    "len": {
        "pi": 10,
        "natural logarithm": 10,
        "math module": 7,
        "image function": 7,
        "web pages": 7,
        "arithmetic operators": 6,
        "donald knuth": 5,
        "string method lower": 5,
        "square brackets": 3
    },
    "test cells": {
        "ahs": 5,
        "trainingset": 2,
        "data file": 2,
        "american housing survey": 2,
        "homework": 2,
        "ahs dataset": 2,
        "housing unit": 2,
        "population column": 2,
        "year column": 2,
        "quantitative data": 2,
        "integer": 2,
        "mnist": 1,
        "testing arrays": 1,
        "true class labels": 1,
        "istic regression": 1,
        "normalized distribution": 1,
        "multiclass": 1,
        "class label": 1,
        "normalizing factor": 1,
        "unnormalized probabilities": 1,
        "unnormalized probability": 1,
        "intermediate vector": 1,
        "conditional probability": 1,
        "datapoint": 1,
        "ifcation neural network": 1,
        "derive gradient equations": 1,
        "grad": 1,
        "bias parameters": 1,
        "ients": 1,
        "validation": 1,
        "sgd iterations": 1,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "mlp": 1,
        "hidden layer": 1,
        "non-linear activation function": 1,
        "world population": 1,
        "standard metropolitan statistical area": 1,
        "join method": 1,
        "smsa": 1,
        "bar chart": 1
    },
    "multiclass logistic regression": {
        "trainingset": 3,
        "mlp": 3,
        "unnormalized probabilities": 2,
        "conditional probability": 2,
        "mnist": 1,
        "testing arrays": 1,
        "true class labels": 1,
        "istic regression": 1,
        "normalized distribution": 1,
        "multiclass": 1,
        "class label": 1,
        "normalizing factor": 1,
        "unnormalized probability": 1,
        "intermediate vector": 1,
        "datapoint": 1,
        "ifcation neural network": 1,
        "derive gradient equations": 1,
        "grad": 1,
        "bias parameters": 1,
        "ients": 1,
        "gradient calculations": 1,
        "gradient computations": 1,
        "gradient vectors": 1,
        "maximum points": 1,
        "likelihood function": 1,
        "stochastic gradient descent": 1,
        "validation": 1,
        "sgd iterations": 1,
        "visualize weights": 1,
        "true class label": 1,
        "highest probability": 1,
        "multilayer perceptron": 1,
        "neural network": 1,
        "probability normalizing factor": 1,
        "multiclass logistic regression model": 1,
        "sigmoid activation function": 1,
        "logistic regression classifier": 1,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "vectorized implementation": 1,
        "working mlp": 1,
        "decision function": 1,
        "weights": 1,
        "hidden layer": 1,
        "non-linear activation function": 1,
        "gaussian": 1,
        "misclassifications": 1,
        "convolutional networks": 1,
        "mlp model": 1,
        "test": 1,
        "mis": 1
    },
    "machine vision": {
        "trainingset": 3,
        "mlp": 3,
        "unnormalized probabilities": 2,
        "conditional probability": 2,
        "mnist": 1,
        "testing arrays": 1,
        "true class labels": 1,
        "istic regression": 1,
        "normalized distribution": 1,
        "multiclass": 1,
        "class label": 1,
        "normalizing factor": 1,
        "unnormalized probability": 1,
        "intermediate vector": 1,
        "datapoint": 1,
        "ifcation neural network": 1,
        "derive gradient equations": 1,
        "grad": 1,
        "bias parameters": 1,
        "ients": 1,
        "gradient calculations": 1,
        "gradient computations": 1,
        "gradient vectors": 1,
        "maximum points": 1,
        "likelihood function": 1,
        "stochastic gradient descent": 1,
        "validation": 1,
        "sgd iterations": 1,
        "visualize weights": 1,
        "true class label": 1,
        "highest probability": 1,
        "multilayer perceptron": 1,
        "neural network": 1,
        "probability normalizing factor": 1,
        "multiclass logistic regression model": 1,
        "sigmoid activation function": 1,
        "logistic regression classifier": 1,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "vectorized implementation": 1,
        "working mlp": 1,
        "decision function": 1,
        "weights": 1,
        "hidden layer": 1,
        "non-linear activation function": 1,
        "gaussian": 1,
        "misclassifications": 1,
        "convolutional networks": 1,
        "mlp model": 1,
        "test": 1,
        "mis": 1
    },
    "internal parameters": {
        "trainingset": 3,
        "mlp": 3,
        "unnormalized probabilities": 2,
        "conditional probability": 2,
        "mnist": 1,
        "testing arrays": 1,
        "true class labels": 1,
        "istic regression": 1,
        "normalized distribution": 1,
        "multiclass": 1,
        "class label": 1,
        "normalizing factor": 1,
        "unnormalized probability": 1,
        "intermediate vector": 1,
        "datapoint": 1,
        "ifcation neural network": 1,
        "derive gradient equations": 1,
        "grad": 1,
        "bias parameters": 1,
        "ients": 1,
        "gradient calculations": 1,
        "gradient computations": 1,
        "gradient vectors": 1,
        "maximum points": 1,
        "likelihood function": 1,
        "stochastic gradient descent": 1,
        "validation": 1,
        "sgd iterations": 1,
        "visualize weights": 1,
        "true class label": 1,
        "highest probability": 1,
        "multilayer perceptron": 1,
        "neural network": 1,
        "probability normalizing factor": 1,
        "multiclass logistic regression model": 1,
        "sigmoid activation function": 1,
        "logistic regression classifier": 1,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "vectorized implementation": 1,
        "working mlp": 1,
        "decision function": 1,
        "weights": 1,
        "hidden layer": 1,
        "non-linear activation function": 1,
        "gaussian": 1,
        "misclassifications": 1,
        "convolutional networks": 1,
        "mlp model": 1,
        "test": 1,
        "mis": 1
    },
    "mobile camera": {
        "trainingset": 3,
        "mlp": 3,
        "unnormalized probabilities": 2,
        "conditional probability": 2,
        "mnist": 1,
        "testing arrays": 1,
        "true class labels": 1,
        "istic regression": 1,
        "normalized distribution": 1,
        "multiclass": 1,
        "class label": 1,
        "normalizing factor": 1,
        "unnormalized probability": 1,
        "intermediate vector": 1,
        "datapoint": 1,
        "ifcation neural network": 1,
        "derive gradient equations": 1,
        "grad": 1,
        "bias parameters": 1,
        "ients": 1,
        "gradient calculations": 1,
        "gradient computations": 1,
        "gradient vectors": 1,
        "maximum points": 1,
        "likelihood function": 1,
        "stochastic gradient descent": 1,
        "validation": 1,
        "sgd iterations": 1,
        "visualize weights": 1,
        "true class label": 1,
        "highest probability": 1,
        "multilayer perceptron": 1,
        "neural network": 1,
        "probability normalizing factor": 1,
        "multiclass logistic regression model": 1,
        "sigmoid activation function": 1,
        "logistic regression classifier": 1,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "vectorized implementation": 1,
        "working mlp": 1,
        "decision function": 1,
        "weights": 1,
        "hidden layer": 1,
        "non-linear activation function": 1,
        "gaussian": 1,
        "misclassifications": 1,
        "convolutional networks": 1,
        "mlp model": 1,
        "test": 1,
        "mis": 1
    },
    "mobile phone app": {
        "trainingset": 3,
        "mlp": 3,
        "unnormalized probabilities": 2,
        "conditional probability": 2,
        "mnist": 1,
        "testing arrays": 1,
        "true class labels": 1,
        "istic regression": 1,
        "normalized distribution": 1,
        "multiclass": 1,
        "class label": 1,
        "normalizing factor": 1,
        "unnormalized probability": 1,
        "intermediate vector": 1,
        "datapoint": 1,
        "ifcation neural network": 1,
        "derive gradient equations": 1,
        "grad": 1,
        "bias parameters": 1,
        "ients": 1,
        "gradient calculations": 1,
        "gradient computations": 1,
        "gradient vectors": 1,
        "maximum points": 1,
        "likelihood function": 1,
        "stochastic gradient descent": 1,
        "validation": 1,
        "sgd iterations": 1,
        "visualize weights": 1,
        "true class label": 1,
        "highest probability": 1,
        "multilayer perceptron": 1,
        "neural network": 1,
        "probability normalizing factor": 1,
        "multiclass logistic regression model": 1,
        "sigmoid activation function": 1,
        "logistic regression classifier": 1,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "vectorized implementation": 1,
        "working mlp": 1,
        "decision function": 1,
        "weights": 1,
        "hidden layer": 1,
        "non-linear activation function": 1,
        "gaussian": 1,
        "misclassifications": 1,
        "convolutional networks": 1,
        "mlp model": 1,
        "test": 1,
        "mis": 1
    },
    "mnist handwritten digits dataset": {
        "trainingset": 3,
        "mlp": 3,
        "unnormalized probabilities": 2,
        "conditional probability": 2,
        "mnist": 1,
        "testing arrays": 1,
        "true class labels": 1,
        "istic regression": 1,
        "normalized distribution": 1,
        "multiclass": 1,
        "class label": 1,
        "normalizing factor": 1,
        "unnormalized probability": 1,
        "intermediate vector": 1,
        "datapoint": 1,
        "ifcation neural network": 1,
        "derive gradient equations": 1,
        "grad": 1,
        "bias parameters": 1,
        "ients": 1,
        "gradient calculations": 1,
        "gradient computations": 1,
        "gradient vectors": 1,
        "maximum points": 1,
        "likelihood function": 1,
        "stochastic gradient descent": 1,
        "validation": 1,
        "sgd iterations": 1,
        "visualize weights": 1,
        "true class label": 1,
        "highest probability": 1,
        "multilayer perceptron": 1,
        "neural network": 1,
        "probability normalizing factor": 1,
        "multiclass logistic regression model": 1,
        "sigmoid activation function": 1,
        "logistic regression classifier": 1,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "vectorized implementation": 1,
        "working mlp": 1,
        "decision function": 1,
        "weights": 1,
        "hidden layer": 1,
        "non-linear activation function": 1,
        "gaussian": 1,
        "misclassifications": 1,
        "convolutional networks": 1,
        "mlp model": 1,
        "test": 1,
        "mis": 1
    },
    "image patch": {
        "trainingset": 3,
        "mlp": 3,
        "unnormalized probabilities": 2,
        "conditional probability": 2,
        "mnist": 1,
        "testing arrays": 1,
        "true class labels": 1,
        "istic regression": 1,
        "normalized distribution": 1,
        "multiclass": 1,
        "class label": 1,
        "normalizing factor": 1,
        "unnormalized probability": 1,
        "intermediate vector": 1,
        "datapoint": 1,
        "ifcation neural network": 1,
        "derive gradient equations": 1,
        "grad": 1,
        "bias parameters": 1,
        "ients": 1,
        "gradient calculations": 1,
        "gradient computations": 1,
        "gradient vectors": 1,
        "maximum points": 1,
        "likelihood function": 1,
        "stochastic gradient descent": 1,
        "validation": 1,
        "sgd iterations": 1,
        "visualize weights": 1,
        "true class label": 1,
        "highest probability": 1,
        "multilayer perceptron": 1,
        "neural network": 1,
        "probability normalizing factor": 1,
        "multiclass logistic regression model": 1,
        "sigmoid activation function": 1,
        "logistic regression classifier": 1,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "vectorized implementation": 1,
        "working mlp": 1,
        "decision function": 1,
        "weights": 1,
        "hidden layer": 1,
        "non-linear activation function": 1,
        "gaussian": 1,
        "misclassifications": 1,
        "convolutional networks": 1,
        "mlp model": 1,
        "test": 1,
        "mis": 1
    },
    "bonus question": {
        "mean windspeeds": 11,
        "speeds": 9,
        "ireland": 9,
        "knots": 9,
        "standard deviations": 9,
        "mean windspeed": 5,
        "windspeeds": 4,
        "average windspeed": 4
    },
    "graphical models": {
        "receiving node": 10,
        "marginalizing": 9,
        "marginals": 6,
        "joint distributions": 6,
        "function marginalize": 6,
        "sending": 5,
        "functional programming": 5,
        "1d numpy arrays": 5,
        "tensor representations": 4,
        "numpy broadcasting": 4
    },
    "numpy ndarrays": {
        "receiving node": 10,
        "marginalizing": 9,
        "marginals": 6,
        "joint distributions": 6,
        "function marginalize": 6,
        "sending": 5,
        "functional programming": 5,
        "1d numpy arrays": 5,
        "tensor representations": 4,
        "numpy broadcasting": 4
    },
    "conditional distributions": {
        "receiving node": 10,
        "marginalizing": 9,
        "marginals": 6,
        "joint distributions": 6,
        "function marginalize": 6,
        "sending": 5,
        "functional programming": 5,
        "1d numpy arrays": 5,
        "tensor representations": 4,
        "numpy broadcasting": 4
    },
    "factor graphs": {
        "receiving node": 10,
        "marginalizing": 9,
        "marginals": 6,
        "joint distributions": 6,
        "function marginalize": 6,
        "sending": 5,
        "functional programming": 5,
        "1d numpy arrays": 5,
        "tensor representations": 4,
        "numpy broadcasting": 4
    },
    "infix operators": {
        "receiving node": 10,
        "marginalizing": 9,
        "marginals": 6,
        "joint distributions": 6,
        "function marginalize": 6,
        "sending": 5,
        "functional programming": 5,
        "1d numpy arrays": 5,
        "tensor representations": 4,
        "numpy broadcasting": 4
    },
    "discrete variables": {
        "receiving node": 10,
        "marginalizing": 9,
        "marginals": 6,
        "joint distributions": 6,
        "function marginalize": 6,
        "sending": 5,
        "functional programming": 5,
        "1d numpy arrays": 5,
        "tensor representations": 4,
        "numpy broadcasting": 4
    },
    "conditioning variable": {
        "receiving node": 10,
        "marginalizing": 9,
        "marginals": 6,
        "joint distributions": 6,
        "function marginalize": 6,
        "sending": 5,
        "functional programming": 5,
        "1d numpy arrays": 5,
        "tensor representations": 4,
        "numpy broadcasting": 4
    },
    "arrdelay": {
        "airtime": 9,
        "random number generator": 6,
        "arrdelay": 5,
        "linear regression model": 4,
        "code cell": 4,
        "test sets": 4,
        "multivariate regresion model": 3,
        "predictor variable": 3,
        "regression model": 3,
        "stats": 3,
        "unit tests": 2,
        "multiple independent variables": 2,
        "dependent variable": 2,
        "patsy formula": 2,
        "multivariate regression model": 2,
        "distance": 1,
        "actualelapsedtime": 1,
        "optional parameter bandwidth": 1,
        "kernel density estimation": 1,
        "x axis label": 1,
        "kernal density estimation": 1
    },
    "ham emails": {
        "predction model": 3,
        "zero predictor": 3,
        "filtering rate": 3,
        "beautifulsoup": 3,
        "spam mails": 3,
        "filter rate": 3,
        "spammy words": 3,
        "characterstics": 3,
        "html table": 3,
        "data parsing": 3,
        "spam": 3,
        "web crawling": 3,
        "datahub": 3,
        "contour plot": 3,
        "false negatives": 3,
        "email": 3,
        "cutoff probability": 3,
        "final classifier": 3,
        "cancer screenings": 3,
        "false positives": 3
    },
    "significance": {
        "majors": 8,
        "confounding variable": 6,
        "ordinary least squares": 6,
        "linear models": 6,
        "design matrices": 6,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "average height values": 3,
        "pivot table": 3,
        "patsy": 3,
        "linearmodels": 3,
        "computer science majors": 2,
        "kmeans": 1
    },
    "t optimal degree": {
        "sine function": 8,
        "ridge regression": 8,
        "optimal plot": 8,
        "width variable": 6,
        "colored image": 6,
        "train set": 6,
        "lassocv": 5,
        "fine tuning": 3,
        "parameter tuning": 3,
        "extrapolation": 2,
        "non-linear regression": 2,
        "forecasting techniques": 2
    },
    "classification error": {
        "prediction path": 12,
        "classification error": 10,
        "early stopping conditions": 6,
        "validation error": 6,
        "lowest classification error": 6,
        "validation data": 4,
        "tree model": 3,
        "function classify": 3,
        "predicted class": 3,
        "qu": 3,
        "complexity": 3
    },
    "petal width": {
        "pairplot": 10,
        "flower species": 10,
        "kde plot": 10,
        "setosa species": 10,
        "gridsearch": 4,
        "gridsearchcv": 3,
        "confusion matrices": 2,
        "grid model": 2,
        "unknown iris": 2,
        "predicted response value": 2,
        "euclidian distance": 2,
        "distance metric": 2
    },
    "petal length": {
        "pairplot": 10,
        "flower species": 10,
        "kde plot": 10,
        "setosa species": 10,
        "gridsearch": 4,
        "gridsearchcv": 3,
        "confusion matrices": 2,
        "grid model": 2,
        "unknown iris": 2,
        "predicted response value": 2,
        "euclidian distance": 2,
        "distance metric": 2
    },
    "sepal length": {
        "pairplot": 10,
        "flower species": 10,
        "kde plot": 10,
        "setosa species": 10,
        "gridsearch": 4,
        "gridsearchcv": 3,
        "confusion matrices": 2,
        "grid model": 2,
        "unknown iris": 2,
        "predicted response value": 2,
        "euclidian distance": 2,
        "distance metric": 2
    },
    "doi lists": {
        "article level metrics": 6,
        "api": 4,
        "alm data": 4,
        "california institute of technology": 4,
        "alm": 2,
        "is": 2,
        "plos search api": 2,
        "publisher api": 2,
        "search": 2,
        "affiliation term": 2,
        "os": 2,
        "caltech": 2,
        "advanced search functionality": 2,
        "plos": 2,
        "plos alm api": 2,
        "variable dois": 2,
        "alm api": 2,
        "europepubmedcentral citations": 2,
        "facebook posts": 2,
        "plos article level metrics": 2,
        "europepmc citations": 2,
        "tweets": 2,
        "variable caltech": 2,
        "twitter handles": 1,
        "unique account names": 1,
        "twitter account handles": 1
    },
    "randomforestclass": {
        "iris": 3,
        "iris data set": 3,
        "1d array": 2,
        "supervised models": 2,
        "d array": 2,
        "unsupervised models": 2,
        "distance matrix": 2,
        "cluster centers": 2,
        "dbscan": 2,
        "iris target": 1,
        "clustering algorithms": 1,
        "2d plot": 1,
        "sepal length": 1,
        "unsupervised machine learning": 1,
        "data mining": 1,
        "outlier detection": 1,
        "supervised learning": 1,
        "convex clusters": 1,
        "astronomy": 1,
        "pseudocode": 1,
        "convex": 1,
        "lsst": 1,
        "random state": 1,
        "euclidean distance": 1,
        "clustering outcome": 1,
        "petal length": 1,
        "scaling": 1,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "regression": 1,
        "iris data": 1,
        "final classification": 1,
        "supervised machine learning": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1
    },
    "non-linear model": {
        "iris": 3,
        "iris data set": 3,
        "1d array": 2,
        "supervised models": 2,
        "d array": 2,
        "unsupervised models": 2,
        "distance matrix": 2,
        "cluster centers": 2,
        "dbscan": 2,
        "iris target": 1,
        "clustering algorithms": 1,
        "2d plot": 1,
        "sepal length": 1,
        "unsupervised machine learning": 1,
        "data mining": 1,
        "outlier detection": 1,
        "supervised learning": 1,
        "convex clusters": 1,
        "astronomy": 1,
        "pseudocode": 1,
        "convex": 1,
        "lsst": 1,
        "random state": 1,
        "euclidean distance": 1,
        "clustering outcome": 1,
        "petal length": 1,
        "scaling": 1,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "regression": 1,
        "iris data": 1,
        "final classification": 1,
        "supervised machine learning": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1
    },
    "scalar": {
        "ridge regression": 5,
        "orthonormal basis": 4,
        "population": 2,
        "unit vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "dot product": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2,
        "random distribution": 1,
        "predictor": 1,
        "dataset": 1,
        "regression methods": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "testing sets": 1,
        "bootstrap": 1,
        "confidence intervals": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "confidence interval": 1,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "multilinear regression": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1,
        "dimensionality properties": 1,
        "matrix addition": 1,
        "vector operations": 1
    },
    "principal components": {
        "pca": 8,
        "2d vectors": 3,
        "linear coefficients": 3,
        "eigenvectors": 3,
        "pca space": 3,
        "pca eigenvectors": 3,
        "orient": 3,
        "pca axes": 3,
        "pca components": 3,
        "principal component": 3,
        "iris data": 3,
        "plotting function": 2,
        "dimensionality reduction techniques": 2,
        "alternate pca": 2,
        "randomizedpca": 2,
        "handwritten digits": 2,
        "data matrix x": 2,
        "dimensionality reduction": 1,
        "principal components": 1,
        "residual noise": 1,
        "labeled faces": 1,
        "lfw exercise": 1,
        "eigenfaces": 1,
        "eigendigits": 1,
        "facial recognition exercise": 1
    },
    "binary label": {
        "logistic function": 3,
        "heaviside function": 2,
        "conditional probability": 2,
        "gradient ascent": 2,
        "fudge factor": 2,
        "signature": 2,
        "synthetic training set": 1,
        "synethetic data set": 1,
        "labeled data points": 1,
        "points matrix": 1,
        "numpy column vector labels": 1,
        "mathematical function": 1,
        "linear discriminant function": 1,
        "linear discriminant": 1,
        "aviside function": 1,
        "arithmetic operators": 1,
        "elementwise operations": 1,
        "test code": 1,
        "synthetic data": 1,
        "lobsters example": 1,
        "contour plot": 1,
        "sigmoid elementwise": 1,
        "numpy matrix": 1,
        "gaussian distributions": 1,
        "maximum likelihood principle": 1,
        "objective function": 1,
        "arithm": 1,
        "joint probability": 1,
        "bernoulli trial": 1,
        "notational conventions": 1,
        "scalar argument": 1,
        "elementwise logarithm": 1,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "mle": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1
    },
    "initial dummy coordinate": {
        "logistic function": 3,
        "heaviside function": 2,
        "conditional probability": 2,
        "gradient ascent": 2,
        "fudge factor": 2,
        "signature": 2,
        "synthetic training set": 1,
        "synethetic data set": 1,
        "labeled data points": 1,
        "points matrix": 1,
        "numpy column vector labels": 1,
        "mathematical function": 1,
        "linear discriminant function": 1,
        "linear discriminant": 1,
        "aviside function": 1,
        "arithmetic operators": 1,
        "elementwise operations": 1,
        "test code": 1,
        "synthetic data": 1,
        "lobsters example": 1,
        "contour plot": 1,
        "sigmoid elementwise": 1,
        "numpy matrix": 1,
        "gaussian distributions": 1,
        "maximum likelihood principle": 1,
        "objective function": 1,
        "arithm": 1,
        "joint probability": 1,
        "bernoulli trial": 1,
        "notational conventions": 1,
        "scalar argument": 1,
        "elementwise logarithm": 1,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "mle": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1
    },
    "binary vector": {
        "logistic function": 3,
        "heaviside function": 2,
        "conditional probability": 2,
        "gradient ascent": 2,
        "fudge factor": 2,
        "signature": 2,
        "synthetic training set": 1,
        "synethetic data set": 1,
        "labeled data points": 1,
        "points matrix": 1,
        "numpy column vector labels": 1,
        "mathematical function": 1,
        "linear discriminant function": 1,
        "linear discriminant": 1,
        "aviside function": 1,
        "arithmetic operators": 1,
        "elementwise operations": 1,
        "test code": 1,
        "synthetic data": 1,
        "lobsters example": 1,
        "contour plot": 1,
        "sigmoid elementwise": 1,
        "numpy matrix": 1,
        "gaussian distributions": 1,
        "maximum likelihood principle": 1,
        "objective function": 1,
        "arithm": 1,
        "joint probability": 1,
        "bernoulli trial": 1,
        "notational conventions": 1,
        "scalar argument": 1,
        "elementwise logarithm": 1,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "mle": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1
    },
    "synthetic data sets": {
        "logistic function": 3,
        "heaviside function": 2,
        "conditional probability": 2,
        "gradient ascent": 2,
        "fudge factor": 2,
        "signature": 2,
        "synthetic training set": 1,
        "synethetic data set": 1,
        "labeled data points": 1,
        "points matrix": 1,
        "numpy column vector labels": 1,
        "mathematical function": 1,
        "linear discriminant function": 1,
        "linear discriminant": 1,
        "aviside function": 1,
        "arithmetic operators": 1,
        "elementwise operations": 1,
        "test code": 1,
        "synthetic data": 1,
        "lobsters example": 1,
        "contour plot": 1,
        "sigmoid elementwise": 1,
        "numpy matrix": 1,
        "gaussian distributions": 1,
        "maximum likelihood principle": 1,
        "objective function": 1,
        "arithm": 1,
        "joint probability": 1,
        "bernoulli trial": 1,
        "notational conventions": 1,
        "scalar argument": 1,
        "elementwise logarithm": 1,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "mle": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1
    },
    "ucla": {
        "admission rate": 4,
        "confidence interval": 4,
        "uncertainty": 4,
        "helper function": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "gpa": 4,
        "prestige": 4,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "validation data": {
        "classification error": 6,
        "false positives": 6,
        "lowest classification error": 4,
        "false negatives": 3,
        "prediction accuracy": 3,
        "boosted trees model": 3,
        "decision trees": 3,
        "decision tree model": 3,
        "probabilities": 3,
        "prediction probability": 3,
        "validation data": 2,
        "qu": 2,
        "complexity": 2,
        "tree models": 2,
        "training errors": 2,
        "average auc": 1,
        "code cell": 1,
        "check": 1,
        "gradient boosted trees": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1,
        "decisiontreeclassifier": 1
    },
    "empirical distributions": {
        "crime": 9,
        "cash values": 9,
        "sample size": 6,
        "data manipulation": 5,
        "datascience module": 5,
        "hypothesis testing": 4,
        "jury selection": 4,
        "law of averages": 2,
        "population parameter estimation": 2,
        "population": 2,
        "racial composition": 2,
        "ncvs data": 2,
        "ncvs": 2,
        "property losses": 2,
        "bin widths": 2
    },
    "type function": {
        "pi": 9,
        "natural logarithm": 9,
        "math module": 7,
        "image function": 7,
        "web pages": 7,
        "arithmetic operators": 6,
        "donald knuth": 5,
        "string method lower": 5,
        "square brackets": 3
    },
    "hist": {
        "jointplot": 8,
        "age": 8,
        "iterative approach": 5,
        "data cleaning": 5,
        "10": 4,
        "log transforming": 4,
        "income": 4,
        "area income": 4,
        "kde distributions": 4,
        "pairplot": 4,
        "subtle outliers": 2,
        "outliers": 2,
        "data values": 2,
        "mean value": 1
    },
    "air carriers": {
        "dayofweek": 10,
        "uniquecarrier": 6,
        "depdelay": 6,
        "uniquecarrier depdelay": 4,
        "uniquecarrier depdelay origin": 4,
        "departure delay": 4,
        "unit tests": 4,
        "intercept": 3,
        "uniquecarrier columns": 2,
        "cutoff parameter": 2,
        "binary indicator variables": 2,
        "categorical variables": 2,
        "dummy indicator variables": 2,
        "binary indicators": 2,
        "float64": 1,
        "default parameters": 1,
        "maximum likelihood": 1,
        "int64": 1
    },
    "tree model": {
        "prediction path": 12,
        "classification error": 10,
        "early stopping conditions": 6,
        "validation error": 6,
        "validation data": 6,
        "lowest classification error": 4,
        "tree model": 3,
        "function classify": 3,
        "predicted class": 3,
        "lowest": 2,
        "qu": 1,
        "complexity": 1
    },
    "discount": {
        "learning rate": 32,
        "sentimentnetwork": 8,
        "higher learning rate": 8,
        "polarity cutoff": 4,
        "noise reduction": 3,
        "6": 2
    },
    "image classification": {
        "jupyter": 13,
        "command mode": 5,
        "keyboard shortcuts": 5,
        "docs": 4,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "face images": 2,
        "mlp": 2,
        "narrow networks": 1,
        "wide networks": 1,
        "cnn": 1,
        "pooling layer": 1,
        "convolutional layer": 1,
        "vector dot products": 1
    },
    "syntax": {
        "registered riders": 7,
        "hist": 5,
        "casual riders": 4,
        "registered": 3,
        "error bars": 3,
        "seaborn api": 3,
        "bootstrapping": 3,
        "total rider counts": 3,
        "distplot function": 3,
        "rider counts": 2,
        "matplotlib axes object": 2,
        "boxplot function": 2,
        "bikeshare membership": 2,
        "lmplot function": 2,
        "scatterplot": 2,
        "hue parameter": 1,
        "lmplot": 1,
        "weekday trips": 1,
        "weekend trips": 1,
        "cache": 1,
        "fetch": 1,
        "array slicing syntax": 1,
        "column id": 1,
        "row id": 1,
        "compound expressions": 1,
        "boolean arrays": 1
    },
    "variables": {
        "discriminator": 2,
        "context manager": 2,
        "semantics": 2,
        "single adversarial training example": 2,
        "noise distribution": 2,
        "synthetic images": 2,
        "data distribution": 2,
        "generative adversarial training": 2,
        "help message": 2,
        "print function": 1,
        "rectangle area": 1,
        "jupyter notebooks": 1,
        "ipython": 1,
        "function type": 1,
        "double equals sign": 1,
        "single equals sign": 1,
        "boolean": 1,
        "bool": 1,
        "boolean comparisons": 1,
        "indentation": 1,
        "conditional statement": 1,
        "python observation": 1,
        "variable observation": 1,
        "str()": 1,
        "str() function": 1,
        "typecasting": 1,
        "year": 1,
        "mathematical operators": 1,
        "leap year": 1,
        "conditional statements": 1,
        "variable year": 1,
        "arguments": 1,
        "online resources": 1,
        "stack overflow": 1,
        "google search": 1,
        "python workflow": 1,
        "python documentation": 1,
        "positional arguments": 1,
        "keyword arguments": 1,
        "function call": 1,
        "input": 1,
        "default input values": 1,
        "default values": 1,
        "docstring": 1,
        "source code": 1,
        "fahrenheit": 1,
        "higer dimensional arrays": 1,
        "variables": 1
    },
    "psycopg2": {
        "productname": 3,
        "suppliers table": 3,
        "unitprice": 2,
        "supplierid": 2,
        "postgresql": 2,
        "sql": 2,
        "aggregate functions": 2,
        "orders table": 2,
        "desc keyword": 1,
        "order by keyword": 1,
        "productid": 1,
        "sql aliases": 1,
        "sql alias syntax": 1,
        "query arguments": 1,
        "database table": 1,
        "alias as": 1,
        "company name": 1,
        "companyname": 1,
        "column": 1,
        "aliases": 1,
        "wildcards": 1,
        "where clause": 1,
        "missing letters": 1,
        "select distinct statement": 1,
        "distinct operator": 1,
        "istinct": 1,
        "lierid": 1,
        "limit operator": 1,
        "limit syntax": 1,
        "sql subqueries": 1,
        "group by statement": 1,
        "group by operator": 1,
        "orderid": 1,
        "unitprice quantity": 1,
        "having operator": 1,
        "having clause": 1,
        "revenue": 1,
        "else statement": 1,
        "united states": 1,
        "date documentation": 1,
        "select orderdate": 1,
        "freight": 1,
        "freightpermonth": 1,
        "shipcountry": 1,
        "average freight cost": 1,
        "women": 1,
        "employees table": 1
    },
    "northwinddatabase": {
        "productname": 3,
        "suppliers table": 3,
        "unitprice": 2,
        "supplierid": 2,
        "postgresql": 2,
        "sql": 2,
        "aggregate functions": 2,
        "orders table": 2,
        "desc keyword": 1,
        "order by keyword": 1,
        "productid": 1,
        "sql aliases": 1,
        "sql alias syntax": 1,
        "query arguments": 1,
        "database table": 1,
        "alias as": 1,
        "company name": 1,
        "companyname": 1,
        "column": 1,
        "aliases": 1,
        "wildcards": 1,
        "where clause": 1,
        "missing letters": 1,
        "select distinct statement": 1,
        "distinct operator": 1,
        "istinct": 1,
        "lierid": 1,
        "limit operator": 1,
        "limit syntax": 1,
        "sql subqueries": 1,
        "group by statement": 1,
        "group by operator": 1,
        "orderid": 1,
        "unitprice quantity": 1,
        "having operator": 1,
        "having clause": 1,
        "revenue": 1,
        "else statement": 1,
        "united states": 1,
        "date documentation": 1,
        "select orderdate": 1,
        "freight": 1,
        "freightpermonth": 1,
        "shipcountry": 1,
        "average freight cost": 1,
        "women": 1,
        "employees table": 1
    },
    "productname": {
        "sql": 6,
        "aggregate functions": 6,
        "postgresql": 4,
        "limit operator": 3,
        "limit syntax": 3,
        "sql subqueries": 3,
        "group by statement": 3,
        "group by operator": 3,
        "having operator": 3,
        "having clause": 3,
        "else statement": 3,
        "date documentation": 3,
        "select distinct statement": 2,
        "distinct operator": 2,
        "sql aliases": 1,
        "sql alias syntax": 1,
        "query arguments": 1,
        "database table": 1,
        "alias as": 1,
        "column": 1,
        "aliases": 1,
        "wildcards": 1,
        "where clause": 1,
        "missing letters": 1
    },
    "categorical features": {
        "dummy variables": 10,
        "dtree": 9,
        "decisiontreeclassifier()": 9,
        "response variable": 3,
        "observation": 3,
        "linear regression model": 2,
        "categorical features": 2,
        "logistic curve": 2,
        "linear regression coefficients": 1,
        "linear regression equation": 1,
        "cutoff value": 1,
        "linear regression line": 1,
        "0 class": 1,
        "predicted probabilities": 1,
        "predicted probability": 1,
        "continuous response": 1,
        "binary response": 1,
        "log function": 1,
        "logistic function": 1,
        "negative coefficients": 1,
        "probability": 1,
        "positive coefficients": 1,
        "logistic regression beta values": 1,
        "confusion matrix": 1
    },
    "resampling process": {
        "resampling": 8,
        "survival function": 4,
        "weighted resampling": 4,
        "sfs": 4,
        "hazard function": 4,
        "pregnancy": 4,
        "median remaining time": 4,
        "first marriage": 4,
        "age": 4,
        "sampling weights": 4,
        "divorce": 4,
        "survival curve": 4,
        "sampling error": 4
    },
    "random sampling": {
        "resampling": 8,
        "survival function": 4,
        "weighted resampling": 4,
        "sfs": 4,
        "hazard function": 4,
        "pregnancy": 4,
        "median remaining time": 4,
        "first marriage": 4,
        "age": 4,
        "sampling weights": 4,
        "divorce": 4,
        "survival curve": 4,
        "sampling error": 4
    },
    "nodes": {
        "receiving node": 10,
        "marginalizing": 9,
        "function marginalize": 6,
        "sending": 5,
        "functional programming": 5,
        "1d numpy arrays": 5,
        "tensor representations": 4,
        "numpy broadcasting": 4,
        "networkx": 2,
        "drawing function": 2,
        "directed graph": 1,
        "matplotlib axes": 1,
        "ax parameter": 1,
        "multigraph": 1
    },
    "clusters": {
        "kmeans": 5,
        "target attributes": 4,
        "petal width": 4,
        "zip function": 4,
        "label parameter": 4,
        "marker colors": 4,
        "species": 4,
        "iris data set": 4,
        "predicted clusters": 2,
        "silhouette scores": 2,
        "silhouette score": 2,
        "true clusters": 1,
        "unsupervised learning": 1,
        "dataset": 1,
        "validation": 1,
        "sum of squared errors function": 1,
        "sse score": 1,
        "silhouette coefficient": 1,
        "internet": 1,
        "clustering handwritten digits": 1,
        "clustering exercises": 1,
        "mnist dataset": 1,
        "kmeans clusterer": 1,
        "grain sample": 1,
        "kmeans instance": 1,
        "inertias": 1,
        "grain data samples": 1,
        "inertia": 1
    },
    "coscale intro": {
        "timeseries": 7,
        "correlation matrix": 4,
        "train set": 3,
        "cross products": 3,
        "polynomial features extraction": 3,
        "optimal weights": 3,
        "multiple linear regression": 3,
        "polynomal expansion function": 3,
        "containers": 2,
        "physical nodes": 2,
        "real user monitoring": 2,
        "cassandra cluster": 2,
        "rumdatareceiver": 2,
        "elasticsearch cluster": 2,
        "node names": 2,
        "visual check": 2,
        "correlations": 1,
        "linear operations": 1,
        "graph lasso": 1,
        "numpy method": 1,
        "normalized data": 1,
        "diagonal pattern": 1,
        "affinity propagation": 1,
        "similarity scores": 1,
        "correlation coefficients": 1,
        "random noise": 1,
        "noise level": 1
    },
    "least squares problem": {
        "ridge regression": 8,
        "population": 2,
        "ridge method": 2,
        "alpha": 2,
        "weight": 2,
        "shrinking parameter": 2,
        "penalization parameter": 2,
        "regularization parameter": 2,
        "beta coefficients": 2,
        "ridge regressions": 2,
        "multilinear regression": 2,
        "polynomial model": 2,
        "design matrix": 2,
        "polynomial features": 2,
        "vandermonde matrix": 2,
        "polynomialfeatures": 2,
        "toy vector": 2,
        "random distribution": 1,
        "predictor": 1,
        "dataset": 1,
        "regression methods": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "testing sets": 1,
        "bootstrap": 1,
        "confidence intervals": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "confidence interval": 1
    },
    "components": {
        "pca": 13,
        "principal component": 4,
        "pca eigenvectors": 3,
        "orient": 3,
        "pca axes": 3,
        "pca components": 3,
        "iris data": 3,
        "plotting function": 2,
        "dimensionality reduction techniques": 2,
        "alternate pca": 2,
        "randomizedpca": 2,
        "handwritten digits": 2,
        "data matrix x": 2,
        "data standardization": 2,
        "bar plot": 1,
        "dimensionality reduction": 1,
        "principal components": 1,
        "residual noise": 1,
        "labeled faces": 1,
        "lfw exercise": 1,
        "eigenfaces": 1,
        "eigendigits": 1,
        "facial recognition exercise": 1
    },
    "2nd principal components": {
        "pca": 13,
        "principal component": 4,
        "pca eigenvectors": 3,
        "orient": 3,
        "pca axes": 3,
        "pca components": 3,
        "iris data": 3,
        "plotting function": 2,
        "dimensionality reduction techniques": 2,
        "alternate pca": 2,
        "randomizedpca": 2,
        "handwritten digits": 2,
        "data matrix x": 2,
        "data standardization": 2,
        "bar plot": 1,
        "dimensionality reduction": 1,
        "principal components": 1,
        "residual noise": 1,
        "labeled faces": 1,
        "lfw exercise": 1,
        "eigenfaces": 1,
        "eigendigits": 1,
        "facial recognition exercise": 1
    },
    "2nd": {
        "pca": 13,
        "principal component": 4,
        "pca eigenvectors": 3,
        "orient": 3,
        "pca axes": 3,
        "pca components": 3,
        "iris data": 3,
        "plotting function": 2,
        "dimensionality reduction techniques": 2,
        "alternate pca": 2,
        "randomizedpca": 2,
        "handwritten digits": 2,
        "data matrix x": 2,
        "data standardization": 2,
        "bar plot": 1,
        "dimensionality reduction": 1,
        "principal components": 1,
        "residual noise": 1,
        "labeled faces": 1,
        "lfw exercise": 1,
        "eigenfaces": 1,
        "eigendigits": 1,
        "facial recognition exercise": 1
    },
    "predictive means": {
        "time delays": 6,
        "agn reverberation mapping": 3,
        "posterior distribution": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "associated gradient functions": 2,
        "predictive distribution": 2,
        "neg log likelihood": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "minimize function": 2,
        "posterior uncertainties": 2,
        "optimization": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "predictive mean": {
        "time delays": 6,
        "agn reverberation mapping": 3,
        "posterior distribution": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "associated gradient functions": 2,
        "predictive distribution": 2,
        "neg log likelihood": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "minimize function": 2,
        "posterior uncertainties": 2,
        "optimization": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "individual components": {
        "time delays": 6,
        "agn reverberation mapping": 3,
        "posterior distribution": 3,
        "shifted inputs": 3,
        "observational noise": 3,
        "gp": 3,
        "associated gradient functions": 2,
        "predictive distribution": 2,
        "neg log likelihood": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "minimize function": 2,
        "posterior uncertainties": 2,
        "optimization": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "support vector machine": {
        "svm": 11,
        "iata airport code": 4,
        "carrier code": 4,
        "departure delay": 4,
        "crsdeptime": 4,
        "uniquecarrier": 4,
        "scheduled departure time": 4,
        "american airlines": 4,
        "delayed flights": 4,
        "non-delayed": 4,
        "hyperparameters": 4,
        "accuracy score": 1,
        "confusion matrix plot": 1,
        "colored heatmap": 1,
        "flight delays": 1
    },
    "us presidential election": {
        "tokenization": 6,
        "spacy": 6,
        "api": 6,
        "token": 5,
        "nlp object": 3,
        "punctuation": 3,
        "urls": 3,
        "stop words": 3,
        "python function": 3,
        "counts keyword argument": 3,
        "word counts": 3,
        "string representation": 2,
        "subset": 2,
        "row index": 2,
        "data1": 1,
        "log scale": 1,
        "2d scatter plot": 1,
        "line chart": 1,
        "word counting": 1
    },
    "donald trump": {
        "tokenization": 6,
        "spacy": 6,
        "api": 6,
        "token": 5,
        "nlp object": 3,
        "punctuation": 3,
        "urls": 3,
        "stop words": 3,
        "python function": 3,
        "counts keyword argument": 3,
        "word counts": 3,
        "string representation": 2,
        "subset": 2,
        "row index": 2,
        "data1": 1,
        "log scale": 1,
        "2d scatter plot": 1,
        "line chart": 1,
        "word counting": 1
    },
    "hillary clinton": {
        "tokenization": 6,
        "spacy": 6,
        "api": 6,
        "token": 5,
        "nlp object": 3,
        "punctuation": 3,
        "urls": 3,
        "stop words": 3,
        "python function": 3,
        "counts keyword argument": 3,
        "word counts": 3,
        "string representation": 2,
        "subset": 2,
        "row index": 2,
        "data1": 1,
        "log scale": 1,
        "2d scatter plot": 1,
        "line chart": 1,
        "word counting": 1
    },
    "stock price plot": {
        "distplot": 8,
        "close price": 7,
        "single day returns": 6,
        "worst": 6,
        "morgan stanley": 5,
        "bank of america": 4,
        "ly": 3,
        "visualization libraries": 3,
        "cufflinks": 3,
        "bank": 3,
        "moving averages": 2,
        "heatmap": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "bollinger band plot": 1
    },
    "log transforming": {
        "income": 6,
        "log10": 4,
        "valueerror": 3,
        "zero values": 3,
        "math domain error": 3,
        "standard deviations": 3,
        "diistribution": 3,
        "transformantion": 3,
        "age": 3,
        "subtle outliers": 2,
        "outliers": 2,
        "data values": 2,
        "mean value": 1,
        "age mood": 1,
        "correlationship coefficient": 1,
        "stroger relationships": 1,
        "skewed data distributions": 1,
        "logbase10": 1,
        "incomes": 1,
        "logarithmic transforms": 1,
        "corrs variable": 1,
        "matplotlib visualizations": 1,
        "lambda expression": 1,
        "log transform": 1,
        "geometric means": 1,
        "log10 transformation": 1,
        "pand": 1,
        "log transforming data": 1,
        "log base 10": 1
    },
    "linear regression review lab": {
        "python dictionary": 8,
        "cat": 7,
        "column names": 7,
        "figure size": 7,
        "df dataframe": 7,
        "ols regression": 6,
        "folowing questions": 5,
        "predict functionality": 3,
        "scatterplot": 2,
        "polynomial features": 1,
        "polynomialfeatures": 1
    },
    "analysis": {
        "timeseries": 7,
        "horsepower": 4,
        "correlation matrix": 4,
        "null values": 3,
        "horsepower column": 3,
        "internet": 3,
        "unique model years": 3,
        "containers": 2,
        "physical nodes": 2,
        "real user monitoring": 2,
        "cassandra cluster": 2,
        "rumdatareceiver": 2,
        "elasticsearch cluster": 2,
        "node names": 2,
        "visual check": 2,
        "model names": 1,
        "correlations": 1,
        "linear operations": 1,
        "graph lasso": 1,
        "numpy method": 1,
        "normalized data": 1,
        "diagonal pattern": 1,
        "affinity propagation": 1,
        "similarity scores": 1,
        "correlation coefficients": 1,
        "model": 1
    },
    "kde": {
        "pdf": 12,
        "chinups": 10,
        "middle aged men": 10,
        "tophat kernel": 8,
        "histogram plots": 6,
        "optimal kde bandwidth": 2,
        "continuous data": 2,
        "bandwidth selection": 2,
        "epanechnikov kernel": 2
    },
    "selling price": {
        "multiple regression": 6,
        "predictive performance": 4,
        "test": 4,
        "attributes": 4,
        "optimal coefficient": 4,
        "house price": 4,
        "prediction error": 4,
        "house size": 4,
        "predicted price": 4,
        "prediction errors": 4,
        "predicted prices": 4,
        "regression": 3,
        "correlation": 3,
        "residuals": 1,
        "test errors": 1
    },
    "lab 9": {
        "multiple regression": 6,
        "predictive performance": 4,
        "test": 4,
        "attributes": 4,
        "optimal coefficient": 4,
        "house price": 4,
        "prediction error": 4,
        "house size": 4,
        "predicted price": 4,
        "prediction errors": 4,
        "predicted prices": 4,
        "regression": 3,
        "correlation": 3,
        "residuals": 1,
        "test errors": 1
    },
    "multiple regression": {
        "multiple regression": 6,
        "predictive performance": 4,
        "test": 4,
        "attributes": 4,
        "optimal coefficient": 4,
        "house price": 4,
        "prediction error": 4,
        "house size": 4,
        "predicted price": 4,
        "prediction errors": 4,
        "predicted prices": 4,
        "regression": 3,
        "correlation": 3,
        "residuals": 1,
        "test errors": 1
    },
    "ummy variables": {
        "multiple regression": 6,
        "predictive performance": 4,
        "test": 4,
        "attributes": 4,
        "optimal coefficient": 4,
        "house price": 4,
        "prediction error": 4,
        "house size": 4,
        "predicted price": 4,
        "prediction errors": 4,
        "predicted prices": 4,
        "regression": 3,
        "correlation": 3,
        "residuals": 1,
        "test errors": 1
    },
    "southern california": {
        "multiple regression": 6,
        "predictive performance": 4,
        "test": 4,
        "attributes": 4,
        "optimal coefficient": 4,
        "house price": 4,
        "prediction error": 4,
        "house size": 4,
        "predicted price": 4,
        "prediction errors": 4,
        "predicted prices": 4,
        "regression": 3,
        "correlation": 3,
        "residuals": 1,
        "test errors": 1
    },
    "false negatives": {
        "prediction accuracy": 3,
        "boosted trees model": 3,
        "decision trees": 3,
        "decision tree model": 3,
        "probabilities": 3,
        "prediction probability": 3,
        "quiz": 2,
        "tree models": 2,
        "classification error": 2,
        "training errors": 2,
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1,
        "check": 1,
        "gradient boosted trees": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1
    },
    "businesses data frame": {
        "postal code": 8,
        "bus data frame": 4,
        "zip code": 4,
        "business table": 4,
        "variable postal code": 4,
        "extended zip codes": 4,
        "extended postal codes": 4,
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "zip codes": 3,
        "inspection": 2,
        "inspection dataframe": 2
    },
    "headless browser": {
        "html": 6,
        "restaurant names": 4,
        "soup object": 4,
        "html objct": 4,
        "bs4": 4,
        "google chrome": 4,
        "inspect": 4,
        "restaurant number of bookings": 2,
        "web scraper": 2,
        "restaurant prices": 2,
        "html page": 2,
        "commas": 2,
        "tag objects": 2,
        "python string": 2,
        "beautiful soup": 2,
        "tag object": 2,
        "restaurant locations": 2,
        "barmini": 2,
        "search results": 2
    },
    "cogs students": {
        "average heights": 4,
        "alpha value": 4,
        "statistical test": 4,
        "significance": 4,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "majors": 4,
        "average height values": 3,
        "pivot table": 3,
        "confounding variable": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3
    },
    "python standard library": {
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2
    },
    "enron data set objectives": {
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2
    },
    "odegree less": {
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2
    },
    "connectint": {
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2
    },
    "stacking": {
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2
    },
    "repo": {
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2
    },
    "unstacking": {
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2
    },
    "working directory": {
        "enron data set": 6,
        "series object": 6,
        "enron dataframe": 6,
        "reshaping series": 6,
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2
    },
    "linear boundary": {
        "logistic function": 3,
        "heaviside function": 2,
        "conditional probability": 2,
        "gradient ascent": 2,
        "fudge factor": 2,
        "signature": 2,
        "mathematical function": 1,
        "linear discriminant function": 1,
        "linear discriminant": 1,
        "aviside function": 1,
        "arithmetic operators": 1,
        "elementwise operations": 1,
        "test code": 1,
        "synthetic data": 1,
        "lobsters example": 1,
        "contour plot": 1,
        "sigmoid elementwise": 1,
        "numpy matrix": 1,
        "gaussian distributions": 1,
        "maximum likelihood principle": 1,
        "objective function": 1,
        "arithm": 1,
        "joint probability": 1,
        "bernoulli trial": 1,
        "notational conventions": 1,
        "scalar argument": 1,
        "elementwise logarithm": 1,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "mle": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1
    },
    "synthetic data example": {
        "logistic function": 3,
        "heaviside function": 2,
        "conditional probability": 2,
        "gradient ascent": 2,
        "fudge factor": 2,
        "signature": 2,
        "mathematical function": 1,
        "linear discriminant function": 1,
        "linear discriminant": 1,
        "aviside function": 1,
        "arithmetic operators": 1,
        "elementwise operations": 1,
        "test code": 1,
        "synthetic data": 1,
        "lobsters example": 1,
        "contour plot": 1,
        "sigmoid elementwise": 1,
        "numpy matrix": 1,
        "gaussian distributions": 1,
        "maximum likelihood principle": 1,
        "objective function": 1,
        "arithm": 1,
        "joint probability": 1,
        "bernoulli trial": 1,
        "notational conventions": 1,
        "scalar argument": 1,
        "elementwise logarithm": 1,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "mle": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1
    },
    "linear discriminants": {
        "logistic function": 3,
        "heaviside function": 2,
        "conditional probability": 2,
        "gradient ascent": 2,
        "fudge factor": 2,
        "signature": 2,
        "mathematical function": 1,
        "linear discriminant function": 1,
        "linear discriminant": 1,
        "aviside function": 1,
        "arithmetic operators": 1,
        "elementwise operations": 1,
        "test code": 1,
        "synthetic data": 1,
        "lobsters example": 1,
        "contour plot": 1,
        "sigmoid elementwise": 1,
        "numpy matrix": 1,
        "gaussian distributions": 1,
        "maximum likelihood principle": 1,
        "objective function": 1,
        "arithm": 1,
        "joint probability": 1,
        "bernoulli trial": 1,
        "notational conventions": 1,
        "scalar argument": 1,
        "elementwise logarithm": 1,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "mle": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1
    },
    "testing": {
        "embarkation ports": 4,
        "myfiles": 2,
        "output redirection": 2,
        "ls": 2,
        "txt": 2,
        "directory mydirectory": 2,
        "missing ages": 2,
        "column mean": 2,
        "missing embarkation ports": 2,
        "embarkation port": 2,
        "ticket number": 2,
        "bar plot": 2,
        "passenger class": 2,
        "exploratory data analysis": 1,
        "deceased passengers": 1,
        "rmdir": 1,
        "class repository": 1,
        "project gutenberg": 1,
        "grep": 1,
        "filters": 1,
        "matching line numbers": 1,
        "word count tool": 1,
        "matching lines": 1,
        "unique tokens": 1,
        "siddhartha": 1,
        "women": 1,
        "wealth": 1,
        "age distributions": 1,
        "hypothesis testing": 1,
        "statistical method": 1,
        "internet": 1,
        "statistical hypothesis": 1,
        "null hypothesis": 1,
        "hypothesis test": 1,
        "age": 1,
        "alternative hypothesis": 1,
        "sex": 1,
        "embarked columns": 1
    },
    "code cell": {
        "airtime": 5,
        "arrdelay": 5,
        "multivariate regresion model": 3,
        "predictor variable": 3,
        "regression model": 3,
        "random number generator": 3,
        "test sets": 2,
        "multiple independent variables": 2,
        "dependent variable": 2,
        "patsy formula": 2,
        "multivariate regression model": 2,
        "string type": 2,
        "list comprehensions": 2,
        "str()": 2,
        "iterations": 2,
        "conditionals": 2,
        "cluster labels": 1,
        "kmeans": 1,
        "unit tests": 1,
        "distance": 1,
        "stats": 1,
        "actualelapsedtime": 1,
        "optional parameter bandwidth": 1,
        "kernel density estimation": 1,
        "x axis label": 1,
        "code cell": 1,
        "kernal density estimation": 1
    },
    "expectation": {
        "latent space": 10,
        "mixing coefficients": 10,
        "binarized image": 7,
        "handwriting styles": 5,
        "multivariate bernoulli distribution": 5,
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 1
    },
    "maximization": {
        "latent space": 10,
        "mixing coefficients": 10,
        "binarized image": 7,
        "handwriting styles": 5,
        "multivariate bernoulli distribution": 5,
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 1
    },
    "lab exercises": {
        "latent space": 10,
        "mixing coefficients": 10,
        "binarized image": 7,
        "handwriting styles": 5,
        "multivariate bernoulli distribution": 5,
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 1
    },
    "variational autoencoder": {
        "latent space": 10,
        "mixing coefficients": 10,
        "binarized image": 7,
        "handwriting styles": 5,
        "multivariate bernoulli distribution": 5,
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 1
    },
    "tinder": {
        "tinder": 23,
        "tinder users": 11,
        "safe harbor method": 11,
        "population": 5,
        "zip code": 3
    },
    "employee information": {
        "tinder": 23,
        "tinder users": 11,
        "safe harbor method": 11,
        "population": 5,
        "zip code": 3
    },
    "ip address": {
        "tinder": 23,
        "tinder users": 11,
        "safe harbor method": 11,
        "population": 5,
        "zip code": 3
    },
    "last name": {
        "tinder": 23,
        "tinder users": 11,
        "safe harbor method": 11,
        "population": 5,
        "zip code": 3
    },
    "crime events": {
        "regular bar plot": 3,
        "countplot": 3,
        "seaborn plot": 3,
        "noise violation": 3,
        "cvlegend": 2,
        "calls dataframe": 2,
        "vertical bar plot": 2,
        "noise violation calls": 2,
        "answer3b": 2,
        "seaborn documentation": 1,
        "orn": 1,
        "series": 1,
        "pandas documentation": 1,
        "high level plotting library": 1,
        "matplotlib commands": 1,
        "plotting pandas": 1,
        "data visualization": 1,
        "se": 1,
        "barh plot type": 1,
        "series class": 1,
        "value counts": 1,
        "seaborn library": 1,
        "countplot method": 1,
        "pandas plot": 1,
        "order parameter": 1,
        "cvdow field": 1,
        "rotation argument": 1,
        "coolindex": 1,
        "total noise violations": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "fraud": 1,
        "calls reporting": 1,
        "reasoning": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "visual perception": {
        "color channels": 7,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "human eye": 3,
        "gaussian blurring function": 3,
        "image": 3,
        "python pic": 2,
        "partial derivative": 2,
        "berkeley bowl": 2,
        "cantaloupes": 2,
        "vector dot products": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "fruit prices": 1,
        "final costs": 1,
        "fruit baskets": 1
    },
    "image exercises": {
        "color channels": 7,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "human eye": 3,
        "gaussian blurring function": 3,
        "image": 3,
        "python pic": 2,
        "partial derivative": 2,
        "berkeley bowl": 2,
        "cantaloupes": 2,
        "vector dot products": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "fruit prices": 1,
        "final costs": 1,
        "fruit baskets": 1
    },
    "symbolic math": {
        "coding practice": 6,
        "symbolic math": 4,
        "integer division": 3,
        "integer addition": 2,
        "integer subtraction": 2,
        "subtraction": 2,
        "integer multiplication": 2,
        "multiplication": 2,
        "mathematical operations": 2,
        "array computation package": 1,
        "fourier transforms": 1,
        "linear algebra": 1,
        "random numbers": 1,
        "solvers": 1,
        "interpolation routines": 1,
        "spare matrices": 1,
        "optimization": 1,
        "scipy": 1,
        "signal processing methods": 1,
        "basic differential equations": 1,
        "numeric integration": 1,
        "matlab": 1,
        "python program": 1,
        "united states": 1,
        "canada": 1,
        "fractional component": 1,
        "code cell": 1,
        "integer addition operations": 1,
        "integer subtraction operations": 1,
        "integer multiplication operations": 1,
        "integer division operations": 1,
        "integer operations": 1,
        "fractions": 1,
        "decimals": 1,
        "non-integer numbers": 1,
        "division": 1,
        "floating point numbers": 1
    },
    "iris versicolor": {
        "pairplot": 10,
        "flower species": 10,
        "kde plot": 10,
        "setosa species": 10,
        "gridsearch": 4,
        "gridsearchcv": 3,
        "confusion matrices": 2,
        "grid model": 2,
        "tail method": 1,
        "head method": 1
    },
    "multivariate data set": {
        "pairplot": 10,
        "flower species": 10,
        "kde plot": 10,
        "setosa species": 10,
        "gridsearch": 4,
        "gridsearchcv": 3,
        "confusion matrices": 2,
        "grid model": 2,
        "tail method": 1,
        "head method": 1
    },
    "iris flower data set": {
        "pairplot": 10,
        "flower species": 10,
        "kde plot": 10,
        "setosa species": 10,
        "gridsearch": 4,
        "gridsearchcv": 3,
        "confusion matrices": 2,
        "grid model": 2,
        "tail method": 1,
        "head method": 1
    },
    "iris virginica": {
        "pairplot": 10,
        "flower species": 10,
        "kde plot": 10,
        "setosa species": 10,
        "gridsearch": 4,
        "gridsearchcv": 3,
        "confusion matrices": 2,
        "grid model": 2,
        "tail method": 1,
        "head method": 1
    },
    "information retrieval": {
        "ocr": 6,
        "text frequency analysis": 3,
        "text processing": 3,
        "optical character recognition": 3,
        "image processing": 3,
        "descriptive analytics": 3,
        "scanned restaurant menu": 3,
        "data preparation": 3,
        "command prompt": 3,
        "tesseract library": 3,
        "reading errors": 3,
        "tesseract": 3,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1,
        "processed image": 1
    },
    "images": {
        "ocr": 6,
        "text frequency analysis": 3,
        "text processing": 3,
        "optical character recognition": 3,
        "image processing": 3,
        "descriptive analytics": 3,
        "scanned restaurant menu": 3,
        "data preparation": 3,
        "command prompt": 3,
        "tesseract library": 3,
        "reading errors": 3,
        "tesseract": 3,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1,
        "processed image": 1
    },
    "notebook setup": {
        "unit tests": 10,
        "spark exercise": 9,
        "coll": 3,
        "non_duplicates": 3,
        "rdd": 3,
        "cartesian product": 3,
        "line segment": 3,
        "augmented vector": 2,
        "outer product": 2,
        "collinear points": 1,
        "r": 1,
        "spark rdd api": 1,
        "helper functions": 1,
        "assert statement unit tests": 1,
        "lower left matrix": 1,
        "outer product average": 1,
        "average": 1,
        "n x n matrix": 1,
        "1 x n matrix": 1,
        "x n matrix": 1,
        "x": 1,
        "nansum": 1,
        "n x": 1,
        "matrices": 1
    },
    "map function": {
        "list comprehensions": 18,
        "map()": 4,
        "test case": 4,
        "inner loop": 4,
        "outer loop": 4,
        "assertion test": 3,
        "map function": 3,
        "double for loop": 2,
        "nested list": 2,
        "functional programming": 2,
        "long words": 2,
        "return value": 2,
        "hashtags": 2,
        "filter()": 1
    },
    "guided practice": {
        "dimensionality reduction": 3,
        "imports": 3,
        "grouped histograms": 2,
        "ots": 2,
        "grouped box plots": 2,
        "statistics plotting library": 2,
        "title functions": 2,
        "motivational plots": 2,
        "flowchart": 2,
        "boston data dictionary": 2,
        "line plot": 2,
        "bar plot": 2,
        "style sheet": 2,
        "solid green line": 2,
        "indus": 2,
        "housing data": 2,
        "blue dashed line": 2,
        "attributes": 2,
        "class names": 2,
        "varietal names": 2,
        "standardize": 2,
        "eigenvalues": 2,
        "eigenvectors": 2,
        "covariance matrix": 1,
        "matplotlib commands": 1,
        "bar chart": 1,
        "horizontal bars": 1
    },
    "exercise notebook instructions": {
        "arial": 26,
        "urn": 3,
        "input matrix": 3,
        "time series dataset": 3,
        "data cleaning": 3,
        "boolean indexing": 2,
        "integer data type": 1,
        "int data type": 1,
        "matri": 1,
        "inplace update": 1,
        "advanced filtering": 1,
        "4 element array": 1,
        "1": 1,
        "input data frame": 1,
        "random state": 1,
        "column name": 1,
        "threshold value": 1,
        "scaling": 1
    },
    "larceny": {
        "cvlegend": 8,
        "barh plot type": 4,
        "value counts": 4,
        "crime events": 3,
        "regular bar plot": 3,
        "countplot": 3,
        "noise violation": 3,
        "calls dataframe": 2,
        "vertical bar plot": 2,
        "answer3b": 2,
        "series class": 1,
        "seaborn library": 1,
        "countplot method": 1,
        "pandas plot": 1,
        "order parameter": 1,
        "cvdow field": 1,
        "coolindex": 1,
        "seaborn plot": 1,
        "total noise violations": 1,
        "noise violation calls": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "scientific python ecosystem": {
        "dictionaries": 2,
        "array computation package": 2,
        "fourier transforms": 2,
        "linear algebra": 2,
        "random numbers": 2,
        "solvers": 2,
        "interpolation routines": 2,
        "spare matrices": 2,
        "optimization": 2,
        "scipy": 2,
        "signal processing methods": 2,
        "basic differential equations": 2,
        "numeric integration": 2,
        "matlab": 2,
        "python program": 2,
        "united states": 2,
        "canada": 2,
        "core python crash course": 1,
        "latin alphabets": 1,
        "python 3": 1,
        "unicode strings": 1,
        "programming problem": 1,
        "collection types": 1,
        "associative arrays": 1,
        "collection type": 1,
        "functions": 1,
        "default namespace": 1,
        "tab": 1,
        "question mark": 1,
        "ipython": 1,
        "ops": 1,
        "control flow": 1,
        "conditionals": 1,
        "control flow structure": 1,
        "error messages": 1
    },
    "python basic lists": {
        "breadth first search": 8,
        "bfs": 7,
        "vertex names": 4,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3
    },
    "python structures": {
        "breadth first search": 8,
        "bfs": 7,
        "vertex names": 4,
        "matrix operations": 4,
        "queue data structure": 4,
        "graph traversal algorithm": 4,
        "centrality measures": 4,
        "graph traversal": 4,
        "simplebfs": 4,
        "path length": 3,
        "distbfs()": 3,
        "edge weights": 3
    },
    "dot product": {
        "orthonormal basis": 8,
        "dot product": 7,
        "unit vectors": 4,
        "normality": 4,
        "orthogonality": 4,
        "\\ld": 4,
        "basis vectors": 4,
        "standard basis": 4,
        "hypoten": 3,
        "magnitude": 3,
        "right triangle": 3,
        "elementwise divide": 2,
        "elementwise division": 2
    },
    "hive lab": {
        "hive": 5,
        "hadoop": 2,
        "regular expressions": 2,
        "pig": 1,
        "procedural language": 1,
        "relational databases": 1,
        "hdfs": 1,
        "sql type scripts": 1,
        "sql syntax": 1,
        "mrjob": 1,
        "rdbms": 1,
        "sqoop": 1,
        "document indexing": 1,
        "predictive modeling": 1,
        "log processing": 1,
        "google analytics": 1,
        "word counts": 1,
        "file": 1,
        "vm": 1,
        "hypothesis testing": 1,
        "map reduce job": 1,
        "hive hive": 1,
        "text mining": 1,
        "hadoop cluster": 1,
        "hadoop map reduce job": 1,
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "join operations": 1,
        "http status reply code": 1,
        "log file": 1,
        "sql": 1,
        "ascii file": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "gzip module": 1
    },
    "status object": {
        "tweetdeck": 5,
        "pandas documentation": 4,
        "null hypothesis": 4,
        "json": 3,
        "string method": 3,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "statistical test": 2,
        "numpy functions": 2,
        "hypothesis test": 2,
        "table": 2,
        "datascience": 2,
        "data 8": 2,
        "twitter web client": 2,
        "trump tweets": 1
    },
    "pandas table json": {
        "tweetdeck": 5,
        "pandas documentation": 4,
        "null hypothesis": 4,
        "json": 3,
        "string method": 3,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "statistical test": 2,
        "numpy functions": 2,
        "hypothesis test": 2,
        "table": 2,
        "datascience": 2,
        "data 8": 2,
        "twitter web client": 2,
        "trump tweets": 1
    },
    "tweetsourcing": {
        "tweetdeck": 5,
        "pandas documentation": 4,
        "null hypothesis": 4,
        "json": 3,
        "string method": 3,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "statistical test": 2,
        "numpy functions": 2,
        "hypothesis test": 2,
        "table": 2,
        "datascience": 2,
        "data 8": 2,
        "twitter web client": 2,
        "trump tweets": 1
    },
    "eigendecomposition": {
        "correlation matrix": 6,
        "covariance matrix": 5,
        "eigendecomposition": 5,
        "eigenvectors": 4,
        "pca": 4,
        "eigenvalues": 3,
        "singular vector decomposition": 2,
        "eigenpairs": 2,
        "projection matrix": 2,
        "components": 1,
        "mean vector": 1,
        "numpy cov function": 1,
        "ance matrix": 1,
        "normalized covariance matrix": 1,
        "finance": 1,
        "standardized data": 1,
        "eigenvalue pairs": 1,
        "standardizing": 1,
        "computational efficiency": 1,
        "pca implementations": 1,
        "axes": 1,
        "lowest eigenvalues": 1,
        "explained variance": 1,
        "principal components": 1,
        "information": 1,
        "first principal component": 1,
        "second principal component": 1,
        "concatenated top k eigenvectors": 1
    },
    "k": {
        "featurecounts": 6,
        "pm": 4,
        "fpkm": 4,
        "tpm": 4,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "gene id version number": 1,
        "gencode": 1
    },
    "tpm": {
        "featurecounts": 6,
        "pm": 4,
        "fpkm": 4,
        "tpm": 4,
        "gene ids": 4,
        "split()": 3,
        "ids": 3,
        "coding region": 3,
        "function map": 3,
        "gene names": 3,
        "duplicate gene ids": 3,
        "align": 3,
        "kallisto log": 3,
        "spearman correlation": 3,
        "gene id version number": 1,
        "gencode": 1
    },
    "value iteration": {
        "value iteration": 6,
        "linear system": 4,
        "linear equation": 4,
        "state value function": 4,
        "exact policy iteration": 4,
        "policy iteration": 4,
        "value function": 3,
        "value iteration update": 3,
        "bellman backup operator value operator": 3,
        "optimal value function": 3,
        "randomly generated mdp": 3,
        "m": 3,
        "3d arrays": 3,
        "randomly generated mdps": 3,
        "\\gamma": 1
    },
    "vitamins": {
        "jupyter": 6,
        "submission system": 4,
        "ellipsis": 4,
        "math operations": 3,
        "docs": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "numerical differentiation": 3,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "colors": 1,
        "bar chart": 1
    },
    "labs assignments": {
        "jupyter": 6,
        "submission system": 4,
        "ellipsis": 4,
        "math operations": 3,
        "docs": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "numerical differentiation": 3,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "colors": 1,
        "bar chart": 1
    },
    "python course policies": {
        "jupyter": 6,
        "submission system": 4,
        "ellipsis": 4,
        "math operations": 3,
        "docs": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "numerical differentiation": 3,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "colors": 1,
        "bar chart": 1
    },
    "multiple choice quiz": {
        "jupyter": 6,
        "submission system": 4,
        "ellipsis": 4,
        "math operations": 3,
        "docs": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "numerical differentiation": 3,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "colors": 1,
        "bar chart": 1
    },
    "homework assignments": {
        "jupyter": 6,
        "submission system": 4,
        "ellipsis": 4,
        "math operations": 3,
        "docs": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "numerical differentiation": 3,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "colors": 1,
        "bar chart": 1
    },
    "tentative grading": {
        "jupyter": 6,
        "submission system": 4,
        "ellipsis": 4,
        "math operations": 3,
        "docs": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "numerical differentiation": 3,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "colors": 1,
        "bar chart": 1
    },
    "short answer questions": {
        "jupyter": 6,
        "submission system": 4,
        "ellipsis": 4,
        "math operations": 3,
        "docs": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "numerical differentiation": 3,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "colors": 1,
        "bar chart": 1
    },
    "cuisines": {
        "restaurants": 4,
        "foodwheel": 4,
        "restautants": 4,
        "pie chart": 4,
        "axis": 4,
        "cuisine": 4,
        "plt": 4,
        "function split": 4,
        "bar chart": 4,
        "group orders": 3,
        "average order amount": 3,
        "error bars": 2,
        "average order": 2,
        "error capsize": 2,
        "standard deviations": 2,
        "titel": 1
    },
    "mathematical expressions": {
        "jupyter": 8,
        "ellipsis": 5,
        "code icon": 5,
        "docs": 4,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "cantaloupes": 2,
        "vector dot products": 1,
        "berkeley bowl": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1
    },
    "rocket icon": {
        "jupyter": 8,
        "ellipsis": 5,
        "code icon": 5,
        "docs": 4,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "cantaloupes": 2,
        "vector dot products": 1,
        "berkeley bowl": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1
    },
    "lambdas": {
        "jupyter": 8,
        "ellipsis": 5,
        "code icon": 5,
        "docs": 4,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "cantaloupes": 2,
        "vector dot products": 1,
        "berkeley bowl": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1
    },
    "anonymous functions": {
        "jupyter": 8,
        "ellipsis": 5,
        "code icon": 5,
        "docs": 4,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "cantaloupes": 2,
        "vector dot products": 1,
        "berkeley bowl": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1
    },
    "feedforward neural network": {
        "standardize function": 4,
        "test data": 2,
        "feature vectors": 2,
        "training examples": 2,
        "wikipedia feature scaling article": 2,
        "distribution mean": 2,
        "tensorflow": 2,
        "weights": 1,
        "tf variables": 1,
        "biases": 1,
        "mini batch": 1,
        "tf graph": 1,
        "tf placeholders": 1,
        "helper function": 1,
        "bias dictionary": 1,
        "learnable parameters": 1,
        "bias matrices": 1,
        "network model": 1,
        "weights dictionary": 1,
        "training time": 1,
        "feedforward network model": 1,
        "hidden layers": 1,
        "output layer": 1,
        "sigmoid activation function": 1,
        "neural network": 1,
        "keras layer": 1,
        "neural network model": 1,
        "layer": 1,
        "max pool": 1,
        "keras sequential model": 1,
        "flatten layer": 1,
        "evaluation() function": 1,
        "activation model": 1,
        "metrics history": 1,
        "sequential model": 1,
        "loss functions": 1,
        "metrics": 1,
        "learning process": 1,
        "keras": 1,
        "fit() function": 1,
        "stochastic gradient descent": 1,
        "training loss": 1
    },
    "discriminant analysis": {
        "pairplot": 10,
        "flower species": 10,
        "kde plot": 10,
        "setosa species": 10,
        "gridsearch": 4,
        "gridsearchcv": 3,
        "confusion matrices": 2,
        "grid model": 2
    },
    "support vector machines project": {
        "pairplot": 10,
        "flower species": 10,
        "kde plot": 10,
        "setosa species": 10,
        "gridsearch": 4,
        "gridsearchcv": 3,
        "confusion matrices": 2,
        "grid model": 2
    },
    "support vector machine project": {
        "pairplot": 10,
        "flower species": 10,
        "kde plot": 10,
        "setosa species": 10,
        "gridsearch": 4,
        "gridsearchcv": 3,
        "confusion matrices": 2,
        "grid model": 2
    },
    "osa": {
        "pairplot": 10,
        "flower species": 10,
        "kde plot": 10,
        "setosa species": 10,
        "gridsearch": 4,
        "gridsearchcv": 3,
        "confusion matrices": 2,
        "grid model": 2
    },
    "iris flowers": {
        "pairplot": 10,
        "flower species": 10,
        "kde plot": 10,
        "setosa species": 10,
        "gridsearch": 4,
        "gridsearchcv": 3,
        "confusion matrices": 2,
        "grid model": 2
    },
    "data viz skills": {
        "pairplot": 10,
        "flower species": 10,
        "kde plot": 10,
        "setosa species": 10,
        "gridsearch": 4,
        "gridsearchcv": 3,
        "confusion matrices": 2,
        "grid model": 2
    },
    "matriculation number": {
        "vectorised functions": 6,
        "numpy module": 4,
        "loops": 4,
        "execution time": 4,
        "regression": 2,
        "plot generation": 2,
        "interpolation": 2,
        "numerical methods": 2,
        "assignment notebook": 2,
        "ipython notebooks": 2,
        "linear interpolation": 2,
        "linear equations": 2,
        "assignment task": 2,
        "higher efficiency": 2,
        "linear interpolation function": 2,
        "implementation": 1,
        "magic function": 1,
        "%%timeit function": 1,
        "python functions": 1,
        "ipython": 1,
        "execution speed": 1,
        "linear regression implementation": 1,
        "lagrange interpolation": 1,
        "lagrange interpolating polynomials": 1,
        "computational implementation": 1,
        "weights": 1
    },
    "pandas methods": {
        "line plot": 4,
        "bar plot": 4,
        "style sheet": 4,
        "solid green line": 4,
        "indus": 4,
        "housing data": 4,
        "blue dashed line": 4,
        "grouped histograms": 2,
        "ots": 2,
        "grouped box plots": 2,
        "statistics plotting library": 2,
        "title functions": 2,
        "motivational plots": 2,
        "flowchart": 2,
        "boston data dictionary": 2,
        "matplotlib commands": 2,
        "bar chart": 2,
        "horizontal bars": 2
    },
    "line plots": {
        "line plot": 4,
        "bar plot": 4,
        "style sheet": 4,
        "solid green line": 4,
        "indus": 4,
        "housing data": 4,
        "blue dashed line": 4,
        "grouped histograms": 2,
        "ots": 2,
        "grouped box plots": 2,
        "statistics plotting library": 2,
        "title functions": 2,
        "motivational plots": 2,
        "flowchart": 2,
        "boston data dictionary": 2,
        "matplotlib commands": 2,
        "bar chart": 2,
        "horizontal bars": 2
    },
    "predicted probability": {
        "helper function": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "gpa": 4,
        "prestige": 4,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2,
        "titanic": 1,
        "sex": 1,
        "age": 1,
        "response variable": 1
    },
    "maximum value": {
        "helper function": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "gpa": 4,
        "prestige": 4,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2,
        "titanic": 1,
        "sex": 1,
        "age": 1,
        "response variable": 1
    },
    "unit test variables": {
        "noise distribution": 5,
        "python variable": 5,
        "python variables": 5,
        "data distribution": 4,
        "kernel density estimation plot": 3,
        "gan hint": 2,
        "keras functional api": 2,
        "input size": 2,
        "variables": 2,
        "full training loop solution task": 2,
        "discriminator": 2,
        "context manager": 2,
        "semantics": 2,
        "single adversarial training example": 2,
        "synthetic images": 2,
        "generative adversarial training": 2,
        "interface": 1,
        "keras hints": 1,
        "keras": 1,
        "concatenation": 1,
        "training data requirements": 1,
        "fake images": 1
    },
    "python generator": {
        "noise distribution": 5,
        "python variable": 5,
        "python variables": 5,
        "data distribution": 4,
        "kernel density estimation plot": 3,
        "gan hint": 2,
        "keras functional api": 2,
        "input size": 2,
        "variables": 2,
        "full training loop solution task": 2,
        "discriminator": 2,
        "context manager": 2,
        "semantics": 2,
        "single adversarial training example": 2,
        "synthetic images": 2,
        "generative adversarial training": 2,
        "interface": 1,
        "keras hints": 1,
        "keras": 1,
        "concatenation": 1,
        "training data requirements": 1,
        "fake images": 1
    },
    "numpy scientific python code": {
        "hamlettext": 11,
        "hamletwords": 6,
        "ate": 4,
        "numpy module functions": 4,
        "standard deviation 1": 4,
        "distribution": 4,
        "broadcasting": 4,
        "txt": 4,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1,
        "dictionary comprehension": 1
    },
    "pandas documentation": {
        "cvlegend": 2,
        "calls dataframe": 2,
        "vertical bar plot": 2,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "tweetdeck": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "null hypothesis": 2,
        "barh plot type": 1,
        "series class": 1,
        "value counts": 1,
        "countplot": 1,
        "seaborn library": 1,
        "countplot method": 1,
        "pandas plot": 1,
        "order parameter": 1,
        "cvdow field": 1,
        "coolindex": 1,
        "noise violation": 1,
        "seaborn plot": 1,
        "total noise violations": 1,
        "noise violation calls": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "matplotlib methods": {
        "registered riders": 7,
        "hist": 5,
        "casual riders": 4,
        "registered": 3,
        "error bars": 3,
        "seaborn api": 3,
        "bootstrapping": 3,
        "total rider counts": 3,
        "distplot function": 3,
        "rider counts": 2,
        "matplotlib axes object": 2,
        "boxplot function": 2,
        "bikeshare membership": 2,
        "lmplot function": 2,
        "scatterplot": 2,
        "hue parameter": 1,
        "lmplot": 1,
        "weekday trips": 1,
        "weekend trips": 1
    },
    "seaborn functions": {
        "registered riders": 7,
        "hist": 5,
        "casual riders": 4,
        "registered": 3,
        "error bars": 3,
        "seaborn api": 3,
        "bootstrapping": 3,
        "total rider counts": 3,
        "distplot function": 3,
        "rider counts": 2,
        "matplotlib axes object": 2,
        "boxplot function": 2,
        "bikeshare membership": 2,
        "lmplot function": 2,
        "scatterplot": 2,
        "hue parameter": 1,
        "lmplot": 1,
        "weekday trips": 1,
        "weekend trips": 1
    },
    "complex statistical plots": {
        "registered riders": 7,
        "hist": 5,
        "casual riders": 4,
        "registered": 3,
        "error bars": 3,
        "seaborn api": 3,
        "bootstrapping": 3,
        "total rider counts": 3,
        "distplot function": 3,
        "rider counts": 2,
        "matplotlib axes object": 2,
        "boxplot function": 2,
        "bikeshare membership": 2,
        "lmplot function": 2,
        "scatterplot": 2,
        "hue parameter": 1,
        "lmplot": 1,
        "weekday trips": 1,
        "weekend trips": 1
    },
    "statistical plotting": {
        "registered riders": 7,
        "hist": 5,
        "casual riders": 4,
        "registered": 3,
        "error bars": 3,
        "seaborn api": 3,
        "bootstrapping": 3,
        "total rider counts": 3,
        "distplot function": 3,
        "rider counts": 2,
        "matplotlib axes object": 2,
        "boxplot function": 2,
        "bikeshare membership": 2,
        "lmplot function": 2,
        "scatterplot": 2,
        "hue parameter": 1,
        "lmplot": 1,
        "weekday trips": 1,
        "weekend trips": 1
    },
    "python variables": {
        "noise distribution": 6,
        "python variable": 4,
        "discriminator": 4,
        "context manager": 4,
        "semantics": 4,
        "single adversarial training example": 4,
        "synthetic images": 4,
        "data distribution": 4,
        "generative adversarial training": 4,
        "gan hint": 2,
        "keras functional api": 2,
        "input size": 2,
        "variables": 2,
        "python variables": 2,
        "full training loop solution task": 2
    },
    "bayesian logistic regression": {
        "pystan": 8,
        "pymc": 4,
        "univariate logistic regression": 4,
        "sigmoid function": 4,
        "mcmc procedure": 4,
        "roc scores": 4,
        "non-bayesian logistic": 4,
        "statistical exposition": 2,
        "distribution": 2,
        "distributions": 2,
        "pymc model": 2,
        "bayesian logistic regression": 2,
        "bayesian logistic regression form": 2,
        "bernoulli method": 2,
        "bayesian model": 2,
        "computation segment": 2
    },
    "multi layer perceptron": {
        "l2 regularization": 4,
        "momentum term": 4,
        "activation function": 4,
        "biases": 4,
        "weights": 4,
        "python classes": 2,
        "jdc": 2,
        "python class": 2,
        "generic neural network architecture": 2,
        "xor gate": 2,
        "neural network": 2,
        "partiular architecture": 2,
        "weight update": 2,
        "l2 regularization term": 2,
        "regularizatino constant": 2,
        "batch size": 2,
        "relu": 2,
        "rectified linear unit": 2,
        "forward propogration": 1,
        "backward pass": 1,
        "learning rate": 1,
        "regularization constant": 1
    },
    "height distributions": {
        "alpha value": 4,
        "statistical test": 4,
        "significance": 4,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "majors": 4,
        "average height values": 3,
        "pivot table": 3,
        "confounding variable": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3
    },
    "weather underground api": {
        "visibilities": 4,
        "iata airport code": 3,
        "carrier code": 3,
        "departure delay": 3,
        "crsdeptime": 3,
        "depdelay": 3,
        "uniquecarrier": 3,
        "scheduled departure time": 3,
        "ord": 3,
        "american airlines": 3,
        "departure": 3,
        "code cell": 3,
        "test sets": 3,
        "vectorized way": 2,
        "big data": 2,
        "numerical operations": 2,
        "iterrows()": 2,
        "returned dataframes": 1
    },
    "parse time": {
        "visibilities": 4,
        "iata airport code": 3,
        "carrier code": 3,
        "departure delay": 3,
        "crsdeptime": 3,
        "depdelay": 3,
        "uniquecarrier": 3,
        "scheduled departure time": 3,
        "ord": 3,
        "american airlines": 3,
        "departure": 3,
        "code cell": 3,
        "test sets": 3,
        "vectorized way": 2,
        "big data": 2,
        "numerical operations": 2,
        "iterrows()": 2,
        "returned dataframes": 1
    },
    "history": {
        "visibilities": 4,
        "iata airport code": 3,
        "carrier code": 3,
        "departure delay": 3,
        "crsdeptime": 3,
        "depdelay": 3,
        "uniquecarrier": 3,
        "scheduled departure time": 3,
        "ord": 3,
        "american airlines": 3,
        "departure": 3,
        "code cell": 3,
        "test sets": 3,
        "vectorized way": 2,
        "big data": 2,
        "numerical operations": 2,
        "iterrows()": 2,
        "returned dataframes": 1
    },
    "frame": {
        "vocab": 4,
        "word vector": 4,
        "code cell": 3,
        "test sets": 3,
        "vectorized way": 2,
        "big data": 2,
        "numerical operations": 2,
        "iterrows()": 2,
        "count value": 2,
        "word2idx": 2,
        "dictionary comprehension": 2,
        "review data set": 2,
        "learning rate loss": 2,
        "training method": 2,
        "network error": 2,
        "activation function": 2,
        "hidden layers": 2,
        "batch size": 2,
        "10000 element long vectors": 2,
        "stochastic gradient descent": 2,
        "connected layer": 2,
        "returned dataframes": 1
    },
    "headshot photographs": {
        "eigenvectors": 6,
        "pca": 6,
        "second principal components": 3,
        "point cloud": 3,
        "succeding component": 3,
        "residual noise": 3,
        "dimensionality reduction": 3,
        "principal component analysis": 3,
        "principal components": 3,
        "2d vectors": 3,
        "linear coefficients": 3,
        "pca space": 3,
        "iris data": 3,
        "plotting function": 2,
        "data matrix x": 2
    },
    "information loss": {
        "eigenvectors": 6,
        "pca": 6,
        "second principal components": 3,
        "point cloud": 3,
        "succeding component": 3,
        "residual noise": 3,
        "dimensionality reduction": 3,
        "principal component analysis": 3,
        "principal components": 3,
        "2d vectors": 3,
        "linear coefficients": 3,
        "pca space": 3,
        "iris data": 3,
        "plotting function": 2,
        "data matrix x": 2
    },
    "face recognition": {
        "eigenvectors": 6,
        "pca": 6,
        "second principal components": 3,
        "point cloud": 3,
        "succeding component": 3,
        "residual noise": 3,
        "dimensionality reduction": 3,
        "principal component analysis": 3,
        "principal components": 3,
        "2d vectors": 3,
        "linear coefficients": 3,
        "pca space": 3,
        "iris data": 3,
        "plotting function": 2,
        "data matrix x": 2
    },
    "facial recognition": {
        "eigenvectors": 6,
        "pca": 6,
        "second principal components": 3,
        "point cloud": 3,
        "succeding component": 3,
        "residual noise": 3,
        "dimensionality reduction": 3,
        "principal component analysis": 3,
        "principal components": 3,
        "2d vectors": 3,
        "linear coefficients": 3,
        "pca space": 3,
        "iris data": 3,
        "plotting function": 2,
        "data matrix x": 2
    },
    "flower type classification": {
        "eigenvectors": 6,
        "pca": 6,
        "second principal components": 3,
        "point cloud": 3,
        "succeding component": 3,
        "residual noise": 3,
        "dimensionality reduction": 3,
        "principal component analysis": 3,
        "principal components": 3,
        "2d vectors": 3,
        "linear coefficients": 3,
        "pca space": 3,
        "iris data": 3,
        "plotting function": 2,
        "data matrix x": 2
    },
    "data handling": {
        "ik": 3,
        "regression": 3,
        "sorting": 3,
        "series": 3,
        "learn": 3,
        "indexing": 3,
        "grouping": 3,
        "prediction": 3,
        "spreadsheet": 3,
        "variable name majors": 3,
        "fivethirtyeight": 3,
        "average unemployment rate": 3,
        "matplotlib plots": 3,
        "majors": 3,
        "low wage jobs": 3,
        "employment rates": 2,
        "women": 1,
        "part time rate": 1
    },
    "b": {
        "ik": 3,
        "regression": 3,
        "sorting": 3,
        "series": 3,
        "learn": 3,
        "indexing": 3,
        "grouping": 3,
        "prediction": 3,
        "spreadsheet": 3,
        "variable name majors": 3,
        "fivethirtyeight": 3,
        "average unemployment rate": 3,
        "matplotlib plots": 3,
        "majors": 3,
        "low wage jobs": 3,
        "employment rates": 2,
        "women": 1,
        "part time rate": 1
    },
    "data vectors": {
        "covariance matrix": 4,
        "kernel matrix": 4,
        "predictive distribution": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "generative process": 3,
        "conditional models": 3,
        "matrices": 2,
        "augmented vector": 2,
        "outer product": 2,
        "linear kernel": 1,
        "2d dataset": 1,
        "rdd": 1,
        "arithmetic operations": 1,
        "covariance": 1,
        "lower left matrix": 1,
        "outer product average": 1,
        "average": 1,
        "n x n matrix": 1,
        "1 x n matrix": 1,
        "x n matrix": 1,
        "x": 1,
        "nansum": 1,
        "n x": 1
    },
    "ols() function": {
        "ols()": 6,
        "fit()": 5,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression object": 2,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "ridgecv": 1,
        "hours distribution": 1
    },
    "nonlinear relationships": {
        "ols()": 6,
        "fit()": 5,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression object": 2,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "ridgecv": 1,
        "hours distribution": 1
    },
    "r formula": {
        "ols()": 6,
        "fit()": 5,
        "boxplot": 3,
        "statsmodels model": 3,
        "summary()": 3,
        "()": 3,
        "season": 3,
        "linearregression": 3,
        "response vector": 3,
        "iloc": 3,
        "features data matrix": 3,
        "score()": 2,
        "linearregression object": 2,
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "ridgecv": 1,
        "hours distribution": 1
    },
    "attribute shape": {
        "iloc": 9,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "loc property indexes": 2,
        "dfcars": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "set length": {
        "iloc": 9,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "loc property indexes": 2,
        "dfcars": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "len function": {
        "iloc": 9,
        "attribute columns": 2,
        "numpy methods": 2,
        "itertuples": 2,
        "pandas methods": 2,
        "loc property indexes": 2,
        "dfcars": 2,
        "iloc indexes": 2,
        "row indices": 2,
        "column attributes": 2,
        "label name": 2,
        "integer position indices": 2,
        "toy dataframe": 2,
        "dictionary key": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "supplierid": {
        "postgresql": 4,
        "sql": 4,
        "aggregate functions": 4,
        "column": 2,
        "aliases": 2,
        "wildcards": 2,
        "where clause": 2,
        "missing letters": 2,
        "select distinct statement": 2,
        "distinct operator": 2,
        "limit operator": 2,
        "limit syntax": 2,
        "sql subqueries": 2,
        "group by statement": 2,
        "group by operator": 2,
        "having operator": 2,
        "having clause": 2,
        "else statement": 2,
        "date documentation": 2,
        "sql aliases": 1,
        "sql alias syntax": 1,
        "query arguments": 1,
        "database table": 1,
        "alias as": 1
    },
    "csvs": {
        "relative": 6,
        "sales data": 6,
        "rows": 6,
        "python indexing": 6,
        "list comprehensions": 6,
        "column names": 6,
        "loops": 6,
        "distributions": 2,
        "individual cells": 2,
        "plotting function": 2
    },
    "covariates": {
        "training error": 4,
        "radial highways": 3,
        "residential land z": 3,
        "weighted distances": 3,
        "charles river dummy variable": 3,
        "rad index": 3,
        "tract bounds river": 3,
        "boston employment centres": 3,
        "descr attribute": 3,
        "non-retail business acres": 3,
        "black": 3,
        "nox nitric oxides concentration": 3,
        "crime rate": 3,
        "outlier": 2,
        "test error": 2,
        "root mean squared error": 2,
        "average": 2
    },
    "response vector": {
        "training error": 4,
        "radial highways": 3,
        "residential land z": 3,
        "weighted distances": 3,
        "charles river dummy variable": 3,
        "rad index": 3,
        "tract bounds river": 3,
        "boston employment centres": 3,
        "descr attribute": 3,
        "non-retail business acres": 3,
        "black": 3,
        "nox nitric oxides concentration": 3,
        "crime rate": 3,
        "outlier": 2,
        "test error": 2,
        "root mean squared error": 2,
        "average": 2
    },
    "lqr": {
        "lqr": 6,
        "unstable equilibrium state vector": 4,
        "q": 3,
        "gains matrix": 2,
        "algebraic riccati equation solution": 2,
        "algebraic ricatti equation": 2,
        "qr": 2,
        "linear algebra operations": 2,
        "api": 2,
        "algebraic riccati equation": 2,
        "feedback control law": 2,
        "quadratic cost function": 2,
        "control system": 2,
        "cost function": 2,
        "r cost matrices": 2,
        "lqr solver": 2,
        "linearization": 1,
        "pend": 1,
        "small": 1,
        "angular speed": 1,
        "goal state": 1,
        "fixed goal state": 1,
        "initial values": 1,
        "nonlinear system": 1,
        "fixed end goal state": 1
    },
    "reuters 21578": {
        "lsi": 5,
        "mic": 4,
        "m": 4,
        "term frequency inverse document frequency": 4,
        "entropy function": 4,
        "term frequency": 4,
        "inverse document frequency components": 4,
        "docs": 3,
        "tdmatrix": 3,
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "cosine similarity": 1,
        "distance metric": 1,
        "cosine similarity score": 1,
        "reuters documents": 1,
        "emmed test": 1
    },
    "unstructured text": {
        "lsi": 5,
        "mic": 4,
        "m": 4,
        "term frequency inverse document frequency": 4,
        "entropy function": 4,
        "term frequency": 4,
        "inverse document frequency components": 4,
        "docs": 3,
        "tdmatrix": 3,
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "cosine similarity": 1,
        "distance metric": 1,
        "cosine similarity score": 1,
        "reuters documents": 1,
        "emmed test": 1
    },
    "pandas skills": {
        "benefits": 19,
        "basepay": 12,
        "overtimepay": 7,
        "lowest paid person": 6,
        "salary": 2,
        "job title string": 2
    },
    "sf salaries dataset": {
        "benefits": 19,
        "basepay": 12,
        "overtimepay": 7,
        "lowest paid person": 6,
        "salary": 2,
        "job title string": 2
    },
    "sf salaries exercise": {
        "benefits": 19,
        "basepay": 12,
        "overtimepay": 7,
        "lowest paid person": 6,
        "salary": 2,
        "job title string": 2
    },
    "100": {
        "jupyter": 13,
        "command mode": 5,
        "keyboard shortcuts": 5,
        "docs": 4,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "vector dot products": 1
    },
    "hw1": {
        "jupyter": 13,
        "command mode": 5,
        "keyboard shortcuts": 5,
        "docs": 4,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "vector dot products": 1
    },
    "prerequisites": {
        "jupyter": 13,
        "command mode": 5,
        "keyboard shortcuts": 5,
        "docs": 4,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "vector dot products": 1
    },
    "partial derivatives": {
        "jupyter": 13,
        "command mode": 5,
        "keyboard shortcuts": 5,
        "docs": 4,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "vector dot products": 1
    },
    "course policies": {
        "jupyter": 13,
        "command mode": 5,
        "keyboard shortcuts": 5,
        "docs": 4,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "vector dot products": 1
    },
    "matrix expressions": {
        "jupyter": 13,
        "command mode": 5,
        "keyboard shortcuts": 5,
        "docs": 4,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "vector dot products": 1
    },
    "94602": {
        "longitude": 7,
        "latitude": 7,
        "business dataframe": 6,
        "population": 6,
        "nonmissing values": 6,
        "zip codes": 6,
        "inspection": 4,
        "inspection dataframe": 4,
        "longitude values": 1,
        "businesses": 1
    },
    "hyperparameters": {
        "age": 4,
        "parmaters": 4,
        "probabilistic predictions": 3,
        "paremeters": 3,
        "learning rate loss": 2,
        "training method": 2,
        "network error": 2,
        "activation function": 2,
        "hidden layers": 2,
        "batch size": 2,
        "10000 element long vectors": 2,
        "stochastic gradient descent": 2,
        "connected layer": 2,
        "average auc": 2,
        "code cell": 2,
        "missing": 2,
        "mnist sequence dataset": 1,
        "deep learning model": 1,
        "python variable": 1,
        "optical character recognition": 1,
        "dropna": 1,
        "pandas dataframes": 1,
        "labels": 1,
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "variable nodes": {
        "receiving node": 10,
        "marginalizing": 9,
        "function marginalize": 6,
        "sending": 5,
        "functional programming": 5,
        "1d numpy arrays": 5,
        "tensor representations": 4,
        "numpy broadcasting": 4
    },
    "hive": {
        "regular expression": 4,
        "pattern matching": 4,
        "string matching": 4,
        "search pattern": 4,
        "regular expressions": 4,
        "gzip module": 4,
        "alice in wonderland word count": 2,
        "peter pan": 2,
        "word count": 2,
        "project gutenberg": 2,
        "hive": 2,
        "peter table sql drop table": 2,
        "textfile": 2,
        "word group": 2,
        "alice table sql drop table": 2,
        "word group by word": 2,
        "select word": 2,
        "data local": 2
    },
    "unsupervised machine learning": {
        "train set": 3,
        "cross products": 3,
        "polynomial features extraction": 3,
        "optimal weights": 3,
        "multiple linear regression": 3,
        "polynomal expansion function": 3,
        "iris data set": 2,
        "dbscan": 2,
        "random state": 1,
        "iris": 1,
        "euclidean distance": 1,
        "cluster centers": 1,
        "clustering outcome": 1,
        "petal length": 1,
        "scaling": 1,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1,
        "random noise": 1,
        "noise level": 1
    },
    "loading": {
        "response times": 2,
        "average response time": 2,
        "figure object": 2,
        "matshow": 2,
        "notebook list": 1,
        "file system": 1,
        "data directory": 1,
        "keyword arguments": 1,
        "npzfile": 1,
        "keys() method": 1,
        "1d array": 1,
        "participant arrays": 1,
        "trials": 1,
        "response time": 1,
        "mean function": 1,
        "np": 1,
        "axis flag": 1,
        "axis argument": 1,
        "magic function": 1,
        "imports": 1,
        "pyplot module": 1,
        "trial numbers": 1,
        "trials array": 1,
        "descriptive statistics": 1,
        "axis object": 1,
        "multiple subplots": 1,
        "axis objects": 1,
        "medians": 1,
        "trial means": 1,
        "trial medians": 1,
        "keyword argument": 1,
        "marker symbols": 1,
        "axis labels": 1,
        "plotting function": 1,
        "panda": 1,
        "pixel intensities": 1,
        "2d array": 1,
        "heatmap": 1,
        "pixel intensity values": 1,
        "colormap": 1,
        "cmap": 1,
        "squared exponential distance": 1,
        "green cells": 1,
        "docstring": 1
    },
    "interim conclusion": {
        "majors": 8,
        "confounding variable": 6,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "average height values": 3,
        "pivot table": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3,
        "computer science majors": 2,
        "kmeans": 1
    },
    "hypothesis": {
        "majors": 8,
        "confounding variable": 6,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "average height values": 3,
        "pivot table": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3,
        "computer science majors": 2,
        "kmeans": 1
    },
    "first pass analysis": {
        "majors": 8,
        "confounding variable": 6,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "average height values": 3,
        "pivot table": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3,
        "computer science majors": 2,
        "kmeans": 1
    },
    "confounding variables": {
        "majors": 8,
        "confounding variable": 6,
        "women": 4,
        "cogsci": 4,
        "compsci": 4,
        "average height values": 3,
        "pivot table": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3,
        "computer science majors": 2,
        "kmeans": 1
    },
    "penalty parameter": {
        "svm model": 9,
        "ridge regression": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "multilinear regression": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1,
        "database table": 1,
        "testfeats table": 1
    },
    "10": {
        "income": 6,
        "log10": 4,
        "valueerror": 3,
        "zero values": 3,
        "math domain error": 3,
        "standard deviations": 3,
        "diistribution": 3,
        "transformantion": 3,
        "age": 3,
        "age mood": 1,
        "correlationship coefficient": 1,
        "stroger relationships": 1,
        "skewed data distributions": 1,
        "logbase10": 1,
        "incomes": 1,
        "logarithmic transforms": 1,
        "corrs variable": 1,
        "matplotlib visualizations": 1,
        "lambda expression": 1,
        "log transform": 1,
        "geometric means": 1,
        "log10 transformation": 1,
        "pand": 1,
        "log transforming data": 1,
        "log base 10": 1
    },
    "data acquisition": {
        "instrument response": 4,
        "obspy fdsn client": 1,
        "network constraints": 1,
        "range": 1,
        "obspy documentation": 1,
        "depth range": 1,
        "magnitude range": 1,
        "matching channels": 1,
        "matching stations": 1,
        "large datasets": 1,
        "internal repeated webservice requests": 1,
        "waveform requests": 1,
        "instrument response information": 1,
        "instrument correction": 1,
        "narrow angular distance": 1,
        "search criteria": 1,
        "wave": 1,
        "station metadata": 1,
        "read waveform data": 1,
        "datamark": 1,
        "file formats": 1,
        "automatic file format detection": 1,
        "filetype autodiscovery": 1,
        "local obspy": 1,
        "data compression": 1,
        "unix wildcards": 1,
        "miniseed files": 1,
        "big files": 1,
        "waveforms": 1,
        "stream": 1,
        "sampling rate": 1,
        "trace": 1,
        "arithmetic operations": 1,
        "array": 1,
        "numpy functions": 1,
        "beamforming": 1,
        "trace objects": 1,
        "non": 1,
        "standard ascii files": 1,
        "cross correlations": 1,
        "stream objects": 1,
        "lowpass filter": 1,
        "corner frequency": 1,
        "preview": 1
    },
    "nlp": {
        "lewis carroll": 4,
        "pointwise mutual information": 3,
        "bigram collocations": 3,
        "wordnet synset": 3,
        "tag parameter": 2,
        "defaulttagger": 2,
        "tfidfvectorizer": 2,
        "bigrams": 2,
        "unigrams": 2,
        "document frequency": 2,
        "document term matrix": 2,
        "perceptrontagger": 1,
        "part of speech tagging": 1,
        "tag unigrams": 1,
        "unigramtagger": 1,
        "word tokenizer": 1,
        "tagged sentence": 1,
        "penn treebank": 1,
        "default tagger": 1,
        "penn treebank corpus tagger": 1,
        "newsgroup": 1,
        "english stop words": 1,
        "json": 1,
        "reuters data": 1,
        "stop words": 1,
        "non-negative matrix factorization": 1,
        "unit probability": 1,
        "inaugural corpus": 1,
        "word usage": 1,
        "chat data": 1,
        "summary stats": 1
    },
    "data analytics": {
        "plot command": 2,
        "bar chart": 2,
        "alcohol consumption": 2,
        "hist function": 2,
        "element matrix": 2,
        "training characters": 2,
        "character data": 2,
        "training samples": 2,
        "test data": 2,
        "character labels": 2,
        "integers": 2,
        "euclidean distance": 2,
        "booleans": 1,
        "diseased patients": 1,
        "healthy patients": 1,
        "red dots": 1,
        "marker size": 1,
        "marker style": 1,
        "diseased people": 1,
        "python function": 1,
        "nested loop": 1,
        "makeclustersequal": 1,
        "function": 1,
        "cluster 1": 1,
        "column vectors": 1,
        "kmeans": 1,
        "cluster centres": 1,
        "feature vectors": 1,
        "cosine distance": 1,
        "classify": 1,
        "nearest neighbour classifier": 1,
        "alaphabet": 1,
        "divergence function": 1,
        "variances": 1,
        "character pairs": 1
    },
    "splitting rule": {
        "cutpoint": 17,
        "training error": 6,
        "predicted probability": 2,
        "response variable": 2,
        "decision tree algorithm": 2,
        "classification error rate": 2,
        "gini index": 2,
        "mean response value": 1,
        "observation": 1,
        "tree diagram": 1,
        "predictive feature": 1,
        "high": 1,
        "high school graduation rate": 1,
        "high population density": 1,
        "maximum value": 1,
        "splitting criteria": 1,
        "classification trees": 1,
        "node purity": 1,
        "titanic": 1,
        "sex": 1,
        "age": 1
    },
    "vehicle sale prices": {
        "cutpoint": 17,
        "training error": 6,
        "predicted probability": 2,
        "response variable": 2,
        "decision tree algorithm": 2,
        "classification error rate": 2,
        "gini index": 2,
        "mean response value": 1,
        "observation": 1,
        "tree diagram": 1,
        "predictive feature": 1,
        "high": 1,
        "high school graduation rate": 1,
        "high population density": 1,
        "maximum value": 1,
        "splitting criteria": 1,
        "classification trees": 1,
        "node purity": 1,
        "titanic": 1,
        "sex": 1,
        "age": 1
    },
    "binary splits": {
        "cutpoint": 17,
        "training error": 6,
        "predicted probability": 2,
        "response variable": 2,
        "decision tree algorithm": 2,
        "classification error rate": 2,
        "gini index": 2,
        "mean response value": 1,
        "observation": 1,
        "tree diagram": 1,
        "predictive feature": 1,
        "high": 1,
        "high school graduation rate": 1,
        "high population density": 1,
        "maximum value": 1,
        "splitting criteria": 1,
        "classification trees": 1,
        "node purity": 1,
        "titanic": 1,
        "sex": 1,
        "age": 1
    },
    "mean price": {
        "cutpoint": 17,
        "training error": 6,
        "predicted probability": 2,
        "response variable": 2,
        "decision tree algorithm": 2,
        "classification error rate": 2,
        "gini index": 2,
        "mean response value": 1,
        "observation": 1,
        "tree diagram": 1,
        "predictive feature": 1,
        "high": 1,
        "high school graduation rate": 1,
        "high population density": 1,
        "maximum value": 1,
        "splitting criteria": 1,
        "classification trees": 1,
        "node purity": 1,
        "titanic": 1,
        "sex": 1,
        "age": 1
    },
    "recursive binary splitting": {
        "cutpoint": 17,
        "training error": 6,
        "predicted probability": 2,
        "response variable": 2,
        "decision tree algorithm": 2,
        "classification error rate": 2,
        "gini index": 2,
        "mean response value": 1,
        "observation": 1,
        "tree diagram": 1,
        "predictive feature": 1,
        "high": 1,
        "high school graduation rate": 1,
        "high population density": 1,
        "maximum value": 1,
        "splitting criteria": 1,
        "classification trees": 1,
        "node purity": 1,
        "titanic": 1,
        "sex": 1,
        "age": 1
    },
    "maximum tree depth": {
        "cutpoint": 17,
        "training error": 6,
        "predicted probability": 2,
        "response variable": 2,
        "decision tree algorithm": 2,
        "classification error rate": 2,
        "gini index": 2,
        "mean response value": 1,
        "observation": 1,
        "tree diagram": 1,
        "predictive feature": 1,
        "high": 1,
        "high school graduation rate": 1,
        "high population density": 1,
        "maximum value": 1,
        "splitting criteria": 1,
        "classification trees": 1,
        "node purity": 1,
        "titanic": 1,
        "sex": 1,
        "age": 1
    },
    "overflow": {
        "softplus function": 15,
        "elementary computation": 3,
        "module utils": 3,
        "input vector": 3,
        "high precision float64": 3,
        "input": 3,
        "rounding": 3,
        "inner python loop": 3,
        "partition function": 2,
        "parameter vectors": 2,
        "exercise sheet": 1,
        "probability distribution": 1,
        "discrete probability distribution": 1,
        "exponential function": 1,
        "logarithm": 1,
        "list itertools": 1,
        "binary vectors": 1
    },
    "rounding": {
        "softplus function": 15,
        "elementary computation": 3,
        "module utils": 3,
        "input vector": 3,
        "high precision float64": 3,
        "input": 3,
        "rounding": 3,
        "inner python loop": 3,
        "partition function": 2,
        "parameter vectors": 2,
        "exercise sheet": 1,
        "probability distribution": 1,
        "discrete probability distribution": 1,
        "exponential function": 1,
        "logarithm": 1,
        "list itertools": 1,
        "binary vectors": 1
    },
    "umpy special functions": {
        "softplus function": 15,
        "elementary computation": 3,
        "module utils": 3,
        "input vector": 3,
        "high precision float64": 3,
        "input": 3,
        "rounding": 3,
        "inner python loop": 3,
        "partition function": 2,
        "parameter vectors": 2,
        "exercise sheet": 1,
        "probability distribution": 1,
        "discrete probability distribution": 1,
        "exponential function": 1,
        "logarithm": 1,
        "list itertools": 1,
        "binary vectors": 1
    },
    "numerical overflow": {
        "softplus function": 15,
        "elementary computation": 3,
        "module utils": 3,
        "input vector": 3,
        "high precision float64": 3,
        "input": 3,
        "rounding": 3,
        "inner python loop": 3,
        "partition function": 2,
        "parameter vectors": 2,
        "exercise sheet": 1,
        "probability distribution": 1,
        "discrete probability distribution": 1,
        "exponential function": 1,
        "logarithm": 1,
        "list itertools": 1,
        "binary vectors": 1
    },
    "numpy code": {
        "softplus function": 15,
        "elementary computation": 3,
        "module utils": 3,
        "input vector": 3,
        "high precision float64": 3,
        "input": 3,
        "rounding": 3,
        "inner python loop": 3,
        "partition function": 2,
        "parameter vectors": 2,
        "exercise sheet": 1,
        "probability distribution": 1,
        "discrete probability distribution": 1,
        "exponential function": 1,
        "logarithm": 1,
        "list itertools": 1,
        "binary vectors": 1
    },
    "channel codes": {
        "international standard exchange format": 3,
        "station metadata": 3,
        "trace objects": 3,
        "ainformation": 3,
        "nested obspy inventory class": 3,
        "event metadata": 3,
        "xml": 2,
        "array analysis": 2,
        "estimate travel times": 2,
        "seismic phases": 2,
        "cross correlation routines": 2,
        "event detection": 2,
        "plot ray paths": 2,
        "manipulation filtering": 2,
        "local files": 1,
        "filetype": 1,
        "utcdatetime": 1,
        "timestamps": 1,
        "pling": 1,
        "command line utilities": 1,
        "stationxml": 1,
        "ampling": 1,
        "inventory": 1,
        "fdsn server": 1,
        "wildcard": 1,
        "waveform data": 1,
        "channel code": 1
    },
    "seismometer time series": {
        "international standard exchange format": 3,
        "station metadata": 3,
        "trace objects": 3,
        "ainformation": 3,
        "nested obspy inventory class": 3,
        "event metadata": 3,
        "xml": 2,
        "array analysis": 2,
        "estimate travel times": 2,
        "seismic phases": 2,
        "cross correlation routines": 2,
        "event detection": 2,
        "plot ray paths": 2,
        "manipulation filtering": 2,
        "local files": 1,
        "filetype": 1,
        "utcdatetime": 1,
        "timestamps": 1,
        "pling": 1,
        "command line utilities": 1,
        "stationxml": 1,
        "ampling": 1,
        "inventory": 1,
        "fdsn server": 1,
        "wildcard": 1,
        "waveform data": 1,
        "channel code": 1
    },
    "local files": {
        "international standard exchange format": 3,
        "station metadata": 3,
        "trace objects": 3,
        "ainformation": 3,
        "nested obspy inventory class": 3,
        "event metadata": 3,
        "xml": 2,
        "array analysis": 2,
        "estimate travel times": 2,
        "seismic phases": 2,
        "cross correlation routines": 2,
        "event detection": 2,
        "plot ray paths": 2,
        "manipulation filtering": 2,
        "local files": 1,
        "filetype": 1,
        "utcdatetime": 1,
        "timestamps": 1,
        "pling": 1,
        "command line utilities": 1,
        "stationxml": 1,
        "ampling": 1,
        "inventory": 1,
        "fdsn server": 1,
        "wildcard": 1,
        "waveform data": 1,
        "channel code": 1
    },
    "datascience module documentation": {
        "presidentialelections": 6,
        "elections table": 5,
        "cali table": 4,
        "democratic presidential candidate": 4,
        "homework": 3,
        "voting": 3,
        "programming question": 3,
        "test cell": 3,
        "democrat column": 3,
        "percentages": 3,
        "elections": 2,
        "dem states column": 2,
        "democratic votes": 2,
        "spread function": 1,
        "call to group": 1,
        "democrat spread column": 1,
        "southern states": 1
    },
    "vmail plan": {
        "minority class": 6,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "churn distribution": {
        "minority class": 6,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "distribution plots": {
        "minority class": 6,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "churn": {
        "minority class": 6,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "custserv calls": {
        "minority class": 6,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "predictive model": {
        "minority class": 6,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "bernoulli distribution": {
        "minority class": 6,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "possion distributions": {
        "minority class": 6,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "night chage eve chage": {
        "minority class": 6,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "statistical bias": {
        "minority class": 6,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "inti calls": {
        "minority class": 6,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "possion distribution": {
        "minority class": 6,
        "majority class": 4,
        "synthetic minority oversampling technique": 4,
        "equal classifications": 4,
        "confusion matrix review": 2,
        "confusion": 2,
        "baseline accuracy": 2,
        "undersampling": 2,
        "data set size": 2,
        "minorty classs": 2,
        "slightly mutated copies": 2,
        "population distribution": 2,
        "smote": 2,
        "open source package": 2,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "git": {
        "github username": 8,
        "student id": 5,
        "markdown cell": 4,
        "student id number": 4,
        "email address": 4,
        "course tutorials": 4,
        "grading tests": 4,
        "assert statements": 3,
        "python dictionary comprehension": 2,
        "zip function": 2,
        "course id": 2,
        "iterable": 1,
        "enumerate function": 1,
        "anaconda": 1,
        "data science modules": 1,
        "unique course id": 1
    },
    "sentence boundaries": {
        "nltk": 3,
        "nonempty sentences": 3,
        "stopwords": 2,
        "tokenized sentences": 2,
        "datahub": 2,
        "follwing code block": 2,
        "gensim": 2,
        "word embeddings": 2,
        "word vectors": 2,
        "word vector": 2,
        "leadership": 2,
        "learning rate": 1,
        "continous bag of words model": 1,
        "2vec": 1,
        "word2vec": 1,
        "gensim library": 1,
        "embeddings": 1,
        "empty cells": 1,
        "word relationships": 1,
        "cosine similarity": 1,
        "president": 1,
        "similarity score": 1,
        "smilarity score": 1,
        "cosine distance": 1,
        "mean vector": 1,
        "vector math": 1,
        "semantics": 1,
        "output vectors": 1,
        "queen": 1,
        "manliness": 1,
        "word vector king": 1,
        "feminine attribute": 1,
        "royalty": 1,
        "standardize x": 1
    },
    "natural language toolkit": {
        "nltk": 3,
        "nonempty sentences": 3,
        "stopwords": 2,
        "tokenized sentences": 2,
        "datahub": 2,
        "follwing code block": 2,
        "gensim": 2,
        "word embeddings": 2,
        "word vectors": 2,
        "word vector": 2,
        "leadership": 2,
        "learning rate": 1,
        "continous bag of words model": 1,
        "2vec": 1,
        "word2vec": 1,
        "gensim library": 1,
        "embeddings": 1,
        "empty cells": 1,
        "word relationships": 1,
        "cosine similarity": 1,
        "president": 1,
        "similarity score": 1,
        "smilarity score": 1,
        "cosine distance": 1,
        "mean vector": 1,
        "vector math": 1,
        "semantics": 1,
        "output vectors": 1,
        "queen": 1,
        "manliness": 1,
        "word vector king": 1,
        "feminine attribute": 1,
        "royalty": 1,
        "standardize x": 1
    },
    "sql syntax": {
        "postgresql": 2,
        "sql": 2,
        "aggregate functions": 2,
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1,
        "desc keyword": 1,
        "order by keyword": 1,
        "sql aliases": 1,
        "sql alias syntax": 1,
        "query arguments": 1,
        "database table": 1,
        "alias as": 1,
        "column": 1,
        "aliases": 1,
        "wildcards": 1,
        "where clause": 1,
        "missing letters": 1,
        "select distinct statement": 1,
        "distinct operator": 1,
        "limit operator": 1,
        "limit syntax": 1,
        "sql subqueries": 1,
        "group by statement": 1,
        "group by operator": 1,
        "having operator": 1,
        "having clause": 1,
        "else statement": 1,
        "date documentation": 1
    },
    "spam emails": {
        "contour plot": 3,
        "false negatives": 3,
        "email": 3,
        "cutoff probability": 3,
        "final classifier": 3,
        "cancer screenings": 3,
        "false positives": 3,
        "predction model": 2,
        "zero predictor": 2,
        "filtering rate": 2,
        "beautifulsoup": 2,
        "spam mails": 2,
        "filter rate": 2,
        "spammy words": 2,
        "characterstics": 2,
        "html table": 2,
        "data parsing": 2,
        "spam": 2,
        "web crawling": 2,
        "datahub": 2
    },
    "complements": {
        "test sentence": 7,
        "consonants": 4,
        "6": 3,
        "regexes": 3,
        "challenge 7": 2,
        "challenge 6": 2,
        "regular expression": 2,
        "character classes": 2,
        "regular expressions": 2,
        "regex": 2,
        "metacharacters": 2,
        "parentheses": 2,
        "match object": 1,
        "match object instances": 1,
        "pattern object": 1,
        "numeric codes": 1,
        "data entry errors": 1,
        "robots": 1,
        "us phone number": 1,
        "area code": 1,
        "challenge 15": 1,
        "regular expression syntax": 1,
        "challenge 14": 1,
        "challenge 13": 1,
        "uring group skills": 1,
        "non-": 1
    },
    "python3": {
        "tweet list": 4,
        "positive sentiment list": 4,
        "university of pittsburgh": 2,
        "google scholar": 2,
        "positive sentiment": 2,
        "negative sentiment": 2,
        "internet": 2,
        "positive polarity words": 2,
        "word stems": 2,
        "web address": 2,
        "file name": 2,
        "current directory": 2,
        "quotation marks": 2,
        "url path": 2,
        "string object": 2,
        "windows computer": 2,
        "operating system": 2,
        "positive words": 2,
        "positive texts": 2,
        "positive counts": 2,
        "presidential election": 1,
        "measurement": 1,
        "caluclation": 1
    },
    "social sciences": {
        "tweet list": 4,
        "positive sentiment list": 4,
        "university of pittsburgh": 2,
        "google scholar": 2,
        "positive sentiment": 2,
        "negative sentiment": 2,
        "internet": 2,
        "positive polarity words": 2,
        "word stems": 2,
        "web address": 2,
        "file name": 2,
        "current directory": 2,
        "quotation marks": 2,
        "url path": 2,
        "string object": 2,
        "windows computer": 2,
        "operating system": 2,
        "positive words": 2,
        "positive texts": 2,
        "positive counts": 2,
        "presidential election": 1,
        "measurement": 1,
        "caluclation": 1
    },
    "real twitter data": {
        "tweet list": 4,
        "positive sentiment list": 4,
        "university of pittsburgh": 2,
        "google scholar": 2,
        "positive sentiment": 2,
        "negative sentiment": 2,
        "internet": 2,
        "positive polarity words": 2,
        "word stems": 2,
        "web address": 2,
        "file name": 2,
        "current directory": 2,
        "quotation marks": 2,
        "url path": 2,
        "string object": 2,
        "windows computer": 2,
        "operating system": 2,
        "positive words": 2,
        "positive texts": 2,
        "positive counts": 2,
        "presidential election": 1,
        "measurement": 1,
        "caluclation": 1
    },
    "string manipulation": {
        "tweet list": 4,
        "positive sentiment list": 4,
        "university of pittsburgh": 2,
        "google scholar": 2,
        "positive sentiment": 2,
        "negative sentiment": 2,
        "internet": 2,
        "positive polarity words": 2,
        "word stems": 2,
        "web address": 2,
        "file name": 2,
        "current directory": 2,
        "quotation marks": 2,
        "url path": 2,
        "string object": 2,
        "windows computer": 2,
        "operating system": 2,
        "positive words": 2,
        "positive texts": 2,
        "positive counts": 2,
        "presidential election": 1,
        "measurement": 1,
        "caluclation": 1
    },
    "pie charts": {
        "tweet list": 4,
        "positive sentiment list": 4,
        "university of pittsburgh": 2,
        "google scholar": 2,
        "positive sentiment": 2,
        "negative sentiment": 2,
        "internet": 2,
        "positive polarity words": 2,
        "word stems": 2,
        "web address": 2,
        "file name": 2,
        "current directory": 2,
        "quotation marks": 2,
        "url path": 2,
        "string object": 2,
        "windows computer": 2,
        "operating system": 2,
        "positive words": 2,
        "positive texts": 2,
        "positive counts": 2,
        "presidential election": 1,
        "measurement": 1,
        "caluclation": 1
    },
    "polynomials": {
        "fine tuning": 6,
        "parameter tuning": 6,
        "dictionaries": 4,
        "polynomials": 3,
        "polynomial functions": 2,
        "symbolic calculations": 2,
        "non-zero prefactor": 2,
        "symbolic manipulation": 2,
        "sympy package": 2,
        "numerical computations": 2,
        "symbolic manipulations": 2,
        "utility function": 2,
        "polynomial": 2,
        "setdefault method": 2,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1,
        "implementation": 1
    },
    "regularization": {
        "ridge regression": 5,
        "population": 2,
        "random distribution": 1,
        "predictor": 1,
        "dataset": 1,
        "regression methods": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "testing sets": 1,
        "bootstrap": 1,
        "confidence intervals": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "confidence interval": 1,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "multilinear regression": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "cartesian()": {
        "helper function": 4,
        "prestige levels": 4,
        "mean probability": 4,
        "admission levels": 4,
        "gpa": 4,
        "prestige": 4,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "optimization": {
        "lqr": 4,
        "gains matrix": 2,
        "algebraic riccati equation solution": 2,
        "algebraic ricatti equation": 2,
        "qr": 2,
        "linear algebra operations": 2,
        "api": 2,
        "algebraic riccati equation": 2,
        "feedback control law": 2,
        "quadratic cost function": 2,
        "unstable equilibrium state vector": 2,
        "control system": 2,
        "cost function": 2,
        "r cost matrices": 2,
        "python program": 1,
        "united states": 1,
        "canada": 1,
        "lqr solver": 1,
        "linearization": 1,
        "pend": 1,
        "small": 1,
        "angular speed": 1,
        "goal state": 1,
        "fixed goal state": 1,
        "initial values": 1,
        "nonlinear system": 1,
        "fixed end goal state": 1,
        "q": 1,
        "tensorflow": 1,
        "tutorials": 1
    },
    "pandas indexing": {
        "column names": 4,
        "normal indexing": 4,
        "loc attribute": 4,
        "iloc attribute": 4,
        "integer indices": 4,
        "row labels": 4,
        "integer index": 4,
        "class size paradox": 4,
        "nsfg respondent variable": 4,
        "biased distribution": 4,
        "biased distributions": 4,
        "pairwise differences": 1,
        "first babies": 1
    },
    "sampling rate": {
        "lowpass filter": 8,
        "corner frequency": 8,
        "preview": 8,
        "gaussian noise": 6,
        "spectrograms": 4,
        "spectrogram plot": 4,
        "logarithmic frequency scale": 4,
        "tapering": 2,
        "lowpass": 2
    },
    "time axis": {
        "apple stock quarterly": 3,
        "kurtosis": 3,
        "covariance": 3,
        "moving": 3,
        "variance": 3,
        "moving window functions": 3,
        "array function": 3,
        "skewness": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "iowa state tax board": {
        "transaction size": 2,
        "alcohol": 2,
        "iowa liquor sales": 1,
        "liquor taxes": 1,
        "iowa state legislature": 1,
        "data driven projection": 1,
        "annual sales": 1,
        "pandas python dataframe": 1,
        "category name": 1,
        "datetime format": 1,
        "sales columns": 1,
        "string values": 1,
        "category number column": 1,
        "data mining": 1,
        "sales projections": 1,
        "labor": 1,
        "gross margin percent": 1,
        "store rent": 1,
        "markup": 1,
        "summary data": 1,
        "bottles": 1,
        "viz": 1,
        "eda": 1,
        "transaction totals": 1,
        "exploratory analysis": 1,
        "smaller visualizations": 1,
        "outlier data point": 1,
        "visualizations": 1,
        "outlier": 1,
        "liquor stores": 1,
        "liquor sales data": 1,
        "convenience stores": 1,
        "grocery stores": 1,
        "mean transaction size": 1,
        "mean": 1,
        "iowa": 1,
        "liquor": 1,
        "gross margin": 1,
        "liquor licensees": 1,
        "total sales dollars": 1,
        "statistical relationships": 1,
        "correlations": 1,
        "alchohol beer": 1,
        "price": 1
    },
    "un general debates data set": {
        "nltk": 3,
        "nonempty sentences": 3,
        "stopwords": 2,
        "tokenized sentences": 2,
        "datahub": 2,
        "follwing code block": 2,
        "gensim": 2,
        "word embeddings": 2,
        "word vectors": 2,
        "word vector": 2,
        "leadership": 2,
        "learning rate": 1,
        "continous bag of words model": 1,
        "2vec": 1,
        "word2vec": 1,
        "gensim library": 1,
        "empty cells": 1,
        "word relationships": 1,
        "cosine similarity": 1,
        "president": 1,
        "similarity score": 1,
        "smilarity score": 1,
        "cosine distance": 1,
        "mean vector": 1,
        "vector math": 1,
        "semantics": 1,
        "output vectors": 1,
        "queen": 1,
        "manliness": 1,
        "word vector king": 1,
        "feminine attribute": 1,
        "royalty": 1,
        "standardize x": 1
    },
    "multivariate regression model": {
        "airtime": 9,
        "arrdelay": 5,
        "linear regression model": 4,
        "code cell": 3,
        "multivariate regresion model": 3,
        "predictor variable": 3,
        "regression model": 3,
        "random number generator": 3,
        "test sets": 2,
        "multiple independent variables": 2,
        "dependent variable": 2,
        "patsy formula": 2,
        "multivariate regression model": 2,
        "unit tests": 1,
        "distance": 1,
        "stats": 1
    },
    "tweepy": {
        "authentication keys": 4,
        "tweepy": 4,
        "api": 4,
        "twitter": 4,
        "coordinates": 4,
        "pandas documentation": 4,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "tweetdeck": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "null hypothesis": 2
    },
    "point cloud": {
        "eigenvectors": 6,
        "pca": 6,
        "residual noise": 3,
        "dimensionality reduction": 3,
        "principal component analysis": 3,
        "principal components": 3,
        "2d vectors": 3,
        "linear coefficients": 3,
        "pca space": 3,
        "iris data": 3,
        "plotting function": 2,
        "data matrix x": 2,
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "pandas library": {
        "vocab": 4,
        "word vector": 4,
        "pandas library": 2,
        "word frequency": 2,
        "review data": 2,
        "word vectors": 2,
        "frame": 2,
        "count value": 2,
        "word2idx": 2,
        "dictionary comprehension": 2,
        "review data set": 2,
        "learning rate loss": 2,
        "training method": 2,
        "network error": 2,
        "activation function": 2,
        "hidden layers": 2,
        "batch size": 2,
        "10000 element long vectors": 2,
        "stochastic gradient descent": 2,
        "connected layer": 2,
        "similarity scores": 1
    },
    "minimum error reduction": {
        "prediction path": 12,
        "early stopping conditions": 6,
        "classification error": 6,
        "validation error": 6,
        "tree model": 3,
        "function classify": 3,
        "predicted class": 3,
        "validation data": 2,
        "lowest classification error": 2,
        "qu": 1,
        "complexity": 1
    },
    "if condition": {
        "prediction path": 12,
        "early stopping conditions": 6,
        "classification error": 6,
        "validation error": 6,
        "tree model": 3,
        "function classify": 3,
        "predicted class": 3,
        "validation data": 2,
        "lowest classification error": 2,
        "qu": 1,
        "complexity": 1
    },
    "bokeh map data": {
        "bokeh plot": 4,
        "datashader": 3,
        "interactivity": 2,
        "hover tools": 2,
        "bokeh": 2,
        "big data": 2,
        "distribution": 2,
        "dask": 2,
        "taxi trips": 2,
        "2d grid": 2,
        "rgb element": 2,
        "plotting program": 2,
        "datashader operation": 2,
        "pixel colors": 2,
        "plot size": 2,
        "dynamic operation": 2,
        "zoom level": 2,
        "linked streams": 2,
        "datashade": 2,
        "geoviews": 1,
        "bokeh wmtstilesource": 1,
        "taxi dropoffs": 1,
        "aggregator functions": 1
    },
    "sample validation data": {
        "false positives": 6,
        "probability": 4,
        "false negatives": 3,
        "prediction accuracy": 3,
        "boosted trees model": 3,
        "decision trees": 3,
        "decision tree model": 3,
        "probabilities": 3,
        "prediction probability": 3,
        "tree models": 2,
        "classification error": 2,
        "training errors": 2,
        "check": 1,
        "gradient boosted trees": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1
    },
    "safe loan": {
        "false positives": 6,
        "probability": 4,
        "false negatives": 3,
        "prediction accuracy": 3,
        "boosted trees model": 3,
        "decision trees": 3,
        "decision tree model": 3,
        "probabilities": 3,
        "prediction probability": 3,
        "tree models": 2,
        "classification error": 2,
        "training errors": 2,
        "check": 1,
        "gradient boosted trees": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1
    },
    "predict method": {
        "false positives": 6,
        "probability": 4,
        "false negatives": 3,
        "prediction accuracy": 3,
        "boosted trees model": 3,
        "decision trees": 3,
        "decision tree model": 3,
        "probabilities": 3,
        "prediction probability": 3,
        "tree models": 2,
        "classification error": 2,
        "training errors": 2,
        "check": 1,
        "gradient boosted trees": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1
    },
    "prediction probabilities": {
        "false positives": 6,
        "probability": 4,
        "false negatives": 3,
        "prediction accuracy": 3,
        "boosted trees model": 3,
        "decision trees": 3,
        "decision tree model": 3,
        "probabilities": 3,
        "prediction probability": 3,
        "tree models": 2,
        "classification error": 2,
        "training errors": 2,
        "check": 1,
        "gradient boosted trees": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1
    },
    "brown corpus": {
        "brown university": 3,
        "corpus": 3,
        "nltk brown corpus": 3,
        "docs": 3,
        "1d numpy arrays": 3,
        "brown corpus": 3,
        "data preprocessing": 3,
        "tfidfvectorizer": 2,
        "english stop words": 2,
        "minimum feature term": 2,
        "bigrams": 2,
        "maximum frequency": 2,
        "snowball": 2,
        "trigrams": 2,
        "nowball": 2,
        "kneighborsclassifier": 2,
        "stemming algorithm": 2,
        "unigrams": 2,
        "tokenize function": 2
    },
    "normalization": {
        "pandas manipulations": 2,
        "data format": 2,
        "euclidean distance": 2,
        "knn classifier": 2,
        "distance function": 2,
        "knn algorithm": 2,
        "dbscan": 2,
        "scaling": 1,
        "iris data set": 1,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "regression": 1,
        "iris data": 1,
        "final classification": 1,
        "supervised machine learning": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1,
        "function predict": 1,
        "predicted class value": 1,
        "nearestneighborsclassifier": 1,
        "function distance": 1,
        "test data": 1,
        "sk": 1,
        "image": 1,
        "knn process": 1
    },
    "geophysical data acquisition": {
        "fdsn web services": 3,
        "protocols": 3,
        "event metadata": 3,
        "international standard exchange format": 3,
        "station metadata": 3,
        "waveform data": 2,
        "seismological data centers": 2,
        "time series data": 1,
        "international data centers": 1,
        "ground shaking": 1,
        "waveforms": 1,
        "earthquake": 1,
        "earthquakes": 1,
        "seismometer stations": 1,
        "seism": 1,
        "instrument correction": 1,
        "nested obspy event class structure": 1,
        "event objects": 1,
        "catalog object": 1,
        "station objects": 1,
        "network objects": 1,
        "channel objects": 1,
        "fdsn stationxml": 1,
        "nested obspy inventory": 1,
        "inventory object": 1,
        "channel codes": 1,
        "exchange formats": 1,
        "seismometer time series": 1,
        "local files": 1,
        "stationxml": 1,
        "trace objects": 1,
        "ainformation": 1,
        "nested obspy inventory class": 1
    },
    "py": {
        "fdsn web services": 3,
        "protocols": 3,
        "event metadata": 3,
        "international standard exchange format": 3,
        "station metadata": 3,
        "waveform data": 2,
        "seismological data centers": 2,
        "time series data": 1,
        "international data centers": 1,
        "ground shaking": 1,
        "waveforms": 1,
        "earthquake": 1,
        "earthquakes": 1,
        "seismometer stations": 1,
        "seism": 1,
        "instrument correction": 1,
        "nested obspy event class structure": 1,
        "event objects": 1,
        "catalog object": 1,
        "station objects": 1,
        "network objects": 1,
        "channel objects": 1,
        "fdsn stationxml": 1,
        "nested obspy inventory": 1,
        "inventory object": 1,
        "channel codes": 1,
        "exchange formats": 1,
        "seismometer time series": 1,
        "local files": 1,
        "stationxml": 1,
        "trace objects": 1,
        "ainformation": 1,
        "nested obspy inventory class": 1
    },
    "geophysical data analysis": {
        "event metadata": 3,
        "international standard exchange format": 3,
        "waveform data": 2,
        "station metadata": 2,
        "time series data": 1,
        "fdsn web services": 1,
        "international data centers": 1,
        "ground shaking": 1,
        "waveforms": 1,
        "earthquake": 1,
        "protocols": 1,
        "earthquakes": 1,
        "seismometer stations": 1,
        "instrument correction": 1,
        "nested obspy event class structure": 1,
        "event objects": 1,
        "catalog object": 1,
        "station objects": 1,
        "network objects": 1,
        "channel objects": 1,
        "fdsn stationxml": 1,
        "nested obspy inventory": 1,
        "inventory object": 1,
        "trace objects": 1,
        "ainformation": 1,
        "xml": 1,
        "nested obspy inventory class": 1,
        "array analysis": 1,
        "ampling": 1,
        "estimate travel times": 1,
        "seismic phases": 1,
        "cross correlation routines": 1,
        "manipulation filtering": 1,
        "event detection": 1,
        "plot ray paths": 1,
        "inventory": 1,
        "fdsn server": 1,
        "wildcard": 1,
        "channel code": 1
    },
    "width parameter": {
        "width variable": 14,
        "lassocv": 10,
        "colored image": 8,
        "train set": 8,
        "fine tuning": 2,
        "parameter tuning": 2
    },
    "survivial curves": {
        "sfs": 4,
        "hazard function": 4,
        "pregnancy": 4,
        "median remaining time": 4,
        "first marriage": 4,
        "age": 4,
        "sampling weights": 4,
        "divorce": 4,
        "survival curve": 4,
        "sampling error": 4,
        "resampling": 4
    },
    "birth cohort": {
        "sfs": 4,
        "hazard function": 4,
        "pregnancy": 4,
        "median remaining time": 4,
        "first marriage": 4,
        "age": 4,
        "sampling weights": 4,
        "divorce": 4,
        "survival curve": 4,
        "sampling error": 4,
        "resampling": 4
    },
    "nsfg cycles": {
        "sfs": 4,
        "hazard function": 4,
        "pregnancy": 4,
        "median remaining time": 4,
        "first marriage": 4,
        "age": 4,
        "sampling weights": 4,
        "divorce": 4,
        "survival curve": 4,
        "sampling error": 4,
        "resampling": 4
    },
    "movielens dataset": {
        "movielens 100k": 5,
        "movielens": 5,
        "users": 4,
        "labeled countplot": 4,
        "age column": 4,
        "distplot": 4,
        "genres": 4,
        "movies": 3,
        "m1": 2,
        "movie titles": 2,
        "merge function": 2,
        "age": 2,
        "count": 1,
        "seaborn barplot": 1,
        "average rating": 1
    },
    "import libraries": {
        "knn model": 16,
        "scaler": 10,
        "scaling": 9,
        "predict method": 5,
        "confusion matrix": 4
    },
    "k nearest neighbors project": {
        "knn model": 16,
        "scaler": 10,
        "scaling": 9,
        "predict method": 5,
        "confusion matrix": 4
    },
    "knn project": {
        "knn model": 16,
        "scaler": 10,
        "scaling": 9,
        "predict method": 5,
        "confusion matrix": 4
    },
    "target class column": {
        "knn model": 16,
        "scaler": 10,
        "scaling": 9,
        "predict method": 5,
        "confusion matrix": 4
    },
    "selection": {
        "values method": 8,
        "column headers": 4,
        "column names": 4,
        "slicing": 4,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "dataframe structures": 4,
        "feature extraction": 4,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1
    },
    "punctuation": {
        "subset": 2,
        "row index": 2,
        "help message": 2,
        "data1": 1,
        "double equals sign": 1,
        "single equals sign": 1,
        "boolean": 1,
        "bool": 1,
        "boolean comparisons": 1,
        "indentation": 1,
        "conditional statement": 1,
        "autograded jupyter notebook cell": 1,
        "bonus exercises": 1,
        "python observation": 1,
        "variable observation": 1,
        "str()": 1,
        "str() function": 1,
        "typecasting": 1,
        "year": 1,
        "mathematical operators": 1,
        "leap year": 1,
        "conditional statements": 1,
        "variable year": 1,
        "arguments": 1,
        "online resources": 1,
        "stack overflow": 1,
        "google search": 1,
        "python workflow": 1,
        "python documentation": 1,
        "positional arguments": 1,
        "keyword arguments": 1,
        "function call": 1,
        "input": 1,
        "default input values": 1,
        "default values": 1,
        "docstring": 1,
        "source code": 1,
        "fahrenheit": 1,
        "log scale": 1,
        "2d scatter plot": 1,
        "line chart": 1
    },
    "objective function": {
        "multivariate": 5,
        "logvar": 5,
        "eucliean norm": 2,
        "ml": 2,
        "hidden layer width": 2,
        "cnn": 2,
        "face images": 2,
        "mlp": 2,
        "neural network models": 1,
        "drop out": 1,
        "dropout": 1,
        "multiple independent internal representations": 1,
        "randomly selected neurons": 1,
        "feature extraction": 1,
        "fixed weights": 1,
        "object dection": 1,
        "color histograms": 1,
        "convolutional layers": 1,
        "convolutional network": 1,
        "image classification": 1,
        "image processing": 1,
        "automatic image captioning": 1,
        "night scene": 1,
        "scene labeling": 1,
        "narrow networks": 1,
        "wide networks": 1,
        "pooling layer": 1,
        "convolutional layer": 1,
        "hyperparameters": 1
    },
    "our plot": {
        "logistic function": 3,
        "conditional probability": 2,
        "gradient ascent": 2,
        "fudge factor": 2,
        "signature": 2,
        "lobsters example": 1,
        "contour plot": 1,
        "sigmoid elementwise": 1,
        "numpy matrix": 1,
        "gaussian distributions": 1,
        "maximum likelihood principle": 1,
        "objective function": 1,
        "arithm": 1,
        "joint probability": 1,
        "bernoulli trial": 1,
        "notational conventions": 1,
        "scalar argument": 1,
        "elementwise logarithm": 1,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "mle": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1
    },
    "3": {
        "softplus function": 4,
        "python based implementation": 2,
        "lattice": 2,
        "markov chain": 2,
        "exercise": 2,
        "deterministic results": 2,
        "random seed": 2,
        "simulation": 2,
        "relative frequencies": 2,
        "computation time": 2,
        "module utils": 1,
        "input vector": 1,
        "high precision float64": 1,
        "input": 1,
        "exercise sheet": 1,
        "rounding": 1,
        "inner python loop": 1,
        "unlabeled point": 1,
        "nearest neighbor": 1,
        "distance matrix": 1,
        "distance compuation": 1,
        "function pydistance": 1,
        "higher performance": 1,
        "pybatch": 1,
        "correct": 1,
        "distance function": 1,
        "python nearest neighbor search": 1,
        "optimized nearest neighbor function": 1,
        "digit recognition task": 1,
        "nearest neighbor algorithm": 1,
        "speedup": 1
    },
    "boolean variable": {
        "time delays": 6,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "minimize function": 2,
        "posterior uncertainties": 2,
        "optimization": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1,
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "cod": {
        "jupyter": 6,
        "math operations": 3,
        "docs": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "numerical differentiation": 3,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "colors": 1,
        "bar chart": 1
    },
    "datadata": {
        "jupyter": 6,
        "math operations": 3,
        "docs": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "numerical differentiation": 3,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "colors": 1,
        "bar chart": 1
    },
    "function median": {
        "jupyter": 6,
        "math operations": 3,
        "docs": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "numerical differentiation": 3,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "colors": 1,
        "bar chart": 1
    },
    "median element": {
        "jupyter": 6,
        "math operations": 3,
        "docs": 3,
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "numerical differentiation": 3,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "colors": 1,
        "bar chart": 1
    },
    "backward pass": {
        "computational graph": 7,
        "variable naming convention": 6,
        "local gradients": 3,
        "exact variable names": 3,
        "plus layer": 2,
        "square layer": 2,
        "squared loss layer tasks": 2,
        "squared loss white box": 2,
        "squared loss black box": 2,
        "gradients": 1,
        "stateless": 1,
        "stateful layer": 1,
        "output gradient": 1,
        "computational graphs": 1,
        "python builtin locals() function": 1,
        "backward pass": 1,
        "affine layer tasks": 1,
        "affine white box": 1,
        "affine layer": 1,
        "affine black box": 1,
        "affine layers": 1,
        "backpropagation": 1,
        "forward pass tasks": 1
    },
    "basic numeric types": {
        "coding practice": 6,
        "symbolic math": 5,
        "mathematical operations": 3,
        "integer division": 3,
        "integer addition": 2,
        "integer subtraction": 2,
        "subtraction": 2,
        "integer multiplication": 2,
        "multiplication": 2,
        "mathematical operators": 1,
        "integers": 1,
        "keyboard representations": 1,
        "programming language": 1,
        "fractional component": 1,
        "code cell": 1,
        "integer addition operations": 1,
        "integer subtraction operations": 1,
        "integer multiplication operations": 1,
        "integer division operations": 1,
        "integer operations": 1,
        "fractions": 1,
        "decimals": 1,
        "non-integer numbers": 1,
        "division": 1,
        "floating point numbers": 1
    },
    "word of interest": {
        "nltk": 3,
        "nonempty sentences": 3,
        "stopwords": 2,
        "tokenized sentences": 2,
        "datahub": 2,
        "follwing code block": 2,
        "word vectors": 2,
        "word vector": 2,
        "leadership": 2,
        "word embeddings": 1,
        "empty cells": 1,
        "word relationships": 1,
        "gensim": 1,
        "cosine similarity": 1,
        "president": 1,
        "similarity score": 1,
        "smilarity score": 1,
        "cosine distance": 1,
        "mean vector": 1,
        "vector math": 1,
        "semantics": 1,
        "output vectors": 1,
        "queen": 1,
        "manliness": 1,
        "word vector king": 1,
        "feminine attribute": 1,
        "royalty": 1,
        "standardize x": 1,
        "inaugural corpus": 1,
        "word usage": 1,
        "chat data": 1,
        "summary stats": 1
    },
    "h": {
        "postgresql": 2,
        "sql": 2,
        "aggregate functions": 2,
        "desc keyword": 1,
        "order by keyword": 1,
        "sql aliases": 1,
        "sql alias syntax": 1,
        "query arguments": 1,
        "database table": 1,
        "alias as": 1,
        "column": 1,
        "aliases": 1,
        "wildcards": 1,
        "where clause": 1,
        "missing letters": 1,
        "select distinct statement": 1,
        "distinct operator": 1,
        "limit operator": 1,
        "limit syntax": 1,
        "sql subqueries": 1,
        "group by statement": 1,
        "group by operator": 1,
        "having operator": 1,
        "having clause": 1,
        "else statement": 1,
        "date documentation": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "filter": {
        "list comprehensions": 15,
        "map()": 4,
        "assertion test": 3,
        "map function": 3,
        "test case": 2,
        "double for loop": 2,
        "nested list": 2,
        "functional programming": 2,
        "inner loop": 2,
        "outer loop": 2,
        "long words": 2,
        "return value": 2,
        "filter()": 1,
        "hashtags": 1
    },
    "list comprehensiosn": {
        "list comprehensions": 15,
        "map()": 4,
        "assertion test": 3,
        "map function": 3,
        "test case": 2,
        "double for loop": 2,
        "nested list": 2,
        "functional programming": 2,
        "inner loop": 2,
        "outer loop": 2,
        "long words": 2,
        "return value": 2,
        "filter()": 1,
        "hashtags": 1
    },
    "classification regression": {
        "pipeline": 6,
        "target": 4,
        "randomforestregressor model": 4,
        "gridsearchcv": 4,
        "lasso": 3,
        "sklearn object": 3,
        "scaler object": 3,
        "randomforestregressor": 2,
        "model parameters": 2,
        "selectkbest": 1,
        "shufflesplit": 1,
        "scaler": 1,
        "preprocessing steps": 1,
        "optimal pipeline": 1,
        "optimal preprocessing": 1,
        "pipelines": 1,
        "model selection": 1,
        "pre": 1,
        "hyperparameter tuning": 1,
        "sql query": 1
    },
    "house prices": {
        "radial highways": 3,
        "residential land z": 3,
        "weighted distances": 3,
        "charles river dummy variable": 3,
        "rad index": 3,
        "tract bounds river": 3,
        "boston employment centres": 3,
        "descr attribute": 3,
        "non-retail business acres": 3,
        "black": 3,
        "nox nitric oxides concentration": 3,
        "crime rate": 3,
        "training error": 2,
        "outlier": 1,
        "test error": 1,
        "root mean squared error": 1,
        "average": 1
    },
    "simulation": {
        "lattice": 5,
        "python based implementation": 2,
        "markov chain": 2,
        "exercise": 2,
        "attice": 2,
        "transition behavior": 2,
        "deterministic results": 2,
        "random seed": 2,
        "simulation": 2,
        "relative frequencies": 2,
        "copy module": 2,
        "bar plot": 2,
        "transition dictionary": 2,
        "stationary distribution": 2,
        "transition matrix": 2,
        "markov chains": 1,
        "state frequencies": 1,
        "transition matrices": 1,
        "transition model": 1,
        "python function": 1,
        "transition probabilities": 1,
        "time interval": 1,
        "pressure values": 1,
        "odeint": 1
    },
    "titanic dataset": {
        "women": 6,
        "titanic": 5,
        "bar plot": 5,
        "kaggle data documentation": 4,
        "datatypes": 4,
        "numeric columns": 4,
        "data manipulation": 3,
        "kaggle": 3,
        "passengerid": 3,
        "titanic dataset feature": 2,
        "bar plots": 2,
        "men": 1
    },
    "test boxes": {
        "kernel function": 4,
        "gaussian process regression": 4,
        "univariate problem": 4,
        "kernel matrix": 4,
        "predictive distribution": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "covariance matrix": 3,
        "generative process": 3,
        "conditional models": 3,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "vector machines": {
        "kernel function": 4,
        "gaussian process regression": 4,
        "univariate problem": 4,
        "kernel matrix": 4,
        "predictive distribution": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "covariance matrix": 3,
        "generative process": 3,
        "conditional models": 3,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "lower case characters": {
        "vocab": 4,
        "word vector": 4,
        "word frequency": 2,
        "review data": 2,
        "word vectors": 2,
        "frame": 2,
        "count value": 2,
        "word2idx": 2,
        "dictionary comprehension": 2,
        "review data set": 2,
        "learning rate loss": 2,
        "training method": 2,
        "network error": 2,
        "activation function": 2,
        "hidden layers": 2,
        "batch size": 2,
        "10000 element long vectors": 2,
        "stochastic gradient descent": 2,
        "connected layer": 2
    },
    "berkeley": {
        "cvlegend": 3,
        "calls dataframe": 2,
        "vertical bar plot": 2,
        "zip": 1,
        "zip archive": 1,
        "data directory": 1,
        "uncompressed files": 1,
        "compressed files": 1,
        "lib": 1,
        "pathlib": 1,
        "glob": 1,
        "cvdow": 1,
        "offense type": 1,
        "case number": 1,
        "numerical columns": 1,
        "type information": 1,
        "barh plot type": 1,
        "series class": 1,
        "value counts": 1,
        "countplot": 1,
        "seaborn library": 1,
        "countplot method": 1,
        "pandas plot": 1,
        "order parameter": 1,
        "cvdow field": 1,
        "coolindex": 1,
        "noise violation": 1,
        "seaborn plot": 1,
        "total noise violations": 1,
        "noise violation calls": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "discriminator": {
        "python variables": 5,
        "python variable": 4,
        "noise distribution": 4,
        "data distribution": 4,
        "gan hint": 2,
        "keras functional api": 2,
        "input size": 2,
        "variables": 2,
        "full training loop solution task": 2,
        "discriminator": 2,
        "context manager": 2,
        "semantics": 2,
        "single adversarial training example": 2,
        "synthetic images": 2,
        "generative adversarial training": 2,
        "kernel density estimation plot": 2,
        "fake images": 1
    },
    "generative adversarial networks lab": {
        "python variables": 5,
        "python variable": 4,
        "noise distribution": 4,
        "data distribution": 4,
        "gan hint": 2,
        "keras functional api": 2,
        "input size": 2,
        "variables": 2,
        "full training loop solution task": 2,
        "discriminator": 2,
        "context manager": 2,
        "semantics": 2,
        "single adversarial training example": 2,
        "synthetic images": 2,
        "generative adversarial training": 2,
        "kernel density estimation plot": 2,
        "fake images": 1
    },
    "generative adversarial model": {
        "python variables": 5,
        "python variable": 4,
        "noise distribution": 4,
        "data distribution": 4,
        "gan hint": 2,
        "keras functional api": 2,
        "input size": 2,
        "variables": 2,
        "full training loop solution task": 2,
        "discriminator": 2,
        "context manager": 2,
        "semantics": 2,
        "single adversarial training example": 2,
        "synthetic images": 2,
        "generative adversarial training": 2,
        "kernel density estimation plot": 2,
        "fake images": 1
    },
    "adversarial training": {
        "python variables": 5,
        "python variable": 4,
        "noise distribution": 4,
        "data distribution": 4,
        "gan hint": 2,
        "keras functional api": 2,
        "input size": 2,
        "variables": 2,
        "full training loop solution task": 2,
        "discriminator": 2,
        "context manager": 2,
        "semantics": 2,
        "single adversarial training example": 2,
        "synthetic images": 2,
        "generative adversarial training": 2,
        "kernel density estimation plot": 2,
        "fake images": 1
    },
    "generative adversarial networks training lab": {
        "python variables": 5,
        "python variable": 4,
        "noise distribution": 4,
        "data distribution": 4,
        "gan hint": 2,
        "keras functional api": 2,
        "input size": 2,
        "variables": 2,
        "full training loop solution task": 2,
        "discriminator": 2,
        "context manager": 2,
        "semantics": 2,
        "single adversarial training example": 2,
        "synthetic images": 2,
        "generative adversarial training": 2,
        "kernel density estimation plot": 2,
        "fake images": 1
    },
    "scraper": {
        "html": 4,
        "restaurant names": 4,
        "restaurant number of bookings": 2,
        "web scraper": 2,
        "restaurant prices": 2,
        "soup object": 2,
        "html objct": 2,
        "bs4": 2,
        "html page": 2,
        "google chrome": 2,
        "inspect": 2,
        "commas": 2,
        "tag objects": 2,
        "python string": 2,
        "beautiful soup": 2,
        "tag object": 2,
        "restaurant locations": 2,
        "barmini": 2,
        "search results": 2
    },
    "urllib libraries": {
        "html": 4,
        "restaurant names": 4,
        "restaurant number of bookings": 2,
        "web scraper": 2,
        "restaurant prices": 2,
        "soup object": 2,
        "html objct": 2,
        "bs4": 2,
        "html page": 2,
        "google chrome": 2,
        "inspect": 2,
        "commas": 2,
        "tag objects": 2,
        "python string": 2,
        "beautiful soup": 2,
        "tag object": 2,
        "restaurant locations": 2,
        "barmini": 2,
        "search results": 2
    },
    "2d vector": {
        "2d array": 4,
        "orthonormal basis": 4,
        "2d vector": 2,
        "3d vector": 2,
        "python list": 2,
        "word dimension": 2,
        "array dimension": 2,
        "vector dimension": 2,
        "1d array": 2,
        "matrix": 2,
        "2d vectors": 2,
        "arrows": 2,
        "unit vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "dot product": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2
    },
    "3d vector": {
        "2d array": 4,
        "orthonormal basis": 4,
        "2d vector": 2,
        "3d vector": 2,
        "python list": 2,
        "word dimension": 2,
        "array dimension": 2,
        "vector dimension": 2,
        "1d array": 2,
        "matrix": 2,
        "2d vectors": 2,
        "arrows": 2,
        "unit vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "dot product": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2
    },
    "vector notation": {
        "2d array": 4,
        "orthonormal basis": 4,
        "2d vector": 2,
        "3d vector": 2,
        "python list": 2,
        "word dimension": 2,
        "array dimension": 2,
        "vector dimension": 2,
        "1d array": 2,
        "matrix": 2,
        "2d vectors": 2,
        "arrows": 2,
        "unit vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "dot product": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2
    },
    "factor": {
        "receiving node": 10,
        "marginalizing": 9,
        "sending": 5,
        "functional programming": 5,
        "1d numpy arrays": 5,
        "tensor representations": 4,
        "numpy broadcasting": 4
    },
    "receiving node": {
        "receiving node": 10,
        "marginalizing": 9,
        "sending": 5,
        "functional programming": 5,
        "1d numpy arrays": 5,
        "tensor representations": 4,
        "numpy broadcasting": 4
    },
    "factor class": {
        "receiving node": 10,
        "marginalizing": 9,
        "sending": 5,
        "functional programming": 5,
        "1d numpy arrays": 5,
        "tensor representations": 4,
        "numpy broadcasting": 4
    },
    "linearregression": {
        "missing data": 2,
        "photometric redshifts": 2,
        "machine learning model": 2,
        "passengers": 1,
        "age regression model": 1,
        "age estimates": 1,
        "passenger survival": 1,
        "titanic": 1,
        "age feature": 1,
        "child feature": 1,
        "le": 1,
        "blind data": 1,
        "k": 1,
        "astro machine learning model": 1,
        "lsst": 1,
        "astronomical problem": 1,
        "galaxies": 1,
        "spectroscopic measurements": 1,
        "photometry": 1,
        "sdss casjobs": 1,
        "specobjid": 1,
        "psf mag": 1,
        "psfmag": 1,
        "modelmag": 1,
        "ds": 1,
        "sfd extinction estimate": 1,
        "sdss identifier": 1,
        "sdss photometric type": 1,
        "upper": 1,
        "sdss source": 1,
        "wise filters": 1,
        "categorical features": 1,
        "categorical variable": 1,
        "nearest neighbors regression model": 1,
        "sdss dataframe": 1,
        "categorical data": 1,
        "l": 1,
        "scatterplot": 1,
        "predicted values": 1
    },
    "train test split": {
        "knn model": 16,
        "confusion matrix": 9,
        "predict method": 5,
        "pipeline": 3,
        "multinomialnb": 2,
        "countvectorizer": 2,
        "tfidftransformer": 2,
        "train test split": 2
    },
    "grid search": {
        "leaf specimens": 3,
        "csv data file": 3,
        "digital images": 3,
        "plant species": 3,
        "specimen number": 3,
        "randomforestclassifier": 2,
        "random forest classifier": 2,
        "score function": 2,
        "pipeline anova rfc": 1,
        "anova filter": 1,
        "random forest classification": 1,
        "ord": 1,
        "binary indicator": 1,
        "depdelay variables": 1,
        "feature scaling": 1,
        "recursive feature elimination": 1,
        "svc classification": 1,
        "gridsearchcv": 1,
        "svc algorithm": 1,
        "c parameter": 1,
        "extratree": 1,
        "decision rules": 1,
        "decisiontreeregression": 1,
        "decision trees": 1,
        "decisiontreeregressor": 1,
        "important features": 1,
        "importance weight": 1,
        "validation data": 1
    },
    "likelihood function": {
        "time delays": 6,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "minimize function": 2,
        "posterior uncertainties": 2,
        "optimization": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1,
        "validation": 1,
        "trainingset": 1,
        "sgd iterations": 1,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "mlp": 1,
        "hidden layer": 1,
        "non-linear activation function": 1
    },
    "manipulator equations": {
        "lqr": 4,
        "gains matrix": 2,
        "algebraic riccati equation solution": 2,
        "algebraic ricatti equation": 2,
        "qr": 2,
        "linear algebra operations": 2,
        "api": 2,
        "algebraic riccati equation": 2,
        "feedback control law": 2,
        "quadratic cost function": 2,
        "unstable equilibrium state vector": 2,
        "control system": 2,
        "cost function": 2,
        "r cost matrices": 2,
        "lqr solver": 1,
        "linearization": 1,
        "pend": 1,
        "small": 1,
        "angular speed": 1,
        "goal state": 1,
        "fixed goal state": 1,
        "initial values": 1,
        "nonlinear system": 1,
        "fixed end goal state": 1,
        "q": 1
    },
    "kinetic energy": {
        "lqr": 4,
        "gains matrix": 2,
        "algebraic riccati equation solution": 2,
        "algebraic ricatti equation": 2,
        "qr": 2,
        "linear algebra operations": 2,
        "api": 2,
        "algebraic riccati equation": 2,
        "feedback control law": 2,
        "quadratic cost function": 2,
        "unstable equilibrium state vector": 2,
        "control system": 2,
        "cost function": 2,
        "r cost matrices": 2,
        "lqr solver": 1,
        "linearization": 1,
        "pend": 1,
        "small": 1,
        "angular speed": 1,
        "goal state": 1,
        "fixed goal state": 1,
        "initial values": 1,
        "nonlinear system": 1,
        "fixed end goal state": 1,
        "q": 1
    },
    "matrix linearization": {
        "lqr": 4,
        "gains matrix": 2,
        "algebraic riccati equation solution": 2,
        "algebraic ricatti equation": 2,
        "qr": 2,
        "linear algebra operations": 2,
        "api": 2,
        "algebraic riccati equation": 2,
        "feedback control law": 2,
        "quadratic cost function": 2,
        "unstable equilibrium state vector": 2,
        "control system": 2,
        "cost function": 2,
        "r cost matrices": 2,
        "lqr solver": 1,
        "linearization": 1,
        "pend": 1,
        "small": 1,
        "angular speed": 1,
        "goal state": 1,
        "fixed goal state": 1,
        "initial values": 1,
        "nonlinear system": 1,
        "fixed end goal state": 1,
        "q": 1
    },
    "taylor expansions": {
        "lqr": 4,
        "gains matrix": 2,
        "algebraic riccati equation solution": 2,
        "algebraic ricatti equation": 2,
        "qr": 2,
        "linear algebra operations": 2,
        "api": 2,
        "algebraic riccati equation": 2,
        "feedback control law": 2,
        "quadratic cost function": 2,
        "unstable equilibrium state vector": 2,
        "control system": 2,
        "cost function": 2,
        "r cost matrices": 2,
        "lqr solver": 1,
        "linearization": 1,
        "pend": 1,
        "small": 1,
        "angular speed": 1,
        "goal state": 1,
        "fixed goal state": 1,
        "initial values": 1,
        "nonlinear system": 1,
        "fixed end goal state": 1,
        "q": 1
    },
    "lagrangian mechanics": {
        "lqr": 4,
        "gains matrix": 2,
        "algebraic riccati equation solution": 2,
        "algebraic ricatti equation": 2,
        "qr": 2,
        "linear algebra operations": 2,
        "api": 2,
        "algebraic riccati equation": 2,
        "feedback control law": 2,
        "quadratic cost function": 2,
        "unstable equilibrium state vector": 2,
        "control system": 2,
        "cost function": 2,
        "r cost matrices": 2,
        "lqr solver": 1,
        "linearization": 1,
        "pend": 1,
        "small": 1,
        "angular speed": 1,
        "goal state": 1,
        "fixed goal state": 1,
        "initial values": 1,
        "nonlinear system": 1,
        "fixed end goal state": 1,
        "q": 1
    },
    "crime": {
        "cvlegend": 6,
        "datetime64": 6,
        "libraries": 5,
        "crime": 4,
        "crime events": 3,
        "barh plot type": 3,
        "value counts": 3,
        "regular bar plot": 3,
        "population column number": 2,
        "countplot": 2,
        "answer3b": 2,
        "noise violation": 2
    },
    "bar chart": {
        "postgresql": 8,
        "catalog": 8,
        "product data": 6,
        "shipping time": 3,
        "passenger class": 2,
        "women": 1,
        "wealth": 1,
        "age distributions": 1,
        "hypothesis testing": 1,
        "statistical method": 1,
        "internet": 1,
        "statistical hypothesis": 1,
        "null hypothesis": 1,
        "hypothesis test": 1,
        "age": 1,
        "alternative hypothesis": 1,
        "sex": 1,
        "embarked columns": 1,
        "horizontal bars": 1
    },
    "correctly classified examples": {
        "false positives": 6,
        "false negatives": 3,
        "prediction accuracy": 3,
        "boosted trees model": 3,
        "decision trees": 3,
        "decision tree model": 3,
        "probabilities": 3,
        "prediction probability": 3,
        "tree models": 2,
        "classification error": 2,
        "training errors": 2,
        "check": 1,
        "gradient boosted trees": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1
    },
    "plos search api": {
        "california institute of technology": 4,
        "search": 2,
        "affiliation term": 2,
        "os": 2,
        "caltech": 2,
        "advanced search functionality": 2,
        "plos": 2,
        "plos alm api": 2,
        "variable dois": 2,
        "alm api": 2,
        "europepubmedcentral citations": 2,
        "article level metrics": 2,
        "facebook posts": 2,
        "plos article level metrics": 2,
        "europepmc citations": 2,
        "tweets": 2,
        "api": 2,
        "variable caltech": 2,
        "twitter handles": 1,
        "unique account names": 1,
        "twitter account handles": 1
    },
    "publisher api": {
        "california institute of technology": 4,
        "search": 2,
        "affiliation term": 2,
        "os": 2,
        "caltech": 2,
        "advanced search functionality": 2,
        "plos": 2,
        "plos alm api": 2,
        "variable dois": 2,
        "alm api": 2,
        "europepubmedcentral citations": 2,
        "article level metrics": 2,
        "facebook posts": 2,
        "plos article level metrics": 2,
        "europepmc citations": 2,
        "tweets": 2,
        "api": 2,
        "variable caltech": 2,
        "twitter handles": 1,
        "unique account names": 1,
        "twitter account handles": 1
    },
    "graph concepts": {
        "directed graph": 7,
        "networkx": 6,
        "drawing function": 6,
        "even integer node": 4,
        "matplotlib axes": 3,
        "undirected multigraph": 3,
        "ax parameter": 3,
        "multigraph": 3,
        "even integer nodes": 2,
        "odd integer nodes": 2,
        "nodes": 1,
        "integer node": 1
    },
    "pyspark": {
        "unit tests": 10,
        "spark exercise": 9,
        "coll": 3,
        "non_duplicates": 3,
        "rdd": 3,
        "cartesian product": 3,
        "line segment": 3,
        "map transformation": 2,
        "collinear points": 1,
        "r": 1,
        "spark rdd api": 1,
        "helper functions": 1,
        "assert statement unit tests": 1
    },
    "supervised machine learning": {
        "age": 4,
        "parmaters": 4,
        "train set": 3,
        "cross products": 3,
        "polynomial features extraction": 3,
        "optimal weights": 3,
        "multiple linear regression": 3,
        "polynomal expansion function": 3,
        "missing": 2,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1,
        "dropna": 1,
        "pandas dataframes": 1,
        "labels": 1,
        "random noise": 1,
        "noise level": 1
    },
    "unitprice": {
        "sql": 4,
        "aggregate functions": 4,
        "postgresql": 3,
        "limit operator": 2,
        "limit syntax": 2,
        "sql subqueries": 2,
        "group by statement": 2,
        "group by operator": 2,
        "having operator": 2,
        "having clause": 2,
        "else statement": 2,
        "date documentation": 2,
        "sql aliases": 1,
        "sql alias syntax": 1,
        "query arguments": 1,
        "database table": 1,
        "alias as": 1,
        "column": 1,
        "aliases": 1,
        "wildcards": 1,
        "where clause": 1,
        "missing letters": 1,
        "select distinct statement": 1,
        "distinct operator": 1
    },
    "conditional probabilities": {
        "icon array": 10,
        "green marble": 3,
        "full icon array": 3,
        "conditional probability": 3,
        "marbles": 2,
        "icon arrays": 2,
        "icon colors": 2,
        "green marbles": 1,
        "chemotherapy": 1,
        "radiation": 1,
        "women": 1,
        "probability distributions": 1,
        "cancer screening": 1,
        "medical tests": 1,
        "breast cancer": 1,
        "false positives": 1,
        "basic cancer statistics": 1,
        "contingency table": 1,
        "pivot": 1,
        "status": 1,
        "sum function": 1,
        "cancer test": 1,
        "population members": 1
    },
    "breed": {
        "icon array": 10,
        "green marble": 3,
        "full icon array": 3,
        "conditional probability": 3,
        "marbles": 2,
        "icon arrays": 2,
        "icon colors": 2,
        "green marbles": 1,
        "chemotherapy": 1,
        "radiation": 1,
        "women": 1,
        "probability distributions": 1,
        "cancer screening": 1,
        "medical tests": 1,
        "breast cancer": 1,
        "false positives": 1,
        "basic cancer statistics": 1,
        "contingency table": 1,
        "pivot": 1,
        "status": 1,
        "sum function": 1,
        "cancer test": 1,
        "population members": 1
    },
    "known population": {
        "icon array": 10,
        "green marble": 3,
        "full icon array": 3,
        "conditional probability": 3,
        "marbles": 2,
        "icon arrays": 2,
        "icon colors": 2,
        "green marbles": 1,
        "chemotherapy": 1,
        "radiation": 1,
        "women": 1,
        "probability distributions": 1,
        "cancer screening": 1,
        "medical tests": 1,
        "breast cancer": 1,
        "false positives": 1,
        "basic cancer statistics": 1,
        "contingency table": 1,
        "pivot": 1,
        "status": 1,
        "sum function": 1,
        "cancer test": 1,
        "population members": 1
    },
    "cancer": {
        "icon array": 10,
        "green marble": 3,
        "full icon array": 3,
        "conditional probability": 3,
        "marbles": 2,
        "icon arrays": 2,
        "icon colors": 2,
        "green marbles": 1,
        "chemotherapy": 1,
        "radiation": 1,
        "women": 1,
        "probability distributions": 1,
        "cancer screening": 1,
        "medical tests": 1,
        "breast cancer": 1,
        "false positives": 1,
        "basic cancer statistics": 1,
        "contingency table": 1,
        "pivot": 1,
        "status": 1,
        "sum function": 1,
        "cancer test": 1,
        "population members": 1
    },
    "vectorized operations": {
        "response times": 2,
        "average response time": 2,
        "figure object": 2,
        "matshow": 2,
        "squared exponential distance": 2,
        "response time": 1,
        "mean function": 1,
        "np": 1,
        "axis flag": 1,
        "axis argument": 1,
        "magic function": 1,
        "imports": 1,
        "pyplot module": 1,
        "trial numbers": 1,
        "trials array": 1,
        "descriptive statistics": 1,
        "axis object": 1,
        "multiple subplots": 1,
        "axis objects": 1,
        "medians": 1,
        "trial means": 1,
        "trial medians": 1,
        "keyword argument": 1,
        "marker symbols": 1,
        "axis labels": 1,
        "plotting function": 1,
        "panda": 1,
        "pixel intensities": 1,
        "2d array": 1,
        "heatmap": 1,
        "pixel intensity values": 1,
        "colormap": 1,
        "cmap": 1,
        "exercise": 1,
        "green cells": 1,
        "docstring": 1
    },
    "calculus solutions": {
        "docstring": 6,
        "derivatives": 6,
        "integrals": 5,
        "fraction function": 3,
        "denomin": 3,
        "indeterminate forms": 3,
        "mean value": 3,
        "integral table": 3,
        "inverse trig functions": 2,
        "sympy": 2,
        "limit definition": 1,
        "derivative": 1,
        "nth fibonicci number": 1,
        "series": 1
    },
    "stan": {
        "pystan": 3,
        "traceplot": 3,
        "grand old party": 2,
        "bayesian analysis": 2,
        "election": 2,
        "case study": 2,
        "predictors": 2,
        "polling data": 2,
        "pystan logistic regression model": 2,
        "parameter graphs": 2,
        "summary stats": 2,
        "quartile": 2,
        "pystan docs": 2,
        "bayesian regression": 1,
        "pandas dictionary": 1,
        "trace": 1,
        "extracted": 1,
        "pandas data frame": 1,
        "python function": 1,
        "bayesian models": 1,
        "predictor function": 1,
        "predfunction": 1,
        "linspace form numpy": 1,
        "coeffecient medians": 1,
        "pyplot": 1
    },
    "polling data": {
        "pystan": 3,
        "traceplot": 3,
        "grand old party": 2,
        "bayesian analysis": 2,
        "election": 2,
        "case study": 2,
        "predictors": 2,
        "polling data": 2,
        "pystan logistic regression model": 2,
        "parameter graphs": 2,
        "summary stats": 2,
        "quartile": 2,
        "pystan docs": 2,
        "bayesian regression": 1,
        "pandas dictionary": 1,
        "trace": 1,
        "extracted": 1,
        "pandas data frame": 1,
        "python function": 1,
        "bayesian models": 1,
        "predictor function": 1,
        "predfunction": 1,
        "linspace form numpy": 1,
        "coeffecient medians": 1,
        "pyplot": 1
    },
    "succeding component": {
        "eigenvectors": 6,
        "pca": 6,
        "residual noise": 3,
        "dimensionality reduction": 3,
        "principal component analysis": 3,
        "principal components": 3,
        "2d vectors": 3,
        "linear coefficients": 3,
        "pca space": 3,
        "iris data": 3,
        "plotting function": 2,
        "data matrix x": 2
    },
    "simpsons": {
        "students": 7,
        "aliases": 6,
        "last name": 6,
        "student id": 4,
        "entity relationships": 2,
        "student social security numbers": 2,
        "nicknames": 2,
        "student home addresses": 2,
        "enrollment": 2,
        "social security number": 2,
        "alias": 2,
        "first name": 2,
        "concatenation": 1
    },
    "white noise standard deviation": {
        "time delays": 6,
        "associated gradient functions": 2,
        "predictive distribution": 2,
        "neg log likelihood": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "minimize function": 2,
        "posterior uncertainties": 2,
        "optimization": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "likelihood surface": {
        "time delays": 6,
        "associated gradient functions": 2,
        "predictive distribution": 2,
        "neg log likelihood": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "minimize function": 2,
        "posterior uncertainties": 2,
        "optimization": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "time delays": {
        "time delays": 6,
        "associated gradient functions": 2,
        "predictive distribution": 2,
        "neg log likelihood": 2,
        "xcorr": 2,
        "lags": 2,
        "delays": 2,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "minimize function": 2,
        "posterior uncertainties": 2,
        "optimization": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "predictions": {
        "income": 19,
        "polyfit": 9,
        "output parameters": 4,
        "integer age": 3,
        "age": 3,
        "prediction power": 1,
        "steps": 1
    },
    "wolfram mathworld": {
        "math module": 7,
        "image function": 7,
        "web pages": 7,
        "arithmetic operators": 6,
        "donald knuth": 5,
        "string method lower": 5,
        "square brackets": 3
    },
    "modules": {
        "math module": 7,
        "image function": 7,
        "web pages": 7,
        "arithmetic operators": 6,
        "donald knuth": 5,
        "string method lower": 5,
        "square brackets": 3
    },
    "principle component analysis": {
        "nltk": 3,
        "nonempty sentences": 3,
        "stopwords": 2,
        "tokenized sentences": 2,
        "datahub": 2,
        "follwing code block": 2,
        "word vectors": 2,
        "word vector": 2,
        "leadership": 2,
        "standardize x": 2,
        "word embeddings": 1,
        "empty cells": 1,
        "word relationships": 1,
        "gensim": 1,
        "cosine similarity": 1,
        "president": 1,
        "similarity score": 1,
        "smilarity score": 1,
        "cosine distance": 1,
        "mean vector": 1,
        "vector math": 1,
        "semantics": 1,
        "output vectors": 1,
        "queen": 1,
        "manliness": 1,
        "word vector king": 1,
        "feminine attribute": 1,
        "royalty": 1
    },
    "load models tests": {
        "python variable": 4,
        "noise distribution": 4,
        "data distribution": 4,
        "python variables": 3,
        "gan hint": 2,
        "keras functional api": 2,
        "input size": 2,
        "variables": 2,
        "full training loop solution task": 2,
        "discriminator": 2,
        "context manager": 2,
        "semantics": 2,
        "single adversarial training example": 2,
        "synthetic images": 2,
        "generative adversarial training": 2,
        "kernel density estimation plot": 2,
        "fake images": 1
    },
    "orthonormal basis": {
        "orthonormal basis": 10,
        "standard basis": 6,
        "\\ld": 4,
        "basis vectors": 4,
        "unit vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "dot product": 2,
        "coordinate system": 2,
        "vector": 2,
        "ots": 2,
        "reconstruction": 2
    },
    "spam email": {
        "predction model": 2,
        "zero predictor": 2,
        "filtering rate": 2,
        "beautifulsoup": 2,
        "spam mails": 2,
        "filter rate": 2,
        "spammy words": 2,
        "characterstics": 2,
        "html table": 2,
        "data parsing": 2,
        "spam": 2,
        "web crawling": 2,
        "datahub": 2,
        "contour plot": 2,
        "false negatives": 2,
        "email": 2,
        "cutoff probability": 2,
        "final classifier": 2,
        "cancer screenings": 2,
        "false positives": 2
    },
    "suppliers table": {
        "postgresql": 4,
        "sql": 4,
        "aggregate functions": 4,
        "date documentation": 3,
        "select distinct statement": 2,
        "distinct operator": 2,
        "limit operator": 2,
        "limit syntax": 2,
        "sql subqueries": 2,
        "group by statement": 2,
        "group by operator": 2,
        "having operator": 2,
        "having clause": 2,
        "else statement": 2,
        "column": 1,
        "aliases": 1,
        "wildcards": 1,
        "where clause": 1,
        "missing letters": 1
    },
    "price ratio": {
        "tickers": 3,
        "ticker names": 3,
        "covariance matrix": 3,
        "eigenvalues": 2,
        "eigenvectors": 2,
        "tickerinfo": 2,
        "spark context": 1,
        "import dependencies": 1,
        "spark dataframe": 1,
        "stock price": 1,
        "sp500": 1,
        "partition columns": 1,
        "test lists": 1,
        "training examples": 1,
        "test list": 1,
        "test examples": 1,
        "train example": 1,
        "tick": 1,
        "numpy vectors": 1,
        "diff rolumns": 1,
        "eigenval": 1,
        "eigh function": 1,
        "computecov function": 1,
        "cov key": 1,
        "spectral analysis": 1,
        "directory figs": 1,
        "holiday shopping": 1,
        "income distribution": 1,
        "company name": 1,
        "sector ids": 1,
        "sector id": 1
    },
    "gpa": {
        "flight delay prediction": 3,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2,
        "count()": 2,
        "dropna()": 2,
        "outliers": 2,
        "median": 2,
        "logistic function": 1,
        "logit link function": 1,
        "odds ratios": 1,
        "college admissions data": 1,
        "logistic regression prediction line": 1,
        "binary class": 1
    },
    "sampling": {
        "lattice": 5,
        "python based implementation": 2,
        "markov chain": 2,
        "exercise": 2,
        "attice": 2,
        "transition behavior": 2,
        "deterministic results": 2,
        "random seed": 2,
        "simulation": 2,
        "relative frequencies": 2,
        "copy module": 2,
        "bar plot": 2,
        "transition dictionary": 2,
        "stationary distribution": 2,
        "transition matrix": 2,
        "markov chains": 1,
        "state frequencies": 1,
        "transition matrices": 1,
        "transition model": 1,
        "python function": 1,
        "transition probabilities": 1
    },
    "fictional army": {
        "army": 10,
        "column veterans": 8,
        "alaska": 7,
        "maine": 7,
        "column index order": 3,
        "arizona": 2,
        "texas": 1,
        "deaths": 1
    },
    "postal code": {
        "postal code": 7,
        "extended zip codes": 5,
        "extended postal codes": 5,
        "zip codes": 4,
        "zip code": 2,
        "missing zip codes": 2,
        "businesses": 1,
        "fillna": 1,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94602": 1,
        "94545": 1,
        "business name": 1,
        "zip": 1,
        "search engine": 1
    },
    "bus data frame": {
        "postal code": 7,
        "extended zip codes": 5,
        "extended postal codes": 5,
        "zip codes": 4,
        "zip code": 2,
        "missing zip codes": 2,
        "businesses": 1,
        "fillna": 1,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94602": 1,
        "94545": 1,
        "business name": 1,
        "zip": 1,
        "search engine": 1
    },
    "business table": {
        "postal code": 7,
        "extended zip codes": 5,
        "extended postal codes": 5,
        "zip codes": 4,
        "zip code": 2,
        "missing zip codes": 2,
        "businesses": 1,
        "fillna": 1,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94602": 1,
        "94545": 1,
        "business name": 1,
        "zip": 1,
        "search engine": 1
    },
    "adjusted rand index": {
        "handwritten": 4,
        "numerical dataset": 4,
        "pandas data frame": 4,
        "adjusted rand index": 4,
        "standardize": 3,
        "elbow method": 2,
        "inflection point": 2,
        "elbow plot": 2,
        "default parameters": 2,
        "digits dataset": 2,
        "permutation": 2,
        "rand index": 2,
        "ari score": 2,
        "random labeling": 2,
        "true clusterings": 2
    },
    "digits dataset": {
        "handwritten": 4,
        "numerical dataset": 4,
        "pandas data frame": 4,
        "adjusted rand index": 4,
        "standardize": 3,
        "elbow method": 2,
        "inflection point": 2,
        "elbow plot": 2,
        "default parameters": 2,
        "digits dataset": 2,
        "permutation": 2,
        "rand index": 2,
        "ari score": 2,
        "random labeling": 2,
        "true clusterings": 2
    },
    "pc": {
        "nltk": 3,
        "nonempty sentences": 3,
        "stopwords": 2,
        "tokenized sentences": 2,
        "datahub": 2,
        "follwing code block": 2,
        "word vectors": 2,
        "word vector": 2,
        "leadership": 2,
        "word embeddings": 1,
        "empty cells": 1,
        "word relationships": 1,
        "gensim": 1,
        "cosine similarity": 1,
        "president": 1,
        "similarity score": 1,
        "smilarity score": 1,
        "cosine distance": 1,
        "mean vector": 1,
        "vector math": 1,
        "semantics": 1,
        "output vectors": 1,
        "queen": 1,
        "manliness": 1,
        "word vector king": 1,
        "feminine attribute": 1,
        "royalty": 1,
        "standardize x": 1
    },
    "un general debates dataset": {
        "nltk": 3,
        "nonempty sentences": 3,
        "stopwords": 2,
        "tokenized sentences": 2,
        "datahub": 2,
        "follwing code block": 2,
        "word vectors": 2,
        "word vector": 2,
        "leadership": 2,
        "word embeddings": 1,
        "empty cells": 1,
        "word relationships": 1,
        "gensim": 1,
        "cosine similarity": 1,
        "president": 1,
        "similarity score": 1,
        "smilarity score": 1,
        "cosine distance": 1,
        "mean vector": 1,
        "vector math": 1,
        "semantics": 1,
        "output vectors": 1,
        "queen": 1,
        "manliness": 1,
        "word vector king": 1,
        "feminine attribute": 1,
        "royalty": 1,
        "standardize x": 1
    },
    "word2vec algorithm": {
        "nltk": 3,
        "nonempty sentences": 3,
        "stopwords": 2,
        "tokenized sentences": 2,
        "datahub": 2,
        "follwing code block": 2,
        "word vectors": 2,
        "word vector": 2,
        "leadership": 2,
        "word embeddings": 1,
        "empty cells": 1,
        "word relationships": 1,
        "gensim": 1,
        "cosine similarity": 1,
        "president": 1,
        "similarity score": 1,
        "smilarity score": 1,
        "cosine distance": 1,
        "mean vector": 1,
        "vector math": 1,
        "semantics": 1,
        "output vectors": 1,
        "queen": 1,
        "manliness": 1,
        "word vector king": 1,
        "feminine attribute": 1,
        "royalty": 1,
        "standardize x": 1
    },
    "moby dick": {
        "nltk": 3,
        "nonempty sentences": 3,
        "stopwords": 2,
        "tokenized sentences": 2,
        "datahub": 2,
        "follwing code block": 2,
        "word vectors": 2,
        "word vector": 2,
        "leadership": 2,
        "word embeddings": 1,
        "empty cells": 1,
        "word relationships": 1,
        "gensim": 1,
        "cosine similarity": 1,
        "president": 1,
        "similarity score": 1,
        "smilarity score": 1,
        "cosine distance": 1,
        "mean vector": 1,
        "vector math": 1,
        "semantics": 1,
        "output vectors": 1,
        "queen": 1,
        "manliness": 1,
        "word vector king": 1,
        "feminine attribute": 1,
        "royalty": 1,
        "standardize x": 1
    },
    "cbow": {
        "nltk": 3,
        "nonempty sentences": 3,
        "stopwords": 2,
        "tokenized sentences": 2,
        "datahub": 2,
        "follwing code block": 2,
        "word vectors": 2,
        "word vector": 2,
        "leadership": 2,
        "word embeddings": 1,
        "empty cells": 1,
        "word relationships": 1,
        "gensim": 1,
        "cosine similarity": 1,
        "president": 1,
        "similarity score": 1,
        "smilarity score": 1,
        "cosine distance": 1,
        "mean vector": 1,
        "vector math": 1,
        "semantics": 1,
        "output vectors": 1,
        "queen": 1,
        "manliness": 1,
        "word vector king": 1,
        "feminine attribute": 1,
        "royalty": 1,
        "standardize x": 1
    },
    "minimum frequency": {
        "nltk": 3,
        "nonempty sentences": 3,
        "stopwords": 2,
        "tokenized sentences": 2,
        "datahub": 2,
        "follwing code block": 2,
        "word vectors": 2,
        "word vector": 2,
        "leadership": 2,
        "word embeddings": 1,
        "empty cells": 1,
        "word relationships": 1,
        "gensim": 1,
        "cosine similarity": 1,
        "president": 1,
        "similarity score": 1,
        "smilarity score": 1,
        "cosine distance": 1,
        "mean vector": 1,
        "vector math": 1,
        "semantics": 1,
        "output vectors": 1,
        "queen": 1,
        "manliness": 1,
        "word vector king": 1,
        "feminine attribute": 1,
        "royalty": 1,
        "standardize x": 1
    },
    "word embedding model": {
        "nltk": 3,
        "nonempty sentences": 3,
        "stopwords": 2,
        "tokenized sentences": 2,
        "datahub": 2,
        "follwing code block": 2,
        "word vectors": 2,
        "word vector": 2,
        "leadership": 2,
        "word embeddings": 1,
        "empty cells": 1,
        "word relationships": 1,
        "gensim": 1,
        "cosine similarity": 1,
        "president": 1,
        "similarity score": 1,
        "smilarity score": 1,
        "cosine distance": 1,
        "mean vector": 1,
        "vector math": 1,
        "semantics": 1,
        "output vectors": 1,
        "queen": 1,
        "manliness": 1,
        "word vector king": 1,
        "feminine attribute": 1,
        "royalty": 1,
        "standardize x": 1
    },
    "context words": {
        "nltk": 3,
        "nonempty sentences": 3,
        "stopwords": 2,
        "tokenized sentences": 2,
        "datahub": 2,
        "follwing code block": 2,
        "word vectors": 2,
        "word vector": 2,
        "leadership": 2,
        "word embeddings": 1,
        "empty cells": 1,
        "word relationships": 1,
        "gensim": 1,
        "cosine similarity": 1,
        "president": 1,
        "similarity score": 1,
        "smilarity score": 1,
        "cosine distance": 1,
        "mean vector": 1,
        "vector math": 1,
        "semantics": 1,
        "output vectors": 1,
        "queen": 1,
        "manliness": 1,
        "word vector king": 1,
        "feminine attribute": 1,
        "royalty": 1,
        "standardize x": 1
    },
    "word embedding algorithm": {
        "nltk": 3,
        "nonempty sentences": 3,
        "stopwords": 2,
        "tokenized sentences": 2,
        "datahub": 2,
        "follwing code block": 2,
        "word vectors": 2,
        "word vector": 2,
        "leadership": 2,
        "word embeddings": 1,
        "empty cells": 1,
        "word relationships": 1,
        "gensim": 1,
        "cosine similarity": 1,
        "president": 1,
        "similarity score": 1,
        "smilarity score": 1,
        "cosine distance": 1,
        "mean vector": 1,
        "vector math": 1,
        "semantics": 1,
        "output vectors": 1,
        "queen": 1,
        "manliness": 1,
        "word vector king": 1,
        "feminine attribute": 1,
        "royalty": 1,
        "standardize x": 1
    },
    "unit testing": {
        "airtime": 5,
        "arrdelay": 5,
        "multivariate regresion model": 3,
        "predictor variable": 3,
        "regression model": 3,
        "random number generator": 3,
        "test sets": 2,
        "unit tests": 2,
        "multiple independent variables": 2,
        "dependent variable": 2,
        "patsy formula": 2,
        "multivariate regression model": 2,
        "distance": 1,
        "stats": 1,
        "unit test": 1,
        "imput strings": 1,
        "unit testing": 1
    },
    "foursquare data": {
        "wikipedia": 4,
        "json hierarchy": 4,
        "data scientist": 4,
        "foursquare api": 4,
        "pandas table": 4,
        "access token": 4,
        "foursquare python library method": 4,
        "json output": 4,
        "venues": 4,
        "json hieararchy": 2,
        "total venues": 1
    },
    "ables": {
        "help message": 2,
        "print function": 1,
        "rectangle area": 1,
        "jupyter notebooks": 1,
        "ipython": 1,
        "function type": 1,
        "double equals sign": 1,
        "single equals sign": 1,
        "boolean": 1,
        "bool": 1,
        "boolean comparisons": 1,
        "indentation": 1,
        "conditional statement": 1,
        "python observation": 1,
        "variable observation": 1,
        "str()": 1,
        "str() function": 1,
        "typecasting": 1,
        "year": 1,
        "mathematical operators": 1,
        "leap year": 1,
        "conditional statements": 1,
        "variable year": 1,
        "arguments": 1,
        "online resources": 1,
        "stack overflow": 1,
        "google search": 1,
        "python workflow": 1,
        "python documentation": 1,
        "positional arguments": 1,
        "keyword arguments": 1,
        "function call": 1,
        "input": 1,
        "default input values": 1,
        "default values": 1,
        "docstring": 1,
        "source code": 1,
        "fahrenheit": 1
    },
    "regression methods": {
        "sklearn package": 3,
        "testing dataset": 2,
        "data selection": 2,
        "scatterplot": 2,
        "knn": 2,
        "packages": 2,
        "flower type": 2,
        "extratree": 1,
        "decision rules": 1,
        "decisiontreeregression": 1,
        "decision trees": 1,
        "decisiontreeregressor": 1,
        "important features": 1,
        "importance weight": 1,
        "validation data": 1,
        "petal width": 1,
        "virginia flowers": 1,
        "versicolour": 1,
        "petal length": 1,
        "virginica": 1,
        "sepal length": 1,
        "setosa": 1,
        "target": 1,
        "count row": 1,
        "categorical variables": 1,
        "groupby function": 1,
        "mean stats": 1,
        "normalization": 1,
        "pairplot() function": 1,
        "scatterplot matrix": 1,
        "predictor variables": 1
    },
    "machine learning model": {
        "missing data": 2,
        "photometric redshifts": 2,
        "machine learning model": 2,
        "passengers": 1,
        "age regression model": 1,
        "age estimates": 1,
        "passenger survival": 1,
        "titanic": 1,
        "age feature": 1,
        "child feature": 1,
        "le": 1,
        "blind data": 1,
        "k": 1,
        "astro machine learning model": 1,
        "lsst": 1,
        "astronomical problem": 1,
        "galaxies": 1,
        "spectroscopic measurements": 1,
        "photometry": 1,
        "sdss casjobs": 1,
        "specobjid": 1,
        "psf mag": 1,
        "psfmag": 1,
        "modelmag": 1,
        "ds": 1,
        "sfd extinction estimate": 1,
        "sdss identifier": 1,
        "sdss photometric type": 1,
        "upper": 1,
        "sdss source": 1,
        "wise filters": 1,
        "categorical features": 1,
        "categorical variable": 1,
        "nearest neighbors regression model": 1,
        "sdss dataframe": 1,
        "categorical data": 1
    },
    "random forest regression": {
        "missing data": 2,
        "photometric redshifts": 2,
        "machine learning model": 2,
        "passengers": 1,
        "age regression model": 1,
        "age estimates": 1,
        "passenger survival": 1,
        "titanic": 1,
        "age feature": 1,
        "child feature": 1,
        "le": 1,
        "blind data": 1,
        "k": 1,
        "astro machine learning model": 1,
        "lsst": 1,
        "astronomical problem": 1,
        "galaxies": 1,
        "spectroscopic measurements": 1,
        "photometry": 1,
        "sdss casjobs": 1,
        "specobjid": 1,
        "psf mag": 1,
        "psfmag": 1,
        "modelmag": 1,
        "ds": 1,
        "sfd extinction estimate": 1,
        "sdss identifier": 1,
        "sdss photometric type": 1,
        "upper": 1,
        "sdss source": 1,
        "wise filters": 1,
        "categorical features": 1,
        "categorical variable": 1,
        "nearest neighbors regression model": 1,
        "sdss dataframe": 1,
        "categorical data": 1
    },
    "mean age": {
        "missing data": 2,
        "photometric redshifts": 2,
        "machine learning model": 2,
        "passengers": 1,
        "age regression model": 1,
        "age estimates": 1,
        "passenger survival": 1,
        "titanic": 1,
        "age feature": 1,
        "child feature": 1,
        "le": 1,
        "blind data": 1,
        "k": 1,
        "astro machine learning model": 1,
        "lsst": 1,
        "astronomical problem": 1,
        "galaxies": 1,
        "spectroscopic measurements": 1,
        "photometry": 1,
        "sdss casjobs": 1,
        "specobjid": 1,
        "psf mag": 1,
        "psfmag": 1,
        "modelmag": 1,
        "ds": 1,
        "sfd extinction estimate": 1,
        "sdss identifier": 1,
        "sdss photometric type": 1,
        "upper": 1,
        "sdss source": 1,
        "wise filters": 1,
        "categorical features": 1,
        "categorical variable": 1,
        "nearest neighbors regression model": 1,
        "sdss dataframe": 1,
        "categorical data": 1
    },
    "probem 3m": {
        "missing data": 2,
        "photometric redshifts": 2,
        "machine learning model": 2,
        "passengers": 1,
        "age regression model": 1,
        "age estimates": 1,
        "passenger survival": 1,
        "titanic": 1,
        "age feature": 1,
        "child feature": 1,
        "le": 1,
        "blind data": 1,
        "k": 1,
        "astro machine learning model": 1,
        "lsst": 1,
        "astronomical problem": 1,
        "galaxies": 1,
        "spectroscopic measurements": 1,
        "photometry": 1,
        "sdss casjobs": 1,
        "specobjid": 1,
        "psf mag": 1,
        "psfmag": 1,
        "modelmag": 1,
        "ds": 1,
        "sfd extinction estimate": 1,
        "sdss identifier": 1,
        "sdss photometric type": 1,
        "upper": 1,
        "sdss source": 1,
        "wise filters": 1,
        "categorical features": 1,
        "categorical variable": 1,
        "nearest neighbors regression model": 1,
        "sdss dataframe": 1,
        "categorical data": 1
    },
    "linearregression model": {
        "missing data": 2,
        "photometric redshifts": 2,
        "machine learning model": 2,
        "passengers": 1,
        "age regression model": 1,
        "age estimates": 1,
        "passenger survival": 1,
        "titanic": 1,
        "age feature": 1,
        "child feature": 1,
        "le": 1,
        "blind data": 1,
        "k": 1,
        "astro machine learning model": 1,
        "lsst": 1,
        "astronomical problem": 1,
        "galaxies": 1,
        "spectroscopic measurements": 1,
        "photometry": 1,
        "sdss casjobs": 1,
        "specobjid": 1,
        "psf mag": 1,
        "psfmag": 1,
        "modelmag": 1,
        "ds": 1,
        "sfd extinction estimate": 1,
        "sdss identifier": 1,
        "sdss photometric type": 1,
        "upper": 1,
        "sdss source": 1,
        "wise filters": 1,
        "categorical features": 1,
        "categorical variable": 1,
        "nearest neighbors regression model": 1,
        "sdss dataframe": 1,
        "categorical data": 1
    },
    "negative mean squared error": {
        "missing data": 2,
        "photometric redshifts": 2,
        "machine learning model": 2,
        "passengers": 1,
        "age regression model": 1,
        "age estimates": 1,
        "passenger survival": 1,
        "titanic": 1,
        "age feature": 1,
        "child feature": 1,
        "le": 1,
        "blind data": 1,
        "k": 1,
        "astro machine learning model": 1,
        "lsst": 1,
        "astronomical problem": 1,
        "galaxies": 1,
        "spectroscopic measurements": 1,
        "photometry": 1,
        "sdss casjobs": 1,
        "specobjid": 1,
        "psf mag": 1,
        "psfmag": 1,
        "modelmag": 1,
        "ds": 1,
        "sfd extinction estimate": 1,
        "sdss identifier": 1,
        "sdss photometric type": 1,
        "upper": 1,
        "sdss source": 1,
        "wise filters": 1,
        "categorical features": 1,
        "categorical variable": 1,
        "nearest neighbors regression model": 1,
        "sdss dataframe": 1,
        "categorical data": 1
    },
    "machine learning algorithms": {
        "fine tuning": 6,
        "parameter tuning": 6,
        "pandas manipulations": 2,
        "data format": 2,
        "euclidean distance": 2,
        "knn classifier": 2,
        "distance function": 2,
        "knn algorithm": 2,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1,
        "function predict": 1,
        "predicted class value": 1,
        "nearestneighborsclassifier": 1,
        "function distance": 1,
        "test data": 1,
        "sk": 1,
        "image": 1,
        "knn process": 1
    },
    "response variable": {
        "ridge regression": 5,
        "population": 2,
        "random distribution": 1,
        "predictor": 1,
        "dataset": 1,
        "regression methods": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "testing sets": 1,
        "bootstrap": 1,
        "confidence intervals": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "confidence interval": 1,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "multilinear regression": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1,
        "predictors": 1
    },
    "bland chromatin": {
        "column names": 5,
        "dataset info file": 5,
        "benign": 4,
        "malign": 4,
        "malignant": 4,
        "binary variable": 4,
        "class field": 4,
        "correlation matrix": 2,
        "predictors": 1,
        "pairplot() function": 1,
        "knn classifier": 1,
        "scikit": 1,
        "crossval": 1,
        "euclidean distance metric": 1
    },
    "cell shape": {
        "column names": 5,
        "dataset info file": 5,
        "benign": 4,
        "malign": 4,
        "malignant": 4,
        "binary variable": 4,
        "class field": 4,
        "correlation matrix": 2,
        "predictors": 1,
        "pairplot() function": 1,
        "knn classifier": 1,
        "scikit": 1,
        "crossval": 1,
        "euclidean distance metric": 1
    },
    "single epithelial cell size": {
        "column names": 5,
        "dataset info file": 5,
        "benign": 4,
        "malign": 4,
        "malignant": 4,
        "binary variable": 4,
        "class field": 4,
        "correlation matrix": 2,
        "predictors": 1,
        "pairplot() function": 1,
        "knn classifier": 1,
        "scikit": 1,
        "crossval": 1,
        "euclidean distance metric": 1
    },
    "attribute information": {
        "column names": 5,
        "dataset info file": 5,
        "benign": 4,
        "malign": 4,
        "malignant": 4,
        "binary variable": 4,
        "class field": 4,
        "correlation matrix": 2,
        "predictors": 1,
        "pairplot() function": 1,
        "knn classifier": 1,
        "scikit": 1,
        "crossval": 1,
        "euclidean distance metric": 1
    },
    "normal nucleoli": {
        "column names": 5,
        "dataset info file": 5,
        "benign": 4,
        "malign": 4,
        "malignant": 4,
        "binary variable": 4,
        "class field": 4,
        "correlation matrix": 2,
        "predictors": 1,
        "pairplot() function": 1,
        "knn classifier": 1,
        "scikit": 1,
        "crossval": 1,
        "euclidean distance metric": 1
    },
    "cell size": {
        "column names": 5,
        "dataset info file": 5,
        "benign": 4,
        "malign": 4,
        "malignant": 4,
        "binary variable": 4,
        "class field": 4,
        "correlation matrix": 2,
        "predictors": 1,
        "pairplot() function": 1,
        "knn classifier": 1,
        "scikit": 1,
        "crossval": 1,
        "euclidean distance metric": 1
    },
    "clump thickness": {
        "column names": 5,
        "dataset info file": 5,
        "benign": 4,
        "malign": 4,
        "malignant": 4,
        "binary variable": 4,
        "class field": 4,
        "correlation matrix": 2,
        "predictors": 1,
        "pairplot() function": 1,
        "knn classifier": 1,
        "scikit": 1,
        "crossval": 1,
        "euclidean distance metric": 1
    },
    "marginal adhesion": {
        "column names": 5,
        "dataset info file": 5,
        "benign": 4,
        "malign": 4,
        "malignant": 4,
        "binary variable": 4,
        "class field": 4,
        "correlation matrix": 2,
        "predictors": 1,
        "pairplot() function": 1,
        "knn classifier": 1,
        "scikit": 1,
        "crossval": 1,
        "euclidean distance metric": 1
    },
    "sample code number": {
        "column names": 5,
        "dataset info file": 5,
        "benign": 4,
        "malign": 4,
        "malignant": 4,
        "binary variable": 4,
        "class field": 4,
        "correlation matrix": 2,
        "predictors": 1,
        "pairplot() function": 1,
        "knn classifier": 1,
        "scikit": 1,
        "crossval": 1,
        "euclidean distance metric": 1
    },
    "bare nuclei": {
        "column names": 5,
        "dataset info file": 5,
        "benign": 4,
        "malign": 4,
        "malignant": 4,
        "binary variable": 4,
        "class field": 4,
        "correlation matrix": 2,
        "predictors": 1,
        "pairplot() function": 1,
        "knn classifier": 1,
        "scikit": 1,
        "crossval": 1,
        "euclidean distance metric": 1
    },
    "wisconsin breast cancer dataset": {
        "column names": 5,
        "dataset info file": 5,
        "benign": 4,
        "malign": 4,
        "malignant": 4,
        "binary variable": 4,
        "class field": 4,
        "correlation matrix": 2,
        "predictors": 1,
        "pairplot() function": 1,
        "knn classifier": 1,
        "scikit": 1,
        "crossval": 1,
        "euclidean distance metric": 1
    },
    "uppercase": {
        "helper function": 6,
        "vector print": 6,
        "matrices": 6,
        "multiplication": 6,
        "cosine": 4,
        "matrices multiplication": 4,
        "special matrices": 4,
        "scaling": 2
    },
    "matrix": {
        "helper function": 6,
        "vector print": 6,
        "matrices": 6,
        "multiplication": 6,
        "cosine": 4,
        "matrices multiplication": 4,
        "special matrices": 4,
        "scaling": 2
    },
    "mpr course": {
        "upstream pressure": 5,
        "simulation": 2,
        "colebrook": 2,
        "dynamic balances": 2,
        "computer tut 1": 2,
        "gas flow system": 2,
        "pressuresystem": 2,
        "colebrook function": 2,
        "200 kpa": 2,
        "steady state value": 2,
        "tank pressure": 1,
        "time interval": 1,
        "pressure values": 1,
        "odeint": 1,
        "mpr": 1,
        "pressure signal": 1,
        "control valve": 1,
        "air pressure": 1,
        "spring": 1,
        "equations of motion": 1,
        "damping": 1,
        "higher order differential equations": 1,
        "diaphragm": 1,
        "vector equation": 1,
        "air pressure signals": 1
    },
    "algebraic equations": {
        "upstream pressure": 5,
        "simulation": 2,
        "colebrook": 2,
        "dynamic balances": 2,
        "computer tut 1": 2,
        "gas flow system": 2,
        "pressuresystem": 2,
        "colebrook function": 2,
        "200 kpa": 2,
        "steady state value": 2,
        "tank pressure": 1,
        "time interval": 1,
        "pressure values": 1,
        "odeint": 1,
        "mpr": 1,
        "pressure signal": 1,
        "control valve": 1,
        "air pressure": 1,
        "spring": 1,
        "equations of motion": 1,
        "damping": 1,
        "higher order differential equations": 1,
        "diaphragm": 1,
        "vector equation": 1,
        "air pressure signals": 1
    },
    "single differential equation": {
        "upstream pressure": 5,
        "simulation": 2,
        "colebrook": 2,
        "dynamic balances": 2,
        "computer tut 1": 2,
        "gas flow system": 2,
        "pressuresystem": 2,
        "colebrook function": 2,
        "200 kpa": 2,
        "steady state value": 2,
        "tank pressure": 1,
        "time interval": 1,
        "pressure values": 1,
        "odeint": 1,
        "mpr": 1,
        "pressure signal": 1,
        "control valve": 1,
        "air pressure": 1,
        "spring": 1,
        "equations of motion": 1,
        "damping": 1,
        "higher order differential equations": 1,
        "diaphragm": 1,
        "vector equation": 1,
        "air pressure signals": 1
    },
    "friction factor": {
        "upstream pressure": 5,
        "simulation": 2,
        "colebrook": 2,
        "dynamic balances": 2,
        "computer tut 1": 2,
        "gas flow system": 2,
        "pressuresystem": 2,
        "colebrook function": 2,
        "200 kpa": 2,
        "steady state value": 2,
        "tank pressure": 1,
        "time interval": 1,
        "pressure values": 1,
        "odeint": 1,
        "mpr": 1,
        "pressure signal": 1,
        "control valve": 1,
        "air pressure": 1,
        "spring": 1,
        "equations of motion": 1,
        "damping": 1,
        "higher order differential equations": 1,
        "diaphragm": 1,
        "vector equation": 1,
        "air pressure signals": 1
    },
    "data array": {
        "lowpass filter": 4,
        "corner frequency": 4,
        "preview": 4,
        "gaussian noise": 3,
        "spectrograms": 2,
        "spectrogram plot": 2,
        "logarithmic frequency scale": 2,
        "gaussian discriminant analysis": 2,
        "quadratic discrimination boundary": 2,
        "covariance matrix": 2,
        "likelihood ratio test": 2,
        "gaussian distributions": 2,
        "simulated data": 2,
        "quadratic discriminant analysis": 2,
        "class distributions": 1,
        "tapering": 1,
        "lowpass": 1
    },
    "delimiter": {
        "ordinal": 4,
        "terminal window": 3,
        "age class": 2,
        "lookup table": 2,
        "temporal trends": 2,
        "customer behavior": 2,
        "cleanliness": 2,
        "distributions": 2,
        "missingness": 2,
        "level": 2,
        "business analyst": 2,
        "basket size": 2,
        "data exploration": 2,
        "purchase data": 2,
        "symmetrize": 1,
        "log transformation": 1,
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "filtering": {
        "values method": 8,
        "concat": 6,
        "mmax value": 4,
        "attributes": 4,
        "positional indexing": 4,
        "dataframe structures": 4,
        "feature extraction": 4,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1
    },
    "interpolation": {
        "weekly time series": 3,
        "apple stock quarterly": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "vectorised functions": 3,
        "execution time": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1,
        "implementation": 1,
        "loops": 1,
        "execution speed": 1,
        "linear regression implementation": 1
    },
    "classical logistic regression": {
        "pystan": 6,
        "pymc": 4,
        "numerical data": 2,
        "categorical data": 2,
        "average": 2,
        "relative performance": 2,
        "knn": 2,
        "statistical exposition": 2,
        "distribution": 2,
        "distributions": 2,
        "pymc model": 2,
        "univariate logistic regression": 2,
        "sigmoid function": 2,
        "mcmc procedure": 2,
        "roc scores": 2,
        "non-bayesian logistic": 2
    },
    "imputation": {
        "pystan": 6,
        "pymc": 4,
        "statistical exposition": 2,
        "distribution": 2,
        "distributions": 2,
        "pymc model": 2,
        "bayesian logistic regression": 2,
        "bayesian logistic regression form": 2,
        "bernoulli method": 2,
        "univariate logistic regression": 2,
        "sigmoid function": 2,
        "bayesian model": 2,
        "computation segment": 2,
        "mcmc procedure": 2,
        "roc scores": 2,
        "non-bayesian logistic": 2
    },
    "descriptive names": {
        "help message": 2,
        "ipython": 1,
        "function type": 1,
        "double equals sign": 1,
        "single equals sign": 1,
        "boolean": 1,
        "bool": 1,
        "boolean comparisons": 1,
        "indentation": 1,
        "conditional statement": 1,
        "autograded jupyter notebook cell": 1,
        "bonus exercises": 1,
        "python observation": 1,
        "variable observation": 1,
        "str()": 1,
        "str() function": 1,
        "typecasting": 1,
        "year": 1,
        "mathematical operators": 1,
        "leap year": 1,
        "conditional statements": 1,
        "variable year": 1,
        "arguments": 1,
        "online resources": 1,
        "stack overflow": 1,
        "google search": 1,
        "python workflow": 1,
        "python documentation": 1,
        "positional arguments": 1,
        "keyword arguments": 1,
        "function call": 1,
        "input": 1,
        "default input values": 1,
        "default values": 1,
        "docstring": 1,
        "source code": 1,
        "fahrenheit": 1
    },
    "separate words": {
        "help message": 2,
        "ipython": 1,
        "function type": 1,
        "double equals sign": 1,
        "single equals sign": 1,
        "boolean": 1,
        "bool": 1,
        "boolean comparisons": 1,
        "indentation": 1,
        "conditional statement": 1,
        "autograded jupyter notebook cell": 1,
        "bonus exercises": 1,
        "python observation": 1,
        "variable observation": 1,
        "str()": 1,
        "str() function": 1,
        "typecasting": 1,
        "year": 1,
        "mathematical operators": 1,
        "leap year": 1,
        "conditional statements": 1,
        "variable year": 1,
        "arguments": 1,
        "online resources": 1,
        "stack overflow": 1,
        "google search": 1,
        "python workflow": 1,
        "python documentation": 1,
        "positional arguments": 1,
        "keyword arguments": 1,
        "function call": 1,
        "input": 1,
        "default input values": 1,
        "default values": 1,
        "docstring": 1,
        "source code": 1,
        "fahrenheit": 1
    },
    "gini index": {
        "decision tree algorithm": 4,
        "classification error rate": 4,
        "gini index": 4,
        "titanic": 4,
        "sex": 4,
        "age": 4,
        "response variable": 4,
        "maximum value": 2,
        "splitting criteria": 2,
        "predicted probability": 2,
        "classification trees": 2,
        "node purity": 2
    },
    "google trends": {
        "olympic sports": 4,
        "census population table": 2,
        "weighted average": 2,
        "search interest table": 2,
        "population": 2,
        "volleyball": 2,
        "interest": 2,
        "netherlands": 2,
        "china": 2,
        "global search interest": 2,
        "global population": 2,
        "india": 2,
        "search interest": 2,
        "group by": 2,
        "sql": 2,
        "population weights": 2,
        "pandas dataframes": 2,
        "ranking": 2
    },
    "mrjob lab": {
        "mrjob": 8,
        "hadoop streaming": 3,
        "word count": 3,
        "hadoop mode": 2,
        "yelp": 1,
        "open source python library": 1,
        "native": 1,
        "virtual machine": 1,
        "map reduce jobs": 1,
        "word count map reduce": 1,
        "mrwordfreqcount": 1,
        "execution time": 1,
        "combiner": 1,
        "map function": 1,
        "maximum count": 1,
        "reduce function": 1,
        "multi step jobs": 1,
        "mapper": 1,
        "reducer functions": 1,
        "fileor variable": 1,
        "sqlite3 database": 1,
        "counters": 1,
        "mapper function": 1,
        "hadoop": 1,
        "nltk": 1,
        "local mrjob word count": 1
    },
    "multiple estimates": {
        "ridge regression": 5,
        "population": 2,
        "random distribution": 1,
        "predictor": 1,
        "dataset": 1,
        "regression methods": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "testing sets": 1,
        "bootstrap": 1,
        "confidence intervals": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "confidence interval": 1,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "multilinear regression": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1
    },
    "noisy data": {
        "ridge regression": 5,
        "population": 2,
        "random distribution": 1,
        "predictor": 1,
        "dataset": 1,
        "regression methods": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "testing sets": 1,
        "bootstrap": 1,
        "confidence intervals": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "confidence interval": 1,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "multilinear regression": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1
    },
    "ridge regressions": {
        "ridge regression": 5,
        "population": 2,
        "random distribution": 1,
        "predictor": 1,
        "dataset": 1,
        "regression methods": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "testing sets": 1,
        "bootstrap": 1,
        "confidence intervals": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "confidence interval": 1,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "multilinear regression": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1
    },
    "ized loss function": {
        "ridge regression": 5,
        "population": 2,
        "random distribution": 1,
        "predictor": 1,
        "dataset": 1,
        "regression methods": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "testing sets": 1,
        "bootstrap": 1,
        "confidence intervals": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "confidence interval": 1,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "multilinear regression": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1
    },
    "penalty function": {
        "ridge regression": 5,
        "population": 2,
        "random distribution": 1,
        "predictor": 1,
        "dataset": 1,
        "regression methods": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "testing sets": 1,
        "bootstrap": 1,
        "confidence intervals": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "confidence interval": 1,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "multilinear regression": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1
    },
    "regularized regression model": {
        "ridge regression": 5,
        "population": 2,
        "random distribution": 1,
        "predictor": 1,
        "dataset": 1,
        "regression methods": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "testing sets": 1,
        "bootstrap": 1,
        "confidence intervals": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "confidence interval": 1,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "multilinear regression": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1
    },
    "predictor matrix": {
        "ridge regression": 5,
        "population": 2,
        "random distribution": 1,
        "predictor": 1,
        "dataset": 1,
        "regression methods": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "testing sets": 1,
        "bootstrap": 1,
        "confidence intervals": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "confidence interval": 1,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "multilinear regression": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1
    },
    "bokeh plotting extension": {
        "plot options": 3,
        "magnitude": 2,
        "utc": 2,
        "longitude": 2,
        "eclipse": 2,
        "latitude": 2,
        "width plot": 2,
        "s": 2,
        "tutorial": 2,
        "value dimension": 2,
        "width plot option": 2,
        "user guide": 2,
        "ts cell magic": 2,
        "hv": 2,
        "help utility": 2,
        "tab completion": 2,
        "style option": 1,
        "style options": 1,
        "bokeh plotting extension": 1,
        "bokeh glyph": 1
    },
    "hidden test": {
        "test data": 5,
        "customer review task": 5,
        "labels": 5,
        "header arguments": 5,
        "numerical labels": 4,
        "returned variable": 4,
        "tfidf vectorizer": 3,
        "returned object": 2,
        "svm classifier": 2,
        "string labels": 1,
        "predicted numerical labels": 1
    },
    "amazon website": {
        "test data": 5,
        "customer review task": 5,
        "labels": 5,
        "header arguments": 5,
        "numerical labels": 4,
        "returned variable": 4,
        "tfidf vectorizer": 3,
        "returned object": 2,
        "svm classifier": 2,
        "string labels": 1,
        "predicted numerical labels": 1
    },
    "elementary computation": {
        "softplus function": 12,
        "module utils": 3,
        "input vector": 3,
        "high precision float64": 3,
        "input": 3,
        "rounding": 3,
        "inner python loop": 3,
        "exercise sheet": 1,
        "partition function": 1,
        "exponential function": 1,
        "parameter vectors": 1,
        "logarithm": 1,
        "list itertools": 1,
        "binary vectors": 1
    },
    "softplus function": {
        "softplus function": 12,
        "module utils": 3,
        "input vector": 3,
        "high precision float64": 3,
        "input": 3,
        "rounding": 3,
        "inner python loop": 3,
        "exercise sheet": 1,
        "partition function": 1,
        "exponential function": 1,
        "parameter vectors": 1,
        "logarithm": 1,
        "list itertools": 1,
        "binary vectors": 1
    },
    "poisson process": {
        "ooober": 18,
        "ridesharing company": 6,
        "public relations office": 6,
        "poisson process model": 3,
        "scandal patterns": 2,
        "poisson process": 2
    },
    "mathematical operations": {
        "coding practice": 6,
        "symbolic math": 4,
        "integer division": 3,
        "integer addition": 2,
        "integer subtraction": 2,
        "subtraction": 2,
        "integer multiplication": 2,
        "multiplication": 2,
        "mathematical operations": 2,
        "fractional component": 1,
        "code cell": 1,
        "integer addition operations": 1,
        "integer subtraction operations": 1,
        "integer multiplication operations": 1,
        "integer division operations": 1,
        "integer operations": 1,
        "fractions": 1,
        "decimals": 1,
        "non-integer numbers": 1,
        "division": 1,
        "floating point numbers": 1
    },
    "mathematical operators": {
        "coding practice": 6,
        "symbolic math": 4,
        "integer division": 3,
        "integer addition": 2,
        "integer subtraction": 2,
        "subtraction": 2,
        "integer multiplication": 2,
        "multiplication": 2,
        "mathematical operations": 2,
        "fractional component": 1,
        "code cell": 1,
        "integer addition operations": 1,
        "integer subtraction operations": 1,
        "integer multiplication operations": 1,
        "integer division operations": 1,
        "integer operations": 1,
        "fractions": 1,
        "decimals": 1,
        "non-integer numbers": 1,
        "division": 1,
        "floating point numbers": 1
    },
    "keyboard representations": {
        "coding practice": 6,
        "symbolic math": 4,
        "integer division": 3,
        "integer addition": 2,
        "integer subtraction": 2,
        "subtraction": 2,
        "integer multiplication": 2,
        "multiplication": 2,
        "mathematical operations": 2,
        "fractional component": 1,
        "code cell": 1,
        "integer addition operations": 1,
        "integer subtraction operations": 1,
        "integer multiplication operations": 1,
        "integer division operations": 1,
        "integer operations": 1,
        "fractions": 1,
        "decimals": 1,
        "non-integer numbers": 1,
        "division": 1,
        "floating point numbers": 1
    },
    "persons of interest": {
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2
    },
    "pois": {
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2
    },
    "file format": {
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2
    },
    "poi names": {
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2
    },
    "incomplete data": {
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2
    },
    "wesley colwell": {
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2
    },
    "email messages": {
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2
    },
    "stock options": {
        "shell companies": 3,
        "electrical grid failures": 3,
        "enron fraud": 3,
        "frozen concentrated orange juice futures": 3,
        "google sleuthing": 3,
        "enron": 3,
        "blockbuster movies": 3,
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2
    },
    "html": {
        "soup object": 2,
        "html objct": 2,
        "bs4": 2,
        "html": 2,
        "google chrome": 2,
        "inspect": 2,
        "contour plot": 2,
        "false negatives": 2,
        "email": 2,
        "cutoff probability": 2,
        "final classifier": 2,
        "cancer screenings": 2,
        "false positives": 2,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1
    },
    "decimal numbers": {
        "help message": 2,
        "function type": 1,
        "double equals sign": 1,
        "single equals sign": 1,
        "boolean": 1,
        "bool": 1,
        "boolean comparisons": 1,
        "indentation": 1,
        "conditional statement": 1,
        "autograded jupyter notebook cell": 1,
        "bonus exercises": 1,
        "python observation": 1,
        "variable observation": 1,
        "str()": 1,
        "str() function": 1,
        "typecasting": 1,
        "year": 1,
        "mathematical operators": 1,
        "leap year": 1,
        "conditional statements": 1,
        "variable year": 1,
        "arguments": 1,
        "online resources": 1,
        "stack overflow": 1,
        "google search": 1,
        "python workflow": 1,
        "python documentation": 1,
        "positional arguments": 1,
        "keyword arguments": 1,
        "function call": 1,
        "input": 1,
        "default input values": 1,
        "default values": 1,
        "docstring": 1,
        "source code": 1,
        "fahrenheit": 1
    },
    "edit mode": {
        "python code": 4,
        "edit mode": 3,
        "code cells": 3,
        "command mode": 2,
        "print function": 2,
        "parentheses": 2,
        "kernel": 2,
        "python interpreter": 2,
        "kernel state": 2,
        "magics": 2,
        "ipython commands": 2,
        "keyboard shortcuts": 2,
        "user interface tour": 2,
        "coding assignments": 2,
        "test cells": 2,
        "ipython": 1,
        "markdown cells": 1,
        "cells": 1
    },
    "relative": {
        "rows": 6,
        "python indexing": 6,
        "list comprehensions": 6,
        "column names": 6,
        "loops": 6,
        "distributions": 2,
        "individual cells": 2,
        "plotting function": 2
    },
    "sales data": {
        "rows": 6,
        "python indexing": 6,
        "list comprehensions": 6,
        "column names": 6,
        "loops": 6,
        "distributions": 2,
        "individual cells": 2,
        "plotting function": 2
    },
    "linear classifier": {
        "fine tuning": 12,
        "parameter tuning": 12,
        "random forest": 2,
        "estimators": 2,
        "ensembles": 2,
        "polynomial expansion": 2,
        "random forests": 2,
        "polynomial feature extraction": 2
    },
    "estimate magnitude": {
        "aftershock": 5,
        "preview plot": 5,
        "spectrogram plot": 5,
        "peak value": 5,
        "magnitude approximation": 3,
        "network magnitude approximation": 2,
        "large aftershock": 2,
        "dominant event frequency range": 1,
        "characteristic function": 1,
        "station metadata": 1,
        "local noise burst": 1,
        "seismic phase": 1,
        "bandpass filter": 1,
        "transient signals": 1,
        "estimatemagnitude function": 1,
        "aftershock spectrogram": 1
    },
    "aftershock network": {
        "aftershock": 5,
        "preview plot": 5,
        "spectrogram plot": 5,
        "peak value": 5,
        "magnitude approximation": 3,
        "network magnitude approximation": 2,
        "large aftershock": 2,
        "dominant event frequency range": 1,
        "characteristic function": 1,
        "station metadata": 1,
        "local noise burst": 1,
        "seismic phase": 1,
        "bandpass filter": 1,
        "transient signals": 1,
        "estimatemagnitude function": 1,
        "aftershock spectrogram": 1
    },
    "channel": {
        "aftershock": 5,
        "preview plot": 5,
        "spectrogram plot": 5,
        "peak value": 5,
        "magnitude approximation": 3,
        "network magnitude approximation": 2,
        "large aftershock": 2,
        "dominant event frequency range": 1,
        "characteristic function": 1,
        "station metadata": 1,
        "local noise burst": 1,
        "seismic phase": 1,
        "bandpass filter": 1,
        "transient signals": 1,
        "estimatemagnitude function": 1,
        "aftershock spectrogram": 1
    },
    "difference shapes": {
        "pregnancy": 4,
        "median remaining time": 4,
        "first marriage": 4,
        "age": 4,
        "sampling weights": 4,
        "divorce": 4,
        "survival curve": 4,
        "sampling error": 4,
        "resampling": 4
    },
    "remaining lifetime": {
        "pregnancy": 4,
        "median remaining time": 4,
        "first marriage": 4,
        "age": 4,
        "sampling weights": 4,
        "divorce": 4,
        "survival curve": 4,
        "sampling error": 4,
        "resampling": 4
    },
    "logistic regression classifier": {
        "performance metric": 2,
        "correctly classified data points": 2,
        "total data points": 2,
        "graphlab create": 2,
        "majority class classifier": 2,
        "false negatives": 2,
        "confusion matrix": 2,
        "true negatives": 2,
        "true positives": 2,
        "incorrect predictions": 2,
        "binary classification": 2,
        "false positives": 2,
        "quiz": 2,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "mlp": 1,
        "hidden layer": 1,
        "non-linear activation function": 1
    },
    "bayesian methods": {
        "dictionaries": 2,
        "core python crash course": 1,
        "latin alphabets": 1,
        "python 3": 1,
        "unicode strings": 1,
        "programming problem": 1,
        "collection types": 1,
        "associative arrays": 1,
        "collection type": 1,
        "functions": 1,
        "default namespace": 1,
        "tab": 1,
        "question mark": 1,
        "ipython": 1,
        "ops": 1,
        "control flow": 1,
        "conditionals": 1,
        "control flow structure": 1,
        "error messages": 1,
        "array computation package": 1,
        "fourier transforms": 1,
        "linear algebra": 1,
        "random numbers": 1,
        "solvers": 1,
        "interpolation routines": 1,
        "spare matrices": 1,
        "optimization": 1,
        "scipy": 1,
        "signal processing methods": 1,
        "basic differential equations": 1,
        "numeric integration": 1,
        "matlab": 1,
        "python program": 1,
        "united states": 1,
        "canada": 1
    },
    "signal processing": {
        "dictionaries": 2,
        "core python crash course": 1,
        "latin alphabets": 1,
        "python 3": 1,
        "unicode strings": 1,
        "programming problem": 1,
        "collection types": 1,
        "associative arrays": 1,
        "collection type": 1,
        "functions": 1,
        "default namespace": 1,
        "tab": 1,
        "question mark": 1,
        "ipython": 1,
        "ops": 1,
        "control flow": 1,
        "conditionals": 1,
        "control flow structure": 1,
        "error messages": 1,
        "array computation package": 1,
        "fourier transforms": 1,
        "linear algebra": 1,
        "random numbers": 1,
        "solvers": 1,
        "interpolation routines": 1,
        "spare matrices": 1,
        "optimization": 1,
        "scipy": 1,
        "signal processing methods": 1,
        "basic differential equations": 1,
        "numeric integration": 1,
        "matlab": 1,
        "python program": 1,
        "united states": 1,
        "canada": 1
    },
    "probabilistic programming": {
        "dictionaries": 2,
        "core python crash course": 1,
        "latin alphabets": 1,
        "python 3": 1,
        "unicode strings": 1,
        "programming problem": 1,
        "collection types": 1,
        "associative arrays": 1,
        "collection type": 1,
        "functions": 1,
        "default namespace": 1,
        "tab": 1,
        "question mark": 1,
        "ipython": 1,
        "ops": 1,
        "control flow": 1,
        "conditionals": 1,
        "control flow structure": 1,
        "error messages": 1,
        "array computation package": 1,
        "fourier transforms": 1,
        "linear algebra": 1,
        "random numbers": 1,
        "solvers": 1,
        "interpolation routines": 1,
        "spare matrices": 1,
        "optimization": 1,
        "scipy": 1,
        "signal processing methods": 1,
        "basic differential equations": 1,
        "numeric integration": 1,
        "matlab": 1,
        "python program": 1,
        "united states": 1,
        "canada": 1
    },
    "python tutorials": {
        "dictionaries": 2,
        "core python crash course": 1,
        "latin alphabets": 1,
        "python 3": 1,
        "unicode strings": 1,
        "programming problem": 1,
        "collection types": 1,
        "associative arrays": 1,
        "collection type": 1,
        "functions": 1,
        "default namespace": 1,
        "tab": 1,
        "question mark": 1,
        "ipython": 1,
        "ops": 1,
        "control flow": 1,
        "conditionals": 1,
        "control flow structure": 1,
        "error messages": 1,
        "array computation package": 1,
        "fourier transforms": 1,
        "linear algebra": 1,
        "random numbers": 1,
        "solvers": 1,
        "interpolation routines": 1,
        "spare matrices": 1,
        "optimization": 1,
        "scipy": 1,
        "signal processing methods": 1,
        "basic differential equations": 1,
        "numeric integration": 1,
        "matlab": 1,
        "python program": 1,
        "united states": 1,
        "canada": 1
    },
    "py tutorial": {
        "dictionaries": 2,
        "core python crash course": 1,
        "latin alphabets": 1,
        "python 3": 1,
        "unicode strings": 1,
        "programming problem": 1,
        "collection types": 1,
        "associative arrays": 1,
        "collection type": 1,
        "functions": 1,
        "default namespace": 1,
        "tab": 1,
        "question mark": 1,
        "ipython": 1,
        "ops": 1,
        "control flow": 1,
        "conditionals": 1,
        "control flow structure": 1,
        "error messages": 1,
        "array computation package": 1,
        "fourier transforms": 1,
        "linear algebra": 1,
        "random numbers": 1,
        "solvers": 1,
        "interpolation routines": 1,
        "spare matrices": 1,
        "optimization": 1,
        "scipy": 1,
        "signal processing methods": 1,
        "basic differential equations": 1,
        "numeric integration": 1,
        "matlab": 1,
        "python program": 1,
        "united states": 1,
        "canada": 1
    },
    "datetime64": {
        "mean windspeeds": 11,
        "standard deviations": 9,
        "mean windspeed": 5,
        "windspeeds": 4,
        "average windspeed": 4,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "data extraction": {
        "datapath": 4,
        "subject line": 4,
        "base directory": 3,
        "integers": 3,
        "spam label array": 3,
        "scikit learn": 3,
        "spam arrays": 3,
        "ham label array": 3,
        "testing sets": 3,
        "spam classification": 1,
        "tfidfvectorizer": 1,
        "bigrams": 1,
        "linearsvc": 1,
        "default parameters": 1,
        "unigrams": 1,
        "stop words": 1
    },
    "data file": {
        "datapath": 4,
        "subject line": 4,
        "base directory": 3,
        "integers": 3,
        "spam label array": 3,
        "scikit learn": 3,
        "spam arrays": 3,
        "ham label array": 3,
        "testing sets": 3,
        "spam classification": 1,
        "tfidfvectorizer": 1,
        "bigrams": 1,
        "linearsvc": 1,
        "default parameters": 1,
        "unigrams": 1,
        "stop words": 1
    },
    "human learning": {
        "iris": 8,
        "knn classification map": 8,
        "unknown iris": 4,
        "predicted response value": 4,
        "euclidian distance": 4,
        "distance metric": 4,
        "5nn classification map": 2,
        "50nn classification map": 2
    },
    "sqlite database file": {
        "sqlite3 library": 6,
        "federative republic": 3,
        "merged table": 3,
        "brazil": 3,
        "sql query": 3,
        "sql": 3,
        "alter table command": 3,
        "sqlite3 database": 3,
        "sqlite": 3,
        "population": 3,
        "foreign key constraints": 3
    },
    "datatypes": {
        "decision boundaries": 4,
        "flower class": 2,
        "knn": 2,
        "kneighborsclassifier": 2,
        "classification rate": 2,
        "predicted class": 2,
        "knn model": 2,
        "pandas manipulations": 2,
        "data format": 2,
        "euclidean distance": 2,
        "knn classifier": 2,
        "distance function": 2,
        "knn algorithm": 2,
        "function predict": 1,
        "predicted class value": 1,
        "nearestneighborsclassifier": 1,
        "function distance": 1,
        "test data": 1,
        "sk": 1,
        "image": 1,
        "knn process": 1
    },
    "cpu usages": {
        "timeseries": 7,
        "correlation matrix": 4,
        "containers": 2,
        "physical nodes": 2,
        "real user monitoring": 2,
        "cassandra cluster": 2,
        "rumdatareceiver": 2,
        "elasticsearch cluster": 2,
        "node names": 2,
        "visual check": 2,
        "correlations": 1,
        "linear operations": 1,
        "graph lasso": 1,
        "numpy method": 1,
        "normalized data": 1,
        "diagonal pattern": 1,
        "affinity propagation": 1,
        "similarity scores": 1,
        "correlation coefficients": 1
    },
    "stock market structure": {
        "timeseries": 7,
        "correlation matrix": 4,
        "containers": 2,
        "physical nodes": 2,
        "real user monitoring": 2,
        "cassandra cluster": 2,
        "rumdatareceiver": 2,
        "elasticsearch cluster": 2,
        "node names": 2,
        "visual check": 2,
        "correlations": 1,
        "linear operations": 1,
        "graph lasso": 1,
        "numpy method": 1,
        "normalized data": 1,
        "diagonal pattern": 1,
        "affinity propagation": 1,
        "similarity scores": 1,
        "correlation coefficients": 1
    },
    "containers": {
        "timeseries": 7,
        "correlation matrix": 4,
        "containers": 2,
        "physical nodes": 2,
        "real user monitoring": 2,
        "cassandra cluster": 2,
        "rumdatareceiver": 2,
        "elasticsearch cluster": 2,
        "node names": 2,
        "visual check": 2,
        "correlations": 1,
        "linear operations": 1,
        "graph lasso": 1,
        "numpy method": 1,
        "normalized data": 1,
        "diagonal pattern": 1,
        "affinity propagation": 1,
        "similarity scores": 1,
        "correlation coefficients": 1
    },
    "timeseries correlation analysis": {
        "timeseries": 7,
        "correlation matrix": 4,
        "containers": 2,
        "physical nodes": 2,
        "real user monitoring": 2,
        "cassandra cluster": 2,
        "rumdatareceiver": 2,
        "elasticsearch cluster": 2,
        "node names": 2,
        "visual check": 2,
        "correlations": 1,
        "linear operations": 1,
        "graph lasso": 1,
        "numpy method": 1,
        "normalized data": 1,
        "diagonal pattern": 1,
        "affinity propagation": 1,
        "similarity scores": 1,
        "correlation coefficients": 1
    },
    "approximation": {
        "central finite different method": 6,
        "finite difference method": 6,
        "cancellation error": 6,
        "first order derivatives": 6,
        "approximation methods": 6,
        "fortran": 4,
        "matrices": 2
    },
    "one dimensional array": {
        "2d array": 4,
        "orthonormal basis": 4,
        "word dimension": 2,
        "array dimension": 2,
        "vector dimension": 2,
        "1d array": 2,
        "matrix": 2,
        "2d vectors": 2,
        "arrows": 2,
        "unit vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "dot product": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2
    },
    "double quotation marks": {
        "help message": 2,
        "double equals sign": 1,
        "single equals sign": 1,
        "boolean": 1,
        "bool": 1,
        "boolean comparisons": 1,
        "indentation": 1,
        "conditional statement": 1,
        "autograded jupyter notebook cell": 1,
        "bonus exercises": 1,
        "python observation": 1,
        "variable observation": 1,
        "str()": 1,
        "str() function": 1,
        "typecasting": 1,
        "year": 1,
        "mathematical operators": 1,
        "leap year": 1,
        "conditional statements": 1,
        "variable year": 1,
        "arguments": 1,
        "online resources": 1,
        "stack overflow": 1,
        "google search": 1,
        "python workflow": 1,
        "python documentation": 1,
        "positional arguments": 1,
        "keyword arguments": 1,
        "function call": 1,
        "input": 1,
        "default input values": 1,
        "default values": 1,
        "docstring": 1,
        "source code": 1,
        "fahrenheit": 1
    },
    "string": {
        "help message": 2,
        "double equals sign": 1,
        "single equals sign": 1,
        "boolean": 1,
        "bool": 1,
        "boolean comparisons": 1,
        "indentation": 1,
        "conditional statement": 1,
        "autograded jupyter notebook cell": 1,
        "bonus exercises": 1,
        "python observation": 1,
        "variable observation": 1,
        "str()": 1,
        "str() function": 1,
        "typecasting": 1,
        "year": 1,
        "mathematical operators": 1,
        "leap year": 1,
        "conditional statements": 1,
        "variable year": 1,
        "arguments": 1,
        "online resources": 1,
        "stack overflow": 1,
        "google search": 1,
        "python workflow": 1,
        "python documentation": 1,
        "positional arguments": 1,
        "keyword arguments": 1,
        "function call": 1,
        "input": 1,
        "default input values": 1,
        "default values": 1,
        "docstring": 1,
        "source code": 1,
        "fahrenheit": 1
    },
    "logic operators": {
        "help message": 2,
        "double equals sign": 1,
        "single equals sign": 1,
        "boolean": 1,
        "bool": 1,
        "boolean comparisons": 1,
        "indentation": 1,
        "conditional statement": 1,
        "autograded jupyter notebook cell": 1,
        "bonus exercises": 1,
        "python observation": 1,
        "variable observation": 1,
        "str()": 1,
        "str() function": 1,
        "typecasting": 1,
        "year": 1,
        "mathematical operators": 1,
        "leap year": 1,
        "conditional statements": 1,
        "variable year": 1,
        "arguments": 1,
        "online resources": 1,
        "stack overflow": 1,
        "google search": 1,
        "python workflow": 1,
        "python documentation": 1,
        "positional arguments": 1,
        "keyword arguments": 1,
        "function call": 1,
        "input": 1,
        "default input values": 1,
        "default values": 1,
        "docstring": 1,
        "source code": 1,
        "fahrenheit": 1
    },
    "exemplar work": {
        "shopping": 3,
        "shopping trips": 3,
        "log transformation": 3,
        "distribution shops": 2,
        "plotting region": 2,
        "quantile method": 2,
        "log transform": 1,
        "tick marks": 1,
        "symmetrize": 1,
        "carts": 1,
        "log transformed data": 1,
        "point cloud": 1,
        "vertical bands": 1,
        "over plotting": 1,
        "transaction time": 1,
        "transaction times": 1,
        "datetime64": 1,
        "unique customers": 1,
        "customer trends": 1,
        "customer counts": 1,
        "boxplots": 1,
        "holidays": 1,
        "shopping behavior": 1,
        "lunar new year": 1,
        "christmas": 1,
        "line": 1,
        "reference lines": 1
    },
    "python classes": {
        "l2 regularization": 4,
        "momentum term": 4,
        "xor gate": 2,
        "neural network": 2,
        "partiular architecture": 2,
        "weight update": 2,
        "activation function": 2,
        "biases": 2,
        "weights": 2,
        "l2 regularization term": 2,
        "regularizatino constant": 2,
        "batch size": 2,
        "2d system": 1,
        "diffusion coefficient": 1,
        "flux": 1,
        "1d vector equation system": 1,
        "linear equation solver": 1,
        "linear index": 1,
        "timestep size": 1,
        "simulation": 1
    },
    "graph analysis": {
        "social network": 10,
        "florentine families": 6,
        "ity": 2,
        "code cell": 2,
        "unit tests": 2,
        "karate club": 2,
        "pairwise links": 2,
        "wikipedia": 2,
        "administrator": 2,
        "highest betweennness values": 1,
        "brokerage\" roles": 1,
        "high betweenness values": 1,
        "cliques": 1,
        "node degrees": 1
    },
    "movielens 100k": {
        "movielens": 5,
        "users": 4,
        "labeled countplot": 4,
        "age column": 4,
        "distplot": 4,
        "movies": 3,
        "m1": 2,
        "movie titles": 2,
        "merge function": 2,
        "age": 2,
        "count": 1,
        "seaborn barplot": 1,
        "average rating": 1
    },
    "numpy function": {
        "total request rate": 10,
        "constant term": 6,
        "cpu": 4,
        "coefficient": 4,
        "predict method": 3,
        "x matrix": 3,
        "request": 2,
        "cpu load": 2,
        "width variable": 1
    },
    "bootstrapped line fitting": {
        "generative model": 4,
        "bootstrap": 4,
        "bootstrapping": 3,
        "uncertainty": 3,
        "input parameters": 3,
        "labeled scatter plot": 3,
        "correlations": 3,
        "random samples": 3,
        "function fit": 2,
        "uniform distribution": 1,
        "size argument": 1,
        "mse": 1,
        "estimated model parameters": 1,
        "residuals": 1,
        "x arrays": 1,
        "boostrapped versions": 1
    },
    "forward pass": {
        "computational graph": 5,
        "variable naming convention": 4,
        "plus layer": 2,
        "square layer": 2,
        "local gradients": 2,
        "exact variable names": 2,
        "gradients": 1,
        "stateless": 1,
        "stateful layer": 1,
        "output gradient": 1,
        "computational graphs": 1,
        "python builtin locals() function": 1,
        "backward pass": 1,
        "affine layer tasks": 1,
        "affine white box": 1,
        "affine layer": 1,
        "affine black box": 1,
        "affine layers": 1,
        "backpropagation": 1,
        "squared loss layer tasks": 1,
        "squared loss white box": 1,
        "squared loss black box": 1,
        "forward pass tasks": 1,
        "hyperparameters": 1
    },
    "skewness": {
        "window parameter": 3,
        "rolling mean": 3,
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "matplolib": 1,
        "deep learning": 1,
        "neural network": 1,
        "standard scaling": 1,
        "standardize": 1,
        "scaler": 1,
        "scaling": 1,
        "scaled feature values": 1,
        "labels": 1,
        "tensorflow": 1,
        "n": 1,
        "scikit learn": 1,
        "testing sets": 1,
        "autoregressive model": 1
    },
    "automated grading tools": {
        "airtime": 5,
        "arrdelay": 5,
        "multivariate regresion model": 3,
        "predictor variable": 3,
        "regression model": 3,
        "random number generator": 3,
        "test sets": 2,
        "multiple independent variables": 2,
        "dependent variable": 2,
        "patsy formula": 2,
        "multivariate regression model": 2,
        "unit tests": 1,
        "distance": 1,
        "stats": 1
    },
    "assignment grades": {
        "airtime": 5,
        "arrdelay": 5,
        "multivariate regresion model": 3,
        "predictor variable": 3,
        "regression model": 3,
        "random number generator": 3,
        "test sets": 2,
        "multiple independent variables": 2,
        "dependent variable": 2,
        "patsy formula": 2,
        "multivariate regression model": 2,
        "unit tests": 1,
        "distance": 1,
        "stats": 1
    },
    "dataframe objects": {
        "airtime": 5,
        "arrdelay": 5,
        "multivariate regresion model": 3,
        "predictor variable": 3,
        "regression model": 3,
        "random number generator": 3,
        "test sets": 2,
        "multiple independent variables": 2,
        "dependent variable": 2,
        "patsy formula": 2,
        "multivariate regression model": 2,
        "unit tests": 1,
        "distance": 1,
        "stats": 1
    },
    "cse 255": {
        "covariance matrix": 8,
        "covariance": 2,
        "matrices": 2,
        "augmented vector": 2,
        "outer product": 2,
        "edx videos": 1,
        "programming assignment": 1,
        "analysis": 1,
        "eigenvector decomposition": 1,
        "homework": 1,
        "data vectors": 1,
        "rdd": 1,
        "arithmetic operations": 1,
        "notebook setup": 1,
        "lower left matrix": 1,
        "outer product average": 1,
        "average": 1,
        "helper functions": 1,
        "n x n matrix": 1,
        "1 x n matrix": 1,
        "x n matrix": 1,
        "x": 1,
        "nansum": 1,
        "n x": 1
    },
    "cogsci": {
        "average height values": 6,
        "pivot table": 6,
        "confounding variable": 6,
        "majors": 4,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3
    },
    "regexr": {
        "character classes": 6,
        "regexr": 6,
        "brackets": 4,
        "literals": 2,
        "basic regular expression syntax": 2,
        "character class negation": 2,
        "solution breakdown": 2,
        "text snippet": 2,
        "shorthand character classes": 2,
        "anchor": 2,
        "character class": 2,
        "regex": 2
    },
    "literals": {
        "capital": 5,
        "regexes": 3,
        "regexr": 2,
        "brackets": 2,
        "challenge 7": 2,
        "challenge 6": 2,
        "regular expression": 2,
        "character classes": 2,
        "regex": 2,
        "regular expressions": 1,
        "match object": 1,
        "pattern object": 1,
        "us phone number": 1,
        "area code": 1,
        "regular expression syntax": 1,
        "challenge 14": 1,
        "metacharacters": 1,
        "parentheses": 1,
        "challenge 13": 1,
        "uring group skills": 1,
        "non-": 1
    },
    "numpy functions": {
        "arial": 15,
        "time series dataset": 3,
        "data cleaning": 3,
        "null hypothesis": 2,
        "bar chart": 1,
        "1": 1,
        "input data frame": 1,
        "random state": 1,
        "column name": 1,
        "threshold value": 1,
        "scaling": 1,
        "matrix": 1,
        "gaussian distribution": 1,
        "probabilities": 1,
        "2d array": 1
    },
    "clustering algorithm effectiveness": {
        "clustering algorithms": 6,
        "hierarchical clustering": 3,
        "plotting function": 3,
        "omerative": 3,
        "unsupervised techniques": 3,
        "clustering parameters": 3,
        "flame dataset": 3,
        "agg dataset": 3,
        "comp dataset": 2,
        "jain dataset": 2,
        "pathbased dataset": 2,
        "r15 dataset": 1
    },
    "ys": {
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "numerical differentiation": 3,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "color intensity": 1,
        "colors": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1
    },
    "sin": {
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "numerical differentiation": 3,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "color intensity": 1,
        "colors": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1
    },
    "linspace function": {
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "numerical differentiation": 3,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "color intensity": 1,
        "colors": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1
    },
    "xs": {
        "plt": 3,
        "line segments": 3,
        "plot function": 3,
        "linspace": 3,
        "arange": 3,
        "cos function": 3,
        "sin function": 3,
        "numerical differentiation": 3,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "color intensity": 1,
        "colors": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1
    },
    "alcohol consumption": {
        "diseased patients": 3,
        "healthy patients": 3,
        "red dots": 3,
        "marker size": 3,
        "marker style": 3,
        "diseased people": 3,
        "python function": 3,
        "nested loop": 3,
        "plot command": 2,
        "bar chart": 2,
        "alcohol consumption": 2,
        "hist function": 2,
        "booleans": 2
    },
    "instrument response": {
        "array analysis": 3,
        "estimate travel times": 3,
        "seismic phases": 3,
        "cross correlation routines": 3,
        "event detection": 3,
        "plot ray paths": 3,
        "manipulation filtering": 3,
        "event metadata": 3,
        "pling": 2,
        "inventory": 2,
        "command line utilities": 1,
        "ampling": 1,
        "fdsn server": 1,
        "wildcard": 1,
        "waveform data": 1,
        "channel code": 1
    },
    "digitizer": {
        "array analysis": 3,
        "estimate travel times": 3,
        "seismic phases": 3,
        "cross correlation routines": 3,
        "event detection": 3,
        "plot ray paths": 3,
        "manipulation filtering": 3,
        "event metadata": 3,
        "pling": 2,
        "inventory": 2,
        "command line utilities": 1,
        "ampling": 1,
        "fdsn server": 1,
        "wildcard": 1,
        "waveform data": 1,
        "channel code": 1
    },
    "amplitude": {
        "array analysis": 3,
        "estimate travel times": 3,
        "seismic phases": 3,
        "cross correlation routines": 3,
        "event detection": 3,
        "plot ray paths": 3,
        "manipulation filtering": 3,
        "event metadata": 3,
        "pling": 2,
        "inventory": 2,
        "command line utilities": 1,
        "ampling": 1,
        "fdsn server": 1,
        "wildcard": 1,
        "waveform data": 1,
        "channel code": 1
    },
    "phase response": {
        "array analysis": 3,
        "estimate travel times": 3,
        "seismic phases": 3,
        "cross correlation routines": 3,
        "event detection": 3,
        "plot ray paths": 3,
        "manipulation filtering": 3,
        "event metadata": 3,
        "pling": 2,
        "inventory": 2,
        "command line utilities": 1,
        "ampling": 1,
        "fdsn server": 1,
        "wildcard": 1,
        "waveform data": 1,
        "channel code": 1
    },
    "config file": {
        "test data": 4,
        "standardize function": 4,
        "feature vectors": 2,
        "training examples": 2,
        "wikipedia feature scaling article": 2,
        "distribution mean": 2,
        "weights": 1,
        "tf variables": 1,
        "biases": 1,
        "mini batch": 1,
        "tf graph": 1,
        "tf placeholders": 1,
        "helper function": 1,
        "bias dictionary": 1,
        "learnable parameters": 1,
        "bias matrices": 1,
        "network model": 1,
        "weights dictionary": 1,
        "training time": 1,
        "tensorflow": 1,
        "feedforward network model": 1,
        "hidden layers": 1,
        "output layer": 1,
        "sigmoid activation function": 1
    },
    "access token secret": {
        "coordinates": 4,
        "pandas documentation": 4,
        "json file": 2,
        "kevin bacon": 2,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "tweetdeck": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "null hypothesis": 2
    },
    "consumer secret": {
        "coordinates": 4,
        "pandas documentation": 4,
        "json file": 2,
        "kevin bacon": 2,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "tweetdeck": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "null hypothesis": 2
    },
    "delta airline": {
        "delta airline": 3,
        "cruising speed": 3,
        "tail height": 3,
        "npy file": 2,
        "reduced array": 2,
        "random number generator": 2,
        "elbow method": 2,
        "kmeans algorithm": 2,
        "accommodation": 2,
        "categorical data": 2,
        "wingspan": 2,
        "categorical variable": 2,
        "inertia": 1,
        "airbus": 1,
        "aircraft physical characteristics": 1,
        "attributes": 1,
        "dimensionality reduction techniques": 1,
        "principal components analysis": 1,
        "frame": 1
    },
    "word frequency": {
        "vocab": 4,
        "word vector": 4,
        "count value": 2,
        "word2idx": 2,
        "dictionary comprehension": 2,
        "review data set": 2,
        "learning rate loss": 2,
        "training method": 2,
        "network error": 2,
        "activation function": 2,
        "hidden layers": 2,
        "batch size": 2,
        "10000 element long vectors": 2,
        "stochastic gradient descent": 2,
        "connected layer": 2
    },
    "review data": {
        "vocab": 4,
        "word vector": 4,
        "count value": 2,
        "word2idx": 2,
        "dictionary comprehension": 2,
        "review data set": 2,
        "learning rate loss": 2,
        "training method": 2,
        "network error": 2,
        "activation function": 2,
        "hidden layers": 2,
        "batch size": 2,
        "10000 element long vectors": 2,
        "stochastic gradient descent": 2,
        "connected layer": 2
    },
    "bay area bike share": {
        "spark": 7,
        "map reduce job": 4,
        "bike share": 3,
        "vm": 3,
        "scikit learn": 3,
        "python pipeline": 3,
        "filter filter": 2,
        "caltrain station": 2,
        "reducebykey method": 2,
        "second": 2,
        "combinebykey method": 1,
        "inebykey": 1,
        "red": 1
    },
    "hadoop services": {
        "spark": 7,
        "map reduce job": 4,
        "bike share": 3,
        "vm": 3,
        "scikit learn": 3,
        "python pipeline": 3,
        "filter filter": 2,
        "caltrain station": 2,
        "reducebykey method": 2,
        "second": 2,
        "combinebykey method": 1,
        "inebykey": 1,
        "red": 1
    },
    "caltrain station": {
        "spark": 7,
        "map reduce job": 4,
        "bike share": 3,
        "vm": 3,
        "scikit learn": 3,
        "python pipeline": 3,
        "filter filter": 2,
        "caltrain station": 2,
        "reducebykey method": 2,
        "second": 2,
        "combinebykey method": 1,
        "inebykey": 1,
        "red": 1
    },
    "consumer key consumer secret": {
        "negative tweets": 3,
        "positive tweets": 3,
        "nltk twitter corpus": 3,
        "tfidfvectorizer": 3,
        "bigrams": 3,
        "default parameters": 3,
        "trigrams": 3,
        "unigrams": 3,
        "stop words": 3,
        "linearsvc": 2,
        "user timeline": 2,
        "tweepy's": 2,
        "randomforestclassifier": 1
    },
    "twitter application": {
        "negative tweets": 3,
        "positive tweets": 3,
        "nltk twitter corpus": 3,
        "tfidfvectorizer": 3,
        "bigrams": 3,
        "default parameters": 3,
        "trigrams": 3,
        "unigrams": 3,
        "stop words": 3,
        "linearsvc": 2,
        "user timeline": 2,
        "tweepy's": 2,
        "randomforestclassifier": 1
    },
    "access token access token secret": {
        "negative tweets": 3,
        "positive tweets": 3,
        "nltk twitter corpus": 3,
        "tfidfvectorizer": 3,
        "bigrams": 3,
        "default parameters": 3,
        "trigrams": 3,
        "unigrams": 3,
        "stop words": 3,
        "linearsvc": 2,
        "user timeline": 2,
        "tweepy's": 2,
        "randomforestclassifier": 1
    },
    "credentials": {
        "negative tweets": 3,
        "positive tweets": 3,
        "nltk twitter corpus": 3,
        "tfidfvectorizer": 3,
        "bigrams": 3,
        "default parameters": 3,
        "trigrams": 3,
        "unigrams": 3,
        "stop words": 3,
        "linearsvc": 2,
        "user timeline": 2,
        "tweepy's": 2,
        "randomforestclassifier": 1
    },
    "nltk twitter corpus": {
        "negative tweets": 3,
        "positive tweets": 3,
        "nltk twitter corpus": 3,
        "tfidfvectorizer": 3,
        "bigrams": 3,
        "default parameters": 3,
        "trigrams": 3,
        "unigrams": 3,
        "stop words": 3,
        "linearsvc": 2,
        "user timeline": 2,
        "tweepy's": 2,
        "randomforestclassifier": 1
    },
    "squared loss layers": {
        "computational graph": 5,
        "variable naming convention": 4,
        "plus layer": 2,
        "square layer": 2,
        "local gradients": 2,
        "exact variable names": 2,
        "gradients": 1,
        "stateless": 1,
        "stateful layer": 1,
        "output gradient": 1,
        "computational graphs": 1,
        "python builtin locals() function": 1,
        "backward pass": 1,
        "affine layer tasks": 1,
        "affine white box": 1,
        "affine layer": 1,
        "affine black box": 1,
        "affine layers": 1,
        "backpropagation": 1,
        "squared loss layer tasks": 1,
        "squared loss white box": 1,
        "squared loss black box": 1,
        "forward pass tasks": 1
    },
    "neural networks layers": {
        "computational graph": 5,
        "variable naming convention": 4,
        "plus layer": 2,
        "square layer": 2,
        "local gradients": 2,
        "exact variable names": 2,
        "gradients": 1,
        "stateless": 1,
        "stateful layer": 1,
        "output gradient": 1,
        "computational graphs": 1,
        "python builtin locals() function": 1,
        "backward pass": 1,
        "affine layer tasks": 1,
        "affine white box": 1,
        "affine layer": 1,
        "affine black box": 1,
        "affine layers": 1,
        "backpropagation": 1,
        "squared loss layer tasks": 1,
        "squared loss white box": 1,
        "squared loss black box": 1,
        "forward pass tasks": 1
    },
    "neural network layers": {
        "computational graph": 5,
        "variable naming convention": 4,
        "plus layer": 2,
        "square layer": 2,
        "local gradients": 2,
        "exact variable names": 2,
        "gradients": 1,
        "stateless": 1,
        "stateful layer": 1,
        "output gradient": 1,
        "computational graphs": 1,
        "python builtin locals() function": 1,
        "backward pass": 1,
        "affine layer tasks": 1,
        "affine white box": 1,
        "affine layer": 1,
        "affine black box": 1,
        "affine layers": 1,
        "backpropagation": 1,
        "squared loss layer tasks": 1,
        "squared loss white box": 1,
        "squared loss black box": 1,
        "forward pass tasks": 1
    },
    "fillna": {
        "postal code": 4,
        "extended zip codes": 4,
        "extended postal codes": 4,
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "zip codes": 3,
        "inspection": 2,
        "inspection dataframe": 2
    },
    "pymc": {
        "pystan": 4,
        "pymc": 2,
        "statistical exposition": 2,
        "distribution": 2,
        "distributions": 2,
        "pymc model": 2,
        "bayesian logistic regression": 2,
        "bayesian logistic regression form": 2,
        "bernoulli method": 2,
        "univariate logistic regression": 2,
        "sigmoid function": 2,
        "bayesian model": 2,
        "computation segment": 2,
        "mcmc procedure": 2,
        "roc scores": 2,
        "non-bayesian logistic": 2
    },
    "train dataframe": {
        "predction model": 2,
        "zero predictor": 2,
        "filtering rate": 2,
        "beautifulsoup": 2,
        "spam mails": 2,
        "filter rate": 2,
        "spammy words": 2,
        "characterstics": 2,
        "html table": 2,
        "data parsing": 2,
        "spam": 2,
        "web crawling": 2,
        "datahub": 2,
        "contour plot": 2,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "classification trees": {
        "decision tree algorithm": 4,
        "classification error rate": 4,
        "gini index": 4,
        "titanic": 3,
        "sex": 3,
        "age": 3,
        "response variable": 3,
        "maximum value": 2,
        "splitting criteria": 2,
        "predicted probability": 2,
        "classification trees": 2,
        "node purity": 2
    },
    "guided practice lab": {
        "grouped histograms": 2,
        "ots": 2,
        "grouped box plots": 2,
        "statistics plotting library": 2,
        "title functions": 2,
        "motivational plots": 2,
        "flowchart": 2,
        "boston data dictionary": 2,
        "line plot": 2,
        "bar plot": 2,
        "style sheet": 2,
        "solid green line": 2,
        "indus": 2,
        "housing data": 2,
        "blue dashed line": 2,
        "matplotlib commands": 1,
        "bar chart": 1,
        "horizontal bars": 1
    },
    "plotting line plots": {
        "grouped histograms": 2,
        "ots": 2,
        "grouped box plots": 2,
        "statistics plotting library": 2,
        "title functions": 2,
        "motivational plots": 2,
        "flowchart": 2,
        "boston data dictionary": 2,
        "line plot": 2,
        "bar plot": 2,
        "style sheet": 2,
        "solid green line": 2,
        "indus": 2,
        "housing data": 2,
        "blue dashed line": 2,
        "matplotlib commands": 1,
        "bar chart": 1,
        "horizontal bars": 1
    },
    "python data visualization": {
        "grouped histograms": 2,
        "ots": 2,
        "grouped box plots": 2,
        "statistics plotting library": 2,
        "title functions": 2,
        "motivational plots": 2,
        "flowchart": 2,
        "boston data dictionary": 2,
        "line plot": 2,
        "bar plot": 2,
        "style sheet": 2,
        "solid green line": 2,
        "indus": 2,
        "housing data": 2,
        "blue dashed line": 2,
        "matplotlib commands": 1,
        "bar chart": 1,
        "horizontal bars": 1
    },
    "advanced matplotlib": {
        "grouped histograms": 2,
        "ots": 2,
        "grouped box plots": 2,
        "statistics plotting library": 2,
        "title functions": 2,
        "motivational plots": 2,
        "flowchart": 2,
        "boston data dictionary": 2,
        "line plot": 2,
        "bar plot": 2,
        "style sheet": 2,
        "solid green line": 2,
        "indus": 2,
        "housing data": 2,
        "blue dashed line": 2,
        "matplotlib commands": 1,
        "bar chart": 1,
        "horizontal bars": 1
    },
    "normal equations": {
        "gradient ascent": 2,
        "fudge factor": 2,
        "signature": 2,
        "maximum likelihood principle": 1,
        "objective function": 1,
        "arithm": 1,
        "joint probability": 1,
        "bernoulli trial": 1,
        "notational conventions": 1,
        "scalar argument": 1,
        "elementwise logarithm": 1,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "mle": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1
    },
    "synthetic dataset": {
        "gradient ascent": 2,
        "fudge factor": 2,
        "signature": 2,
        "maximum likelihood principle": 1,
        "objective function": 1,
        "arithm": 1,
        "joint probability": 1,
        "bernoulli trial": 1,
        "notational conventions": 1,
        "scalar argument": 1,
        "elementwise logarithm": 1,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "mle": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1
    },
    "pipelining": {
        "leaf specimens": 3,
        "csv data file": 3,
        "digital images": 3,
        "plant species": 3,
        "specimen number": 3,
        "randomforestclassifier": 2,
        "random forest classifier": 2,
        "score function": 2,
        "pipeline anova rfc": 1,
        "anova filter": 1,
        "random forest classification": 1,
        "ord": 1,
        "binary indicator": 1,
        "depdelay variables": 1,
        "feature scaling": 1,
        "recursive feature elimination": 1,
        "svc classification": 1,
        "gridsearchcv": 1,
        "svc algorithm": 1,
        "c parameter": 1
    },
    "log": {
        "multivariate": 5,
        "logvar": 5,
        "single incident entry": 2,
        "incident entries": 2,
        "generator function": 2,
        "hyperparameters": 1,
        "police log": 1,
        "text": 1,
        "marker text": 1,
        "single text file": 1,
        "marker lines": 1,
        "python dict": 1,
        "data files": 1,
        "incident entry": 1,
        "units line": 1,
        "header line": 1,
        "filenames": 1,
        "text based incident entries": 1,
        "embedded newlines": 1,
        "incident files": 1,
        "variable files": 1,
        "python dict objects": 1
    },
    "interactivity": {
        "bokeh plot": 4,
        "dask": 2,
        "taxi trips": 2,
        "2d grid": 2,
        "rgb element": 2,
        "plotting program": 2,
        "datashader operation": 2,
        "pixel colors": 2,
        "plot size": 2,
        "dynamic operation": 2,
        "zoom level": 2,
        "linked streams": 2,
        "datashade": 2,
        "geoviews": 1,
        "bokeh wmtstilesource": 1,
        "datashader": 1,
        "taxi dropoffs": 1,
        "aggregator functions": 1
    },
    "hover tools": {
        "bokeh plot": 4,
        "dask": 2,
        "taxi trips": 2,
        "2d grid": 2,
        "rgb element": 2,
        "plotting program": 2,
        "datashader operation": 2,
        "pixel colors": 2,
        "plot size": 2,
        "dynamic operation": 2,
        "zoom level": 2,
        "linked streams": 2,
        "datashade": 2,
        "geoviews": 1,
        "bokeh wmtstilesource": 1,
        "datashader": 1,
        "taxi dropoffs": 1,
        "aggregator functions": 1
    },
    "bokeh": {
        "bokeh plot": 4,
        "dask": 2,
        "taxi trips": 2,
        "2d grid": 2,
        "rgb element": 2,
        "plotting program": 2,
        "datashader operation": 2,
        "pixel colors": 2,
        "plot size": 2,
        "dynamic operation": 2,
        "zoom level": 2,
        "linked streams": 2,
        "datashade": 2,
        "geoviews": 1,
        "bokeh wmtstilesource": 1,
        "datashader": 1,
        "taxi dropoffs": 1,
        "aggregator functions": 1
    },
    "big data": {
        "bokeh plot": 4,
        "dask": 2,
        "taxi trips": 2,
        "2d grid": 2,
        "rgb element": 2,
        "plotting program": 2,
        "datashader operation": 2,
        "pixel colors": 2,
        "plot size": 2,
        "dynamic operation": 2,
        "zoom level": 2,
        "linked streams": 2,
        "datashade": 2,
        "geoviews": 1,
        "bokeh wmtstilesource": 1,
        "datashader": 1,
        "taxi dropoffs": 1,
        "aggregator functions": 1
    },
    "distribution": {
        "bokeh plot": 4,
        "dask": 2,
        "taxi trips": 2,
        "2d grid": 2,
        "rgb element": 2,
        "plotting program": 2,
        "datashader operation": 2,
        "pixel colors": 2,
        "plot size": 2,
        "dynamic operation": 2,
        "zoom level": 2,
        "linked streams": 2,
        "datashade": 2,
        "geoviews": 1,
        "bokeh wmtstilesource": 1,
        "datashader": 1,
        "taxi dropoffs": 1,
        "aggregator functions": 1
    },
    "code icon": {
        "jupyter": 8,
        "docs": 4,
        "image values": 4,
        "image files": 4,
        "pixel value": 4,
        "image formats": 4,
        "ar": 4,
        "vector dot products": 1
    },
    "pandas dataframes": {
        "datetime objects": 3,
        "olympic sports": 2,
        "weighted average": 2,
        "search interest": 2,
        "ratings matrix": 2,
        "booleans": 1,
        "handgun checks": 1,
        "vector operations": 1,
        "long gun background checks": 1,
        "worldwide popularity": 1,
        "populations": 1,
        "census population table": 1,
        "search interest table": 1,
        "population": 1,
        "volleyball": 1,
        "interest": 1,
        "netherlands": 1,
        "china": 1,
        "global search interest": 1,
        "global population": 1,
        "india": 1,
        "group by": 1,
        "sql": 1,
        "population weights": 1,
        "pandas dataframes": 1,
        "ranking": 1,
        "frame": 1
    },
    "optimizer": {
        "standardize function": 4,
        "test data": 2,
        "feature vectors": 2,
        "training examples": 2,
        "wikipedia feature scaling article": 2,
        "distribution mean": 2,
        "weights": 1,
        "tf variables": 1,
        "biases": 1,
        "mini batch": 1,
        "tf graph": 1,
        "tf placeholders": 1,
        "helper function": 1,
        "bias dictionary": 1,
        "learnable parameters": 1,
        "bias matrices": 1,
        "network model": 1,
        "weights dictionary": 1,
        "training time": 1,
        "tensorflow": 1,
        "feedforward network model": 1,
        "hidden layers": 1,
        "output layer": 1,
        "sigmoid activation function": 1,
        "hyperparameters": 1
    },
    "datetime index": {
        "mean windspeeds": 11,
        "standard deviations": 9,
        "mean windspeed": 5,
        "windspeeds": 4,
        "average windspeed": 4
    },
    "2061": {
        "mean windspeeds": 11,
        "standard deviations": 9,
        "mean windspeed": 5,
        "windspeeds": 4,
        "average windspeed": 4
    },
    "year": {
        "mean windspeeds": 11,
        "standard deviations": 9,
        "mean windspeed": 5,
        "windspeeds": 4,
        "average windspeed": 4
    },
    "initial analysis": {
        "email": 3,
        "kaggle": 2,
        "train dataframe": 2,
        "labeled dataset": 1,
        "test dataframe": 1,
        "evaluation dataframe": 1,
        "labelled dataset": 1,
        "evaluation": 1,
        "training models": 1,
        "test datsets": 1,
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "pipeline": {
        "gridsearchcv": 4,
        "lasso": 3,
        "sklearn object": 3,
        "scaler object": 3,
        "uci machine learning repository": 2,
        "chemical analysis": 2,
        "wine dataset": 2,
        "data dictionary": 2,
        "randomforestregressor": 2,
        "shufflesplit": 2,
        "scaler": 2,
        "model selection": 2,
        "pre": 2,
        "hyperparameter tuning": 2
    },
    "integer addition": {
        "coding practice": 6,
        "symbolic math": 4,
        "subtraction": 2,
        "multiplication": 2,
        "integer division": 2,
        "mathematical operations": 2,
        "fractional component": 1,
        "integer addition": 1,
        "code cell": 1,
        "integer addition operations": 1,
        "integer subtraction": 1,
        "integer subtraction operations": 1,
        "integer multiplication": 1,
        "integer multiplication operations": 1,
        "integer division operations": 1,
        "integer operations": 1,
        "fractions": 1,
        "decimals": 1,
        "non-integer numbers": 1,
        "division": 1,
        "floating point numbers": 1
    },
    "kernel matrix": {
        "kernel matrix": 5,
        "predictive distribution": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "covariance matrix": 3,
        "generative process": 3,
        "conditional models": 3,
        "linear kernel": 2,
        "2d dataset": 2
    },
    "democratic primary": {
        "gini index": 4,
        "classification trees": 3,
        "classification error rate": 3,
        "predicted probability": 2,
        "response variable": 2,
        "splitting criteria": 2,
        "decision tree algorithm": 2,
        "predictive feature": 1,
        "high": 1,
        "high school graduation rate": 1,
        "high population density": 1,
        "continuous response": 1,
        "regression trees": 1,
        "categorical response": 1,
        "mean response": 1,
        "total variance": 1,
        "training observations": 1,
        "maximum value": 1,
        "node purity": 1,
        "titanic": 1,
        "sex": 1,
        "age": 1
    },
    "regex": {
        "character classes": 6,
        "regexr": 6,
        "literals": 2,
        "basic regular expression syntax": 2,
        "character class negation": 2,
        "solution breakdown": 2,
        "brackets": 2,
        "text snippet": 2,
        "shorthand character classes": 2,
        "anchor": 2,
        "character class": 2,
        "regex": 2
    },
    "netscape": {
        "character classes": 6,
        "regexr": 6,
        "literals": 2,
        "basic regular expression syntax": 2,
        "character class negation": 2,
        "solution breakdown": 2,
        "brackets": 2,
        "text snippet": 2,
        "shorthand character classes": 2,
        "anchor": 2,
        "character class": 2,
        "regex": 2
    },
    "perl": {
        "character classes": 6,
        "regexr": 6,
        "literals": 2,
        "basic regular expression syntax": 2,
        "character class negation": 2,
        "solution breakdown": 2,
        "brackets": 2,
        "text snippet": 2,
        "shorthand character classes": 2,
        "anchor": 2,
        "character class": 2,
        "regex": 2
    },
    "text editor": {
        "character classes": 6,
        "regexr": 6,
        "literals": 2,
        "basic regular expression syntax": 2,
        "character class negation": 2,
        "solution breakdown": 2,
        "brackets": 2,
        "text snippet": 2,
        "shorthand character classes": 2,
        "anchor": 2,
        "character class": 2,
        "regex": 2
    },
    "libary": {
        "character classes": 6,
        "regexr": 6,
        "literals": 2,
        "basic regular expression syntax": 2,
        "character class negation": 2,
        "solution breakdown": 2,
        "brackets": 2,
        "text snippet": 2,
        "shorthand character classes": 2,
        "anchor": 2,
        "character class": 2,
        "regex": 2
    },
    "bash shell": {
        "character classes": 6,
        "regexr": 6,
        "literals": 2,
        "basic regular expression syntax": 2,
        "character class negation": 2,
        "solution breakdown": 2,
        "brackets": 2,
        "text snippet": 2,
        "shorthand character classes": 2,
        "anchor": 2,
        "character class": 2,
        "regex": 2
    },
    "data science lab 4": {
        "ridge regression": 5,
        "regression methods": 1,
        "population": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "testing sets": 1,
        "bootstrap": 1,
        "confidence intervals": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "confidence interval": 1,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1
    },
    "random distribution": {
        "ridge regression": 5,
        "regression methods": 1,
        "population": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "testing sets": 1,
        "bootstrap": 1,
        "confidence intervals": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "confidence interval": 1,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1
    },
    "predictor": {
        "ridge regression": 5,
        "regression methods": 1,
        "population": 1,
        "true function value": 1,
        "numpy documentation": 1,
        "numpy sort method": 1,
        "testing sets": 1,
        "bootstrap": 1,
        "confidence intervals": 1,
        "betas": 1,
        "function documentation": 1,
        "bootstrapping": 1,
        "randomness": 1,
        "confidence interval": 1,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1
    },
    "pystan": {
        "pystan": 3,
        "traceplot": 3,
        "predictors": 2,
        "polling data": 2,
        "pystan logistic regression model": 2,
        "parameter graphs": 2,
        "summary stats": 2,
        "quartile": 2,
        "pystan docs": 2,
        "bayesian regression": 1,
        "pandas dictionary": 1,
        "trace": 1,
        "extracted": 1,
        "pandas data frame": 1,
        "python function": 1,
        "bayesian models": 1,
        "predictor function": 1,
        "predfunction": 1,
        "linspace form numpy": 1,
        "coeffecient medians": 1,
        "pyplot": 1
    },
    "egg groups": {
        "boolean array": 8,
        "numpy ndarray": 2,
        "matplotlib methods": 2,
        "formatting": 2,
        "wild type mice": 2,
        "transgenic mouse": 2,
        "isnull method": 2,
        "inplace argument": 2,
        "logical conditions": 2,
        "logical statements": 2,
        "pokemon": 1,
        "isin()": 1,
        "body style": 1,
        "groupby operations": 1,
        "minimum injection volume": 1,
        "dictionaries": 1
    },
    "body styles": {
        "boolean array": 8,
        "numpy ndarray": 2,
        "matplotlib methods": 2,
        "formatting": 2,
        "wild type mice": 2,
        "transgenic mouse": 2,
        "isnull method": 2,
        "inplace argument": 2,
        "logical conditions": 2,
        "logical statements": 2,
        "pokemon": 1,
        "isin()": 1,
        "body style": 1,
        "groupby operations": 1,
        "minimum injection volume": 1,
        "dictionaries": 1
    },
    "mean square error": {
        "eucliean norm": 2,
        "ml": 2,
        "hidden layer width": 2,
        "cnn": 2,
        "face images": 2,
        "mlp": 2,
        "neural network models": 1,
        "drop out": 1,
        "dropout": 1,
        "multiple independent internal representations": 1,
        "randomly selected neurons": 1,
        "feature extraction": 1,
        "fixed weights": 1,
        "object dection": 1,
        "color histograms": 1,
        "convolutional layers": 1,
        "convolutional network": 1,
        "image classification": 1,
        "image processing": 1,
        "automatic image captioning": 1,
        "night scene": 1,
        "scene labeling": 1,
        "narrow networks": 1,
        "wide networks": 1,
        "pooling layer": 1,
        "convolutional layer": 1
    },
    "networks": {
        "eucliean norm": 2,
        "ml": 2,
        "hidden layer width": 2,
        "cnn": 2,
        "face images": 2,
        "mlp": 2,
        "neural network models": 1,
        "drop out": 1,
        "dropout": 1,
        "multiple independent internal representations": 1,
        "randomly selected neurons": 1,
        "feature extraction": 1,
        "fixed weights": 1,
        "object dection": 1,
        "color histograms": 1,
        "convolutional layers": 1,
        "convolutional network": 1,
        "image classification": 1,
        "image processing": 1,
        "automatic image captioning": 1,
        "night scene": 1,
        "scene labeling": 1,
        "narrow networks": 1,
        "wide networks": 1,
        "pooling layer": 1,
        "convolutional layer": 1
    },
    "single hidden layer mlp": {
        "eucliean norm": 2,
        "ml": 2,
        "hidden layer width": 2,
        "cnn": 2,
        "face images": 2,
        "mlp": 2,
        "neural network models": 1,
        "drop out": 1,
        "dropout": 1,
        "multiple independent internal representations": 1,
        "randomly selected neurons": 1,
        "feature extraction": 1,
        "fixed weights": 1,
        "object dection": 1,
        "color histograms": 1,
        "convolutional layers": 1,
        "convolutional network": 1,
        "image classification": 1,
        "image processing": 1,
        "automatic image captioning": 1,
        "night scene": 1,
        "scene labeling": 1,
        "narrow networks": 1,
        "wide networks": 1,
        "pooling layer": 1,
        "convolutional layer": 1
    },
    "continuous function": {
        "eucliean norm": 2,
        "ml": 2,
        "hidden layer width": 2,
        "cnn": 2,
        "face images": 2,
        "mlp": 2,
        "neural network models": 1,
        "drop out": 1,
        "dropout": 1,
        "multiple independent internal representations": 1,
        "randomly selected neurons": 1,
        "feature extraction": 1,
        "fixed weights": 1,
        "object dection": 1,
        "color histograms": 1,
        "convolutional layers": 1,
        "convolutional network": 1,
        "image classification": 1,
        "image processing": 1,
        "automatic image captioning": 1,
        "night scene": 1,
        "scene labeling": 1,
        "narrow networks": 1,
        "wide networks": 1,
        "pooling layer": 1,
        "convolutional layer": 1
    },
    "weight vector": {
        "eucliean norm": 2,
        "ml": 2,
        "hidden layer width": 2,
        "cnn": 2,
        "face images": 2,
        "mlp": 2,
        "neural network models": 1,
        "drop out": 1,
        "dropout": 1,
        "multiple independent internal representations": 1,
        "randomly selected neurons": 1,
        "feature extraction": 1,
        "fixed weights": 1,
        "object dection": 1,
        "color histograms": 1,
        "convolutional layers": 1,
        "convolutional network": 1,
        "image classification": 1,
        "image processing": 1,
        "automatic image captioning": 1,
        "night scene": 1,
        "scene labeling": 1,
        "narrow networks": 1,
        "wide networks": 1,
        "pooling layer": 1,
        "convolutional layer": 1
    },
    "deep networks": {
        "eucliean norm": 2,
        "ml": 2,
        "hidden layer width": 2,
        "cnn": 2,
        "face images": 2,
        "mlp": 2,
        "neural network models": 1,
        "drop out": 1,
        "dropout": 1,
        "multiple independent internal representations": 1,
        "randomly selected neurons": 1,
        "feature extraction": 1,
        "fixed weights": 1,
        "object dection": 1,
        "color histograms": 1,
        "convolutional layers": 1,
        "convolutional network": 1,
        "image classification": 1,
        "image processing": 1,
        "automatic image captioning": 1,
        "night scene": 1,
        "scene labeling": 1,
        "narrow networks": 1,
        "wide networks": 1,
        "pooling layer": 1,
        "convolutional layer": 1
    },
    "gaussian noise": {
        "eucliean norm": 2,
        "ml": 2,
        "hidden layer width": 2,
        "cnn": 2,
        "face images": 2,
        "mlp": 2,
        "neural network models": 1,
        "drop out": 1,
        "dropout": 1,
        "multiple independent internal representations": 1,
        "randomly selected neurons": 1,
        "feature extraction": 1,
        "fixed weights": 1,
        "object dection": 1,
        "color histograms": 1,
        "convolutional layers": 1,
        "convolutional network": 1,
        "image classification": 1,
        "image processing": 1,
        "automatic image captioning": 1,
        "night scene": 1,
        "scene labeling": 1,
        "narrow networks": 1,
        "wide networks": 1,
        "pooling layer": 1,
        "convolutional layer": 1
    },
    "ordinary least square solution": {
        "eucliean norm": 2,
        "ml": 2,
        "hidden layer width": 2,
        "cnn": 2,
        "face images": 2,
        "mlp": 2,
        "neural network models": 1,
        "drop out": 1,
        "dropout": 1,
        "multiple independent internal representations": 1,
        "randomly selected neurons": 1,
        "feature extraction": 1,
        "fixed weights": 1,
        "object dection": 1,
        "color histograms": 1,
        "convolutional layers": 1,
        "convolutional network": 1,
        "image classification": 1,
        "image processing": 1,
        "automatic image captioning": 1,
        "night scene": 1,
        "scene labeling": 1,
        "narrow networks": 1,
        "wide networks": 1,
        "pooling layer": 1,
        "convolutional layer": 1
    },
    "maximum likelihood solution": {
        "eucliean norm": 2,
        "ml": 2,
        "hidden layer width": 2,
        "cnn": 2,
        "face images": 2,
        "mlp": 2,
        "neural network models": 1,
        "drop out": 1,
        "dropout": 1,
        "multiple independent internal representations": 1,
        "randomly selected neurons": 1,
        "feature extraction": 1,
        "fixed weights": 1,
        "object dection": 1,
        "color histograms": 1,
        "convolutional layers": 1,
        "convolutional network": 1,
        "image classification": 1,
        "image processing": 1,
        "automatic image captioning": 1,
        "night scene": 1,
        "scene labeling": 1,
        "narrow networks": 1,
        "wide networks": 1,
        "pooling layer": 1,
        "convolutional layer": 1
    },
    "non-linear function": {
        "eucliean norm": 2,
        "ml": 2,
        "hidden layer width": 2,
        "cnn": 2,
        "face images": 2,
        "mlp": 2,
        "neural network models": 1,
        "drop out": 1,
        "dropout": 1,
        "multiple independent internal representations": 1,
        "randomly selected neurons": 1,
        "feature extraction": 1,
        "fixed weights": 1,
        "object dection": 1,
        "color histograms": 1,
        "convolutional layers": 1,
        "convolutional network": 1,
        "image classification": 1,
        "image processing": 1,
        "automatic image captioning": 1,
        "night scene": 1,
        "scene labeling": 1,
        "narrow networks": 1,
        "wide networks": 1,
        "pooling layer": 1,
        "convolutional layer": 1
    },
    "ms windows": {
        "file system": 1,
        "man page": 1,
        "shell commands": 1,
        "ipython notebooks": 1,
        "data manipulation": 1,
        "command line": 1,
        "wc": 1,
        "word counting tool": 1,
        "delimeter": 1,
        "cut command": 1,
        "head command": 1,
        "one liners": 1,
        "pipes": 1,
        "data folder": 1,
        "user exploration": 1,
        "structured data": 1,
        "scatterplot": 1,
        "survey responses": 1,
        "numeric features": 1,
        "simple line graph": 1,
        "uci machine learning": 1,
        "file contents": 1,
        "decision tree learning": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1
    },
    "linux": {
        "file system": 1,
        "man page": 1,
        "shell commands": 1,
        "ipython notebooks": 1,
        "data manipulation": 1,
        "command line": 1,
        "wc": 1,
        "word counting tool": 1,
        "delimeter": 1,
        "cut command": 1,
        "head command": 1,
        "one liners": 1,
        "pipes": 1,
        "data folder": 1,
        "user exploration": 1,
        "structured data": 1,
        "scatterplot": 1,
        "survey responses": 1,
        "numeric features": 1,
        "simple line graph": 1,
        "uci machine learning": 1,
        "file contents": 1,
        "decision tree learning": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1
    },
    "apple computers": {
        "file system": 1,
        "man page": 1,
        "shell commands": 1,
        "ipython notebooks": 1,
        "data manipulation": 1,
        "command line": 1,
        "wc": 1,
        "word counting tool": 1,
        "delimeter": 1,
        "cut command": 1,
        "head command": 1,
        "one liners": 1,
        "pipes": 1,
        "data folder": 1,
        "user exploration": 1,
        "structured data": 1,
        "scatterplot": 1,
        "survey responses": 1,
        "numeric features": 1,
        "simple line graph": 1,
        "uci machine learning": 1,
        "file contents": 1,
        "decision tree learning": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1
    },
    "unix": {
        "file system": 1,
        "man page": 1,
        "shell commands": 1,
        "ipython notebooks": 1,
        "data manipulation": 1,
        "command line": 1,
        "wc": 1,
        "word counting tool": 1,
        "delimeter": 1,
        "cut command": 1,
        "head command": 1,
        "one liners": 1,
        "pipes": 1,
        "data folder": 1,
        "user exploration": 1,
        "structured data": 1,
        "scatterplot": 1,
        "survey responses": 1,
        "numeric features": 1,
        "simple line graph": 1,
        "uci machine learning": 1,
        "file contents": 1,
        "decision tree learning": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1
    },
    "anaconda distribution": {
        "file system": 1,
        "man page": 1,
        "shell commands": 1,
        "ipython notebooks": 1,
        "data manipulation": 1,
        "command line": 1,
        "wc": 1,
        "word counting tool": 1,
        "delimeter": 1,
        "cut command": 1,
        "head command": 1,
        "one liners": 1,
        "pipes": 1,
        "data folder": 1,
        "user exploration": 1,
        "structured data": 1,
        "scatterplot": 1,
        "survey responses": 1,
        "numeric features": 1,
        "simple line graph": 1,
        "uci machine learning": 1,
        "file contents": 1,
        "decision tree learning": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1
    },
    "command line commands": {
        "file system": 1,
        "man page": 1,
        "shell commands": 1,
        "ipython notebooks": 1,
        "data manipulation": 1,
        "command line": 1,
        "wc": 1,
        "word counting tool": 1,
        "delimeter": 1,
        "cut command": 1,
        "head command": 1,
        "one liners": 1,
        "pipes": 1,
        "data folder": 1,
        "user exploration": 1,
        "structured data": 1,
        "scatterplot": 1,
        "survey responses": 1,
        "numeric features": 1,
        "simple line graph": 1,
        "uci machine learning": 1,
        "file contents": 1,
        "decision tree learning": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1
    },
    "unix commands": {
        "file system": 1,
        "man page": 1,
        "shell commands": 1,
        "ipython notebooks": 1,
        "data manipulation": 1,
        "command line": 1,
        "wc": 1,
        "word counting tool": 1,
        "delimeter": 1,
        "cut command": 1,
        "head command": 1,
        "one liners": 1,
        "pipes": 1,
        "data folder": 1,
        "user exploration": 1,
        "structured data": 1,
        "scatterplot": 1,
        "survey responses": 1,
        "numeric features": 1,
        "simple line graph": 1,
        "uci machine learning": 1,
        "file contents": 1,
        "decision tree learning": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1
    },
    "lsst brokers": {
        "svm model": 9,
        "light curves": 3,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "sentimentnetwork": {
        "polarity cutoff": 12,
        "higher learning rate": 8,
        "noise reduction": 6,
        "6": 6
    },
    "boosted tree model": {
        "prediction accuracy": 3,
        "boosted trees model": 3,
        "decision trees": 3,
        "decision tree model": 3,
        "probabilities": 3,
        "prediction probability": 3,
        "tree models": 2,
        "classification error": 2,
        "training errors": 2,
        "check": 1,
        "gradient boosted trees": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1
    },
    "prediction accuracy": {
        "prediction accuracy": 3,
        "boosted trees model": 3,
        "decision trees": 3,
        "decision tree model": 3,
        "probabilities": 3,
        "prediction probability": 3,
        "tree models": 2,
        "classification error": 2,
        "training errors": 2,
        "check": 1,
        "gradient boosted trees": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1
    },
    "validation accuracies": {
        "standardize function": 4,
        "test data": 2,
        "feature vectors": 2,
        "training examples": 2,
        "wikipedia feature scaling article": 2,
        "distribution mean": 2,
        "weights": 1,
        "tf variables": 1,
        "biases": 1,
        "mini batch": 1,
        "tf graph": 1,
        "tf placeholders": 1,
        "helper function": 1,
        "bias dictionary": 1,
        "learnable parameters": 1,
        "bias matrices": 1,
        "network model": 1,
        "weights dictionary": 1,
        "training time": 1,
        "tensorflow": 1,
        "feedforward network model": 1,
        "hidden layers": 1,
        "output layer": 1,
        "sigmoid activation function": 1
    },
    "losses": {
        "standardize function": 4,
        "test data": 2,
        "feature vectors": 2,
        "training examples": 2,
        "wikipedia feature scaling article": 2,
        "distribution mean": 2,
        "weights": 1,
        "tf variables": 1,
        "biases": 1,
        "mini batch": 1,
        "tf graph": 1,
        "tf placeholders": 1,
        "helper function": 1,
        "bias dictionary": 1,
        "learnable parameters": 1,
        "bias matrices": 1,
        "network model": 1,
        "weights dictionary": 1,
        "training time": 1,
        "tensorflow": 1,
        "feedforward network model": 1,
        "hidden layers": 1,
        "output layer": 1,
        "sigmoid activation function": 1
    },
    "gameplan": {
        "standardize function": 4,
        "test data": 2,
        "feature vectors": 2,
        "training examples": 2,
        "wikipedia feature scaling article": 2,
        "distribution mean": 2,
        "weights": 1,
        "tf variables": 1,
        "biases": 1,
        "mini batch": 1,
        "tf graph": 1,
        "tf placeholders": 1,
        "helper function": 1,
        "bias dictionary": 1,
        "learnable parameters": 1,
        "bias matrices": 1,
        "network model": 1,
        "weights dictionary": 1,
        "training time": 1,
        "tensorflow": 1,
        "feedforward network model": 1,
        "hidden layers": 1,
        "output layer": 1,
        "sigmoid activation function": 1
    },
    "training accuracies": {
        "standardize function": 4,
        "test data": 2,
        "feature vectors": 2,
        "training examples": 2,
        "wikipedia feature scaling article": 2,
        "distribution mean": 2,
        "weights": 1,
        "tf variables": 1,
        "biases": 1,
        "mini batch": 1,
        "tf graph": 1,
        "tf placeholders": 1,
        "helper function": 1,
        "bias dictionary": 1,
        "learnable parameters": 1,
        "bias matrices": 1,
        "network model": 1,
        "weights dictionary": 1,
        "training time": 1,
        "tensorflow": 1,
        "feedforward network model": 1,
        "hidden layers": 1,
        "output layer": 1,
        "sigmoid activation function": 1
    },
    "adamoptimizer": {
        "standardize function": 4,
        "test data": 2,
        "feature vectors": 2,
        "training examples": 2,
        "wikipedia feature scaling article": 2,
        "distribution mean": 2,
        "weights": 1,
        "tf variables": 1,
        "biases": 1,
        "mini batch": 1,
        "tf graph": 1,
        "tf placeholders": 1,
        "helper function": 1,
        "bias dictionary": 1,
        "learnable parameters": 1,
        "bias matrices": 1,
        "network model": 1,
        "weights dictionary": 1,
        "training time": 1,
        "tensorflow": 1,
        "feedforward network model": 1,
        "hidden layers": 1,
        "output layer": 1,
        "sigmoid activation function": 1
    },
    "training loop": {
        "standardize function": 4,
        "test data": 2,
        "feature vectors": 2,
        "training examples": 2,
        "wikipedia feature scaling article": 2,
        "distribution mean": 2,
        "weights": 1,
        "tf variables": 1,
        "biases": 1,
        "mini batch": 1,
        "tf graph": 1,
        "tf placeholders": 1,
        "helper function": 1,
        "bias dictionary": 1,
        "learnable parameters": 1,
        "bias matrices": 1,
        "network model": 1,
        "weights dictionary": 1,
        "training time": 1,
        "tensorflow": 1,
        "feedforward network model": 1,
        "hidden layers": 1,
        "output layer": 1,
        "sigmoid activation function": 1
    },
    "cross entropy loss": {
        "standardize function": 4,
        "test data": 2,
        "feature vectors": 2,
        "training examples": 2,
        "wikipedia feature scaling article": 2,
        "distribution mean": 2,
        "weights": 1,
        "tf variables": 1,
        "biases": 1,
        "mini batch": 1,
        "tf graph": 1,
        "tf placeholders": 1,
        "helper function": 1,
        "bias dictionary": 1,
        "learnable parameters": 1,
        "bias matrices": 1,
        "network model": 1,
        "weights dictionary": 1,
        "training time": 1,
        "tensorflow": 1,
        "feedforward network model": 1,
        "hidden layers": 1,
        "output layer": 1,
        "sigmoid activation function": 1
    },
    "multivariable calculus": {
        "partial derivative": 2,
        "berkeley bowl": 2,
        "cantaloupes": 2,
        "lambdas": 2,
        "anonymous functions": 2,
        "graph cycles": 2,
        "lambda expression": 2,
        "ellipses": 2,
        "recursion": 2,
        "matrix multiplication": 1,
        "linear algebra knowledge": 1,
        "numpy matrices": 1,
        "vector dot products": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "fruit prices": 1,
        "final costs": 1,
        "fruit baskets": 1,
        "double100": 1,
        "integers": 1
    },
    "decision boundary": {
        "decision boundaries": 4,
        "predicted class": 2,
        "knn model": 2,
        "pandas manipulations": 2,
        "data format": 2,
        "euclidean distance": 2,
        "knn classifier": 2,
        "distance function": 2,
        "knn algorithm": 2,
        "class distributions": 1,
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1,
        "function predict": 1,
        "predicted class value": 1,
        "nearestneighborsclassifier": 1,
        "function distance": 1,
        "test data": 1,
        "sk": 1,
        "image": 1,
        "knn process": 1
    },
    "tokenization": {
        "api": 6,
        "token": 5,
        "subset": 4,
        "row index": 4,
        "nlp object": 3,
        "data1": 2,
        "string representation": 2,
        "log scale": 2,
        "2d scatter plot": 2,
        "line chart": 2
    },
    "spacy": {
        "api": 6,
        "token": 5,
        "subset": 4,
        "row index": 4,
        "nlp object": 3,
        "data1": 2,
        "string representation": 2,
        "log scale": 2,
        "2d scatter plot": 2,
        "line chart": 2
    },
    "seaborn plot": {
        "interquartile range": 3,
        "aborn": 3,
        "crime type": 3,
        "pandas boxplot": 3,
        "seaborn boxplot": 3,
        "vertical bar plot": 2,
        "noise violation calls": 2,
        "calls dataframe": 2,
        "eventtm": 2,
        "fraud crimes": 2,
        "pandas bar plot": 2,
        "coolindex": 1,
        "noise violation": 1,
        "seaborn plot": 1,
        "cvlegend": 1,
        "total noise violations": 1
    },
    "generative adversarial network tests": {
        "noise distribution": 4,
        "data distribution": 4,
        "python variables": 3,
        "variables": 2,
        "python variable": 2,
        "full training loop solution task": 2,
        "discriminator": 2,
        "context manager": 2,
        "semantics": 2,
        "single adversarial training example": 2,
        "synthetic images": 2,
        "generative adversarial training": 2,
        "kernel density estimation plot": 2,
        "fake images": 1
    },
    "beautifulsoup": {
        "soup object": 2,
        "html objct": 2,
        "bs4": 2,
        "html page": 2,
        "html": 2,
        "google chrome": 2,
        "inspect": 2,
        "commas": 2,
        "tag objects": 2,
        "python string": 2,
        "restaurant names": 2,
        "beautiful soup": 2,
        "tag object": 2,
        "restaurant locations": 2,
        "barmini": 2,
        "search results": 2
    },
    "price": {
        "soup object": 2,
        "html objct": 2,
        "bs4": 2,
        "html page": 2,
        "html": 2,
        "google chrome": 2,
        "inspect": 2,
        "commas": 2,
        "tag objects": 2,
        "python string": 2,
        "restaurant names": 2,
        "beautiful soup": 2,
        "tag object": 2,
        "restaurant locations": 2,
        "barmini": 2,
        "search results": 2
    },
    "web scra": {
        "soup object": 2,
        "html objct": 2,
        "bs4": 2,
        "html page": 2,
        "html": 2,
        "google chrome": 2,
        "inspect": 2,
        "commas": 2,
        "tag objects": 2,
        "python string": 2,
        "restaurant names": 2,
        "beautiful soup": 2,
        "tag object": 2,
        "restaurant locations": 2,
        "barmini": 2,
        "search results": 2
    },
    "beautiful soup": {
        "soup object": 2,
        "html objct": 2,
        "bs4": 2,
        "html page": 2,
        "html": 2,
        "google chrome": 2,
        "inspect": 2,
        "commas": 2,
        "tag objects": 2,
        "python string": 2,
        "restaurant names": 2,
        "beautiful soup": 2,
        "tag object": 2,
        "restaurant locations": 2,
        "barmini": 2,
        "search results": 2
    },
    "hotkey": {
        "square difference": 4,
        "statistics": 3,
        "least squares solution": 2,
        "optimal vector": 2,
        "matrix notation": 2,
        "column vectors": 2,
        "vector": 2,
        "height": 2,
        "weight": 2,
        "mean grades": 2,
        "panda dataframe": 2,
        "mean grade": 2,
        "reversed regression": 1,
        "standard exam": 1,
        "sons": 1,
        "fathers": 1,
        "iid random variables": 1
    },
    "nlp classification": {
        "countvectorizer": 10,
        "countvectorizer object": 7,
        "confusion matrix": 5,
        "pipeline": 3,
        "multinomialnb": 2,
        "tfidftransformer": 2,
        "train test split": 2
    },
    "seaborn library": {
        "shot distance": 7,
        "kernel density estimate": 6,
        "zip file": 4,
        "moving average": 3,
        "average point increment": 3,
        "squared loss function": 2,
        "average success ratio": 2,
        "loss calculation": 1,
        "absolute loss": 1,
        "ols regression line": 1,
        "draw scatter plot": 1
    },
    "tobias megies": {
        "instrument response": 6,
        "iris": 2,
        "usgs": 2,
        "event information": 2,
        "waveform information": 2,
        "event data": 2,
        "obspy fdsn client": 2,
        "range": 1,
        "obspy documentation": 1,
        "depth range": 1,
        "magnitude range": 1,
        "matching channels": 1,
        "matching stations": 1,
        "large datasets": 1,
        "internal repeated webservice requests": 1,
        "waveform requests": 1,
        "instrument response information": 1,
        "instrument correction": 1,
        "narrow angular distance": 1,
        "search criteria": 1
    },
    "lion kris": {
        "instrument response": 6,
        "iris": 2,
        "usgs": 2,
        "event information": 2,
        "waveform information": 2,
        "event data": 2,
        "obspy fdsn client": 2,
        "range": 1,
        "obspy documentation": 1,
        "depth range": 1,
        "magnitude range": 1,
        "matching channels": 1,
        "matching stations": 1,
        "large datasets": 1,
        "internal repeated webservice requests": 1,
        "waveform requests": 1,
        "instrument response information": 1,
        "instrument correction": 1,
        "narrow angular distance": 1,
        "search criteria": 1
    },
    "housing dataset": {
        "lstat": 3,
        "python package": 2,
        "constant term": 2,
        "statistical calculations": 1,
        "house value data": 1,
        "house value": 1,
        "rm variable": 1,
        "predicted value": 1,
        "dependent variable": 1,
        "predicted values": 1,
        "rm regressor": 1,
        "variable combinations": 1,
        "exercise": 1,
        "formula syntax": 1,
        "patsy patsy": 1,
        "matrices": 1,
        "y matrices": 1,
        "formula": 1,
        "quadratic regression": 1,
        "medv": 1,
        "python functions": 1,
        "patsy": 1,
        "dummy variables": 1,
        "categorical variables": 1,
        "patsy formulas": 1,
        "crim": 1,
        "fit models": 1
    },
    "conditional statement": {
        "help message": 2,
        "indentation": 1,
        "conditional statement": 1,
        "autograded jupyter notebook cell": 1,
        "bonus exercises": 1,
        "python observation": 1,
        "variable observation": 1,
        "str()": 1,
        "str() function": 1,
        "typecasting": 1,
        "year": 1,
        "mathematical operators": 1,
        "leap year": 1,
        "conditional statements": 1,
        "variable year": 1,
        "arguments": 1,
        "online resources": 1,
        "stack overflow": 1,
        "google search": 1,
        "python workflow": 1,
        "python documentation": 1,
        "positional arguments": 1,
        "keyword arguments": 1,
        "function call": 1,
        "input": 1,
        "default input values": 1,
        "default values": 1,
        "docstring": 1,
        "source code": 1,
        "fahrenheit": 1
    },
    "boolean comparison": {
        "help message": 2,
        "indentation": 1,
        "conditional statement": 1,
        "autograded jupyter notebook cell": 1,
        "bonus exercises": 1,
        "python observation": 1,
        "variable observation": 1,
        "str()": 1,
        "str() function": 1,
        "typecasting": 1,
        "year": 1,
        "mathematical operators": 1,
        "leap year": 1,
        "conditional statements": 1,
        "variable year": 1,
        "arguments": 1,
        "online resources": 1,
        "stack overflow": 1,
        "google search": 1,
        "python workflow": 1,
        "python documentation": 1,
        "positional arguments": 1,
        "keyword arguments": 1,
        "function call": 1,
        "input": 1,
        "default input values": 1,
        "default values": 1,
        "docstring": 1,
        "source code": 1,
        "fahrenheit": 1
    },
    "postal codes": {
        "age class": 2,
        "lookup table": 2,
        "temporal trends": 2,
        "customer behavior": 2,
        "cleanliness": 2,
        "distributions": 2,
        "missingness": 2,
        "level": 2,
        "business analyst": 2,
        "basket size": 2,
        "data exploration": 2,
        "purchase data": 2,
        "symmetrize": 1,
        "log transformation": 1,
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "character encoding": {
        "age class": 2,
        "lookup table": 2,
        "temporal trends": 2,
        "customer behavior": 2,
        "cleanliness": 2,
        "distributions": 2,
        "missingness": 2,
        "level": 2,
        "business analyst": 2,
        "basket size": 2,
        "data exploration": 2,
        "purchase data": 2,
        "symmetrize": 1,
        "log transformation": 1,
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "big5": {
        "age class": 2,
        "lookup table": 2,
        "temporal trends": 2,
        "customer behavior": 2,
        "cleanliness": 2,
        "distributions": 2,
        "missingness": 2,
        "level": 2,
        "business analyst": 2,
        "basket size": 2,
        "data exploration": 2,
        "purchase data": 2,
        "symmetrize": 1,
        "log transformation": 1,
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "chinese characters": {
        "age class": 2,
        "lookup table": 2,
        "temporal trends": 2,
        "customer behavior": 2,
        "cleanliness": 2,
        "distributions": 2,
        "missingness": 2,
        "level": 2,
        "business analyst": 2,
        "basket size": 2,
        "data exploration": 2,
        "purchase data": 2,
        "symmetrize": 1,
        "log transformation": 1,
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "gzip": {
        "age class": 2,
        "lookup table": 2,
        "temporal trends": 2,
        "customer behavior": 2,
        "cleanliness": 2,
        "distributions": 2,
        "missingness": 2,
        "level": 2,
        "business analyst": 2,
        "basket size": 2,
        "data exploration": 2,
        "purchase data": 2,
        "symmetrize": 1,
        "log transformation": 1,
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "lookup tables": {
        "age class": 2,
        "lookup table": 2,
        "temporal trends": 2,
        "customer behavior": 2,
        "cleanliness": 2,
        "distributions": 2,
        "missingness": 2,
        "level": 2,
        "business analyst": 2,
        "basket size": 2,
        "data exploration": 2,
        "purchase data": 2,
        "symmetrize": 1,
        "log transformation": 1,
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "tafeng table": {
        "age class": 2,
        "lookup table": 2,
        "temporal trends": 2,
        "customer behavior": 2,
        "cleanliness": 2,
        "distributions": 2,
        "missingness": 2,
        "level": 2,
        "business analyst": 2,
        "basket size": 2,
        "data exploration": 2,
        "purchase data": 2,
        "symmetrize": 1,
        "log transformation": 1,
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "tafengfull": {
        "age class": 2,
        "lookup table": 2,
        "temporal trends": 2,
        "customer behavior": 2,
        "cleanliness": 2,
        "distributions": 2,
        "missingness": 2,
        "level": 2,
        "business analyst": 2,
        "basket size": 2,
        "data exploration": 2,
        "purchase data": 2,
        "symmetrize": 1,
        "log transformation": 1,
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "age classes": {
        "age class": 2,
        "lookup table": 2,
        "temporal trends": 2,
        "customer behavior": 2,
        "cleanliness": 2,
        "distributions": 2,
        "missingness": 2,
        "level": 2,
        "business analyst": 2,
        "basket size": 2,
        "data exploration": 2,
        "purchase data": 2,
        "symmetrize": 1,
        "log transformation": 1,
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "residence areas": {
        "age class": 2,
        "lookup table": 2,
        "temporal trends": 2,
        "customer behavior": 2,
        "cleanliness": 2,
        "distributions": 2,
        "missingness": 2,
        "level": 2,
        "business analyst": 2,
        "basket size": 2,
        "data exploration": 2,
        "purchase data": 2,
        "symmetrize": 1,
        "log transformation": 1,
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "left join": {
        "age class": 2,
        "lookup table": 2,
        "temporal trends": 2,
        "customer behavior": 2,
        "cleanliness": 2,
        "distributions": 2,
        "missingness": 2,
        "level": 2,
        "business analyst": 2,
        "basket size": 2,
        "data exploration": 2,
        "purchase data": 2,
        "symmetrize": 1,
        "log transformation": 1,
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "age lookup table": {
        "age class": 2,
        "lookup table": 2,
        "temporal trends": 2,
        "customer behavior": 2,
        "cleanliness": 2,
        "distributions": 2,
        "missingness": 2,
        "level": 2,
        "business analyst": 2,
        "basket size": 2,
        "data exploration": 2,
        "purchase data": 2,
        "symmetrize": 1,
        "log transformation": 1,
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "tafengfull table": {
        "age class": 2,
        "lookup table": 2,
        "temporal trends": 2,
        "customer behavior": 2,
        "cleanliness": 2,
        "distributions": 2,
        "missingness": 2,
        "level": 2,
        "business analyst": 2,
        "basket size": 2,
        "data exploration": 2,
        "purchase data": 2,
        "symmetrize": 1,
        "log transformation": 1,
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "country mapper": {
        "dependent variable": 6,
        "independent variables": 5,
        "dependent variables": 3,
        "multicollinearity": 3,
        "linear relationship": 3,
        "linear regression model": 3,
        "average night light": 3,
        "mpi": 3,
        "avgnightlight": 2
    },
    "loans data": {
        "dependent variable": 6,
        "independent variables": 5,
        "dependent variables": 3,
        "multicollinearity": 3,
        "linear relationship": 3,
        "linear regression model": 3,
        "average night light": 3,
        "mpi": 3,
        "avgnightlight": 2
    },
    "mpi poverty data": {
        "dependent variable": 6,
        "independent variables": 5,
        "dependent variables": 3,
        "multicollinearity": 3,
        "linear relationship": 3,
        "linear regression model": 3,
        "average night light": 3,
        "mpi": 3,
        "avgnightlight": 2
    },
    "data anomalies": {
        "dependent variable": 6,
        "independent variables": 5,
        "dependent variables": 3,
        "multicollinearity": 3,
        "linear relationship": 3,
        "linear regression model": 3,
        "average night light": 3,
        "mpi": 3,
        "avgnightlight": 2
    },
    "visual distribution": {
        "dependent variable": 6,
        "independent variables": 5,
        "dependent variables": 3,
        "multicollinearity": 3,
        "linear relationship": 3,
        "linear regression model": 3,
        "average night light": 3,
        "mpi": 3,
        "avgnightlight": 2
    },
    "mpi index": {
        "dependent variable": 6,
        "independent variables": 5,
        "dependent variables": 3,
        "multicollinearity": 3,
        "linear relationship": 3,
        "linear regression model": 3,
        "average night light": 3,
        "mpi": 3,
        "avgnightlight": 2
    },
    "country code mapper": {
        "dependent variable": 6,
        "independent variables": 5,
        "dependent variables": 3,
        "multicollinearity": 3,
        "linear relationship": 3,
        "linear regression model": 3,
        "average night light": 3,
        "mpi": 3,
        "avgnightlight": 2
    },
    "test assumptions": {
        "dependent variable": 6,
        "independent variables": 5,
        "dependent variables": 3,
        "multicollinearity": 3,
        "linear relationship": 3,
        "linear regression model": 3,
        "average night light": 3,
        "mpi": 3,
        "avgnightlight": 2
    },
    "finger exercise solution": {
        "gaussian trick": 2,
        "counting": 2,
        "coin tossing": 2,
        "coin toss": 2,
        "bernoulli scheme": 2,
        "scipy stats library": 2,
        "probability distributions": 2,
        "discrete random variables": 2,
        "discrete distributions": 2,
        "fair coin": 2,
        "stats": 2,
        "100": 2,
        "scipy": 2,
        "coin flips": 2,
        "product rule": 1,
        "combination formula": 1,
        "non-distinct balls": 1
    },
    "social network": {
        "social network": 5,
        "adjacency matrix": 4,
        "florentine families": 3,
        "ity": 2,
        "code cell": 2,
        "unit tests": 2,
        "linear algebra": 2,
        "matrix multiplication": 2,
        "normalization": 2,
        "symmetric numpy array": 2,
        "highest betweennness values": 1,
        "brokerage\" roles": 1,
        "high betweenness values": 1,
        "12 angry men": 1
    },
    "string values": {
        "transaction size": 2,
        "alcohol": 2,
        "pi": 1,
        "natural logarithm": 1,
        "category number column": 1,
        "data mining": 1,
        "sales projections": 1,
        "labor": 1,
        "gross margin percent": 1,
        "store rent": 1,
        "markup": 1,
        "smaller visualizations": 1,
        "outlier data point": 1,
        "visualizations": 1,
        "outlier": 1,
        "liquor stores": 1,
        "liquor sales data": 1,
        "convenience stores": 1,
        "grocery stores": 1,
        "mean transaction size": 1,
        "mean": 1,
        "iowa": 1,
        "liquor": 1,
        "gross margin": 1,
        "liquor licensees": 1,
        "total sales dollars": 1,
        "alchohol beer": 1,
        "price": 1
    },
    "tfidfvectorizer": {
        "cluster labels": 3,
        "kmeans": 3,
        "tfidfvectorizer": 2,
        "english stop words": 2,
        "minimum feature term": 2,
        "bigrams": 2,
        "maximum frequency": 2,
        "snowball": 2,
        "trigrams": 2,
        "nowball": 2,
        "kneighborsclassifier": 2,
        "stemming algorithm": 2,
        "unigrams": 2,
        "tokenize function": 2
    },
    "unigrams": {
        "cluster labels": 3,
        "kmeans": 3,
        "tfidfvectorizer": 2,
        "english stop words": 2,
        "minimum feature term": 2,
        "bigrams": 2,
        "maximum frequency": 2,
        "snowball": 2,
        "trigrams": 2,
        "nowball": 2,
        "kneighborsclassifier": 2,
        "stemming algorithm": 2,
        "unigrams": 2,
        "tokenize function": 2
    },
    "multidimensional array": {
        "50x50 array": 2,
        "indexing": 2,
        "x": 2,
        "file1": 2,
        "colors": 2,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "stackoverflow": 1,
        "stack overflow": 1,
        "python list": 1,
        "pixel triplets": 1,
        "image processing": 1,
        "image": 1,
        "image1": 1,
        "string method split": 1,
        "color intensity": 1,
        "text file": 1,
        "expanded image": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1,
        "summer images": 1
    },
    "column labels": {
        "50x50 array": 2,
        "indexing": 2,
        "x": 2,
        "file1": 2,
        "colors": 2,
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "stackoverflow": 1,
        "stack overflow": 1,
        "python list": 1,
        "pixel triplets": 1,
        "image processing": 1,
        "image": 1,
        "image1": 1,
        "string method split": 1,
        "color intensity": 1,
        "text file": 1,
        "expanded image": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1,
        "summer images": 1
    },
    "anonymize data": {
        "tinder": 11,
        "safe harbor method": 11,
        "population": 5,
        "zip code": 3
    },
    "textbook": {
        "answer cell": 2,
        "test cell": 2,
        "nable code cell": 2,
        "automatic tests": 2,
        "automated tests": 2,
        "home burglaries": 2,
        "summer vacation period": 2,
        "adt security systems": 2,
        "burglaries": 2,
        "labor day": 2,
        "memorial day": 2,
        "python code": 2,
        "compound expression": 2,
        "subexpressions": 2,
        "missing expression": 2
    },
    "office hours schedule": {
        "answer cell": 2,
        "test cell": 2,
        "nable code cell": 2,
        "automatic tests": 2,
        "automated tests": 2,
        "home burglaries": 2,
        "summer vacation period": 2,
        "adt security systems": 2,
        "burglaries": 2,
        "labor day": 2,
        "memorial day": 2,
        "python code": 2,
        "compound expression": 2,
        "subexpressions": 2,
        "missing expression": 2
    },
    "github repo": {
        "hamlettext": 11,
        "hamletwords": 6,
        "txt": 4,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1,
        "dictionary comprehension": 1
    },
    "word distribution": {
        "hamlettext": 11,
        "hamletwords": 6,
        "txt": 4,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1,
        "dictionary comprehension": 1
    },
    "hamlet": {
        "hamlettext": 11,
        "hamletwords": 6,
        "txt": 4,
        "string method count": 2,
        "string method lower": 2,
        "sanity check": 1,
        "unique words": 1,
        "dictionary keys": 1,
        "count method": 1,
        "dictionary comprehension": 1
    },
    "categorical response": {
        "predicted probability": 2,
        "decision tree algorithm": 2,
        "classification error rate": 2,
        "gini index": 2,
        "cutoff value": 1,
        "linear regression line": 1,
        "0 class": 1,
        "predicted probabilities": 1,
        "continuous response": 1,
        "binary response": 1,
        "log function": 1,
        "logistic function": 1,
        "negative coefficients": 1,
        "probability": 1,
        "positive coefficients": 1,
        "logistic regression beta values": 1,
        "categorical features": 1,
        "logistic curve": 1,
        "maximum value": 1,
        "splitting criteria": 1,
        "classification trees": 1,
        "node purity": 1,
        "titanic": 1,
        "sex": 1,
        "age": 1,
        "response variable": 1
    },
    "marginal distribution": {
        "kernel matrix": 4,
        "predictive distribution": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "covariance matrix": 3,
        "generative process": 3,
        "conditional models": 3,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "vectorization": {
        "kernel matrix": 4,
        "predictive distribution": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "covariance matrix": 3,
        "generative process": 3,
        "conditional models": 3,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "inner loop": {
        "kernel matrix": 4,
        "predictive distribution": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "covariance matrix": 3,
        "generative process": 3,
        "conditional models": 3,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "model uncertainty": {
        "kernel matrix": 4,
        "predictive distribution": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "covariance matrix": 3,
        "generative process": 3,
        "conditional models": 3,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "bishop": {
        "kernel matrix": 4,
        "predictive distribution": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "covariance matrix": 3,
        "generative process": 3,
        "conditional models": 3,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "sample mean functions": {
        "kernel matrix": 4,
        "predictive distribution": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "covariance matrix": 3,
        "generative process": 3,
        "conditional models": 3,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "dashed line": {
        "kernel matrix": 4,
        "predictive distribution": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "covariance matrix": 3,
        "generative process": 3,
        "conditional models": 3,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "theta values": {
        "kernel matrix": 4,
        "predictive distribution": 3,
        "joint distribution": 3,
        "kernel function evaluations": 3,
        "mean draw": 3,
        "kernel vector": 3,
        "covariance matrix": 3,
        "generative process": 3,
        "conditional models": 3,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "word dimension": {
        "2d array": 4,
        "orthonormal basis": 4,
        "1d array": 2,
        "matrix": 2,
        "2d vectors": 2,
        "arrows": 2,
        "unit vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "dot product": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2
    },
    "array dimension": {
        "2d array": 4,
        "orthonormal basis": 4,
        "1d array": 2,
        "matrix": 2,
        "2d vectors": 2,
        "arrows": 2,
        "unit vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "dot product": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2
    },
    "vector dimension": {
        "2d array": 4,
        "orthonormal basis": 4,
        "1d array": 2,
        "matrix": 2,
        "2d vectors": 2,
        "arrows": 2,
        "unit vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "dot product": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2
    },
    "twitter developer account": {
        "coordinates": 4,
        "pandas documentation": 4,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "tweetdeck": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "null hypothesis": 2
    },
    "web site": {
        "coordinates": 4,
        "pandas documentation": 4,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "tweetdeck": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "null hypothesis": 2
    },
    "access token": {
        "coordinates": 4,
        "pandas documentation": 4,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "tweetdeck": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "null hypothesis": 2
    },
    "developer account": {
        "coordinates": 4,
        "pandas documentation": 4,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "tweetdeck": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "null hypothesis": 2
    },
    "twitter account": {
        "coordinates": 4,
        "pandas documentation": 4,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "tweetdeck": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "null hypothesis": 2
    },
    "authentication keys": {
        "coordinates": 4,
        "pandas documentation": 4,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "tweetdeck": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "null hypothesis": 2
    },
    "templates": {
        "coordinates": 4,
        "pandas documentation": 4,
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "tweetdeck": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "null hypothesis": 2
    },
    "dictionary types": {
        "identity matrix": 4,
        "boolean mask": 3,
        "ave": 2,
        "structured matrices": 2,
        "element types": 2,
        "eye() function": 2,
        "diag()": 2,
        "element type": 2,
        "numpy array variables": 2,
        "indexing": 2,
        "importing idiom": 1,
        "dictionary types": 1,
        "multidimensional arrays": 1,
        "commas": 1,
        "indexing notation": 1,
        "integer indices": 1,
        "indirect addressing": 1
    },
    "distrubtion": {
        "iterative approach": 5,
        "data cleaning": 5,
        "10": 4,
        "log transforming": 4,
        "income": 4,
        "subtle outliers": 2,
        "outliers": 2,
        "data values": 2,
        "mean value": 1
    },
    "experimental error": {
        "iterative approach": 5,
        "data cleaning": 5,
        "10": 4,
        "log transforming": 4,
        "income": 4,
        "subtle outliers": 2,
        "outliers": 2,
        "data values": 2,
        "mean value": 1
    },
    "income graph": {
        "iterative approach": 5,
        "data cleaning": 5,
        "10": 4,
        "log transforming": 4,
        "income": 4,
        "subtle outliers": 2,
        "outliers": 2,
        "data values": 2,
        "mean value": 1
    },
    "purpose column": {
        "dummy variables": 10,
        "dtree": 9,
        "decisiontreeclassifier()": 9,
        "confusion matrix": 1
    },
    "column names": {
        "usstates": 8,
        "compound expressions": 5,
        "boolean arrays": 5,
        "data aggregration": 4,
        "frame": 2,
        "tabular data": 1,
        "groupby function": 1,
        "groupby animation": 1,
        "rotten tomatoes": 1,
        "revenue": 1
    },
    "sql database": {
        "sqlite3 library": 6,
        "sql query": 3,
        "sql": 3,
        "alter table command": 3,
        "sqlite3 database": 3,
        "sqlite": 3,
        "population": 3,
        "foreign key constraints": 3,
        "functoin": 1,
        "pandas data frame": 1
    },
    "feedback": {
        "test expression": 2,
        "linear quadratic regulator": 2,
        "optimal feedback gain": 2,
        "unstable equilibrium state vector": 2,
        "print": 1,
        "assignment statement": 1,
        "print function": 1,
        "conditional statements": 1,
        "if statement": 1,
        "condition expression": 1,
        "test expressions": 1,
        "programming": 1,
        "remainder operator": 1,
        "modulus operator": 1,
        "fizzbuzz": 1,
        "twitter dataset": 1,
        "twitter data": 1,
        "apply function": 1,
        "addition": 1,
        "total": 1,
        "addition function": 1,
        "total connections": 1,
        "lqr solver": 1,
        "q": 1,
        "lqr": 1
    },
    "kernel coefficient": {
        "svm model": 9,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "radial basis function": {
        "svm model": 9,
        "training step": 3,
        "ml models": 3,
        "timing loop": 3,
        "cross validation": 3,
        "broker": 3,
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "dask dataframe": {
        "bokeh plot": 4,
        "2d grid": 2,
        "rgb element": 2,
        "plotting program": 2,
        "datashader operation": 2,
        "pixel colors": 2,
        "plot size": 2,
        "dynamic operation": 2,
        "zoom level": 2,
        "linked streams": 2,
        "datashade": 2,
        "geoviews": 1,
        "bokeh wmtstilesource": 1,
        "datashader": 1,
        "taxi dropoffs": 1,
        "aggregator functions": 1
    },
    "fit method": {
        "multiple linear regression": 5,
        "x matrix": 3,
        "request": 2,
        "constant term": 2,
        "cpu load": 2,
        "average cpu usage": 2,
        "single linear regression": 2,
        "anomaly detection": 2,
        "width parameter": 2,
        "page views data": 1,
        "multiple features": 1,
        "width variable": 1,
        "confidance intervals": 1,
        "lassocv": 1,
        "gaussianprocess": 1,
        "ridgecv": 1
    },
    "softmax activation function": {
        "stochastic gradient descent": 3,
        "learning rate loss": 2,
        "training method": 2,
        "network error": 2,
        "activation function": 2,
        "hidden layers": 2,
        "batch size": 2,
        "10000 element long vectors": 2,
        "connected layer": 2,
        "evaluation() function": 1,
        "activation model": 1,
        "metrics history": 1,
        "sequential model": 1,
        "loss functions": 1,
        "metrics": 1,
        "learning process": 1,
        "keras": 1,
        "fit() function": 1,
        "training loss": 1
    },
    "decision trees algorithm": {
        "http requests": 1,
        "weather underground": 1,
        "terms of service": 1,
        "api": 1,
        "weather": 1,
        "apis": 1,
        "weather underground api": 1,
        "json": 1,
        "parse time": 1,
        "history": 1,
        "visibilities": 1,
        "iata airport code": 1,
        "carrier code": 1,
        "departure delay": 1,
        "crsdeptime": 1,
        "depdelay": 1,
        "uniquecarrier": 1,
        "scheduled departure time": 1,
        "ord": 1,
        "american airlines": 1,
        "departure": 1,
        "frame": 1,
        "time visibility": 1,
        "vectorized way": 1,
        "big data": 1,
        "numerical operations": 1,
        "code cell": 1,
        "iterrows()": 1,
        "test sets": 1
    },
    "random variable": {
        "ooober": 9,
        "ridesharing company": 3,
        "public relations office": 3,
        "wait time": 2,
        "nerve pulses": 2,
        "empirical distribution": 1,
        "random variable": 1,
        "empirical distribution function": 1,
        "nerve pulse data": 1,
        "fomula": 1,
        "probability": 1,
        "cummulative distribution": 1,
        "estimate": 1,
        "scandal patterns": 1,
        "poisson process": 1
    },
    "web page": {
        "command prompt": 3,
        "tesseract library": 3,
        "ocr": 3,
        "reading errors": 3,
        "tesseract": 3,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1,
        "processed image": 1
    },
    "ocred": {
        "command prompt": 3,
        "tesseract library": 3,
        "ocr": 3,
        "reading errors": 3,
        "tesseract": 3,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1,
        "processed image": 1
    },
    "park avenue cafe townhouse": {
        "command prompt": 3,
        "tesseract library": 3,
        "ocr": 3,
        "reading errors": 3,
        "tesseract": 3,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1,
        "processed image": 1
    },
    "python arrays": {
        "command prompt": 3,
        "tesseract library": 3,
        "ocr": 3,
        "reading errors": 3,
        "tesseract": 3,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1,
        "processed image": 1
    },
    "rgb pixel": {
        "command prompt": 3,
        "tesseract library": 3,
        "ocr": 3,
        "reading errors": 3,
        "tesseract": 3,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1,
        "processed image": 1
    },
    "rgb image": {
        "command prompt": 3,
        "tesseract library": 3,
        "ocr": 3,
        "reading errors": 3,
        "tesseract": 3,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1,
        "processed image": 1
    },
    "gamma correction": {
        "command prompt": 3,
        "tesseract library": 3,
        "ocr": 3,
        "reading errors": 3,
        "tesseract": 3,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1,
        "processed image": 1
    },
    "image matrix": {
        "command prompt": 3,
        "tesseract library": 3,
        "ocr": 3,
        "reading errors": 3,
        "tesseract": 3,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1,
        "processed image": 1
    },
    "cropping box": {
        "command prompt": 3,
        "tesseract library": 3,
        "ocr": 3,
        "reading errors": 3,
        "tesseract": 3,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1,
        "processed image": 1
    },
    "error handling": {
        "command prompt": 3,
        "tesseract library": 3,
        "ocr": 3,
        "reading errors": 3,
        "tesseract": 3,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1,
        "processed image": 1
    },
    "dinner menu": {
        "command prompt": 3,
        "tesseract library": 3,
        "ocr": 3,
        "reading errors": 3,
        "tesseract": 3,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1,
        "processed image": 1
    },
    "ocr": {
        "command prompt": 3,
        "tesseract library": 3,
        "ocr": 3,
        "reading errors": 3,
        "tesseract": 3,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1,
        "processed image": 1
    },
    "ocr application": {
        "command prompt": 3,
        "tesseract library": 3,
        "ocr": 3,
        "reading errors": 3,
        "tesseract": 3,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1,
        "processed image": 1
    },
    "cropping function": {
        "command prompt": 3,
        "tesseract library": 3,
        "ocr": 3,
        "reading errors": 3,
        "tesseract": 3,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1,
        "processed image": 1
    },
    "pixel value": {
        "command prompt": 3,
        "tesseract library": 3,
        "ocr": 3,
        "reading errors": 3,
        "tesseract": 3,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1,
        "processed image": 1
    },
    "osemn": {
        "embarkation ports": 4,
        "missing ages": 2,
        "column mean": 2,
        "missing embarkation ports": 2,
        "embarkation port": 2,
        "ticket number": 2,
        "passenger class": 2,
        "women": 1,
        "wealth": 1,
        "age distributions": 1,
        "hypothesis testing": 1,
        "statistical method": 1,
        "internet": 1,
        "statistical hypothesis": 1,
        "null hypothesis": 1,
        "hypothesis test": 1,
        "age": 1,
        "alternative hypothesis": 1,
        "sex": 1,
        "embarked columns": 1
    },
    "data science project architecture lab": {
        "embarkation ports": 4,
        "missing ages": 2,
        "column mean": 2,
        "missing embarkation ports": 2,
        "embarkation port": 2,
        "ticket number": 2,
        "passenger class": 2,
        "women": 1,
        "wealth": 1,
        "age distributions": 1,
        "hypothesis testing": 1,
        "statistical method": 1,
        "internet": 1,
        "statistical hypothesis": 1,
        "null hypothesis": 1,
        "hypothesis test": 1,
        "age": 1,
        "alternative hypothesis": 1,
        "sex": 1,
        "embarked columns": 1
    },
    "training sets": {
        "embarkation ports": 4,
        "missing ages": 2,
        "column mean": 2,
        "missing embarkation ports": 2,
        "embarkation port": 2,
        "ticket number": 2,
        "passenger class": 2,
        "women": 1,
        "wealth": 1,
        "age distributions": 1,
        "hypothesis testing": 1,
        "statistical method": 1,
        "internet": 1,
        "statistical hypothesis": 1,
        "null hypothesis": 1,
        "hypothesis test": 1,
        "age": 1,
        "alternative hypothesis": 1,
        "sex": 1,
        "embarked columns": 1
    },
    "wealth": {
        "embarkation ports": 4,
        "missing ages": 2,
        "column mean": 2,
        "missing embarkation ports": 2,
        "embarkation port": 2,
        "ticket number": 2,
        "passenger class": 2,
        "women": 1,
        "wealth": 1,
        "age distributions": 1,
        "hypothesis testing": 1,
        "statistical method": 1,
        "internet": 1,
        "statistical hypothesis": 1,
        "null hypothesis": 1,
        "hypothesis test": 1,
        "age": 1,
        "alternative hypothesis": 1,
        "sex": 1,
        "embarked columns": 1
    },
    "family relationships": {
        "embarkation ports": 4,
        "missing ages": 2,
        "column mean": 2,
        "missing embarkation ports": 2,
        "embarkation port": 2,
        "ticket number": 2,
        "passenger class": 2,
        "women": 1,
        "wealth": 1,
        "age distributions": 1,
        "hypothesis testing": 1,
        "statistical method": 1,
        "internet": 1,
        "statistical hypothesis": 1,
        "null hypothesis": 1,
        "hypothesis test": 1,
        "age": 1,
        "alternative hypothesis": 1,
        "sex": 1,
        "embarked columns": 1
    },
    "passengerid": {
        "embarkation ports": 4,
        "missing ages": 2,
        "column mean": 2,
        "missing embarkation ports": 2,
        "embarkation port": 2,
        "ticket number": 2,
        "passenger class": 2,
        "women": 1,
        "wealth": 1,
        "age distributions": 1,
        "hypothesis testing": 1,
        "statistical method": 1,
        "internet": 1,
        "statistical hypothesis": 1,
        "null hypothesis": 1,
        "hypothesis test": 1,
        "age": 1,
        "alternative hypothesis": 1,
        "sex": 1,
        "embarked columns": 1
    },
    "boolean indexing": {
        "boolean array": 4,
        "reaction times": 4,
        "boolean indexing": 3,
        "false values": 2,
        "true values": 2,
        "boolean comparisons": 2,
        "invalid value": 2,
        "array indexing": 2,
        "18": 1,
        "indexing": 1,
        "sorted elements": 1,
        "integers": 1,
        "index 26": 1,
        "participant names": 1,
        "participant id": 1,
        "average": 1
    },
    "matplotlib commands": {
        "cvlegend": 2,
        "calls dataframe": 2,
        "vertical bar plot": 2,
        "barh plot type": 1,
        "series class": 1,
        "value counts": 1,
        "countplot": 1,
        "seaborn library": 1,
        "countplot method": 1,
        "pandas plot": 1,
        "order parameter": 1,
        "cvdow field": 1,
        "coolindex": 1,
        "noise violation": 1,
        "seaborn plot": 1,
        "total noise violations": 1,
        "noise violation calls": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1,
        "horizontal bars": 1
    },
    "binary labels": {
        "labeledpoint": 2,
        "arrival delay": 2,
        "departure delay": 2,
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1,
        "logisticregression": 1,
        "default parameters": 1,
        "iterations": 1
    },
    "boolean": {
        "help message": 2,
        "autograded jupyter notebook cell": 1,
        "bonus exercises": 1,
        "python observation": 1,
        "variable observation": 1,
        "str()": 1,
        "str() function": 1,
        "typecasting": 1,
        "year": 1,
        "mathematical operators": 1,
        "leap year": 1,
        "conditional statements": 1,
        "variable year": 1,
        "arguments": 1,
        "online resources": 1,
        "stack overflow": 1,
        "google search": 1,
        "python workflow": 1,
        "python documentation": 1,
        "positional arguments": 1,
        "keyword arguments": 1,
        "function call": 1,
        "input": 1,
        "default input values": 1,
        "default values": 1,
        "docstring": 1,
        "source code": 1,
        "fahrenheit": 1
    },
    "integer": {
        "help message": 2,
        "autograded jupyter notebook cell": 1,
        "bonus exercises": 1,
        "python observation": 1,
        "variable observation": 1,
        "str()": 1,
        "str() function": 1,
        "typecasting": 1,
        "year": 1,
        "mathematical operators": 1,
        "leap year": 1,
        "conditional statements": 1,
        "variable year": 1,
        "arguments": 1,
        "online resources": 1,
        "stack overflow": 1,
        "google search": 1,
        "python workflow": 1,
        "python documentation": 1,
        "positional arguments": 1,
        "keyword arguments": 1,
        "function call": 1,
        "input": 1,
        "default input values": 1,
        "default values": 1,
        "docstring": 1,
        "source code": 1,
        "fahrenheit": 1
    },
    "art": {
        "tensorflow": 5,
        "gradient descent": 2,
        "test sets": 1,
        "validation": 1,
        "training example": 1,
        "x28": 1,
        "training examples": 1,
        "multiclass classification": 1,
        "softmax loss function": 1,
        "true labels": 1,
        "trained model": 1,
        "input variable": 1,
        "mnist dataset": 1,
        "bias vectors": 1,
        "gradient descent training": 1,
        "softmax regression function": 1,
        "softmax implementation": 1,
        "negative log probability": 1,
        "softmax regression": 1,
        "classification function": 1,
        "cross entropy loss": 1,
        "learning rate": 1,
        "cross entropy loss function": 1,
        "tutorials": 1
    },
    "speech recognition": {
        "tensorflow": 5,
        "gradient descent": 2,
        "test sets": 1,
        "validation": 1,
        "training example": 1,
        "x28": 1,
        "training examples": 1,
        "multiclass classification": 1,
        "softmax loss function": 1,
        "true labels": 1,
        "trained model": 1,
        "input variable": 1,
        "mnist dataset": 1,
        "bias vectors": 1,
        "gradient descent training": 1,
        "softmax regression function": 1,
        "softmax implementation": 1,
        "negative log probability": 1,
        "softmax regression": 1,
        "classification function": 1,
        "cross entropy loss": 1,
        "learning rate": 1,
        "cross entropy loss function": 1,
        "tutorials": 1
    },
    "deep neural networks": {
        "tensorflow": 5,
        "gradient descent": 2,
        "test sets": 1,
        "validation": 1,
        "training example": 1,
        "x28": 1,
        "training examples": 1,
        "multiclass classification": 1,
        "softmax loss function": 1,
        "true labels": 1,
        "trained model": 1,
        "input variable": 1,
        "mnist dataset": 1,
        "bias vectors": 1,
        "gradient descent training": 1,
        "softmax regression function": 1,
        "softmax implementation": 1,
        "negative log probability": 1,
        "softmax regression": 1,
        "classification function": 1,
        "cross entropy loss": 1,
        "learning rate": 1,
        "cross entropy loss function": 1,
        "tutorials": 1
    },
    "group by": {
        "postgresql": 2,
        "sql": 2,
        "aggregate functions": 2,
        "desc keyword": 1,
        "order by keyword": 1,
        "sql aliases": 1,
        "sql alias syntax": 1,
        "query arguments": 1,
        "database table": 1,
        "alias as": 1,
        "column": 1,
        "aliases": 1,
        "wildcards": 1,
        "where clause": 1,
        "missing letters": 1,
        "select distinct statement": 1,
        "distinct operator": 1,
        "limit operator": 1,
        "limit syntax": 1,
        "sql subqueries": 1,
        "group by statement": 1,
        "group by operator": 1,
        "having operator": 1,
        "having clause": 1,
        "else statement": 1,
        "date documentation": 1
    },
    "extract": {
        "postgresql": 2,
        "sql": 2,
        "aggregate functions": 2,
        "desc keyword": 1,
        "order by keyword": 1,
        "sql aliases": 1,
        "sql alias syntax": 1,
        "query arguments": 1,
        "database table": 1,
        "alias as": 1,
        "column": 1,
        "aliases": 1,
        "wildcards": 1,
        "where clause": 1,
        "missing letters": 1,
        "select distinct statement": 1,
        "distinct operator": 1,
        "limit operator": 1,
        "limit syntax": 1,
        "sql subqueries": 1,
        "group by statement": 1,
        "group by operator": 1,
        "having operator": 1,
        "having clause": 1,
        "else statement": 1,
        "date documentation": 1
    },
    "distinct": {
        "postgresql": 2,
        "sql": 2,
        "aggregate functions": 2,
        "desc keyword": 1,
        "order by keyword": 1,
        "sql aliases": 1,
        "sql alias syntax": 1,
        "query arguments": 1,
        "database table": 1,
        "alias as": 1,
        "column": 1,
        "aliases": 1,
        "wildcards": 1,
        "where clause": 1,
        "missing letters": 1,
        "select distinct statement": 1,
        "distinct operator": 1,
        "limit operator": 1,
        "limit syntax": 1,
        "sql subqueries": 1,
        "group by statement": 1,
        "group by operator": 1,
        "having operator": 1,
        "having clause": 1,
        "else statement": 1,
        "date documentation": 1
    },
    "date parts": {
        "postgresql": 2,
        "sql": 2,
        "aggregate functions": 2,
        "desc keyword": 1,
        "order by keyword": 1,
        "sql aliases": 1,
        "sql alias syntax": 1,
        "query arguments": 1,
        "database table": 1,
        "alias as": 1,
        "column": 1,
        "aliases": 1,
        "wildcards": 1,
        "where clause": 1,
        "missing letters": 1,
        "select distinct statement": 1,
        "distinct operator": 1,
        "limit operator": 1,
        "limit syntax": 1,
        "sql subqueries": 1,
        "group by statement": 1,
        "group by operator": 1,
        "having operator": 1,
        "having clause": 1,
        "else statement": 1,
        "date documentation": 1
    },
    "edx videos": {
        "covariance matrix": 6,
        "covariance": 2,
        "matrices": 2,
        "augmented vector": 2,
        "outer product": 2,
        "analysis": 1,
        "eigenvector decomposition": 1,
        "homework": 1,
        "data vectors": 1,
        "rdd": 1,
        "arithmetic operations": 1,
        "lower left matrix": 1,
        "outer product average": 1,
        "average": 1,
        "n x n matrix": 1,
        "1 x n matrix": 1,
        "x n matrix": 1,
        "x": 1,
        "nansum": 1,
        "n x": 1
    },
    "principal component": {
        "pca": 8,
        "iris data": 3,
        "plotting function": 2,
        "handwritten digits": 2,
        "data matrix x": 2,
        "dimensionality reduction": 2,
        "principal components": 2,
        "residual noise": 2,
        "labeled faces": 1,
        "lfw exercise": 1,
        "eigenfaces": 1,
        "eigendigits": 1,
        "facial recognition exercise": 1
    },
    "grep": {
        "data folder": 1,
        "command line": 1,
        "data crunching tool": 1,
        "data exploration": 1,
        "unstructured data": 1,
        "ipython": 1,
        "class forums": 1,
        "user exploration": 1,
        "structured data": 1,
        "scatterplot": 1,
        "survey responses": 1,
        "numeric features": 1,
        "simple line graph": 1,
        "internet": 1,
        "uci machine learning": 1,
        "file contents": 1,
        "decision tree learning": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1,
        "unique tokens": 1,
        "siddhartha": 1
    },
    "delayed times": {
        "time delays": 6,
        "likelihood function": 2,
        "gradient descent optimizer": 2,
        "log likelihood": 2,
        "ip": 2,
        "minimize function": 2,
        "posterior uncertainties": 2,
        "optimization": 2,
        "mcmc": 2,
        "gp hps": 2,
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "company website": {
        "jointplot": 8,
        "age": 8,
        "area income": 4,
        "kde distributions": 4,
        "pairplot": 4
    },
    "git repository": {
        "txt": 4,
        "partone": 2,
        "mv": 2,
        "filelist": 2,
        "myfiles": 2,
        "output redirection": 2,
        "ls": 2,
        "directory mydirectory": 2,
        "rmdir": 1,
        "class repository": 1,
        "project gutenberg": 1,
        "grep": 1,
        "filters": 1,
        "matching line numbers": 1,
        "word count tool": 1,
        "matching lines": 1,
        "unique tokens": 1,
        "siddhartha": 1
    },
    "shell commands": {
        "txt": 4,
        "partone": 2,
        "mv": 2,
        "filelist": 2,
        "myfiles": 2,
        "output redirection": 2,
        "ls": 2,
        "directory mydirectory": 2,
        "rmdir": 1,
        "class repository": 1,
        "project gutenberg": 1,
        "grep": 1,
        "filters": 1,
        "matching line numbers": 1,
        "word count tool": 1,
        "matching lines": 1,
        "unique tokens": 1,
        "siddhartha": 1
    },
    "csvkit": {
        "txt": 4,
        "partone": 2,
        "mv": 2,
        "filelist": 2,
        "myfiles": 2,
        "output redirection": 2,
        "ls": 2,
        "directory mydirectory": 2,
        "rmdir": 1,
        "class repository": 1,
        "project gutenberg": 1,
        "grep": 1,
        "filters": 1,
        "matching line numbers": 1,
        "word count tool": 1,
        "matching lines": 1,
        "unique tokens": 1,
        "siddhartha": 1
    },
    "redirection": {
        "txt": 4,
        "partone": 2,
        "mv": 2,
        "filelist": 2,
        "myfiles": 2,
        "output redirection": 2,
        "ls": 2,
        "directory mydirectory": 2,
        "rmdir": 1,
        "class repository": 1,
        "project gutenberg": 1,
        "grep": 1,
        "filters": 1,
        "matching line numbers": 1,
        "word count tool": 1,
        "matching lines": 1,
        "unique tokens": 1,
        "siddhartha": 1
    },
    "mkdir": {
        "txt": 4,
        "partone": 2,
        "mv": 2,
        "filelist": 2,
        "myfiles": 2,
        "output redirection": 2,
        "ls": 2,
        "directory mydirectory": 2,
        "rmdir": 1,
        "class repository": 1,
        "project gutenberg": 1,
        "grep": 1,
        "filters": 1,
        "matching line numbers": 1,
        "word count tool": 1,
        "matching lines": 1,
        "unique tokens": 1,
        "siddhartha": 1
    },
    "pipes": {
        "txt": 4,
        "partone": 2,
        "mv": 2,
        "filelist": 2,
        "myfiles": 2,
        "output redirection": 2,
        "ls": 2,
        "directory mydirectory": 2,
        "rmdir": 1,
        "class repository": 1,
        "project gutenberg": 1,
        "grep": 1,
        "filters": 1,
        "matching line numbers": 1,
        "word count tool": 1,
        "matching lines": 1,
        "unique tokens": 1,
        "siddhartha": 1
    },
    "minimum feature term": {
        "cluster labels": 2,
        "kmeans": 2,
        "tfidfvectorizer": 2,
        "english stop words": 2,
        "minimum feature term": 2,
        "bigrams": 2,
        "maximum frequency": 2,
        "snowball": 2,
        "trigrams": 2,
        "nowball": 2,
        "kneighborsclassifier": 2,
        "stemming algorithm": 2,
        "unigrams": 2,
        "tokenize function": 2
    },
    "bigrams": {
        "cluster labels": 2,
        "kmeans": 2,
        "tfidfvectorizer": 2,
        "english stop words": 2,
        "minimum feature term": 2,
        "bigrams": 2,
        "maximum frequency": 2,
        "snowball": 2,
        "trigrams": 2,
        "nowball": 2,
        "kneighborsclassifier": 2,
        "stemming algorithm": 2,
        "unigrams": 2,
        "tokenize function": 2
    },
    "maximum frequency": {
        "cluster labels": 2,
        "kmeans": 2,
        "tfidfvectorizer": 2,
        "english stop words": 2,
        "minimum feature term": 2,
        "bigrams": 2,
        "maximum frequency": 2,
        "snowball": 2,
        "trigrams": 2,
        "nowball": 2,
        "kneighborsclassifier": 2,
        "stemming algorithm": 2,
        "unigrams": 2,
        "tokenize function": 2
    },
    "trigrams": {
        "cluster labels": 2,
        "kmeans": 2,
        "tfidfvectorizer": 2,
        "english stop words": 2,
        "minimum feature term": 2,
        "bigrams": 2,
        "maximum frequency": 2,
        "snowball": 2,
        "trigrams": 2,
        "nowball": 2,
        "kneighborsclassifier": 2,
        "stemming algorithm": 2,
        "unigrams": 2,
        "tokenize function": 2
    },
    "python interactive shell": {
        "vertex names": 4,
        "matrix operations": 4,
        "breadth first search": 4,
        "graph traversal": 4,
        "path length": 3,
        "distbfs()": 3,
        "bfs": 3,
        "edge weights": 3
    },
    "anaconda python distribution": {
        "vertex names": 4,
        "matrix operations": 4,
        "breadth first search": 4,
        "graph traversal": 4,
        "path length": 3,
        "distbfs()": 3,
        "bfs": 3,
        "edge weights": 3
    },
    "networkx": {
        "vertex names": 4,
        "matrix operations": 4,
        "breadth first search": 4,
        "graph traversal": 4,
        "path length": 3,
        "distbfs()": 3,
        "bfs": 3,
        "edge weights": 3
    },
    "calculator": {
        "vertex names": 4,
        "matrix operations": 4,
        "breadth first search": 4,
        "graph traversal": 4,
        "path length": 3,
        "distbfs()": 3,
        "bfs": 3,
        "edge weights": 3
    },
    "python shell": {
        "vertex names": 4,
        "matrix operations": 4,
        "breadth first search": 4,
        "graph traversal": 4,
        "path length": 3,
        "distbfs()": 3,
        "bfs": 3,
        "edge weights": 3
    },
    "quick": {
        "vertex names": 4,
        "matrix operations": 4,
        "breadth first search": 4,
        "graph traversal": 4,
        "path length": 3,
        "distbfs()": 3,
        "bfs": 3,
        "edge weights": 3
    },
    "debugging": {
        "vertex names": 4,
        "matrix operations": 4,
        "breadth first search": 4,
        "graph traversal": 4,
        "path length": 3,
        "distbfs()": 3,
        "bfs": 3,
        "edge weights": 3
    },
    "united states": {
        "libraries": 5,
        "crime": 4,
        "datetime64": 3,
        "data files": 2,
        "population column number": 1,
        "census bureau website": 1,
        "irs": 1,
        "irs tax migration": 1,
        "fips codes": 1,
        "python modules": 1,
        "encoding specification": 1,
        "total outflows": 1,
        "fips designators": 1,
        "single": 1,
        "stateoutflows": 1,
        "pandas data frame": 1,
        "postgresql": 1,
        "date documentation": 1
    },
    "seed points": {
        "cost array": 6,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "overlap region": {
        "cost array": 6,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "construct cost array": {
        "cost array": 6,
        "optimal horizontal position": 3,
        "bottom edges": 3,
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "data processing tasks": {
        "rdd": 6,
        "movielens": 6,
        "text file": 4,
        "spark dataframe": 4,
        "movieid": 4,
        "head command": 2,
        "textfile": 2
    },
    "data buckets": {
        "weekly time series": 3,
        "apple stock quarterly": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "upsampling": {
        "weekly time series": 3,
        "apple stock quarterly": 3,
        "window parameter": 3,
        "rolling mean": 3,
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "unknown iris": {
        "iris": 8,
        "knn classification map": 8,
        "unknown iris": 2,
        "predicted response value": 2,
        "euclidian distance": 2,
        "distance metric": 2,
        "5nn classification map": 2,
        "50nn classification map": 2
    },
    "is": {
        "iris": 8,
        "knn classification map": 8,
        "unknown iris": 2,
        "predicted response value": 2,
        "euclidian distance": 2,
        "distance metric": 2,
        "5nn classification map": 2,
        "50nn classification map": 2
    },
    "species": {
        "iris": 8,
        "knn classification map": 8,
        "unknown iris": 2,
        "predicted response value": 2,
        "euclidian distance": 2,
        "distance metric": 2,
        "5nn classification map": 2,
        "50nn classification map": 2
    },
    "ense": {
        "cvlegend": 2,
        "calls dataframe": 2,
        "vertical bar plot": 2,
        "barh plot type": 1,
        "series class": 1,
        "value counts": 1,
        "countplot": 1,
        "seaborn library": 1,
        "countplot method": 1,
        "pandas plot": 1,
        "order parameter": 1,
        "cvdow field": 1,
        "coolindex": 1,
        "noise violation": 1,
        "seaborn plot": 1,
        "total noise violations": 1,
        "noise violation calls": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "seaborn documentation": {
        "cvlegend": 2,
        "calls dataframe": 2,
        "vertical bar plot": 2,
        "barh plot type": 1,
        "series class": 1,
        "value counts": 1,
        "countplot": 1,
        "seaborn library": 1,
        "countplot method": 1,
        "pandas plot": 1,
        "order parameter": 1,
        "cvdow field": 1,
        "coolindex": 1,
        "noise violation": 1,
        "seaborn plot": 1,
        "total noise violations": 1,
        "noise violation calls": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "high level plotting library": {
        "cvlegend": 2,
        "calls dataframe": 2,
        "vertical bar plot": 2,
        "barh plot type": 1,
        "series class": 1,
        "value counts": 1,
        "countplot": 1,
        "seaborn library": 1,
        "countplot method": 1,
        "pandas plot": 1,
        "order parameter": 1,
        "cvdow field": 1,
        "coolindex": 1,
        "noise violation": 1,
        "seaborn plot": 1,
        "total noise violations": 1,
        "noise violation calls": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "plotting pandas": {
        "cvlegend": 2,
        "calls dataframe": 2,
        "vertical bar plot": 2,
        "barh plot type": 1,
        "series class": 1,
        "value counts": 1,
        "countplot": 1,
        "seaborn library": 1,
        "countplot method": 1,
        "pandas plot": 1,
        "order parameter": 1,
        "cvdow field": 1,
        "coolindex": 1,
        "noise violation": 1,
        "seaborn plot": 1,
        "total noise violations": 1,
        "noise violation calls": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "se": {
        "cvlegend": 2,
        "calls dataframe": 2,
        "vertical bar plot": 2,
        "barh plot type": 1,
        "series class": 1,
        "value counts": 1,
        "countplot": 1,
        "seaborn library": 1,
        "countplot method": 1,
        "pandas plot": 1,
        "order parameter": 1,
        "cvdow field": 1,
        "coolindex": 1,
        "noise violation": 1,
        "seaborn plot": 1,
        "total noise violations": 1,
        "noise violation calls": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "tab key": {
        "text munching": 4,
        "sequence data": 4,
        "tutorial": 4,
        "fasta file": 3,
        "map transformation": 2,
        "sequence records": 2,
        "input": 2,
        "ncbi blast": 2,
        "inputformat": 2,
        "sequence text combination": 1,
        "blast executions": 1,
        "rdd": 1
    },
    "code completion": {
        "text munching": 4,
        "sequence data": 4,
        "tutorial": 4,
        "fasta file": 3,
        "map transformation": 2,
        "sequence records": 2,
        "input": 2,
        "ncbi blast": 2,
        "inputformat": 2,
        "sequence text combination": 1,
        "blast executions": 1,
        "rdd": 1
    },
    "apache spark": {
        "text munching": 4,
        "sequence data": 4,
        "tutorial": 4,
        "fasta file": 3,
        "map transformation": 2,
        "sequence records": 2,
        "input": 2,
        "ncbi blast": 2,
        "inputformat": 2,
        "sequence text combination": 1,
        "blast executions": 1,
        "rdd": 1
    },
    "datetime format": {
        "transaction size": 2,
        "alcohol": 2,
        "category number column": 1,
        "data mining": 1,
        "sales projections": 1,
        "labor": 1,
        "gross margin percent": 1,
        "store rent": 1,
        "markup": 1,
        "smaller visualizations": 1,
        "outlier data point": 1,
        "visualizations": 1,
        "outlier": 1,
        "liquor stores": 1,
        "liquor sales data": 1,
        "convenience stores": 1,
        "grocery stores": 1,
        "mean transaction size": 1,
        "mean": 1,
        "iowa": 1,
        "liquor": 1,
        "gross margin": 1,
        "liquor licensees": 1,
        "total sales dollars": 1,
        "alchohol beer": 1,
        "price": 1
    },
    "sales columns": {
        "transaction size": 2,
        "alcohol": 2,
        "category number column": 1,
        "data mining": 1,
        "sales projections": 1,
        "labor": 1,
        "gross margin percent": 1,
        "store rent": 1,
        "markup": 1,
        "smaller visualizations": 1,
        "outlier data point": 1,
        "visualizations": 1,
        "outlier": 1,
        "liquor stores": 1,
        "liquor sales data": 1,
        "convenience stores": 1,
        "grocery stores": 1,
        "mean transaction size": 1,
        "mean": 1,
        "iowa": 1,
        "liquor": 1,
        "gross margin": 1,
        "liquor licensees": 1,
        "total sales dollars": 1,
        "alchohol beer": 1,
        "price": 1
    },
    "automated cross validation": {
        "decision boundaries": 4,
        "predicted class": 2,
        "knn model": 2,
        "pandas manipulations": 2,
        "data format": 2,
        "euclidean distance": 2,
        "knn classifier": 2,
        "distance function": 2,
        "knn algorithm": 2,
        "function predict": 1,
        "predicted class value": 1,
        "nearestneighborsclassifier": 1,
        "function distance": 1,
        "test data": 1,
        "sk": 1,
        "image": 1,
        "knn process": 1
    },
    "synonym rings": {
        "wordnet synset": 4,
        "input words": 3,
        "noun synset": 3,
        "path similarity": 3,
        "syn": 3,
        "word similarities": 3,
        "word2vec model": 3,
        "total frequency": 2,
        "cosine similarity": 1,
        "cosine similarities": 1,
        "movie reviews": 1,
        "code cell": 1
    },
    "wordnet": {
        "wordnet synset": 4,
        "input words": 3,
        "noun synset": 3,
        "path similarity": 3,
        "syn": 3,
        "word similarities": 3,
        "word2vec model": 3,
        "total frequency": 2,
        "cosine similarity": 1,
        "cosine similarities": 1,
        "movie reviews": 1,
        "code cell": 1
    },
    "convex clusters": {
        "iris data set": 2,
        "dbscan": 2,
        "random state": 1,
        "iris": 1,
        "euclidean distance": 1,
        "cluster centers": 1,
        "clustering outcome": 1,
        "petal length": 1,
        "scaling": 1,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1
    },
    "pseudocode": {
        "iris data set": 2,
        "dbscan": 2,
        "random state": 1,
        "iris": 1,
        "euclidean distance": 1,
        "cluster centers": 1,
        "clustering outcome": 1,
        "petal length": 1,
        "scaling": 1,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1
    },
    "cluster centers": {
        "iris data set": 2,
        "dbscan": 2,
        "random state": 1,
        "iris": 1,
        "euclidean distance": 1,
        "cluster centers": 1,
        "clustering outcome": 1,
        "petal length": 1,
        "scaling": 1,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1
    },
    "convex": {
        "iris data set": 2,
        "dbscan": 2,
        "random state": 1,
        "iris": 1,
        "euclidean distance": 1,
        "cluster centers": 1,
        "clustering outcome": 1,
        "petal length": 1,
        "scaling": 1,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1
    },
    "uppercase letters": {
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1,
        "indexer": 1,
        "iloc indexer": 1,
        "profit": 1,
        "gender column": 1,
        "income": 1,
        "expenses": 1,
        "df2": 1,
        "age": 1
    },
    "autograded jupyter notebook cell": {
        "help message": 2,
        "bonus exercises": 1,
        "python observation": 1,
        "variable observation": 1,
        "str()": 1,
        "str() function": 1,
        "typecasting": 1,
        "year": 1,
        "mathematical operators": 1,
        "leap year": 1,
        "conditional statements": 1,
        "variable year": 1,
        "arguments": 1,
        "online resources": 1,
        "stack overflow": 1,
        "google search": 1,
        "python workflow": 1,
        "python documentation": 1,
        "positional arguments": 1,
        "keyword arguments": 1,
        "function call": 1,
        "input": 1,
        "default input values": 1,
        "default values": 1,
        "docstring": 1,
        "source code": 1,
        "fahrenheit": 1
    },
    "visualizations": {
        "ahs": 5,
        "data file": 2,
        "american housing survey": 2,
        "homework": 2,
        "ahs dataset": 2,
        "housing unit": 2,
        "population column": 2,
        "year column": 2,
        "quantitative data": 2,
        "integer": 2,
        "world population": 1,
        "standard metropolitan statistical area": 1,
        "join method": 1,
        "smsa": 1,
        "bar chart": 1
    },
    "hours": {
        "ahs": 5,
        "data file": 2,
        "american housing survey": 2,
        "homework": 2,
        "ahs dataset": 2,
        "housing unit": 2,
        "population column": 2,
        "year column": 2,
        "quantitative data": 2,
        "integer": 2,
        "world population": 1,
        "standard metropolitan statistical area": 1,
        "join method": 1,
        "smsa": 1,
        "bar chart": 1
    },
    "homework 3": {
        "ahs": 5,
        "data file": 2,
        "american housing survey": 2,
        "homework": 2,
        "ahs dataset": 2,
        "housing unit": 2,
        "population column": 2,
        "year column": 2,
        "quantitative data": 2,
        "integer": 2,
        "world population": 1,
        "standard metropolitan statistical area": 1,
        "join method": 1,
        "smsa": 1,
        "bar chart": 1
    },
    "office hours": {
        "ahs": 5,
        "data file": 2,
        "american housing survey": 2,
        "homework": 2,
        "ahs dataset": 2,
        "housing unit": 2,
        "population column": 2,
        "year column": 2,
        "quantitative data": 2,
        "integer": 2,
        "world population": 1,
        "standard metropolitan statistical area": 1,
        "join method": 1,
        "smsa": 1,
        "bar chart": 1
    },
    "homework 4": {
        "ahs": 5,
        "data file": 2,
        "american housing survey": 2,
        "homework": 2,
        "ahs dataset": 2,
        "housing unit": 2,
        "population column": 2,
        "year column": 2,
        "quantitative data": 2,
        "integer": 2,
        "world population": 1,
        "standard metropolitan statistical area": 1,
        "join method": 1,
        "smsa": 1,
        "bar chart": 1
    },
    "prel": {
        "ahs": 5,
        "data file": 2,
        "american housing survey": 2,
        "homework": 2,
        "ahs dataset": 2,
        "housing unit": 2,
        "population column": 2,
        "year column": 2,
        "quantitative data": 2,
        "integer": 2,
        "world population": 1,
        "standard metropolitan statistical area": 1,
        "join method": 1,
        "smsa": 1,
        "bar chart": 1
    },
    "inaries": {
        "ahs": 5,
        "data file": 2,
        "american housing survey": 2,
        "homework": 2,
        "ahs dataset": 2,
        "housing unit": 2,
        "population column": 2,
        "year column": 2,
        "quantitative data": 2,
        "integer": 2,
        "world population": 1,
        "standard metropolitan statistical area": 1,
        "join method": 1,
        "smsa": 1,
        "bar chart": 1
    },
    "counting": {
        "counting": 2,
        "finger exercise solution": 2,
        "bernoulli": 1,
        "bayesian analysis": 1,
        "binomial coefficient": 1,
        "multiplication rule": 1,
        "factorial": 1,
        "finger exercise 1": 1,
        "3 digit numbers": 1,
        "numeral": 1,
        "product rule": 1,
        "combination formula": 1,
        "non-distinct balls": 1,
        "gaussian trick": 1,
        "coin tossing": 1,
        "coin toss": 1,
        "bernoulli scheme": 1,
        "scipy stats library": 1,
        "probability distributions": 1,
        "discrete random variables": 1,
        "discrete distributions": 1,
        "fair coin": 1,
        "stats": 1,
        "100": 1,
        "scipy": 1,
        "coin flips": 1
    },
    "jdc": {
        "l2 regularization": 4,
        "momentum term": 4,
        "xor gate": 2,
        "neural network": 2,
        "partiular architecture": 2,
        "weight update": 2,
        "activation function": 2,
        "biases": 2,
        "weights": 2,
        "l2 regularization term": 2,
        "regularizatino constant": 2,
        "batch size": 2
    },
    "generic neural network architecture": {
        "l2 regularization": 4,
        "momentum term": 4,
        "xor gate": 2,
        "neural network": 2,
        "partiular architecture": 2,
        "weight update": 2,
        "activation function": 2,
        "biases": 2,
        "weights": 2,
        "l2 regularization term": 2,
        "regularizatino constant": 2,
        "batch size": 2
    },
    "shopping trips": {
        "log transformation": 2,
        "shopping": 2,
        "shopping trips": 2,
        "boxplots": 2,
        "lunar new year": 2,
        "christmas": 2,
        "symmetrize": 1,
        "carts": 1,
        "log transformed data": 1,
        "point cloud": 1,
        "vertical bands": 1,
        "over plotting": 1,
        "transaction time": 1,
        "transaction times": 1,
        "datetime64": 1,
        "unique customers": 1,
        "customer trends": 1,
        "customer counts": 1,
        "holidays": 1,
        "shopping behavior": 1,
        "line": 1,
        "reference lines": 1
    },
    "numpy libraries": {
        "arial": 15,
        "time series dataset": 3,
        "data cleaning": 3,
        "1": 1,
        "input data frame": 1,
        "random state": 1,
        "column name": 1,
        "threshold value": 1,
        "scaling": 1
    },
    "visual exploratory data analysis": {
        "women": 6,
        "titanic": 5,
        "bar plot": 5,
        "kaggle": 3,
        "passengerid": 3,
        "titanic dataset feature": 2,
        "bar plots": 2,
        "men": 1
    },
    "geometric objects": {
        "shapely point objects": 4,
        "shapely point geometry object": 2,
        "shapely points": 2,
        "linestring object": 2,
        "coords": 2,
        "polygon object": 2,
        "github repository": 2,
        "error message": 2,
        "shapely geometry": 2,
        "linestring": 2,
        "shapely point": 2,
        "polygon geometry": 2,
        "shapely polygon geometry": 1
    },
    "gis operations": {
        "shapely point objects": 4,
        "shapely point geometry object": 2,
        "shapely points": 2,
        "linestring object": 2,
        "coords": 2,
        "polygon object": 2,
        "github repository": 2,
        "error message": 2,
        "shapely geometry": 2,
        "linestring": 2,
        "shapely point": 2,
        "polygon geometry": 2,
        "shapely polygon geometry": 1
    },
    "shapely module": {
        "shapely point objects": 4,
        "shapely point geometry object": 2,
        "shapely points": 2,
        "linestring object": 2,
        "coords": 2,
        "polygon object": 2,
        "github repository": 2,
        "error message": 2,
        "shapely geometry": 2,
        "linestring": 2,
        "shapely point": 2,
        "polygon geometry": 2,
        "shapely polygon geometry": 1
    },
    "regex expressions": {
        "regex": 4,
        "low quality reads": 2,
        "read quality string": 2,
        "mean score": 2,
        "low quality read": 2,
        "mean scores": 2,
        "file objects": 2,
        "score cutoff": 2,
        "ph": 2,
        "reads": 2,
        "dollar sign": 2,
        "dollars": 1,
        "square paranthesis": 1,
        "uppercase letters": 1
    },
    "fastq file format": {
        "regex": 4,
        "low quality reads": 2,
        "read quality string": 2,
        "mean score": 2,
        "low quality read": 2,
        "mean scores": 2,
        "file objects": 2,
        "score cutoff": 2,
        "ph": 2,
        "reads": 2,
        "dollar sign": 2,
        "dollars": 1,
        "square paranthesis": 1,
        "uppercase letters": 1
    },
    "sequence letters": {
        "regex": 4,
        "low quality reads": 2,
        "read quality string": 2,
        "mean score": 2,
        "low quality read": 2,
        "mean scores": 2,
        "file objects": 2,
        "score cutoff": 2,
        "ph": 2,
        "reads": 2,
        "dollar sign": 2,
        "dollars": 1,
        "square paranthesis": 1,
        "uppercase letters": 1
    },
    "fasta format": {
        "regex": 4,
        "low quality reads": 2,
        "read quality string": 2,
        "mean score": 2,
        "low quality read": 2,
        "mean scores": 2,
        "file objects": 2,
        "score cutoff": 2,
        "ph": 2,
        "reads": 2,
        "dollar sign": 2,
        "dollars": 1,
        "square paranthesis": 1,
        "uppercase letters": 1
    },
    "quotation mark": {
        "regex": 4,
        "low quality reads": 2,
        "read quality string": 2,
        "mean score": 2,
        "low quality read": 2,
        "mean scores": 2,
        "file objects": 2,
        "score cutoff": 2,
        "ph": 2,
        "reads": 2,
        "dollar sign": 2,
        "dollars": 1,
        "square paranthesis": 1,
        "uppercase letters": 1
    },
    "deep sequencing reads data": {
        "regex": 4,
        "low quality reads": 2,
        "read quality string": 2,
        "mean score": 2,
        "low quality read": 2,
        "mean scores": 2,
        "file objects": 2,
        "score cutoff": 2,
        "ph": 2,
        "reads": 2,
        "dollar sign": 2,
        "dollars": 1,
        "square paranthesis": 1,
        "uppercase letters": 1
    },
    "title line": {
        "regex": 4,
        "low quality reads": 2,
        "read quality string": 2,
        "mean score": 2,
        "low quality read": 2,
        "mean scores": 2,
        "file objects": 2,
        "score cutoff": 2,
        "ph": 2,
        "reads": 2,
        "dollar sign": 2,
        "dollars": 1,
        "square paranthesis": 1,
        "uppercase letters": 1
    },
    "sequence identifier": {
        "regex": 4,
        "low quality reads": 2,
        "read quality string": 2,
        "mean score": 2,
        "low quality read": 2,
        "mean scores": 2,
        "file objects": 2,
        "score cutoff": 2,
        "ph": 2,
        "reads": 2,
        "dollar sign": 2,
        "dollars": 1,
        "square paranthesis": 1,
        "uppercase letters": 1
    },
    "fastq": {
        "regex": 4,
        "low quality reads": 2,
        "read quality string": 2,
        "mean score": 2,
        "low quality read": 2,
        "mean scores": 2,
        "file objects": 2,
        "score cutoff": 2,
        "ph": 2,
        "reads": 2,
        "dollar sign": 2,
        "dollars": 1,
        "square paranthesis": 1,
        "uppercase letters": 1
    },
    "string ending": {
        "regex": 4,
        "low quality reads": 2,
        "read quality string": 2,
        "mean score": 2,
        "low quality read": 2,
        "mean scores": 2,
        "file objects": 2,
        "score cutoff": 2,
        "ph": 2,
        "reads": 2,
        "dollar sign": 2,
        "dollars": 1,
        "square paranthesis": 1,
        "uppercase letters": 1
    },
    "pickle file": {
        "neural network": 2,
        "of variable tensors": 1,
        "list of variable tensors": 1,
        "truncated normal distribution": 1,
        "placeholder tensor": 1,
        "random numbers": 1,
        "output layers": 1,
        "relu activation function": 1,
        "tensorflow": 1,
        "keras layer": 1,
        "neural network model": 1,
        "layer": 1,
        "max pool": 1,
        "keras sequential model": 1,
        "flatten layer": 1,
        "evaluation() function": 1,
        "activation model": 1,
        "metrics history": 1,
        "sequential model": 1,
        "loss functions": 1,
        "metrics": 1,
        "learning process": 1,
        "keras": 1,
        "fit() function": 1,
        "stochastic gradient descent": 1,
        "training loss": 1
    },
    "cutpoint": {
        "cutpoint": 8,
        "training error": 6,
        "response variable": 2,
        "mean response value": 1,
        "observation": 1,
        "tree diagram": 1,
        "predictive feature": 1,
        "high": 1,
        "predicted probability": 1,
        "high school graduation rate": 1,
        "high population density": 1,
        "titanic": 1,
        "sex": 1,
        "age": 1
    },
    "income data": {
        "outliers": 5,
        "income axis": 4,
        "replotting": 2,
        "data transformation": 2,
        "outlier": 2,
        "income spectrum": 2,
        "0 incomes": 2,
        "gaussian curve": 2,
        "0 income": 2,
        "income graph": 2,
        "income data": 1,
        "income": 1
    },
    "mongodb": {
        "weather underground": 4,
        "mongodb cloud computing system": 4,
        "netid": 4,
        "authentication": 4,
        "shared resource": 4,
        "historical weather data": 3,
        "microsoft azure": 3,
        "historical weather": 1
    },
    "python program": {
        "weather underground": 4,
        "mongodb cloud computing system": 4,
        "netid": 4,
        "authentication": 4,
        "shared resource": 4,
        "historical weather data": 3,
        "microsoft azure": 3,
        "historical weather": 1
    },
    "pymongo database driver": {
        "weather underground": 4,
        "mongodb cloud computing system": 4,
        "netid": 4,
        "authentication": 4,
        "shared resource": 4,
        "historical weather data": 3,
        "microsoft azure": 3,
        "historical weather": 1
    },
    "python data types": {
        "python program": 25,
        "expected output": 2
    },
    "time difference": {
        "wait time": 3,
        "empirical distribution function": 3,
        "website": 2,
        "floating point numbers": 2,
        "nerve pulse data": 2,
        "random variable": 2,
        "nerve pulses": 2,
        "cumulative distribution function": 1,
        "empirical distibution function": 1,
        "empirical distribution": 1,
        "fomula": 1,
        "probability": 1,
        "cummulative distribution": 1,
        "estimate": 1,
        "mean": 1,
        "nerve pulse wait time data": 1,
        "variance": 1,
        "skewness": 1
    },
    "summer school": {
        "wait time": 3,
        "empirical distribution function": 3,
        "website": 2,
        "floating point numbers": 2,
        "nerve pulse data": 2,
        "random variable": 2,
        "nerve pulses": 2,
        "cumulative distribution function": 1,
        "empirical distibution function": 1,
        "empirical distribution": 1,
        "fomula": 1,
        "probability": 1,
        "cummulative distribution": 1,
        "estimate": 1,
        "mean": 1,
        "nerve pulse wait time data": 1,
        "variance": 1,
        "skewness": 1
    },
    "nerve fibre": {
        "wait time": 3,
        "empirical distribution function": 3,
        "website": 2,
        "floating point numbers": 2,
        "nerve pulse data": 2,
        "random variable": 2,
        "nerve pulses": 2,
        "cumulative distribution function": 1,
        "empirical distibution function": 1,
        "empirical distribution": 1,
        "fomula": 1,
        "probability": 1,
        "cummulative distribution": 1,
        "estimate": 1,
        "mean": 1,
        "nerve pulse wait time data": 1,
        "variance": 1,
        "skewness": 1
    },
    "programming": {
        "wait time": 3,
        "empirical distribution function": 3,
        "website": 2,
        "floating point numbers": 2,
        "nerve pulse data": 2,
        "random variable": 2,
        "nerve pulses": 2,
        "cumulative distribution function": 1,
        "empirical distibution function": 1,
        "empirical distribution": 1,
        "fomula": 1,
        "probability": 1,
        "cummulative distribution": 1,
        "estimate": 1,
        "mean": 1,
        "nerve pulse wait time data": 1,
        "variance": 1,
        "skewness": 1
    },
    "nerve pulses": {
        "wait time": 3,
        "empirical distribution function": 3,
        "website": 2,
        "floating point numbers": 2,
        "nerve pulse data": 2,
        "random variable": 2,
        "nerve pulses": 2,
        "cumulative distribution function": 1,
        "empirical distibution function": 1,
        "empirical distribution": 1,
        "fomula": 1,
        "probability": 1,
        "cummulative distribution": 1,
        "estimate": 1,
        "mean": 1,
        "nerve pulse wait time data": 1,
        "variance": 1,
        "skewness": 1
    },
    "integer subtraction": {
        "coding practice": 5,
        "symbolic math": 3,
        "subtraction": 2,
        "multiplication": 2,
        "integer division": 2,
        "mathematical operations": 2,
        "integer subtraction": 1,
        "integer subtraction operations": 1,
        "integer multiplication": 1,
        "integer multiplication operations": 1,
        "integer division operations": 1,
        "integer operations": 1,
        "fractions": 1,
        "decimals": 1,
        "non-integer numbers": 1,
        "division": 1,
        "floating point numbers": 1
    },
    "numeric feature data": {
        "decision boundaries": 4,
        "iris object": 2,
        "feature names": 2,
        "target data": 2,
        "flower class": 2,
        "knn": 2,
        "kneighborsclassifier": 2,
        "classification rate": 2,
        "predicted class": 2,
        "knn model": 2,
        "pandas manipulations": 2,
        "data format": 2,
        "test data": 1
    },
    "nn": {
        "decision boundaries": 4,
        "iris object": 2,
        "feature names": 2,
        "target data": 2,
        "flower class": 2,
        "knn": 2,
        "kneighborsclassifier": 2,
        "classification rate": 2,
        "predicted class": 2,
        "knn model": 2,
        "pandas manipulations": 2,
        "data format": 2,
        "test data": 1
    },
    "image features": {
        "decision boundaries": 4,
        "iris object": 2,
        "feature names": 2,
        "target data": 2,
        "flower class": 2,
        "knn": 2,
        "kneighborsclassifier": 2,
        "classification rate": 2,
        "predicted class": 2,
        "knn model": 2,
        "pandas manipulations": 2,
        "data format": 2,
        "test data": 1
    },
    "distance metrics": {
        "decision boundaries": 4,
        "iris object": 2,
        "feature names": 2,
        "target data": 2,
        "flower class": 2,
        "knn": 2,
        "kneighborsclassifier": 2,
        "classification rate": 2,
        "predicted class": 2,
        "knn model": 2,
        "pandas manipulations": 2,
        "data format": 2,
        "test data": 1
    },
    "mnist database": {
        "decision boundaries": 4,
        "iris object": 2,
        "feature names": 2,
        "target data": 2,
        "flower class": 2,
        "knn": 2,
        "kneighborsclassifier": 2,
        "classification rate": 2,
        "predicted class": 2,
        "knn model": 2,
        "pandas manipulations": 2,
        "data format": 2,
        "test data": 1
    },
    "pandas functionality": {
        "decision boundaries": 4,
        "iris object": 2,
        "feature names": 2,
        "target data": 2,
        "flower class": 2,
        "knn": 2,
        "kneighborsclassifier": 2,
        "classification rate": 2,
        "predicted class": 2,
        "knn model": 2,
        "pandas manipulations": 2,
        "data format": 2,
        "test data": 1
    },
    "weighting functions": {
        "decision boundaries": 4,
        "iris object": 2,
        "feature names": 2,
        "target data": 2,
        "flower class": 2,
        "knn": 2,
        "kneighborsclassifier": 2,
        "classification rate": 2,
        "predicted class": 2,
        "knn model": 2,
        "pandas manipulations": 2,
        "data format": 2,
        "test data": 1
    },
    "ization": {
        "decision boundaries": 4,
        "iris object": 2,
        "feature names": 2,
        "target data": 2,
        "flower class": 2,
        "knn": 2,
        "kneighborsclassifier": 2,
        "classification rate": 2,
        "predicted class": 2,
        "knn model": 2,
        "pandas manipulations": 2,
        "data format": 2,
        "test data": 1
    },
    "fasta file": {
        "text munching": 4,
        "sequence data": 4,
        "tutorial": 4,
        "fasta file": 3,
        "sequence records": 2,
        "input": 2,
        "ncbi blast": 2,
        "inputformat": 2,
        "rdd": 2,
        "sequence text combination": 1,
        "blast executions": 1
    },
    "public email corpus": {
        "email": 5,
        "text file": 3,
        "path parameter": 2,
        "ham": 2,
        "spam": 2,
        "test sets": 2,
        "labels": 2,
        "memory requirements": 1,
        "numpy email arrays": 1,
        "spam classification": 1,
        "tfidfvectorizer": 1,
        "bigrams": 1,
        "linearsvc": 1,
        "default parameters": 1,
        "unigrams": 1,
        "stop words": 1
    },
    "text classification pipeline": {
        "email": 5,
        "text file": 3,
        "path parameter": 2,
        "ham": 2,
        "spam": 2,
        "test sets": 2,
        "labels": 2,
        "memory requirements": 1,
        "numpy email arrays": 1,
        "spam classification": 1,
        "tfidfvectorizer": 1,
        "bigrams": 1,
        "linearsvc": 1,
        "default parameters": 1,
        "unigrams": 1,
        "stop words": 1
    },
    "bonus exercises": {
        "help message": 2,
        "python observation": 1,
        "variable observation": 1,
        "str()": 1,
        "str() function": 1,
        "typecasting": 1,
        "year": 1,
        "mathematical operators": 1,
        "leap year": 1,
        "conditional statements": 1,
        "variable year": 1,
        "arguments": 1,
        "online resources": 1,
        "stack overflow": 1,
        "google search": 1,
        "python workflow": 1,
        "python documentation": 1,
        "positional arguments": 1,
        "keyword arguments": 1,
        "function call": 1,
        "input": 1,
        "default input values": 1,
        "default values": 1,
        "docstring": 1,
        "source code": 1,
        "fahrenheit": 1
    },
    "python list comprehensions": {
        "even numbers": 2,
        "python list comprehension": 2,
        "new york": 2,
        "nevada": 2,
        "flower type": 2,
        "petal width": 1,
        "virginia flowers": 1,
        "sklearn package": 1,
        "versicolour": 1,
        "petal length": 1,
        "virginica": 1,
        "sepal length": 1,
        "setosa": 1,
        "target": 1,
        "count row": 1,
        "categorical variables": 1,
        "groupby function": 1,
        "mean stats": 1,
        "normalization": 1,
        "pairplot() function": 1,
        "scatterplot matrix": 1,
        "predictor variables": 1
    },
    "astro machine learning model": {
        "photometric redshifts": 2,
        "machine learning model": 2,
        "lsst": 1,
        "astronomical problem": 1,
        "galaxies": 1,
        "spectroscopic measurements": 1,
        "photometry": 1,
        "sdss casjobs": 1,
        "specobjid": 1,
        "psf mag": 1,
        "psfmag": 1,
        "modelmag": 1,
        "ds": 1,
        "sfd extinction estimate": 1,
        "sdss identifier": 1,
        "sdss photometric type": 1,
        "upper": 1,
        "sdss source": 1,
        "missing data": 1,
        "wise filters": 1,
        "categorical features": 1,
        "categorical variable": 1,
        "nearest neighbors regression model": 1,
        "sdss dataframe": 1,
        "categorical data": 1
    },
    "productid": {
        "postgresql": 2,
        "sql": 2,
        "aggregate functions": 2,
        "sql aliases": 1,
        "sql alias syntax": 1,
        "query arguments": 1,
        "database table": 1,
        "alias as": 1,
        "column": 1,
        "aliases": 1,
        "wildcards": 1,
        "where clause": 1,
        "missing letters": 1,
        "select distinct statement": 1,
        "distinct operator": 1,
        "limit operator": 1,
        "limit syntax": 1,
        "sql subqueries": 1,
        "group by statement": 1,
        "group by operator": 1,
        "having operator": 1,
        "having clause": 1,
        "else statement": 1,
        "date documentation": 1
    },
    "ridge regression model": {
        "crsdeptime": 6,
        "linear regression model": 4,
        "ridge regression model": 3,
        "depdelay": 2,
        "delay": 2,
        "del": 2,
        "polynomial": 2,
        "unit tests": 2,
        "instructor grades": 2,
        "ridge regresion model": 2
    },
    "validation error": {
        "cross validation": 3,
        "split indices": 3,
        "cross validation function": 3,
        "feature sets": 3,
        "housing prices": 2,
        "linear classifier": 2,
        "classification error": 2,
        "training errors": 2,
        "root mean squared error": 1,
        "average": 1,
        "tree models": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1
    },
    "global regular expression printer": {
        "data folder": 1,
        "command line": 1,
        "data crunching tool": 1,
        "data exploration": 1,
        "unstructured data": 1,
        "ipython": 1,
        "class forums": 1,
        "user exploration": 1,
        "structured data": 1,
        "scatterplot": 1,
        "survey responses": 1,
        "numeric features": 1,
        "simple line graph": 1,
        "internet": 1,
        "uci machine learning": 1,
        "file contents": 1,
        "decision tree learning": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1
    },
    "bitcoin": {
        "cryptocurrencies": 2,
        "ml problem": 2,
        "gradient descent": 2,
        "closing price": 2,
        "exercise": 2,
        "data points": 2,
        "quantity of interest": 2,
        "ethereum": 2,
        "bitcoin": 2,
        "scatterplots": 2,
        "student task": 2,
        "parse": 1,
        "scriptsig": 1,
        "script": 1,
        "scriptpubkey": 1
    },
    "derivatives": {
        "fraction function": 3,
        "denomin": 3,
        "indeterminate forms": 3,
        "mean value": 3,
        "integral table": 3,
        "inverse trig functions": 2,
        "sympy": 2,
        "integrals": 2,
        "limit definition": 1,
        "derivative": 1,
        "nth fibonicci number": 1,
        "series": 1,
        "hyperparameters": 1
    },
    "python variable": {
        "discriminator": 4,
        "context manager": 4,
        "semantics": 4,
        "single adversarial training example": 4,
        "noise distribution": 2,
        "synthetic images": 2,
        "data distribution": 2,
        "generative adversarial training": 2,
        "concatenation": 1,
        "training data requirements": 1
    },
    "kerneldensity": {
        "pdf": 6,
        "chinups": 5,
        "middle aged men": 5,
        "tophat kernel": 4,
        "histogram plots": 3,
        "continuous data": 1,
        "bandwidth selection": 1,
        "epanechnikov kernel": 1
    },
    "tophat kernel": {
        "pdf": 6,
        "chinups": 5,
        "middle aged men": 5,
        "tophat kernel": 4,
        "histogram plots": 3,
        "continuous data": 1,
        "bandwidth selection": 1,
        "epanechnikov kernel": 1
    },
    "test": {
        "confusion matrix": 7,
        "gridsearchcv": 7,
        "gridsearch": 4,
        "scikit learn": 4,
        "confusion matrices": 2,
        "grid model": 2
    },
    "support vector machine classifier": {
        "confusion matrix": 7,
        "gridsearchcv": 7,
        "gridsearch": 4,
        "scikit learn": 4,
        "confusion matrices": 2,
        "grid model": 2
    },
    "symbolic computation": {
        "dictionaries": 3,
        "polynomials": 3,
        "polynomial functions": 2,
        "symbolic calculations": 2,
        "non-zero prefactor": 2,
        "symbolic manipulation": 2,
        "sympy package": 2,
        "numerical computations": 2,
        "symbolic manipulations": 2,
        "utility function": 2,
        "polynomial": 2,
        "implementation": 1,
        "setdefault method": 1
    },
    "code reuse": {
        "valueerror": 3,
        "function size": 2,
        "function style": 2,
        "input function": 2,
        "integer": 2,
        "exception": 2,
        "infinite while loop": 2,
        "getint": 2,
        "ispositive rewrite": 2,
        "positional argument converter": 2,
        "positional argument tester": 2,
        "keyword argument prompt": 2,
        "string entry": 1
    },
    "procedural decomposition": {
        "valueerror": 3,
        "function size": 2,
        "function style": 2,
        "input function": 2,
        "integer": 2,
        "exception": 2,
        "infinite while loop": 2,
        "getint": 2,
        "ispositive rewrite": 2,
        "positional argument converter": 2,
        "positional argument tester": 2,
        "keyword argument prompt": 2,
        "string entry": 1
    },
    "pandas plotting library": {
        "seaborn plot": 3,
        "calls dataframe": 2,
        "vertical bar plot": 2,
        "noise violation calls": 2,
        "cvdow field": 1,
        "rotation argument": 1,
        "coolindex": 1,
        "noise violation": 1,
        "cvlegend": 1,
        "total noise violations": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "fraud": 1,
        "calls reporting": 1,
        "reasoning": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "businesses": {
        "inspection": 4,
        "inspection dataframe": 4,
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "zip codes": 3
    },
    "mrjob": {
        "mrwordfreqcount": 2,
        "hadoop mode": 2,
        "hadoop streaming": 2,
        "mrjob": 2,
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "uci repository": {
        "age": 4,
        "parmaters": 4,
        "labels": 2,
        "missing": 2,
        "matplolib": 1,
        "deep learning": 1,
        "neural network": 1,
        "standard scaling": 1,
        "standardize": 1,
        "scaler": 1,
        "scaling": 1,
        "scaled feature values": 1,
        "tensorflow": 1,
        "n": 1,
        "scikit learn": 1,
        "testing sets": 1,
        "dropna": 1,
        "pandas dataframes": 1
    },
    "pyspark documentation": {
        "text munching": 4,
        "sequence data": 4,
        "tutorial": 4,
        "fasta file": 3,
        "sequence records": 2,
        "input": 2,
        "ncbi blast": 2,
        "inputformat": 2,
        "sequence text combination": 1,
        "blast executions": 1,
        "rdd": 1
    },
    "amazon dataset": {
        "performance metric": 2,
        "correctly classified data points": 2,
        "total data points": 2,
        "graphlab create": 2,
        "majority class classifier": 2,
        "false negatives": 2,
        "confusion matrix": 2,
        "true negatives": 2,
        "true positives": 2,
        "incorrect predictions": 2,
        "binary classification": 2,
        "false positives": 2,
        "quiz": 2
    },
    "sentiment": {
        "performance metric": 2,
        "correctly classified data points": 2,
        "total data points": 2,
        "graphlab create": 2,
        "majority class classifier": 2,
        "false negatives": 2,
        "confusion matrix": 2,
        "true negatives": 2,
        "true positives": 2,
        "incorrect predictions": 2,
        "binary classification": 2,
        "false positives": 2,
        "quiz": 2
    },
    "permutation test": {
        "first babies": 4,
        "null hypothesis": 3,
        "test statistic": 2,
        "birth weight": 2,
        "age": 2,
        "correlation": 2,
        "statistical significance": 2,
        "false negative rate": 2,
        "nsfg data": 2,
        "hypothesis test": 2,
        "pregnancy length": 1,
        "random sampling": 1,
        "simulated samples": 1
    },
    "regexes": {
        "regex": 4,
        "match object": 2,
        "pattern object": 2,
        "us phone number": 2,
        "area code": 2,
        "regular expression syntax": 2,
        "challenge 14": 2,
        "metacharacters": 2,
        "parentheses": 2,
        "challenge 13": 2,
        "uring group skills": 2,
        "non-": 2
    },
    "character classes": {
        "regexr": 4,
        "solution breakdown": 4,
        "brackets": 4,
        "regex": 2,
        "match object": 1,
        "pattern object": 1,
        "us phone number": 1,
        "area code": 1,
        "regular expression syntax": 1,
        "challenge 14": 1,
        "metacharacters": 1,
        "parentheses": 1,
        "challenge 13": 1,
        "uring group skills": 1,
        "non-": 1
    },
    "file system": {
        "shell commands": 1,
        "ipython notebooks": 1,
        "wc": 1,
        "word counting tool": 1,
        "delimeter": 1,
        "cut command": 1,
        "head command": 1,
        "one liners": 1,
        "pipes": 1,
        "data folder": 1,
        "structured data": 1,
        "scatterplot": 1,
        "numeric features": 1,
        "simple line graph": 1,
        "uci machine learning": 1,
        "file contents": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1
    },
    "man page": {
        "shell commands": 1,
        "ipython notebooks": 1,
        "wc": 1,
        "word counting tool": 1,
        "delimeter": 1,
        "cut command": 1,
        "head command": 1,
        "one liners": 1,
        "pipes": 1,
        "data folder": 1,
        "structured data": 1,
        "scatterplot": 1,
        "numeric features": 1,
        "simple line graph": 1,
        "uci machine learning": 1,
        "file contents": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1
    },
    "least squares minimization": {
        "gradient ascent": 2,
        "fudge factor": 2,
        "signature": 2,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "mle": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1
    },
    "moral equivalent": {
        "gradient ascent": 2,
        "fudge factor": 2,
        "signature": 2,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "mle": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1
    },
    "mle solution": {
        "gradient ascent": 2,
        "fudge factor": 2,
        "signature": 2,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "mle": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1
    },
    "numerical optimization procedures": {
        "gradient ascent": 2,
        "fudge factor": 2,
        "signature": 2,
        "truncated taylor series": 1,
        "scalar function": 1,
        "taylor approximation": 1,
        "mle": 1,
        "step iteration variable": 1,
        "column vector": 1,
        "matrix thetas": 1,
        "code skeleton": 1,
        "gradient ascent procedure": 1,
        "gradient ascent trajectory": 1,
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1
    },
    "logisticregression": {
        "flight delay prediction": 3,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "dummified prestige": {
        "flight delay prediction": 3,
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "trajectory optimization": {
        "underactuated system": 2,
        "degrees of freedom": 2,
        "lateral movement": 2,
        "coordinate system": 2,
        "helper functions": 2,
        "stable final state": 2,
        "pendulum": 2,
        "unstable equilibrium state": 2,
        "linear quadratic regulator": 2,
        "optimal feedback gain": 2,
        "unstable equilibrium state vector": 2,
        "lqr solver": 1,
        "q": 1,
        "lqr": 1
    },
    "matrices solutions": {
        "matrix constructors": 6,
        "matrices": 4,
        "analytic function": 2,
        "diagonalizable matrix": 2,
        "advanced methods": 1,
        "identity matrix": 1,
        "square matrix": 1,
        "power series formula": 1,
        "diagonal matrix": 1,
        "square matrices": 1,
        "diagonalizable": 1,
        "eigenvals": 1,
        "e": 1,
        "diagonalize": 1,
        "matrix slicing": 1
    },
    "measurements": {
        "2d numpy array": 5,
        "values attribute": 5,
        "imports": 4,
        "scaler": 3,
        "couponcode": 2,
        "video lectures": 2,
        "udemy": 2,
        "kmeans": 2
    },
    "asingle fish": {
        "2d numpy array": 5,
        "values attribute": 5,
        "imports": 4,
        "scaler": 3,
        "couponcode": 2,
        "video lectures": 2,
        "udemy": 2,
        "kmeans": 2
    },
    "standard deviations": {
        "pandas manipulations": 2,
        "data format": 2,
        "euclidean distance": 2,
        "knn classifier": 2,
        "distance function": 2,
        "knn algorithm": 2,
        "mean windspeed": 2,
        "gene ids": 1,
        "gene id version number": 1,
        "gencode": 1,
        "function predict": 1,
        "predicted class value": 1,
        "nearestneighborsclassifier": 1,
        "function distance": 1,
        "test data": 1,
        "sk": 1,
        "image": 1,
        "knn process": 1
    },
    "unordered integral values": {
        "numerical data frame": 2,
        "unordered categorical values": 2,
        "pandas method": 2,
        "logistic classifier": 2,
        "pandas data frame method": 2,
        "categorical features": 2,
        "integral value encoding": 2,
        "pandas histogram methods": 2,
        "data exploration": 2,
        "numpy library": 2,
        "naive bayes predictor": 2,
        "test data": 2,
        "naive bayes classifier": 1
    },
    "function": {
        "review data set": 2,
        "word vector": 2,
        "learning rate loss": 2,
        "training method": 2,
        "network error": 2,
        "activation function": 2,
        "hidden layers": 2,
        "batch size": 2,
        "10000 element long vectors": 2,
        "stochastic gradient descent": 2,
        "connected layer": 2,
        "slicing": 1,
        "centered difference": 1,
        "relative error": 1
    },
    "lassocv()": {
        "colored image": 8,
        "train set": 8,
        "lassocv": 5,
        "fine tuning": 2,
        "parameter tuning": 2
    },
    "ridgecv()": {
        "colored image": 8,
        "train set": 8,
        "lassocv": 5,
        "fine tuning": 2,
        "parameter tuning": 2
    },
    "knn import": {
        "knn model": 16,
        "predict method": 5,
        "confusion matrix": 4
    },
    "variance": {
        "window parameter": 3,
        "rolling mean": 3,
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1,
        "pandas methods": 1,
        "compute variance": 1,
        "compute standard deviation": 1
    },
    "calls dataframe": {
        "fraud crimes": 2,
        "pandas bar plot": 2,
        "interquartile range": 2,
        "aborn": 2,
        "crime type": 2,
        "pandas boxplot": 2,
        "seaborn boxplot": 2,
        "countplot": 2,
        "answer3b": 2,
        "noise violation": 2,
        "coolindex": 1,
        "vertical bar plot": 1,
        "noise violation calls": 1,
        "calls dataframe": 1,
        "eventtm": 1
    },
    "exploratory analysis plan": {
        "gpa": 4,
        "gre": 4,
        "python libraries": 2,
        "summary table": 2,
        "drop data points": 2,
        "missing data": 2,
        "count()": 2,
        "dropna()": 2,
        "box plots": 2,
        "outliers": 1,
        "median": 1,
        "distribution": 1
    },
    "normal distributions": {
        "dbscan": 2,
        "scaling": 1,
        "iris data set": 1,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "regression": 1,
        "iris data": 1,
        "final classification": 1,
        "supervised machine learning": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1
    },
    "stellar light curves": {
        "dbscan": 2,
        "scaling": 1,
        "iris data set": 1,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "regression": 1,
        "iris data": 1,
        "final classification": 1,
        "supervised machine learning": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1
    },
    "mira variables": {
        "dbscan": 2,
        "scaling": 1,
        "iris data set": 1,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "regression": 1,
        "iris data": 1,
        "final classification": 1,
        "supervised machine learning": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1
    },
    "clustering results": {
        "dbscan": 2,
        "scaling": 1,
        "iris data set": 1,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "regression": 1,
        "iris data": 1,
        "final classification": 1,
        "supervised machine learning": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1
    },
    "contact binaries": {
        "dbscan": 2,
        "scaling": 1,
        "iris data set": 1,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "regression": 1,
        "iris data": 1,
        "final classification": 1,
        "supervised machine learning": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1
    },
    "consonants": {
        "regexes": 3,
        "challenge 7": 2,
        "challenge 6": 2,
        "regular expression": 2,
        "character classes": 2,
        "regex": 2,
        "regular expressions": 1,
        "match object": 1,
        "pattern object": 1,
        "us phone number": 1,
        "area code": 1,
        "regular expression syntax": 1,
        "challenge 14": 1,
        "metacharacters": 1,
        "parentheses": 1,
        "challenge 13": 1,
        "uring group skills": 1,
        "non-": 1
    },
    "6": {
        "regexes": 3,
        "challenge 7": 2,
        "challenge 6": 2,
        "regular expression": 2,
        "character classes": 2,
        "regex": 2,
        "regular expressions": 1,
        "match object": 1,
        "pattern object": 1,
        "us phone number": 1,
        "area code": 1,
        "regular expression syntax": 1,
        "challenge 14": 1,
        "metacharacters": 1,
        "parentheses": 1,
        "challenge 13": 1,
        "uring group skills": 1,
        "non-": 1
    },
    "outcome": {
        "train set": 3,
        "cross products": 3,
        "polynomial features extraction": 3,
        "optimal weights": 3,
        "multiple linear regression": 3,
        "polynomal expansion function": 3,
        "first babies": 1,
        "statistical significance": 1,
        "false negative rate": 1,
        "nsfg data": 1,
        "hypothesis test": 1,
        "random noise": 1,
        "noise level": 1
    },
    "countries": {
        "olympic sports": 2,
        "weighted average": 2,
        "search interest": 2,
        "worldwide popularity": 1,
        "populations": 1,
        "census population table": 1,
        "search interest table": 1,
        "population": 1,
        "volleyball": 1,
        "interest": 1,
        "netherlands": 1,
        "china": 1,
        "global search interest": 1,
        "global population": 1,
        "india": 1,
        "group by": 1,
        "sql": 1,
        "population weights": 1,
        "pandas dataframes": 1,
        "ranking": 1,
        "indicators": 1,
        "wdidata": 1
    },
    "gensim": {
        "word vectors": 2,
        "word vector": 2,
        "leadership": 2,
        "word embeddings": 1,
        "empty cells": 1,
        "word relationships": 1,
        "gensim": 1,
        "cosine similarity": 1,
        "president": 1,
        "similarity score": 1,
        "smilarity score": 1,
        "cosine distance": 1,
        "mean vector": 1,
        "vector math": 1,
        "semantics": 1,
        "output vectors": 1,
        "queen": 1,
        "manliness": 1,
        "word vector king": 1,
        "feminine attribute": 1,
        "royalty": 1,
        "standardize x": 1
    },
    "continous bag of words model": {
        "word vectors": 2,
        "word vector": 2,
        "leadership": 2,
        "word embeddings": 1,
        "empty cells": 1,
        "word relationships": 1,
        "gensim": 1,
        "cosine similarity": 1,
        "president": 1,
        "similarity score": 1,
        "smilarity score": 1,
        "cosine distance": 1,
        "mean vector": 1,
        "vector math": 1,
        "semantics": 1,
        "output vectors": 1,
        "queen": 1,
        "manliness": 1,
        "word vector king": 1,
        "feminine attribute": 1,
        "royalty": 1,
        "standardize x": 1
    },
    "2vec": {
        "word vectors": 2,
        "word vector": 2,
        "leadership": 2,
        "word embeddings": 1,
        "empty cells": 1,
        "word relationships": 1,
        "gensim": 1,
        "cosine similarity": 1,
        "president": 1,
        "similarity score": 1,
        "smilarity score": 1,
        "cosine distance": 1,
        "mean vector": 1,
        "vector math": 1,
        "semantics": 1,
        "output vectors": 1,
        "queen": 1,
        "manliness": 1,
        "word vector king": 1,
        "feminine attribute": 1,
        "royalty": 1,
        "standardize x": 1
    },
    "gensim library": {
        "word vectors": 2,
        "word vector": 2,
        "leadership": 2,
        "word embeddings": 1,
        "empty cells": 1,
        "word relationships": 1,
        "gensim": 1,
        "cosine similarity": 1,
        "president": 1,
        "similarity score": 1,
        "smilarity score": 1,
        "cosine distance": 1,
        "mean vector": 1,
        "vector math": 1,
        "semantics": 1,
        "output vectors": 1,
        "queen": 1,
        "manliness": 1,
        "word vector king": 1,
        "feminine attribute": 1,
        "royalty": 1,
        "standardize x": 1
    },
    "embeddings": {
        "word vectors": 2,
        "word vector": 2,
        "leadership": 2,
        "word embeddings": 1,
        "empty cells": 1,
        "word relationships": 1,
        "gensim": 1,
        "cosine similarity": 1,
        "president": 1,
        "similarity score": 1,
        "smilarity score": 1,
        "cosine distance": 1,
        "mean vector": 1,
        "vector math": 1,
        "semantics": 1,
        "output vectors": 1,
        "queen": 1,
        "manliness": 1,
        "word vector king": 1,
        "feminine attribute": 1,
        "royalty": 1,
        "standardize x": 1
    },
    "linear system": {
        "number": 3,
        "linear systems": 2,
        "single continuous variable": 1,
        "scalar function": 1,
        "taylor series expansion": 1,
        "intu": 1,
        "underscored factor": 1,
        "single variable": 1,
        "perturbation theory": 1,
        "intrinsic difficulty": 1,
        "triangle inequality": 1,
        "sensitivity": 1,
        "linear algebraic identities": 1,
        "perturbations": 1,
        "perturbation": 1,
        "perturbed solution": 1,
        "condition number": 1,
        "maximum relative error": 1,
        "notional value": 1,
        "machine precision": 1,
        "computational problems": 1,
        "data matrix": 1
    },
    "perturbation theory": {
        "number": 3,
        "linear systems": 2,
        "single continuous variable": 1,
        "scalar function": 1,
        "taylor series expansion": 1,
        "intu": 1,
        "underscored factor": 1,
        "single variable": 1,
        "perturbation theory": 1,
        "intrinsic difficulty": 1,
        "triangle inequality": 1,
        "sensitivity": 1,
        "linear algebraic identities": 1,
        "perturbations": 1,
        "perturbation": 1,
        "perturbed solution": 1,
        "condition number": 1,
        "maximum relative error": 1,
        "notional value": 1,
        "machine precision": 1,
        "computational problems": 1,
        "data matrix": 1
    },
    "exercise": {
        "first babies": 2,
        "national survey of family growth": 2,
        "first pregnancies": 1,
        "variable outcome": 1,
        "variable pregordr": 1,
        "formula": 1,
        "quadratic regression": 1,
        "medv": 1,
        "python functions": 1,
        "patsy": 1,
        "dummy variables": 1,
        "categorical variables": 1,
        "tail method": 1,
        "head method": 1,
        "indicators": 1,
        "wdidata": 1,
        "squared exponential distance": 1,
        "green cells": 1,
        "docstring": 1,
        "51st term": 1,
        "infinite representation": 1,
        "formal power series": 1
    },
    "unlabeled test points": {
        "computation time": 7,
        "nearest neighbor algorithm": 5,
        "digit recognition task": 4,
        "speedup": 3,
        "optimization": 2,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1
    },
    "fixed parameters": {
        "computation time": 7,
        "nearest neighbor algorithm": 5,
        "digit recognition task": 4,
        "speedup": 3,
        "optimization": 2,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1
    },
    "nearest neighbor algorithm": {
        "computation time": 7,
        "nearest neighbor algorithm": 5,
        "digit recognition task": 4,
        "speedup": 3,
        "optimization": 2,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1
    },
    "ing": {
        "compressed files": 3,
        "zip archive": 3,
        "uncompressed files": 3,
        "cvlegend": 3,
        "crime events": 3,
        "regular bar plot": 3,
        "countplot": 2,
        "answer3b": 2,
        "noise violation": 2
    },
    "pathlib functionality": {
        "cvlegend": 6,
        "crime events": 3,
        "barh plot type": 3,
        "value counts": 3,
        "regular bar plot": 3,
        "countplot": 2,
        "answer3b": 2,
        "noise violation": 2
    },
    "groupby method": {
        "cvlegend": 6,
        "crime events": 3,
        "barh plot type": 3,
        "value counts": 3,
        "regular bar plot": 3,
        "countplot": 2,
        "answer3b": 2,
        "noise violation": 2
    },
    "docsting": {
        "rug plot": 8,
        "kde": 6,
        "optimal kde bandwidth": 6,
        "random jitter": 4
    },
    "python type command": {
        "postal code": 3,
        "zip code": 2,
        "missing zip codes": 2,
        "businesses": 1,
        "fillna": 1,
        "missing zip": 1,
        "null postal codes": 1,
        "null postal code": 1,
        "extended zip codes": 1,
        "extended postal codes": 1,
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94602": 1,
        "94545": 1,
        "business name": 1,
        "zip": 1,
        "zip codes": 1,
        "search engine": 1
    },
    "crash course review exercises": {
        "numpy matrix": 8,
        "andas": 4,
        "random integers": 4,
        "upper limit": 4,
        "colorbar": 4
    },
    "table": {
        "lambdas": 2,
        "anonymous functions": 2,
        "graph cycles": 2,
        "lambda expression": 2,
        "ellipses": 2,
        "recursion": 2,
        "null hypothesis": 2,
        "double100": 1,
        "integers": 1,
        "extratree": 1,
        "decision rules": 1,
        "decisiontreeregression": 1,
        "decision trees": 1,
        "decisiontreeregressor": 1,
        "important features": 1,
        "importance weight": 1,
        "validation data": 1
    },
    "statistical calculations": {
        "lstat": 3,
        "constant term": 2,
        "house value data": 1,
        "house value": 1,
        "rm variable": 1,
        "predicted value": 1,
        "dependent variable": 1,
        "predicted values": 1,
        "rm regressor": 1,
        "variable combinations": 1,
        "exercise": 1,
        "formula": 1,
        "quadratic regression": 1,
        "medv": 1,
        "python functions": 1,
        "patsy": 1,
        "dummy variables": 1,
        "categorical variables": 1,
        "patsy formulas": 1,
        "crim": 1,
        "fit models": 1
    },
    "embedded systems": {
        "element matrix": 2,
        "training characters": 2,
        "character data": 2,
        "training samples": 2,
        "test data": 2,
        "character labels": 2,
        "integers": 2,
        "euclidean distance": 2,
        "feature vectors": 1,
        "cosine distance": 1,
        "classify": 1,
        "nearest neighbour classifier": 1,
        "alaphabet": 1,
        "divergence function": 1,
        "variances": 1,
        "character pairs": 1
    },
    "character recognition task": {
        "element matrix": 2,
        "training characters": 2,
        "character data": 2,
        "training samples": 2,
        "test data": 2,
        "character labels": 2,
        "integers": 2,
        "euclidean distance": 2,
        "feature vectors": 1,
        "cosine distance": 1,
        "classify": 1,
        "nearest neighbour classifier": 1,
        "alaphabet": 1,
        "divergence function": 1,
        "variances": 1,
        "character pairs": 1
    },
    "mat": {
        "element matrix": 2,
        "training characters": 2,
        "character data": 2,
        "training samples": 2,
        "test data": 2,
        "character labels": 2,
        "integers": 2,
        "euclidean distance": 2,
        "feature vectors": 1,
        "cosine distance": 1,
        "classify": 1,
        "nearest neighbour classifier": 1,
        "alaphabet": 1,
        "divergence function": 1,
        "variances": 1,
        "character pairs": 1
    },
    "matlab files": {
        "element matrix": 2,
        "training characters": 2,
        "character data": 2,
        "training samples": 2,
        "test data": 2,
        "character labels": 2,
        "integers": 2,
        "euclidean distance": 2,
        "feature vectors": 1,
        "cosine distance": 1,
        "classify": 1,
        "nearest neighbour classifier": 1,
        "alaphabet": 1,
        "divergence function": 1,
        "variances": 1,
        "character pairs": 1
    },
    "hadoop": {
        "regular expression": 2,
        "pattern matching": 2,
        "string matching": 2,
        "search pattern": 2,
        "regular expressions": 2,
        "gzip module": 2,
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1
    },
    "streaming": {
        "array analysis": 2,
        "estimate travel times": 2,
        "seismic phases": 2,
        "cross correlation routines": 2,
        "manipulation filtering": 2,
        "event detection": 2,
        "plot ray paths": 2,
        "inventory": 2,
        "event metadata": 2,
        "pling": 1,
        "ampling": 1,
        "fdsn server": 1,
        "wildcard": 1,
        "waveform data": 1,
        "channel code": 1
    },
    "test size": {
        "tfidfvectorizer": 2,
        "english stop words": 2,
        "minimum feature term": 2,
        "bigrams": 2,
        "maximum frequency": 2,
        "snowball": 2,
        "trigrams": 2,
        "nowball": 2,
        "kneighborsclassifier": 2,
        "stemming algorithm": 2,
        "unigrams": 2,
        "tokenize function": 2
    },
    "html page": {
        "html": 2,
        "google chrome": 2,
        "inspect": 2,
        "commas": 2,
        "tag objects": 2,
        "python string": 2,
        "restaurant names": 2,
        "beautiful soup": 2,
        "tag object": 2,
        "restaurant locations": 2,
        "barmini": 2,
        "search results": 2
    },
    "directed graph": {
        "networkx": 6,
        "drawing function": 6,
        "directed graph": 3,
        "matplotlib axes": 3,
        "ax parameter": 3,
        "multigraph": 3
    },
    "even integer node": {
        "networkx": 6,
        "drawing function": 6,
        "directed graph": 3,
        "matplotlib axes": 3,
        "ax parameter": 3,
        "multigraph": 3
    },
    "tree diagram": {
        "predicted probability": 2,
        "response variable": 2,
        "decision tree algorithm": 2,
        "classification error rate": 2,
        "gini index": 2,
        "mean response value": 1,
        "observation": 1,
        "tree diagram": 1,
        "predictive feature": 1,
        "high": 1,
        "high school graduation rate": 1,
        "high population density": 1,
        "maximum value": 1,
        "splitting criteria": 1,
        "classification trees": 1,
        "node purity": 1,
        "titanic": 1,
        "sex": 1,
        "age": 1
    },
    "pagerank": {
        "vertex ids": 2,
        "vertex id": 2,
        "sql queries": 1,
        "dataset": 1,
        "political blogs dataset": 1,
        "sqlite database": 1,
        "schema": 1,
        "maximum value": 1,
        "minimum value": 1,
        "vertex table": 1,
        "sql": 1,
        "test code": 1,
        "sanity check": 1,
        "leaning fields": 1,
        "outdegrees": 1,
        "indegrees": 1,
        "targeturl": 1,
        "sourceurl": 1,
        "targetleaning": 1,
        "pandas data frame": 1,
        "sourceleaning": 1,
        "source vertex": 1
    },
    "pagerank algorithm": {
        "vertex ids": 2,
        "vertex id": 2,
        "sql queries": 1,
        "dataset": 1,
        "political blogs dataset": 1,
        "sqlite database": 1,
        "schema": 1,
        "maximum value": 1,
        "minimum value": 1,
        "vertex table": 1,
        "sql": 1,
        "test code": 1,
        "sanity check": 1,
        "leaning fields": 1,
        "outdegrees": 1,
        "indegrees": 1,
        "targeturl": 1,
        "sourceurl": 1,
        "targetleaning": 1,
        "pandas data frame": 1,
        "sourceleaning": 1,
        "source vertex": 1
    },
    "political blogs": {
        "vertex ids": 2,
        "vertex id": 2,
        "sql queries": 1,
        "dataset": 1,
        "political blogs dataset": 1,
        "sqlite database": 1,
        "schema": 1,
        "maximum value": 1,
        "minimum value": 1,
        "vertex table": 1,
        "sql": 1,
        "test code": 1,
        "sanity check": 1,
        "leaning fields": 1,
        "outdegrees": 1,
        "indegrees": 1,
        "targeturl": 1,
        "sourceurl": 1,
        "targetleaning": 1,
        "pandas data frame": 1,
        "sourceleaning": 1,
        "source vertex": 1
    },
    "factorials": {
        "finger exercise solution": 2,
        "multiplication rule": 1,
        "factorial": 1,
        "finger exercise 1": 1,
        "3 digit numbers": 1,
        "numeral": 1,
        "product rule": 1,
        "combination formula": 1,
        "non-distinct balls": 1,
        "gaussian trick": 1,
        "counting": 1,
        "coin tossing": 1,
        "coin toss": 1,
        "bernoulli scheme": 1,
        "scipy stats library": 1,
        "probability distributions": 1,
        "discrete random variables": 1,
        "discrete distributions": 1,
        "fair coin": 1,
        "stats": 1,
        "100": 1,
        "scipy": 1,
        "coin flips": 1
    },
    "amazon india": {
        "medoids": 4,
        "k means algorithm": 3,
        "k medoids algorithm": 3,
        "squared errors": 3,
        "docstrings": 3,
        "metropolitans": 2,
        "squared l2 distances": 2,
        "clustering algorithm": 1,
        "distortion metric": 1,
        "objective function": 1
    },
    "delivery system": {
        "medoids": 4,
        "k means algorithm": 3,
        "k medoids algorithm": 3,
        "squared errors": 3,
        "docstrings": 3,
        "metropolitans": 2,
        "squared l2 distances": 2,
        "clustering algorithm": 1,
        "distortion metric": 1,
        "objective function": 1
    },
    "delivery network": {
        "medoids": 4,
        "k means algorithm": 3,
        "k medoids algorithm": 3,
        "squared errors": 3,
        "docstrings": 3,
        "metropolitans": 2,
        "squared l2 distances": 2,
        "clustering algorithm": 1,
        "distortion metric": 1,
        "objective function": 1
    },
    "delivery medoids": {
        "medoids": 4,
        "k means algorithm": 3,
        "k medoids algorithm": 3,
        "squared errors": 3,
        "docstrings": 3,
        "metropolitans": 2,
        "squared l2 distances": 2,
        "clustering algorithm": 1,
        "distortion metric": 1,
        "objective function": 1
    },
    "median value": {
        "coloumn": 5,
        "hand calculations": 5,
        "median": 5,
        "interquartile range": 2,
        "quartiles": 2,
        "outlier": 1,
        "pandas methods": 1,
        "compute variance": 1,
        "compute standard deviation": 1
    },
    "minimum value": {
        "coloumn": 5,
        "hand calculations": 5,
        "median": 5,
        "interquartile range": 2,
        "quartiles": 2,
        "outlier": 1,
        "pandas methods": 1,
        "compute variance": 1,
        "compute standard deviation": 1
    },
    "typeerror": {
        "hash map": 2,
        "phonebook": 2,
        "programming": 2,
        "slicing": 2,
        "keyword argument": 2,
        "centered difference": 1,
        "relative error": 1,
        "while loop": 1,
        "gcd": 1,
        "euclidean algorithm": 1,
        "google books": 1,
        "modulo operator": 1,
        "positive integers": 1,
        "positional arguments": 1,
        "recursion": 1,
        "positional argument": 1,
        "arange": 1,
        "prime numbers": 1
    },
    "javascript object notation": {
        "json file": 4,
        "requests library": 4,
        "json": 3,
        "tihs dataset": 2,
        "http get request": 2,
        "nyt article api": 2,
        "results page": 1,
        "search parameters": 1,
        "stack overflow": 1,
        "stackoverflow": 1,
        "working email addresses": 1,
        "test cell": 1
    },
    "part of speech": {
        "lewis carroll": 4,
        "pointwise mutual information": 3,
        "bigram collocations": 3,
        "tag parameter": 2,
        "defaulttagger": 2,
        "perceptrontagger": 1,
        "part of speech tagging": 1,
        "tag unigrams": 1,
        "unigramtagger": 1,
        "word tokenizer": 1,
        "tagged sentence": 1,
        "penn treebank": 1,
        "default tagger": 1,
        "penn treebank corpus tagger": 1
    },
    "tagging": {
        "lewis carroll": 4,
        "pointwise mutual information": 3,
        "bigram collocations": 3,
        "tag parameter": 2,
        "defaulttagger": 2,
        "perceptrontagger": 1,
        "part of speech tagging": 1,
        "tag unigrams": 1,
        "unigramtagger": 1,
        "word tokenizer": 1,
        "tagged sentence": 1,
        "penn treebank": 1,
        "default tagger": 1,
        "penn treebank corpus tagger": 1
    },
    "average order size": {
        "function split": 4,
        "bar chart": 4,
        "group orders": 3,
        "average order amount": 3,
        "error bars": 2,
        "average order": 2,
        "error capsize": 2,
        "standard deviations": 2,
        "titel": 1
    },
    "orders": {
        "function split": 4,
        "bar chart": 4,
        "group orders": 3,
        "average order amount": 3,
        "error bars": 2,
        "average order": 2,
        "error capsize": 2,
        "standard deviations": 2,
        "titel": 1
    },
    "dataframe orders": {
        "function split": 4,
        "bar chart": 4,
        "group orders": 3,
        "average order amount": 3,
        "error bars": 2,
        "average order": 2,
        "error capsize": 2,
        "standard deviations": 2,
        "titel": 1
    },
    "file formats": {
        "lowpass filter": 4,
        "corner frequency": 4,
        "preview": 4,
        "gaussian noise": 3,
        "spectrograms": 2,
        "spectrogram plot": 2,
        "logarithmic frequency scale": 2,
        "tapering": 1,
        "lowpass": 1
    },
    "triggering algorithms": {
        "lowpass filter": 4,
        "corner frequency": 4,
        "preview": 4,
        "gaussian noise": 3,
        "spectrograms": 2,
        "spectrogram plot": 2,
        "logarithmic frequency scale": 2,
        "tapering": 1,
        "lowpass": 1
    },
    "builtin methods": {
        "lowpass filter": 4,
        "corner frequency": 4,
        "preview": 4,
        "gaussian noise": 3,
        "spectrograms": 2,
        "spectrogram plot": 2,
        "logarithmic frequency scale": 2,
        "tapering": 1,
        "lowpass": 1
    },
    "station information": {
        "lowpass filter": 4,
        "corner frequency": 4,
        "preview": 4,
        "gaussian noise": 3,
        "spectrograms": 2,
        "spectrogram plot": 2,
        "logarithmic frequency scale": 2,
        "tapering": 1,
        "lowpass": 1
    },
    "trace summary": {
        "lowpass filter": 4,
        "corner frequency": 4,
        "preview": 4,
        "gaussian noise": 3,
        "spectrograms": 2,
        "spectrogram plot": 2,
        "logarithmic frequency scale": 2,
        "tapering": 1,
        "lowpass": 1
    },
    "trainingset": {
        "likelihood term": 2,
        "probability": 2,
        "maximum a posteriori parameter": 2,
        "map solution": 2,
        "maximum a posteriori solution": 2,
        "decision function": 2,
        "weights": 2,
        "mlp": 2,
        "hidden layer": 2,
        "non-linear activation function": 2,
        "validation": 1,
        "trainingset": 1,
        "sgd iterations": 1
    },
    "grays": {
        "command prompt": 2,
        "tesseract library": 2,
        "ocr": 2,
        "reading errors": 2,
        "tesseract": 2,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1
    },
    "first": {
        "command prompt": 2,
        "tesseract library": 2,
        "ocr": 2,
        "reading errors": 2,
        "tesseract": 2,
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1
    },
    "network management systems": {
        "range": 2,
        "obspy documentation": 2,
        "depth range": 2,
        "magnitude range": 2,
        "instrument response": 2,
        "matching channels": 2,
        "matching stations": 2,
        "instrument response information": 2,
        "waveform requests": 2,
        "instrument correction": 2,
        "narrow angular distance": 1,
        "search criteria": 1,
        "vertical 1 hz stream": 1
    },
    "github username": {
        "student id number": 5,
        "github username": 5,
        "email address": 4,
        "python dictionary comprehension": 2,
        "zip function": 2,
        "iterable": 1,
        "enumerate function": 1,
        "anaconda": 1,
        "data science modules": 1,
        "course id": 1
    },
    "spark mllib": {
        "depdelay": 3,
        "rdd code": 3,
        "arrival delay": 3,
        "arrdealy": 2,
        "labeledpoint": 2,
        "departure delay": 2,
        "rdealy": 1,
        "arrdelay column": 1,
        "faa": 1,
        "depdelay column": 1,
        "binary labels": 1,
        "logisticregression": 1,
        "default parameters": 1,
        "iterations": 1
    },
    "kernel function": {
        "2d toy dataset": 2,
        "linearly separable dataset": 2,
        "covariance matrix": 2,
        "multivariate gaussian distribution": 2,
        "kernel matrix": 2,
        "linear kernel": 2,
        "2d dataset": 2,
        "optimization problem": 1,
        "maximum margin problem": 1,
        "quadratic programming problem": 1,
        "support vectors": 1,
        "quadratic function": 1,
        "svm": 1,
        "decision boundary": 1,
        "lagrange multipliers": 1,
        "inequality constraints": 1
    },
    "bscan": {
        "dbscan": 2,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "regression": 1,
        "iris data": 1,
        "final classification": 1,
        "supervised machine learning": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1
    },
    "dbscan": {
        "dbscan": 2,
        "nayseyer": 1,
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "regression": 1,
        "iris data": 1,
        "final classification": 1,
        "supervised machine learning": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1
    },
    "network analysis": {
        "normalized weight": 5,
        "minimum count": 3,
        "networkx graph": 3,
        "int value": 3,
        "selection": 2,
        "counting": 2,
        "spring layout": 2,
        "common movie interests": 1,
        "common movie interest": 1,
        "common": 1
    },
    "ord": {
        "normalized weight": 5,
        "minimum count": 3,
        "networkx graph": 3,
        "int value": 3,
        "selection": 2,
        "counting": 2,
        "spring layout": 2,
        "common movie interests": 1,
        "common movie interest": 1,
        "common": 1
    },
    "ord airport": {
        "normalized weight": 5,
        "minimum count": 3,
        "networkx graph": 3,
        "int value": 3,
        "selection": 2,
        "counting": 2,
        "spring layout": 2,
        "common movie interests": 1,
        "common movie interest": 1,
        "common": 1
    },
    "airline connections": {
        "normalized weight": 5,
        "minimum count": 3,
        "networkx graph": 3,
        "int value": 3,
        "selection": 2,
        "counting": 2,
        "spring layout": 2,
        "common movie interests": 1,
        "common movie interest": 1,
        "common": 1
    },
    "integer position": {
        "new york": 2,
        "nevada": 2,
        "flower type": 2,
        "petal width": 1,
        "virginia flowers": 1,
        "sklearn package": 1,
        "versicolour": 1,
        "petal length": 1,
        "virginica": 1,
        "sepal length": 1,
        "setosa": 1,
        "target": 1,
        "count row": 1,
        "categorical variables": 1,
        "groupby function": 1,
        "mean stats": 1,
        "normalization": 1,
        "pairplot() function": 1,
        "scatterplot matrix": 1,
        "predictor variables": 1
    },
    "classification error rate": {
        "titanic": 3,
        "sex": 3,
        "age": 3,
        "response variable": 3,
        "decision tree algorithm": 2,
        "classification error rate": 2,
        "gini index": 2,
        "maximum value": 1,
        "splitting criteria": 1,
        "predicted probability": 1,
        "classification trees": 1,
        "node purity": 1
    },
    "command mode": {
        "edit mode": 3,
        "command mode": 2,
        "code cells": 2,
        "python code": 2,
        "ipython": 1,
        "markdown cells": 1,
        "cells": 1,
        "print function": 1,
        "parentheses": 1,
        "kernel": 1,
        "python interpreter": 1,
        "kernel state": 1,
        "magics": 1,
        "ipython commands": 1,
        "keyboard shortcuts": 1,
        "user interface tour": 1,
        "coding assignments": 1,
        "test cells": 1
    },
    "contract work": {
        "jointplot": 2,
        "testing sets": 2,
        "ecommerce customers csv file": 1,
        "yearly amount spent columns": 1,
        "time on website": 1,
        "2d hex bin plot": 1,
        "yearly amount spent": 1,
        "correlated feature": 1,
        "linear model plot": 1,
        "linearregression": 1,
        "l": 1,
        "scatterplot": 1,
        "predicted values": 1,
        "mean absolute error": 1,
        "root mean squared error": 1,
        "wikipedia": 1,
        "explained variance score": 1,
        "seaborn distplot": 1,
        "residuals": 1,
        "mobile app": 1,
        "website development": 1
    },
    "clothing advice sessions": {
        "jointplot": 2,
        "testing sets": 2,
        "ecommerce customers csv file": 1,
        "yearly amount spent columns": 1,
        "time on website": 1,
        "2d hex bin plot": 1,
        "yearly amount spent": 1,
        "correlated feature": 1,
        "linear model plot": 1,
        "linearregression": 1,
        "l": 1,
        "scatterplot": 1,
        "predicted values": 1,
        "mean absolute error": 1,
        "root mean squared error": 1,
        "wikipedia": 1,
        "explained variance score": 1,
        "seaborn distplot": 1,
        "residuals": 1,
        "mobile app": 1,
        "website development": 1
    },
    "credit card numbers": {
        "jointplot": 2,
        "testing sets": 2,
        "ecommerce customers csv file": 1,
        "yearly amount spent columns": 1,
        "time on website": 1,
        "2d hex bin plot": 1,
        "yearly amount spent": 1,
        "correlated feature": 1,
        "linear model plot": 1,
        "linearregression": 1,
        "l": 1,
        "scatterplot": 1,
        "predicted values": 1,
        "mean absolute error": 1,
        "root mean squared error": 1,
        "wikipedia": 1,
        "explained variance score": 1,
        "seaborn distplot": 1,
        "residuals": 1,
        "mobile app": 1,
        "website development": 1
    },
    "mobile app": {
        "jointplot": 2,
        "testing sets": 2,
        "ecommerce customers csv file": 1,
        "yearly amount spent columns": 1,
        "time on website": 1,
        "2d hex bin plot": 1,
        "yearly amount spent": 1,
        "correlated feature": 1,
        "linear model plot": 1,
        "linearregression": 1,
        "l": 1,
        "scatterplot": 1,
        "predicted values": 1,
        "mean absolute error": 1,
        "root mean squared error": 1,
        "wikipedia": 1,
        "explained variance score": 1,
        "seaborn distplot": 1,
        "residuals": 1,
        "mobile app": 1,
        "website development": 1
    },
    "customer data": {
        "jointplot": 2,
        "testing sets": 2,
        "ecommerce customers csv file": 1,
        "yearly amount spent columns": 1,
        "time on website": 1,
        "2d hex bin plot": 1,
        "yearly amount spent": 1,
        "correlated feature": 1,
        "linear model plot": 1,
        "linearregression": 1,
        "l": 1,
        "scatterplot": 1,
        "predicted values": 1,
        "mean absolute error": 1,
        "root mean squared error": 1,
        "wikipedia": 1,
        "explained variance score": 1,
        "seaborn distplot": 1,
        "residuals": 1,
        "mobile app": 1,
        "website development": 1
    },
    "ecommerce company": {
        "jointplot": 2,
        "testing sets": 2,
        "ecommerce customers csv file": 1,
        "yearly amount spent columns": 1,
        "time on website": 1,
        "2d hex bin plot": 1,
        "yearly amount spent": 1,
        "correlated feature": 1,
        "linear model plot": 1,
        "linearregression": 1,
        "l": 1,
        "scatterplot": 1,
        "predicted values": 1,
        "mean absolute error": 1,
        "root mean squared error": 1,
        "wikipedia": 1,
        "explained variance score": 1,
        "seaborn distplot": 1,
        "residuals": 1,
        "mobile app": 1,
        "website development": 1
    },
    "uniquecarrier columns": {
        "uniquecarrier depdelay origin": 4,
        "dayofweek": 4,
        "departure delay": 4,
        "unit tests": 4,
        "binary indicators": 2,
        "intercept": 2,
        "float64": 1,
        "int64": 1
    },
    "cutoff parameter": {
        "uniquecarrier depdelay origin": 4,
        "dayofweek": 4,
        "departure delay": 4,
        "unit tests": 4,
        "binary indicators": 2,
        "intercept": 2,
        "float64": 1,
        "int64": 1
    },
    "depdelay": {
        "uniquecarrier depdelay origin": 4,
        "dayofweek": 4,
        "departure delay": 4,
        "unit tests": 4,
        "binary indicators": 2,
        "intercept": 2,
        "float64": 1,
        "int64": 1
    },
    "flight delay prediction": {
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "delayed flights": {
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "flight status column": {
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "predictive analytics": {
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "flight statuses": {
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "explantory variables": {
        "united": 2,
        "us airways": 2,
        "continental express": 2,
        "continental": 2,
        "american eagle": 2,
        "delta mq": 2,
        "atlantic coast": 2,
        "comair": 2,
        "bar plot": 2,
        "flight status": 2,
        "crosstab": 2
    },
    "minimization": {
        "cryptocurrencies": 2,
        "ml problem": 2,
        "gradient descent": 2,
        "closing price": 2,
        "exercise": 2,
        "data points": 2,
        "quantity of interest": 2,
        "ethereum": 2,
        "bitcoin": 2,
        "scatterplots": 2,
        "student task": 2
    },
    "gradient descent": {
        "cryptocurrencies": 2,
        "ml problem": 2,
        "gradient descent": 2,
        "closing price": 2,
        "exercise": 2,
        "data points": 2,
        "quantity of interest": 2,
        "ethereum": 2,
        "bitcoin": 2,
        "scatterplots": 2,
        "student task": 2
    },
    "etherum": {
        "cryptocurrencies": 2,
        "ml problem": 2,
        "gradient descent": 2,
        "closing price": 2,
        "exercise": 2,
        "data points": 2,
        "quantity of interest": 2,
        "ethereum": 2,
        "bitcoin": 2,
        "scatterplots": 2,
        "student task": 2
    },
    "data normalization": {
        "cryptocurrencies": 2,
        "ml problem": 2,
        "gradient descent": 2,
        "closing price": 2,
        "exercise": 2,
        "data points": 2,
        "quantity of interest": 2,
        "ethereum": 2,
        "bitcoin": 2,
        "scatterplots": 2,
        "student task": 2
    },
    "feature mapping": {
        "cryptocurrencies": 2,
        "ml problem": 2,
        "gradient descent": 2,
        "closing price": 2,
        "exercise": 2,
        "data points": 2,
        "quantity of interest": 2,
        "ethereum": 2,
        "bitcoin": 2,
        "scatterplots": 2,
        "student task": 2
    },
    "erm": {
        "cryptocurrencies": 2,
        "ml problem": 2,
        "gradient descent": 2,
        "closing price": 2,
        "exercise": 2,
        "data points": 2,
        "quantity of interest": 2,
        "ethereum": 2,
        "bitcoin": 2,
        "scatterplots": 2,
        "student task": 2
    },
    "quantity of interest": {
        "cryptocurrencies": 2,
        "ml problem": 2,
        "gradient descent": 2,
        "closing price": 2,
        "exercise": 2,
        "data points": 2,
        "quantity of interest": 2,
        "ethereum": 2,
        "bitcoin": 2,
        "scatterplots": 2,
        "student task": 2
    },
    "cryptocurrency": {
        "cryptocurrencies": 2,
        "ml problem": 2,
        "gradient descent": 2,
        "closing price": 2,
        "exercise": 2,
        "data points": 2,
        "quantity of interest": 2,
        "ethereum": 2,
        "bitcoin": 2,
        "scatterplots": 2,
        "student task": 2
    },
    "empirical risk": {
        "cryptocurrencies": 2,
        "ml problem": 2,
        "gradient descent": 2,
        "closing price": 2,
        "exercise": 2,
        "data points": 2,
        "quantity of interest": 2,
        "ethereum": 2,
        "bitcoin": 2,
        "scatterplots": 2,
        "student task": 2
    },
    "ethereum": {
        "cryptocurrencies": 2,
        "ml problem": 2,
        "gradient descent": 2,
        "closing price": 2,
        "exercise": 2,
        "data points": 2,
        "quantity of interest": 2,
        "ethereum": 2,
        "bitcoin": 2,
        "scatterplots": 2,
        "student task": 2
    },
    "empirical risk minimization": {
        "cryptocurrencies": 2,
        "ml problem": 2,
        "gradient descent": 2,
        "closing price": 2,
        "exercise": 2,
        "data points": 2,
        "quantity of interest": 2,
        "ethereum": 2,
        "bitcoin": 2,
        "scatterplots": 2,
        "student task": 2
    },
    "blockchains": {
        "cryptocurrencies": 2,
        "ml problem": 2,
        "gradient descent": 2,
        "closing price": 2,
        "exercise": 2,
        "data points": 2,
        "quantity of interest": 2,
        "ethereum": 2,
        "bitcoin": 2,
        "scatterplots": 2,
        "student task": 2
    },
    "multiple features": {
        "width variable": 7,
        "lassocv": 5,
        "colored image": 4,
        "train set": 4,
        "fine tuning": 1,
        "parameter tuning": 1
    },
    "variational lower bound": {
        "multivariate": 10,
        "logvar": 10,
        "hyperparameters": 2
    },
    "reconstruction": {
        "multivariate": 5,
        "logvar": 5,
        "orthonormal basis": 4,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2,
        "hyperparameters": 2
    },
    "apis": {
        "requests library": 4,
        "python libraries": 2,
        "authorization code": 2,
        "new york times api": 2,
        "api": 2,
        "get request": 2,
        "base url": 2,
        "http get request": 2,
        "nyt article api": 2,
        "results page": 1,
        "search parameters": 1
    },
    "json response": {
        "requests library": 4,
        "python libraries": 2,
        "authorization code": 2,
        "new york times api": 2,
        "api": 2,
        "get request": 2,
        "base url": 2,
        "http get request": 2,
        "nyt article api": 2,
        "results page": 1,
        "search parameters": 1
    },
    "application programming interface": {
        "requests library": 4,
        "python libraries": 2,
        "authorization code": 2,
        "new york times api": 2,
        "api": 2,
        "get request": 2,
        "base url": 2,
        "http get request": 2,
        "nyt article api": 2,
        "results page": 1,
        "search parameters": 1
    },
    "webtext corpus": {
        "tokenize": 5,
        "punctuation marks": 3,
        "alphanumerical characters": 3,
        "fileid": 3,
        "nltk corpus": 3,
        "lexical diversity": 2,
        "most common words": 1,
        "most": 1,
        "hapaxes": 1
    },
    "pandas exercises": {
        "credit dataset": 5,
        "dataset": 3,
        "numpy method": 2,
        "statistics table": 2,
        "attribute creditamount": 2,
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "black coloured markers": 1,
        "font size": 1,
        "age": 1,
        "attributes duration": 1
    },
    "key error": {
        "review data set": 2,
        "word vector": 2,
        "learning rate loss": 2,
        "training method": 2,
        "network error": 2,
        "activation function": 2,
        "hidden layers": 2,
        "batch size": 2,
        "10000 element long vectors": 2,
        "stochastic gradient descent": 2,
        "connected layer": 2
    },
    "vocab dictionary": {
        "review data set": 2,
        "word vector": 2,
        "learning rate loss": 2,
        "training method": 2,
        "network error": 2,
        "activation function": 2,
        "hidden layers": 2,
        "batch size": 2,
        "10000 element long vectors": 2,
        "stochastic gradient descent": 2,
        "connected layer": 2
    },
    "word vector": {
        "review data set": 2,
        "word vector": 2,
        "learning rate loss": 2,
        "training method": 2,
        "network error": 2,
        "activation function": 2,
        "hidden layers": 2,
        "batch size": 2,
        "10000 element long vectors": 2,
        "stochastic gradient descent": 2,
        "connected layer": 2
    },
    "word2idx dictionary": {
        "review data set": 2,
        "word vector": 2,
        "learning rate loss": 2,
        "training method": 2,
        "network error": 2,
        "activation function": 2,
        "hidden layers": 2,
        "batch size": 2,
        "10000 element long vectors": 2,
        "stochastic gradient descent": 2,
        "connected layer": 2
    },
    "word2idx": {
        "review data set": 2,
        "word vector": 2,
        "learning rate loss": 2,
        "training method": 2,
        "network error": 2,
        "activation function": 2,
        "hidden layers": 2,
        "batch size": 2,
        "10000 element long vectors": 2,
        "stochastic gradient descent": 2,
        "connected layer": 2
    },
    "ik": {
        "variable name majors": 3,
        "fivethirtyeight": 3,
        "average unemployment rate": 3,
        "matplotlib plots": 3,
        "majors": 3,
        "low wage jobs": 3,
        "employment rates": 2,
        "women": 1,
        "part time rate": 1
    },
    "sorting": {
        "variable name majors": 3,
        "fivethirtyeight": 3,
        "average unemployment rate": 3,
        "matplotlib plots": 3,
        "majors": 3,
        "low wage jobs": 3,
        "employment rates": 2,
        "women": 1,
        "part time rate": 1
    },
    "grouping": {
        "variable name majors": 3,
        "fivethirtyeight": 3,
        "average unemployment rate": 3,
        "matplotlib plots": 3,
        "majors": 3,
        "low wage jobs": 3,
        "employment rates": 2,
        "women": 1,
        "part time rate": 1
    },
    "prediction": {
        "variable name majors": 3,
        "fivethirtyeight": 3,
        "average unemployment rate": 3,
        "matplotlib plots": 3,
        "majors": 3,
        "low wage jobs": 3,
        "employment rates": 2,
        "women": 1,
        "part time rate": 1
    },
    "integer multiplication": {
        "coding practice": 4,
        "multiplication": 2,
        "symbolic math": 2,
        "integer division": 2,
        "mathematical operations": 2,
        "integer multiplication": 1,
        "integer multiplication operations": 1,
        "integer division operations": 1,
        "integer operations": 1,
        "fractions": 1,
        "decimals": 1,
        "non-integer numbers": 1,
        "subtraction": 1,
        "division": 1,
        "floating point numbers": 1
    },
    "kurtosis": {
        "window parameter": 3,
        "rolling mean": 3,
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "moving": {
        "window parameter": 3,
        "rolling mean": 3,
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "moving window functions": {
        "window parameter": 3,
        "rolling mean": 3,
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "array function": {
        "window parameter": 3,
        "rolling mean": 3,
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "spark exercise": {
        "rdd": 6,
        "cartesian product": 6,
        "collinear points": 2,
        "r": 2,
        "spark rdd api": 2,
        "helper functions": 2,
        "assert statement unit tests": 2
    },
    "baby names": {
        "national database": 4,
        "us social security administration": 2,
        "binary sex classification": 2,
        "us births": 2,
        "source online": 2,
        "hhs": 2,
        "name popularity": 2,
        "social security administration": 2,
        "name frequencies": 1,
        "pandas table": 1,
        "random sample": 1,
        "bar charts": 1
    },
    "iloc": {
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "zip codes": 3,
        "inspection": 2,
        "inspection dataframe": 2
    },
    "missing zipcode values": {
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "zip codes": 3,
        "inspection": 2,
        "inspection dataframe": 2
    },
    "94545": {
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "zip codes": 3,
        "inspection": 2,
        "inspection dataframe": 2
    },
    "zip codes": {
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "zip codes": 3,
        "inspection": 2,
        "inspection dataframe": 2
    },
    "94609": {
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "zip codes": 3,
        "inspection": 2,
        "inspection dataframe": 2
    },
    "san francisco": {
        "business dataframe": 3,
        "population": 3,
        "longitude": 3,
        "nonmissing values": 3,
        "latitude": 3,
        "zip codes": 3,
        "inspection": 2,
        "inspection dataframe": 2
    },
    "discriminator training tests": {
        "data distribution": 4,
        "discriminator": 2,
        "context manager": 2,
        "semantics": 2,
        "single adversarial training example": 2,
        "noise distribution": 2,
        "synthetic images": 2,
        "generative adversarial training": 2,
        "kernel density estimation plot": 2,
        "fake images": 1,
        "python variables": 1
    },
    "geckodriver install firefox": {
        "html": 4,
        "restaurant number of bookings": 2,
        "web scraper": 2,
        "restaurant names": 2,
        "restaurant prices": 2,
        "soup object": 2,
        "html objct": 2,
        "bs4": 2,
        "google chrome": 2,
        "inspect": 2
    },
    "geckodriver": {
        "html": 4,
        "restaurant number of bookings": 2,
        "web scraper": 2,
        "restaurant names": 2,
        "restaurant prices": 2,
        "soup object": 2,
        "html objct": 2,
        "bs4": 2,
        "google chrome": 2,
        "inspect": 2
    },
    "fox browser": {
        "html": 4,
        "restaurant number of bookings": 2,
        "web scraper": 2,
        "restaurant names": 2,
        "restaurant prices": 2,
        "soup object": 2,
        "html objct": 2,
        "bs4": 2,
        "google chrome": 2,
        "inspect": 2
    },
    "2d vectors": {
        "orthonormal basis": 4,
        "2d vectors": 2,
        "arrows": 2,
        "unit vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "dot product": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2
    },
    "water crisis": {
        "student names": 3,
        "federal government": 3,
        "matplotlib plotting package": 3,
        "tutorial": 3,
        "data visualization": 3,
        "lead readings": 2,
        "plots": 1,
        "overall lead levels": 1,
        "calculations": 1,
        "mean value": 1,
        "flint water": 1
    },
    "flint": {
        "student names": 3,
        "federal government": 3,
        "matplotlib plotting package": 3,
        "tutorial": 3,
        "data visualization": 3,
        "lead readings": 2,
        "plots": 1,
        "overall lead levels": 1,
        "calculations": 1,
        "mean value": 1,
        "flint water": 1
    },
    "tweetdeck": {
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "tweetdeck": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "null hypothesis": 2
    },
    "string method": {
        "pivoting": 2,
        "8": 2,
        "pivot": 2,
        "categorical attrbiutes": 2,
        "pivoted table": 2,
        "tweet sources": 2,
        "confidence interval": 2,
        "tweetdeck": 2,
        "twitter client usage": 2,
        "bootstrap": 2,
        "null hypothesis": 2
    },
    "autoencoder lab": {
        "keras sequential model": 5,
        "flattened mnist image": 3,
        "encoder": 3,
        "autoencoder": 3,
        "flattened image": 2,
        "binary crossentropy loss": 2,
        "keras functional api": 2,
        "python list": 1,
        "pil image": 1
    },
    "company name": {
        "postgresql": 2,
        "sql": 2,
        "aggregate functions": 2,
        "column": 1,
        "aliases": 1,
        "wildcards": 1,
        "where clause": 1,
        "missing letters": 1,
        "select distinct statement": 1,
        "distinct operator": 1,
        "limit operator": 1,
        "limit syntax": 1,
        "sql subqueries": 1,
        "group by statement": 1,
        "group by operator": 1,
        "having operator": 1,
        "having clause": 1,
        "else statement": 1,
        "date documentation": 1
    },
    "companyname": {
        "postgresql": 2,
        "sql": 2,
        "aggregate functions": 2,
        "column": 1,
        "aliases": 1,
        "wildcards": 1,
        "where clause": 1,
        "missing letters": 1,
        "select distinct statement": 1,
        "distinct operator": 1,
        "limit operator": 1,
        "limit syntax": 1,
        "sql subqueries": 1,
        "group by statement": 1,
        "group by operator": 1,
        "having operator": 1,
        "having clause": 1,
        "else statement": 1,
        "date documentation": 1
    },
    "timestep": {
        "timestep size": 3,
        "simulation": 3,
        "2d calculation": 2,
        "gridblocks": 2,
        "timesteps": 2,
        "computation time": 2,
        "gridsize": 2,
        "error function": 2,
        "timestep": 2,
        "execution time": 2
    },
    "full icon array": {
        "icon array": 4,
        "green marble": 1,
        "full icon array": 1,
        "green marbles": 1,
        "conditional probability": 1,
        "chemotherapy": 1,
        "radiation": 1,
        "women": 1,
        "probability distributions": 1,
        "cancer screening": 1,
        "medical tests": 1,
        "breast cancer": 1,
        "false positives": 1,
        "contingency table": 1,
        "pivot": 1,
        "status": 1,
        "sum function": 1,
        "cancer test": 1,
        "population members": 1
    },
    "df2": {
        "average height values": 3,
        "pivot table": 3,
        "confounding variable": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3
    },
    "compsci majors": {
        "average height values": 3,
        "pivot table": 3,
        "confounding variable": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3
    },
    "pivot tables": {
        "average height values": 3,
        "pivot table": 3,
        "confounding variable": 3,
        "ordinary least squares": 3,
        "linear models": 3,
        "design matrices": 3,
        "patsy": 3
    },
    "token frequencies": {
        "lexical diversity": 4,
        "tokens": 3,
        "puntuation tokens": 3,
        "alphanumeric characters": 3,
        "nltk corpus": 2,
        "nltk reuters corpus": 2,
        "non-alphanumeric characters": 2,
        "reuters object": 2
    },
    "course syllabus": {
        "lexical diversity": 4,
        "tokens": 3,
        "puntuation tokens": 3,
        "alphanumeric characters": 3,
        "nltk corpus": 2,
        "nltk reuters corpus": 2,
        "non-alphanumeric characters": 2,
        "reuters object": 2
    },
    "pyplot": {
        "pyplot": 3,
        "polynomial": 3,
        "incremental integer index": 3,
        "polyfit method": 3,
        "line coefficient": 3,
        "polynomial function": 2,
        "poly1d method": 2,
        "line coefficiant": 2
    },
    "trend": {
        "pyplot": 3,
        "polynomial": 3,
        "incremental integer index": 3,
        "polyfit method": 3,
        "line coefficient": 3,
        "polynomial function": 2,
        "poly1d method": 2,
        "line coefficiant": 2
    },
    "m": {
        "docs": 3,
        "tdmatrix": 3,
        "linear system": 2,
        "linear equation": 2,
        "state value function": 2,
        "exact policy iteration": 2,
        "policy iteration": 2,
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "reuters documents": 1,
        "emmed test": 1
    },
    "matrix constructors": {
        "matrices": 4,
        "matrix constructors": 3,
        "analytic function": 2,
        "diagonalizable matrix": 2,
        "identity matrix": 1,
        "square matrix": 1,
        "power series formula": 1,
        "diagonal matrix": 1,
        "square matrices": 1,
        "diagonalizable": 1,
        "eigenvals": 1,
        "e": 1,
        "diagonalize": 1,
        "matrix slicing": 1
    },
    "subtasks": {
        "assert operator": 5,
        "filter function": 4,
        "dna alphabet": 4,
        "datetime objects": 3,
        "booleans": 1,
        "handgun checks": 1,
        "vector operations": 1,
        "long gun background checks": 1,
        "frame": 1
    },
    "test cases": {
        "kde": 3,
        "coll": 3,
        "spark exercise": 3,
        "optimal kde bandwidth": 2,
        "unit testing": 2,
        "maximum overlap": 1,
        "single": 1,
        "overlapping segments": 1,
        "combined string": 1,
        "programming practice": 1,
        "unit test": 1,
        "imput strings": 1,
        "unit tests": 1
    },
    "dot products": {
        "dot product": 6,
        "hypoten": 3,
        "magnitude": 3,
        "right triangle": 3,
        "elementwise divide": 2,
        "elementwise division": 2,
        "covariance": 1,
        "eigenvalue problem": 1
    },
    "environment": {
        "altair": 6,
        "json representation": 2,
        "visualization encodings": 1,
        "json dictionary": 1,
        "chart mark types": 1,
        "visualization channel": 1,
        "aggregate function": 1,
        "bar chart": 1,
        "histogtram": 1,
        "aggregate function count": 1,
        "bar plot": 1,
        "bin object": 1,
        "labels": 1,
        "axis object": 1,
        "scatter plot plot": 1
    },
    "d": {
        "altair": 6,
        "json representation": 2,
        "visualization encodings": 1,
        "json dictionary": 1,
        "chart mark types": 1,
        "visualization channel": 1,
        "aggregate function": 1,
        "bar chart": 1,
        "histogtram": 1,
        "aggregate function count": 1,
        "bar plot": 1,
        "bin object": 1,
        "labels": 1,
        "axis object": 1,
        "scatter plot plot": 1
    },
    "credible interval": {
        "confidence interval interpretations": 3,
        "credible interval": 3,
        "bayesian analysis": 3,
        "credible": 3,
        "bayesian basic stats test process": 3,
        "matplotlib graph": 3,
        "finger exercises": 1,
        "bayesian computing library": 1,
        "normal likelihood": 1
    },
    "target": {
        "lasso": 3,
        "sklearn object": 3,
        "scaler object": 3,
        "gridsearchcv": 2,
        "xtrain": 1,
        "ytrain": 1,
        "test": 1,
        "xtest": 1,
        "randomforestregressor": 1,
        "shufflesplit": 1,
        "scaler": 1,
        "model selection": 1,
        "pre": 1,
        "hyperparameter tuning": 1
    },
    "string processing": {
        "sql tables": 2,
        "anothertable": 2,
        "onetable": 2,
        "yetathird": 2,
        "variable names": 2,
        "underscores": 2,
        "alphanumeric characters": 2,
        "python assert": 2,
        "column variables": 1,
        "valid variable names": 1,
        "equals sign": 1,
        "input string": 1,
        "equality string": 1
    },
    "category name": {
        "transaction size": 2,
        "alcohol": 2,
        "smaller visualizations": 1,
        "outlier data point": 1,
        "visualizations": 1,
        "outlier": 1,
        "liquor stores": 1,
        "liquor sales data": 1,
        "convenience stores": 1,
        "grocery stores": 1,
        "mean transaction size": 1,
        "mean": 1,
        "iowa": 1,
        "liquor": 1,
        "gross margin": 1,
        "liquor licensees": 1,
        "total sales dollars": 1,
        "alchohol beer": 1,
        "price": 1
    },
    "category number column": {
        "transaction size": 2,
        "alcohol": 2,
        "smaller visualizations": 1,
        "outlier data point": 1,
        "visualizations": 1,
        "outlier": 1,
        "liquor stores": 1,
        "liquor sales data": 1,
        "convenience stores": 1,
        "grocery stores": 1,
        "mean transaction size": 1,
        "mean": 1,
        "iowa": 1,
        "liquor": 1,
        "gross margin": 1,
        "liquor licensees": 1,
        "total sales dollars": 1,
        "alchohol beer": 1,
        "price": 1
    },
    "sales projections": {
        "transaction size": 2,
        "alcohol": 2,
        "smaller visualizations": 1,
        "outlier data point": 1,
        "visualizations": 1,
        "outlier": 1,
        "liquor stores": 1,
        "liquor sales data": 1,
        "convenience stores": 1,
        "grocery stores": 1,
        "mean transaction size": 1,
        "mean": 1,
        "iowa": 1,
        "liquor": 1,
        "gross margin": 1,
        "liquor licensees": 1,
        "total sales dollars": 1,
        "alchohol beer": 1,
        "price": 1
    },
    "labor": {
        "transaction size": 2,
        "alcohol": 2,
        "smaller visualizations": 1,
        "outlier data point": 1,
        "visualizations": 1,
        "outlier": 1,
        "liquor stores": 1,
        "liquor sales data": 1,
        "convenience stores": 1,
        "grocery stores": 1,
        "mean transaction size": 1,
        "mean": 1,
        "iowa": 1,
        "liquor": 1,
        "gross margin": 1,
        "liquor licensees": 1,
        "total sales dollars": 1,
        "alchohol beer": 1,
        "price": 1
    },
    "gross margin percent": {
        "transaction size": 2,
        "alcohol": 2,
        "smaller visualizations": 1,
        "outlier data point": 1,
        "visualizations": 1,
        "outlier": 1,
        "liquor stores": 1,
        "liquor sales data": 1,
        "convenience stores": 1,
        "grocery stores": 1,
        "mean transaction size": 1,
        "mean": 1,
        "iowa": 1,
        "liquor": 1,
        "gross margin": 1,
        "liquor licensees": 1,
        "total sales dollars": 1,
        "alchohol beer": 1,
        "price": 1
    },
    "store rent": {
        "transaction size": 2,
        "alcohol": 2,
        "smaller visualizations": 1,
        "outlier data point": 1,
        "visualizations": 1,
        "outlier": 1,
        "liquor stores": 1,
        "liquor sales data": 1,
        "convenience stores": 1,
        "grocery stores": 1,
        "mean transaction size": 1,
        "mean": 1,
        "iowa": 1,
        "liquor": 1,
        "gross margin": 1,
        "liquor licensees": 1,
        "total sales dollars": 1,
        "alchohol beer": 1,
        "price": 1
    },
    "markup": {
        "transaction size": 2,
        "alcohol": 2,
        "smaller visualizations": 1,
        "outlier data point": 1,
        "visualizations": 1,
        "outlier": 1,
        "liquor stores": 1,
        "liquor sales data": 1,
        "convenience stores": 1,
        "grocery stores": 1,
        "mean transaction size": 1,
        "mean": 1,
        "iowa": 1,
        "liquor": 1,
        "gross margin": 1,
        "liquor licensees": 1,
        "total sales dollars": 1,
        "alchohol beer": 1,
        "price": 1
    },
    "summary data": {
        "transaction size": 2,
        "alcohol": 2,
        "smaller visualizations": 1,
        "outlier data point": 1,
        "visualizations": 1,
        "outlier": 1,
        "liquor stores": 1,
        "liquor sales data": 1,
        "convenience stores": 1,
        "grocery stores": 1,
        "mean transaction size": 1,
        "mean": 1,
        "iowa": 1,
        "liquor": 1,
        "gross margin": 1,
        "liquor licensees": 1,
        "total sales dollars": 1,
        "alchohol beer": 1,
        "price": 1
    },
    "bottles": {
        "transaction size": 2,
        "alcohol": 2,
        "smaller visualizations": 1,
        "outlier data point": 1,
        "visualizations": 1,
        "outlier": 1,
        "liquor stores": 1,
        "liquor sales data": 1,
        "convenience stores": 1,
        "grocery stores": 1,
        "mean transaction size": 1,
        "mean": 1,
        "iowa": 1,
        "liquor": 1,
        "gross margin": 1,
        "liquor licensees": 1,
        "total sales dollars": 1,
        "alchohol beer": 1,
        "price": 1
    },
    "viz": {
        "transaction size": 2,
        "alcohol": 2,
        "smaller visualizations": 1,
        "outlier data point": 1,
        "visualizations": 1,
        "outlier": 1,
        "liquor stores": 1,
        "liquor sales data": 1,
        "convenience stores": 1,
        "grocery stores": 1,
        "mean transaction size": 1,
        "mean": 1,
        "iowa": 1,
        "liquor": 1,
        "gross margin": 1,
        "liquor licensees": 1,
        "total sales dollars": 1,
        "alchohol beer": 1,
        "price": 1
    },
    "eda": {
        "transaction size": 2,
        "alcohol": 2,
        "smaller visualizations": 1,
        "outlier data point": 1,
        "visualizations": 1,
        "outlier": 1,
        "liquor stores": 1,
        "liquor sales data": 1,
        "convenience stores": 1,
        "grocery stores": 1,
        "mean transaction size": 1,
        "mean": 1,
        "iowa": 1,
        "liquor": 1,
        "gross margin": 1,
        "liquor licensees": 1,
        "total sales dollars": 1,
        "alchohol beer": 1,
        "price": 1
    },
    "transaction totals": {
        "transaction size": 2,
        "alcohol": 2,
        "smaller visualizations": 1,
        "outlier data point": 1,
        "visualizations": 1,
        "outlier": 1,
        "liquor stores": 1,
        "liquor sales data": 1,
        "convenience stores": 1,
        "grocery stores": 1,
        "mean transaction size": 1,
        "mean": 1,
        "iowa": 1,
        "liquor": 1,
        "gross margin": 1,
        "liquor licensees": 1,
        "total sales dollars": 1,
        "alchohol beer": 1,
        "price": 1
    },
    "exploratory analysis": {
        "transaction size": 2,
        "alcohol": 2,
        "smaller visualizations": 1,
        "outlier data point": 1,
        "visualizations": 1,
        "outlier": 1,
        "liquor stores": 1,
        "liquor sales data": 1,
        "convenience stores": 1,
        "grocery stores": 1,
        "mean transaction size": 1,
        "mean": 1,
        "iowa": 1,
        "liquor": 1,
        "gross margin": 1,
        "liquor licensees": 1,
        "total sales dollars": 1,
        "alchohol beer": 1,
        "price": 1
    },
    "cluster": {
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "dbscan": 1,
        "regression": 1,
        "iris data": 1,
        "final classification": 1,
        "supervised machine learning": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1
    },
    "photometric features": {
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "dbscan": 1,
        "regression": 1,
        "iris data": 1,
        "final classification": 1,
        "supervised machine learning": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1
    },
    "sdss galaxy data": {
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "dbscan": 1,
        "regression": 1,
        "iris data": 1,
        "final classification": 1,
        "supervised machine learning": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1
    },
    "sdss db": {
        "sklearn x array": 1,
        "sds": 1,
        "sdss dataset": 1,
        "galaxy evolution": 1,
        "domain knowledge": 1,
        "pandas dataframes": 1,
        "astropy tables": 1,
        "challenge problem": 1,
        "dbscan": 1,
        "regression": 1,
        "iris data": 1,
        "final classification": 1,
        "supervised machine learning": 1,
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1
    },
    "softmax function": {
        "tensorflow": 4,
        "gradient descent": 2,
        "true labels": 1,
        "trained model": 1,
        "input variable": 1,
        "mnist dataset": 1,
        "bias vectors": 1,
        "gradient descent training": 1,
        "softmax regression function": 1,
        "softmax implementation": 1,
        "negative log probability": 1,
        "softmax regression": 1,
        "classification function": 1,
        "cross entropy loss": 1,
        "learning rate": 1,
        "cross entropy loss function": 1,
        "tutorials": 1
    },
    "softmax regression": {
        "tensorflow": 4,
        "gradient descent": 2,
        "true labels": 1,
        "trained model": 1,
        "input variable": 1,
        "mnist dataset": 1,
        "bias vectors": 1,
        "gradient descent training": 1,
        "softmax regression function": 1,
        "softmax implementation": 1,
        "negative log probability": 1,
        "softmax regression": 1,
        "classification function": 1,
        "cross entropy loss": 1,
        "learning rate": 1,
        "cross entropy loss function": 1,
        "tutorials": 1
    },
    "postgre sql servers": {
        "sql": 2,
        "datahub cluster": 1,
        "shared postgres databases": 1,
        "sql alchemy library": 1,
        "schema": 1,
        "python engine": 1,
        "local postgres database": 1,
        "fec": 1,
        "grading": 1,
        "query strings": 1,
        "sql expressions": 1,
        "homework": 1,
        "query string variable": 1,
        "count": 1,
        "query string": 1,
        "committee id": 1,
        "transaction amount": 1,
        "total transaction amounts": 1,
        "limit 20": 1,
        "distinct keyword": 1
    },
    "shared resources": {
        "sql": 2,
        "datahub cluster": 1,
        "shared postgres databases": 1,
        "sql alchemy library": 1,
        "schema": 1,
        "python engine": 1,
        "local postgres database": 1,
        "fec": 1,
        "grading": 1,
        "query strings": 1,
        "sql expressions": 1,
        "homework": 1,
        "query string variable": 1,
        "count": 1,
        "query string": 1,
        "committee id": 1,
        "transaction amount": 1,
        "total transaction amounts": 1,
        "limit 20": 1,
        "distinct keyword": 1
    },
    "berkeley datahub cluster": {
        "sql": 2,
        "datahub cluster": 1,
        "shared postgres databases": 1,
        "sql alchemy library": 1,
        "schema": 1,
        "python engine": 1,
        "local postgres database": 1,
        "fec": 1,
        "grading": 1,
        "query strings": 1,
        "sql expressions": 1,
        "homework": 1,
        "query string variable": 1,
        "count": 1,
        "query string": 1,
        "committee id": 1,
        "transaction amount": 1,
        "total transaction amounts": 1,
        "limit 20": 1,
        "distinct keyword": 1
    },
    "json exercises": {
        "json": 2,
        "http get request": 2,
        "quandl": 2,
        "location": 1,
        "web browser": 1,
        "http request": 1,
        "json geoip request": 1,
        "ip address": 1,
        "get request": 1,
        "python requests library": 1,
        "california home prices": 1,
        "requests": 1,
        "github credentials": 1,
        "rental prices": 1,
        "zillow dataset": 1,
        "python variable": 1,
        "quand": 1,
        "andl": 1
    },
    "match object": {
        "regex": 2,
        "metacharacters": 2,
        "parentheses": 2,
        "match object": 1,
        "match object instances": 1,
        "pattern object": 1,
        "numeric codes": 1,
        "data entry errors": 1,
        "regular expressions": 1,
        "robots": 1,
        "us phone number": 1,
        "area code": 1,
        "challenge 15": 1,
        "regular expression syntax": 1,
        "challenge 14": 1,
        "challenge 13": 1,
        "uring group skills": 1,
        "non-": 1
    },
    "matching substring": {
        "regex": 2,
        "metacharacters": 2,
        "parentheses": 2,
        "match object": 1,
        "match object instances": 1,
        "pattern object": 1,
        "numeric codes": 1,
        "data entry errors": 1,
        "regular expressions": 1,
        "robots": 1,
        "us phone number": 1,
        "area code": 1,
        "challenge 15": 1,
        "regular expression syntax": 1,
        "challenge 14": 1,
        "challenge 13": 1,
        "uring group skills": 1,
        "non-": 1
    },
    "re module": {
        "regex": 2,
        "metacharacters": 2,
        "parentheses": 2,
        "match object": 1,
        "match object instances": 1,
        "pattern object": 1,
        "numeric codes": 1,
        "data entry errors": 1,
        "regular expressions": 1,
        "robots": 1,
        "us phone number": 1,
        "area code": 1,
        "challenge 15": 1,
        "regular expression syntax": 1,
        "challenge 14": 1,
        "challenge 13": 1,
        "uring group skills": 1,
        "non-": 1
    },
    "unique products": {
        "carts": 1,
        "log transformation": 1,
        "log transformed data": 1,
        "point cloud": 1,
        "vertical bands": 1,
        "over plotting": 1,
        "shopping": 1,
        "shopping trips": 1,
        "transaction time": 1,
        "transaction times": 1,
        "datetime64": 1,
        "unique customers": 1,
        "customer trends": 1,
        "customer counts": 1,
        "boxplots": 1,
        "holidays": 1,
        "shopping behavior": 1,
        "lunar new year": 1,
        "christmas": 1,
        "line": 1,
        "reference lines": 1
    },
    "shopping cart": {
        "carts": 1,
        "log transformation": 1,
        "log transformed data": 1,
        "point cloud": 1,
        "vertical bands": 1,
        "over plotting": 1,
        "shopping": 1,
        "shopping trips": 1,
        "transaction time": 1,
        "transaction times": 1,
        "datetime64": 1,
        "unique customers": 1,
        "customer trends": 1,
        "customer counts": 1,
        "boxplots": 1,
        "holidays": 1,
        "shopping behavior": 1,
        "lunar new year": 1,
        "christmas": 1,
        "line": 1,
        "reference lines": 1
    },
    "women": {
        "majors": 4,
        "average height values": 3,
        "pivot table": 3,
        "confounding variable": 3,
        "contingency table": 1,
        "pivot": 1,
        "status": 1,
        "sum function": 1,
        "cancer test": 1,
        "population members": 1,
        "icon array": 1
    },
    "decisiontreeclassifier": {
        "dtree": 9,
        "decisiontreeclassifier()": 9,
        "confusion matrix": 1,
        "decisiontreeclassifier": 1
    },
    "chipo": {
        "item price type": 8,
        "lambda function": 4,
        "item price": 4,
        "scatterplot": 3,
        "itens": 1
    },
    "social network analysis": {
        "adjacency matrix": 4,
        "social network": 2,
        "undirected graph": 2,
        "linear algebra": 2,
        "matrix multiplication": 2,
        "normalization": 2,
        "symmetric numpy array": 2,
        "triangle counts": 1,
        "json files": 1,
        "internet movie database": 1,
        "12 angry men": 1
    },
    "plot rug plots": {
        "rug plot": 10,
        "random jitter": 5,
        "kde": 3,
        "optimal kde bandwidth": 2
    },
    "mydirectory": {
        "myfiles": 2,
        "output redirection": 2,
        "ls": 2,
        "txt": 2,
        "directory mydirectory": 2,
        "rmdir": 1,
        "class repository": 1,
        "project gutenberg": 1,
        "grep": 1,
        "filters": 1,
        "matching line numbers": 1,
        "word count tool": 1,
        "matching lines": 1,
        "unique tokens": 1,
        "siddhartha": 1
    },
    "shapely point objects": {
        "error message": 4,
        "shapely geometry": 4,
        "linestring": 4,
        "shapely point": 4,
        "polygon geometry": 4
    },
    "get request": {
        "requests library": 8,
        "http get request": 4,
        "nyt article api": 4,
        "results page": 2,
        "search parameters": 2
    },
    "answer cell": {
        "home burglaries": 2,
        "summer vacation period": 2,
        "adt security systems": 2,
        "burglaries": 2,
        "labor day": 2,
        "memorial day": 2,
        "python code": 2,
        "compound expression": 2,
        "subexpressions": 2,
        "missing expression": 2
    },
    "test cell": {
        "home burglaries": 2,
        "summer vacation period": 2,
        "adt security systems": 2,
        "burglaries": 2,
        "labor day": 2,
        "memorial day": 2,
        "python code": 2,
        "compound expression": 2,
        "subexpressions": 2,
        "missing expression": 2
    },
    "nable code cell": {
        "home burglaries": 2,
        "summer vacation period": 2,
        "adt security systems": 2,
        "burglaries": 2,
        "labor day": 2,
        "memorial day": 2,
        "python code": 2,
        "compound expression": 2,
        "subexpressions": 2,
        "missing expression": 2
    },
    "probability predictions": {
        "probabilities": 3,
        "prediction probability": 3,
        "tree models": 2,
        "classification error": 2,
        "training errors": 2,
        "check": 1,
        "gradient boosted trees": 1,
        "ensemble classifiers": 1,
        "boosted tree module": 1,
        "predicitve accuracy": 1,
        "validation errors": 1,
        "classification errors": 1,
        "validation classification error": 1
    },
    "california history": {
        "cali table": 4,
        "democratic presidential candidate": 4,
        "elections": 2,
        "dem states column": 2,
        "democratic votes": 2,
        "elections table": 2,
        "spread function": 1,
        "call to group": 1,
        "democrat spread column": 1,
        "southern states": 1
    },
    "breadth first search": {
        "breadth first search": 4,
        "graph traversal": 4,
        "path length": 3,
        "distbfs()": 3,
        "bfs": 3,
        "edge weights": 3
    },
    "queue data structure": {
        "breadth first search": 4,
        "graph traversal": 4,
        "path length": 3,
        "distbfs()": 3,
        "bfs": 3,
        "edge weights": 3
    },
    "graph traversal algorithm": {
        "breadth first search": 4,
        "graph traversal": 4,
        "path length": 3,
        "distbfs()": 3,
        "bfs": 3,
        "edge weights": 3
    },
    "centrality measures": {
        "breadth first search": 4,
        "graph traversal": 4,
        "path length": 3,
        "distbfs()": 3,
        "bfs": 3,
        "edge weights": 3
    },
    "computational graph": {
        "computational graph": 5,
        "variable naming convention": 5,
        "exact variable names": 2,
        "local gradients": 2,
        "squared loss layer tasks": 2,
        "squared loss white box": 2,
        "squared loss black box": 2
    },
    "distance from airtime": {
        "airtime": 3,
        "arrdelay": 2,
        "random number generator": 2,
        "linear regression model": 1,
        "code cell": 1,
        "multivariate regresion model": 1,
        "predictor variable": 1,
        "regression model": 1,
        "test sets": 1,
        "unit tests": 1,
        "multiple independent variables": 1,
        "dependent variable": 1,
        "patsy formula": 1,
        "distance": 1,
        "stats": 1,
        "multivariate regression model": 1
    },
    "computation times": {
        "2d toy dataset": 2,
        "linearly separable dataset": 2,
        "covariance matrix": 2,
        "multivariate gaussian distribution": 2,
        "optimization problem": 1,
        "maximum margin problem": 1,
        "quadratic programming problem": 1,
        "support vectors": 1,
        "quadratic function": 1,
        "svm": 1,
        "decision boundary": 1,
        "lagrange multipliers": 1,
        "inequality constraints": 1,
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "df3": {
        "figure size": 4,
        "matplotlib lecture": 4,
        "style sheets": 3,
        "boxplot": 2,
        "kde plot": 2,
        "kde plot line": 1,
        "linewidth": 1,
        "area plot": 1,
        "stackoverflow link": 1,
        "legend": 1
    },
    "pandas data visualization exercise": {
        "figure size": 4,
        "matplotlib lecture": 4,
        "style sheets": 3,
        "boxplot": 2,
        "kde plot": 2,
        "kde plot line": 1,
        "linewidth": 1,
        "area plot": 1,
        "stackoverflow link": 1,
        "legend": 1
    },
    "dataframe api docs": {
        "dataframe methods": 4,
        "data input": 4,
        "data output": 3,
        "sql expression": 3,
        "group": 3,
        "groupeddata operations": 3
    },
    "numeric feature matrix": {
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "numeric features": {
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "basic feature engineering": {
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "email texts": {
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "binary indicator": {
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "training conditional proportions": {
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "class conditional density plot": {
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "basic classification": {
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "numeric matrix": {
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "predicted labels": {
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "ham email": {
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "discriminative features": {
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "exchange": {
        "international standard exchange format": 1,
        "station metadata": 1,
        "trace objects": 1,
        "ainformation": 1,
        "xml": 1,
        "nested obspy inventory class": 1,
        "array analysis": 1,
        "ampling": 1,
        "estimate travel times": 1,
        "seismic phases": 1,
        "cross correlation routines": 1,
        "manipulation filtering": 1,
        "event detection": 1,
        "plot ray paths": 1,
        "inventory": 1,
        "event metadata": 1,
        "fdsn server": 1,
        "wildcard": 1,
        "waveform data": 1,
        "channel code": 1
    },
    "unsupervised machine learing": {
        "train set": 3,
        "cross products": 3,
        "polynomial features extraction": 3,
        "optimal weights": 3,
        "multiple linear regression": 3,
        "polynomal expansion function": 3,
        "random noise": 1,
        "noise level": 1
    },
    "gridsize": {
        "timestep size": 3,
        "simulation": 3,
        "2d system": 1,
        "diffusion coefficient": 1,
        "flux": 1,
        "1d vector equation system": 1,
        "linear equation solver": 1,
        "linear index": 1,
        "2d calculation": 1,
        "gridblocks": 1,
        "timesteps": 1,
        "computation time": 1,
        "gridsize": 1,
        "error function": 1,
        "timestep": 1,
        "execution time": 1
    },
    "shotgun assembler": {
        "unit testing": 4,
        "maximum overlap": 2,
        "single": 2,
        "overlapping segments": 2,
        "combined string": 2,
        "programming practice": 2,
        "unit test": 2,
        "imput strings": 2,
        "unit tests": 2
    },
    "biases": {
        "momentum term": 4,
        "l2 regularization term": 4,
        "l2 regularization": 4,
        "regularizatino constant": 4,
        "batch size": 4
    },
    "weights": {
        "momentum term": 4,
        "l2 regularization term": 4,
        "l2 regularization": 4,
        "regularizatino constant": 4,
        "batch size": 4
    },
    "recommender systems": {
        "pandas dataframes": 3,
        "zeroto1": 2,
        "pivot table": 2,
        "book recommendations": 2,
        "recommender system": 2,
        "ratings matrix": 2,
        "cosine similarity": 2,
        "single user recommendations": 2,
        "pivot dataframe": 1,
        "masked array": 1,
        "books dataframe": 1
    },
    "single user recommender system": {
        "pandas dataframes": 3,
        "zeroto1": 2,
        "pivot table": 2,
        "book recommendations": 2,
        "recommender system": 2,
        "ratings matrix": 2,
        "cosine similarity": 2,
        "single user recommendations": 2,
        "pivot dataframe": 1,
        "masked array": 1,
        "books dataframe": 1
    },
    "sandbox directory": {
        "pandas dataframes": 3,
        "zeroto1": 2,
        "pivot table": 2,
        "book recommendations": 2,
        "recommender system": 2,
        "ratings matrix": 2,
        "cosine similarity": 2,
        "single user recommendations": 2,
        "pivot dataframe": 1,
        "masked array": 1,
        "books dataframe": 1
    },
    "encoding error": {
        "india": 7,
        "multiple attacks": 5,
        "iraq": 5,
        "colorbar": 2
    },
    "column eventid": {
        "india": 7,
        "multiple attacks": 5,
        "iraq": 5,
        "colorbar": 2
    },
    "sympy": {
        "array computation package": 1,
        "fourier transforms": 1,
        "linear algebra": 1,
        "random numbers": 1,
        "solvers": 1,
        "interpolation routines": 1,
        "spare matrices": 1,
        "optimization": 1,
        "scipy": 1,
        "signal processing methods": 1,
        "basic differential equations": 1,
        "numeric integration": 1,
        "matlab": 1,
        "python program": 1,
        "united states": 1,
        "canada": 1,
        "slicing": 1,
        "centered difference": 1,
        "relative error": 1
    },
    "ls periodogram": {
        "periodogram": 3,
        "irregular sampling": 1,
        "observation times": 1,
        "discrete fourier transform": 1,
        "classical periodogram": 1,
        "kepler data": 1,
        "statistical": 1,
        "sinusoid model": 1,
        "non-varying reference model": 1,
        "individual measurements": 1,
        "observational uncertainty": 1,
        "uncertainties": 1,
        "ls periodogram": 1,
        "scipy package": 1,
        "maximum frequnecy": 1,
        "periodic signal": 1,
        "minimum frequency": 1
    },
    "ker": {
        "tensorflow": 1,
        "neural network": 1,
        "keras layer": 1,
        "neural network model": 1,
        "layer": 1,
        "max pool": 1,
        "keras sequential model": 1,
        "flatten layer": 1,
        "evaluation() function": 1,
        "activation model": 1,
        "metrics history": 1,
        "sequential model": 1,
        "loss functions": 1,
        "metrics": 1,
        "learning process": 1,
        "keras": 1,
        "fit() function": 1,
        "stochastic gradient descent": 1,
        "training loss": 1
    },
    "sanitized traffic sign data": {
        "tensorflow": 1,
        "neural network": 1,
        "keras layer": 1,
        "neural network model": 1,
        "layer": 1,
        "max pool": 1,
        "keras sequential model": 1,
        "flatten layer": 1,
        "evaluation() function": 1,
        "activation model": 1,
        "metrics history": 1,
        "sequential model": 1,
        "loss functions": 1,
        "metrics": 1,
        "learning process": 1,
        "keras": 1,
        "fit() function": 1,
        "stochastic gradient descent": 1,
        "training loss": 1
    },
    "german traffic sign recognition benchmark": {
        "tensorflow": 1,
        "neural network": 1,
        "keras layer": 1,
        "neural network model": 1,
        "layer": 1,
        "max pool": 1,
        "keras sequential model": 1,
        "flatten layer": 1,
        "evaluation() function": 1,
        "activation model": 1,
        "metrics history": 1,
        "sequential model": 1,
        "loss functions": 1,
        "metrics": 1,
        "learning process": 1,
        "keras": 1,
        "fit() function": 1,
        "stochastic gradient descent": 1,
        "training loss": 1
    },
    "pickle files": {
        "tensorflow": 1,
        "neural network": 1,
        "keras layer": 1,
        "neural network model": 1,
        "layer": 1,
        "max pool": 1,
        "keras sequential model": 1,
        "flatten layer": 1,
        "evaluation() function": 1,
        "activation model": 1,
        "metrics history": 1,
        "sequential model": 1,
        "loss functions": 1,
        "metrics": 1,
        "learning process": 1,
        "keras": 1,
        "fit() function": 1,
        "stochastic gradient descent": 1,
        "training loss": 1
    },
    "traffic signs": {
        "tensorflow": 1,
        "neural network": 1,
        "keras layer": 1,
        "neural network model": 1,
        "layer": 1,
        "max pool": 1,
        "keras sequential model": 1,
        "flatten layer": 1,
        "evaluation() function": 1,
        "activation model": 1,
        "metrics history": 1,
        "sequential model": 1,
        "loss functions": 1,
        "metrics": 1,
        "learning process": 1,
        "keras": 1,
        "fit() function": 1,
        "stochastic gradient descent": 1,
        "training loss": 1
    },
    "alternative encoding scheme": {
        "logistic classifier": 2,
        "pandas data frame method": 2,
        "categorical features": 2,
        "integral value encoding": 2,
        "pandas histogram methods": 2,
        "data exploration": 2,
        "numpy library": 2,
        "naive bayes predictor": 2,
        "test data": 2,
        "naive bayes classifier": 1
    },
    "normalized dot product": {
        "dot product": 6,
        "hypoten": 3,
        "magnitude": 3,
        "right triangle": 3,
        "elementwise divide": 2,
        "elementwise division": 2
    },
    "bmi 6018": {
        "individual patients": 1,
        "mimic2 database": 1,
        "bmi": 1,
        "skeleton code": 1,
        "quadratic formula": 1,
        "math library": 1,
        "quadratic equation": 1,
        "object thickness": 1,
        "medical applications": 1,
        "compton interactions": 1,
        "human body": 1,
        "photoelectric interactions": 1,
        "linear attenuation coefficient": 1,
        "rayleigh scattering": 1,
        "hounsfield unit": 1,
        "term project": 1,
        "numeric data": 1,
        "intger": 1,
        "base 10 integers": 1
    },
    "data seaborn": {
        "individual patients": 1,
        "mimic2 database": 1,
        "bmi": 1,
        "skeleton code": 1,
        "quadratic formula": 1,
        "math library": 1,
        "quadratic equation": 1,
        "object thickness": 1,
        "medical applications": 1,
        "compton interactions": 1,
        "human body": 1,
        "photoelectric interactions": 1,
        "linear attenuation coefficient": 1,
        "rayleigh scattering": 1,
        "hounsfield unit": 1,
        "term project": 1,
        "numeric data": 1,
        "intger": 1,
        "base 10 integers": 1
    },
    "interactive widgets": {
        "individual patients": 1,
        "mimic2 database": 1,
        "bmi": 1,
        "skeleton code": 1,
        "quadratic formula": 1,
        "math library": 1,
        "quadratic equation": 1,
        "object thickness": 1,
        "medical applications": 1,
        "compton interactions": 1,
        "human body": 1,
        "photoelectric interactions": 1,
        "linear attenuation coefficient": 1,
        "rayleigh scattering": 1,
        "hounsfield unit": 1,
        "term project": 1,
        "numeric data": 1,
        "intger": 1,
        "base 10 integers": 1
    },
    "conda function": {
        "individual patients": 1,
        "mimic2 database": 1,
        "bmi": 1,
        "skeleton code": 1,
        "quadratic formula": 1,
        "math library": 1,
        "quadratic equation": 1,
        "object thickness": 1,
        "medical applications": 1,
        "compton interactions": 1,
        "human body": 1,
        "photoelectric interactions": 1,
        "linear attenuation coefficient": 1,
        "rayleigh scattering": 1,
        "hounsfield unit": 1,
        "term project": 1,
        "numeric data": 1,
        "intger": 1,
        "base 10 integers": 1
    },
    "ipywidgets": {
        "individual patients": 1,
        "mimic2 database": 1,
        "bmi": 1,
        "skeleton code": 1,
        "quadratic formula": 1,
        "math library": 1,
        "quadratic equation": 1,
        "object thickness": 1,
        "medical applications": 1,
        "compton interactions": 1,
        "human body": 1,
        "photoelectric interactions": 1,
        "linear attenuation coefficient": 1,
        "rayleigh scattering": 1,
        "hounsfield unit": 1,
        "term project": 1,
        "numeric data": 1,
        "intger": 1,
        "base 10 integers": 1
    },
    "anconda": {
        "individual patients": 1,
        "mimic2 database": 1,
        "bmi": 1,
        "skeleton code": 1,
        "quadratic formula": 1,
        "math library": 1,
        "quadratic equation": 1,
        "object thickness": 1,
        "medical applications": 1,
        "compton interactions": 1,
        "human body": 1,
        "photoelectric interactions": 1,
        "linear attenuation coefficient": 1,
        "rayleigh scattering": 1,
        "hounsfield unit": 1,
        "term project": 1,
        "numeric data": 1,
        "intger": 1,
        "base 10 integers": 1
    },
    "ar model": {
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "time series modeling": {
        "ebola deaths": 3,
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "constant value tensors": {
        "random tensor": 7,
        "tensor of shape": 4,
        "constant tensor": 3,
        "tensor": 3,
        "uniform distribution": 2
    },
    "single incident entry": {
        "incident entries": 2,
        "generator function": 2,
        "single incident entry": 1,
        "marker text": 1,
        "single text file": 1,
        "marker lines": 1,
        "python dict": 1,
        "data files": 1,
        "incident entry": 1,
        "units line": 1,
        "header line": 1,
        "filenames": 1,
        "text based incident entries": 1,
        "embedded newlines": 1,
        "incident files": 1,
        "variable files": 1,
        "python dict objects": 1
    },
    "capital": {
        "regular expression": 2,
        "character classes": 2,
        "regexes": 2,
        "regex": 2,
        "match object": 1,
        "pattern object": 1,
        "us phone number": 1,
        "area code": 1,
        "regular expression syntax": 1,
        "challenge 14": 1,
        "metacharacters": 1,
        "parentheses": 1,
        "challenge 13": 1,
        "uring group skills": 1,
        "non-": 1
    },
    "challenge 7": {
        "regular expression": 2,
        "character classes": 2,
        "regexes": 2,
        "regex": 2,
        "match object": 1,
        "pattern object": 1,
        "us phone number": 1,
        "area code": 1,
        "regular expression syntax": 1,
        "challenge 14": 1,
        "metacharacters": 1,
        "parentheses": 1,
        "challenge 13": 1,
        "uring group skills": 1,
        "non-": 1
    },
    "challenge 6": {
        "regular expression": 2,
        "character classes": 2,
        "regexes": 2,
        "regex": 2,
        "match object": 1,
        "pattern object": 1,
        "us phone number": 1,
        "area code": 1,
        "regular expression syntax": 1,
        "challenge 14": 1,
        "metacharacters": 1,
        "parentheses": 1,
        "challenge 13": 1,
        "uring group skills": 1,
        "non-": 1
    },
    "cross products": {
        "cross products": 3,
        "polynomial features extraction": 3,
        "optimal weights": 3,
        "multiple linear regression": 3,
        "polynomal expansion function": 3,
        "random noise": 1,
        "noise level": 1,
        "noisy sine function": 1,
        "noise samples": 1
    },
    "splitting criteria": {
        "decision tree algorithm": 2,
        "classification error rate": 2,
        "gini index": 2,
        "titanic": 2,
        "sex": 2,
        "age": 2,
        "response variable": 2,
        "maximum value": 1,
        "splitting criteria": 1,
        "predicted probability": 1,
        "classification trees": 1,
        "node purity": 1
    },
    "olympics": {
        "olympic sports": 2,
        "census population table": 1,
        "weighted average": 1,
        "search interest table": 1,
        "population": 1,
        "volleyball": 1,
        "interest": 1,
        "netherlands": 1,
        "china": 1,
        "global search interest": 1,
        "global population": 1,
        "india": 1,
        "search interest": 1,
        "group by": 1,
        "sql": 1,
        "population weights": 1,
        "pandas dataframes": 1,
        "ranking": 1
    },
    "population size": {
        "olympic sports": 2,
        "census population table": 1,
        "weighted average": 1,
        "search interest table": 1,
        "population": 1,
        "volleyball": 1,
        "interest": 1,
        "netherlands": 1,
        "china": 1,
        "global search interest": 1,
        "global population": 1,
        "india": 1,
        "search interest": 1,
        "group by": 1,
        "sql": 1,
        "population weights": 1,
        "pandas dataframes": 1,
        "ranking": 1
    },
    "search interest scores": {
        "olympic sports": 2,
        "census population table": 1,
        "weighted average": 1,
        "search interest table": 1,
        "population": 1,
        "volleyball": 1,
        "interest": 1,
        "netherlands": 1,
        "china": 1,
        "global search interest": 1,
        "global population": 1,
        "india": 1,
        "search interest": 1,
        "group by": 1,
        "sql": 1,
        "population weights": 1,
        "pandas dataframes": 1,
        "ranking": 1
    },
    "search engines": {
        "olympic sports": 2,
        "census population table": 1,
        "weighted average": 1,
        "search interest table": 1,
        "population": 1,
        "volleyball": 1,
        "interest": 1,
        "netherlands": 1,
        "china": 1,
        "global search interest": 1,
        "global population": 1,
        "india": 1,
        "search interest": 1,
        "group by": 1,
        "sql": 1,
        "population weights": 1,
        "pandas dataframes": 1,
        "ranking": 1
    },
    "world population data": {
        "olympic sports": 2,
        "census population table": 1,
        "weighted average": 1,
        "search interest table": 1,
        "population": 1,
        "volleyball": 1,
        "interest": 1,
        "netherlands": 1,
        "china": 1,
        "global search interest": 1,
        "global population": 1,
        "india": 1,
        "search interest": 1,
        "group by": 1,
        "sql": 1,
        "population weights": 1,
        "pandas dataframes": 1,
        "ranking": 1
    },
    "search interest data": {
        "olympic sports": 2,
        "census population table": 1,
        "weighted average": 1,
        "search interest table": 1,
        "population": 1,
        "volleyball": 1,
        "interest": 1,
        "netherlands": 1,
        "china": 1,
        "global search interest": 1,
        "global population": 1,
        "india": 1,
        "search interest": 1,
        "group by": 1,
        "sql": 1,
        "population weights": 1,
        "pandas dataframes": 1,
        "ranking": 1
    },
    "finger exercise 1": {
        "3 digit numbers": 1,
        "numeral": 1,
        "product rule": 1,
        "combination formula": 1,
        "non-distinct balls": 1,
        "gaussian trick": 1,
        "counting": 1,
        "coin tossing": 1,
        "coin toss": 1,
        "bernoulli scheme": 1,
        "scipy stats library": 1,
        "probability distributions": 1,
        "discrete random variables": 1,
        "discrete distributions": 1,
        "fair coin": 1,
        "stats": 1,
        "100": 1,
        "scipy": 1,
        "coin flips": 1
    },
    "primitives": {
        "identity matrix": 2,
        "boolean mask": 2,
        "importing idiom": 1,
        "dictionary types": 1,
        "multidimensional arrays": 1,
        "ave": 1,
        "structured matrices": 1,
        "element types": 1,
        "eye() function": 1,
        "diag()": 1,
        "element type": 1,
        "commas": 1,
        "indexing notation": 1,
        "numpy array variables": 1,
        "integer indices": 1,
        "indirect addressing": 1,
        "indexing": 1
    },
    "numerical linear algebra algorithms": {
        "identity matrix": 2,
        "boolean mask": 2,
        "importing idiom": 1,
        "dictionary types": 1,
        "multidimensional arrays": 1,
        "ave": 1,
        "structured matrices": 1,
        "element types": 1,
        "eye() function": 1,
        "diag()": 1,
        "element type": 1,
        "commas": 1,
        "indexing notation": 1,
        "numpy array variables": 1,
        "integer indices": 1,
        "indirect addressing": 1,
        "indexing": 1
    },
    "python module": {
        "identity matrix": 2,
        "boolean mask": 2,
        "importing idiom": 1,
        "dictionary types": 1,
        "multidimensional arrays": 1,
        "ave": 1,
        "structured matrices": 1,
        "element types": 1,
        "eye() function": 1,
        "diag()": 1,
        "element type": 1,
        "commas": 1,
        "indexing notation": 1,
        "numpy array variables": 1,
        "integer indices": 1,
        "indirect addressing": 1,
        "indexing": 1
    },
    "even numbers": {
        "flower type": 2,
        "petal width": 1,
        "virginia flowers": 1,
        "sklearn package": 1,
        "versicolour": 1,
        "petal length": 1,
        "virginica": 1,
        "sepal length": 1,
        "setosa": 1,
        "target": 1,
        "count row": 1,
        "categorical variables": 1,
        "groupby function": 1,
        "mean stats": 1,
        "normalization": 1,
        "pairplot() function": 1,
        "scatterplot matrix": 1,
        "predictor variables": 1
    },
    "python list comprehension": {
        "flower type": 2,
        "petal width": 1,
        "virginia flowers": 1,
        "sklearn package": 1,
        "versicolour": 1,
        "petal length": 1,
        "virginica": 1,
        "sepal length": 1,
        "setosa": 1,
        "target": 1,
        "count row": 1,
        "categorical variables": 1,
        "groupby function": 1,
        "mean stats": 1,
        "normalization": 1,
        "pairplot() function": 1,
        "scatterplot matrix": 1,
        "predictor variables": 1
    },
    "new york": {
        "flower type": 2,
        "petal width": 1,
        "virginia flowers": 1,
        "sklearn package": 1,
        "versicolour": 1,
        "petal length": 1,
        "virginica": 1,
        "sepal length": 1,
        "setosa": 1,
        "target": 1,
        "count row": 1,
        "categorical variables": 1,
        "groupby function": 1,
        "mean stats": 1,
        "normalization": 1,
        "pairplot() function": 1,
        "scatterplot matrix": 1,
        "predictor variables": 1
    },
    "nevada": {
        "flower type": 2,
        "petal width": 1,
        "virginia flowers": 1,
        "sklearn package": 1,
        "versicolour": 1,
        "petal length": 1,
        "virginica": 1,
        "sepal length": 1,
        "setosa": 1,
        "target": 1,
        "count row": 1,
        "categorical variables": 1,
        "groupby function": 1,
        "mean stats": 1,
        "normalization": 1,
        "pairplot() function": 1,
        "scatterplot matrix": 1,
        "predictor variables": 1
    },
    "non-linear classification": {
        "fine tuning": 6,
        "parameter tuning": 6,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "non-linear classifier": {
        "fine tuning": 6,
        "parameter tuning": 6,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "linear decision boundary": {
        "fine tuning": 6,
        "parameter tuning": 6,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "double spiral problem": {
        "fine tuning": 6,
        "parameter tuning": 6,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "voting mechanism": {
        "fine tuning": 6,
        "parameter tuning": 6,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "matical representation": {
        "fine tuning": 6,
        "parameter tuning": 6,
        "random forest": 1,
        "estimators": 1,
        "ensembles": 1,
        "polynomial expansion": 1,
        "random forests": 1,
        "polynomial feature extraction": 1
    },
    "s": {
        "fair coin flip": 4,
        "width plot option": 2,
        "user guide": 2,
        "ts cell magic": 2,
        "odds ratio": 1,
        "embedding layers": 1,
        "neural network": 1,
        "data preprocessing": 1,
        "integers": 1,
        "maximum review length": 1,
        "feature vector": 1,
        "deep learning networks": 1
    },
    "characters": {
        "regexr": 4,
        "brackets": 2,
        "character classes": 2,
        "text snippet": 2,
        "shorthand character classes": 2,
        "anchor": 2,
        "character class": 2,
        "regex": 2
    },
    "word characters": {
        "regexr": 4,
        "brackets": 2,
        "character classes": 2,
        "text snippet": 2,
        "shorthand character classes": 2,
        "anchor": 2,
        "character class": 2,
        "regex": 2
    },
    "digit": {
        "regexr": 4,
        "brackets": 2,
        "character classes": 2,
        "text snippet": 2,
        "shorthand character classes": 2,
        "anchor": 2,
        "character class": 2,
        "regex": 2
    },
    "sampled training data": {
        "ridge regression": 3,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "multilinear regression": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1
    },
    "ridge problem": {
        "ridge regression": 3,
        "ridge method": 1,
        "alpha": 1,
        "weight": 1,
        "shrinking parameter": 1,
        "penalization parameter": 1,
        "regularization parameter": 1,
        "beta coefficients": 1,
        "ridge regressions": 1,
        "multilinear regression": 1,
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1
    },
    "data crunching tool": {
        "user exploration": 1,
        "structured data": 1,
        "scatterplot": 1,
        "survey responses": 1,
        "numeric features": 1,
        "simple line graph": 1,
        "uci machine learning": 1,
        "file contents": 1,
        "decision tree learning": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1
    },
    "class forums": {
        "user exploration": 1,
        "structured data": 1,
        "scatterplot": 1,
        "survey responses": 1,
        "numeric features": 1,
        "simple line graph": 1,
        "uci machine learning": 1,
        "file contents": 1,
        "decision tree learning": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1
    },
    "diagonal matrix": {
        "gaussian function": 1,
        "seismic disturbances": 1,
        "initial condition": 1,
        "spatial initial condition": 1,
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "cosine similarity": 1,
        "distance metric": 1,
        "cosine similarity score": 1,
        "lsi": 1,
        "reuters documents": 1,
        "emmed test": 1
    },
    "random forest classifier": {
        "probabilistic predictions": 3,
        "paremeters": 3,
        "randomforestclassifier": 2,
        "random forest classifier": 2,
        "average auc": 2,
        "code cell": 2,
        "pipeline anova rfc": 1,
        "anova filter": 1,
        "random forest classification": 1,
        "score function": 1
    },
    "exploration": {
        "horsepower": 4,
        "null values": 3,
        "horsepower column": 3,
        "internet": 3,
        "unique model years": 3,
        "model names": 1,
        "model": 1
    },
    "mining": {
        "horsepower": 4,
        "null values": 3,
        "horsepower column": 3,
        "internet": 3,
        "unique model years": 3,
        "model names": 1,
        "model": 1
    },
    "weight": {
        "horsepower": 4,
        "null values": 3,
        "horsepower column": 3,
        "internet": 3,
        "unique model years": 3,
        "model names": 1,
        "model": 1
    },
    "acceleration": {
        "horsepower": 4,
        "null values": 3,
        "horsepower column": 3,
        "internet": 3,
        "unique model years": 3,
        "model names": 1,
        "model": 1
    },
    "subtle outliers": {
        "pandas method": 5,
        "age": 3,
        "income": 3,
        "age mood": 1,
        "correlationship coefficient": 1,
        "stroger relationships": 1,
        "corrs variable": 1,
        "matplotlib visualizations": 1,
        "lambda expression": 1,
        "pand": 1
    },
    "data values": {
        "pandas method": 5,
        "age": 3,
        "income": 3,
        "age mood": 1,
        "correlationship coefficient": 1,
        "stroger relationships": 1,
        "corrs variable": 1,
        "matplotlib visualizations": 1,
        "lambda expression": 1,
        "pand": 1
    },
    "file io": {
        "memory consumption": 3,
        "generator function": 3,
        "filenames": 3,
        "with statement": 3,
        "word counting": 2,
        "word counts": 2,
        "tokenization": 2
    },
    "python programming language": {
        "plot command": 2,
        "bar chart": 2,
        "alcohol consumption": 2,
        "hist function": 2,
        "booleans": 1,
        "diseased patients": 1,
        "healthy patients": 1,
        "red dots": 1,
        "marker size": 1,
        "marker style": 1,
        "diseased people": 1,
        "python function": 1,
        "nested loop": 1,
        "attributes": 1
    },
    "noise distribution": {
        "discriminator": 2,
        "context manager": 2,
        "semantics": 2,
        "single adversarial training example": 2,
        "noise distribution": 2,
        "synthetic images": 2,
        "data distribution": 2,
        "generative adversarial training": 2,
        "concatenation": 1,
        "training data requirements": 1
    },
    "pandas plotting": {
        "cvlegend": 3,
        "barh plot type": 3,
        "value counts": 3,
        "regular bar plot": 3,
        "countplot": 2,
        "answer3b": 2,
        "noise violation": 2
    },
    "color channels": {
        "cantaloupes": 4,
        "vector dot products": 2,
        "berkeley bowl": 2,
        "bananas": 2,
        "fruit bowls": 2,
        "apples": 2,
        "sam": 2,
        "matrix expression": 2
    },
    "culus": {
        "partial derivative": 2,
        "berkeley bowl": 2,
        "cantaloupes": 2,
        "matrix multiplication": 1,
        "linear algebra knowledge": 1,
        "numpy matrices": 1,
        "vector dot products": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "fruit prices": 1,
        "final costs": 1,
        "fruit baskets": 1
    },
    "double dollar signs": {
        "partial derivative": 2,
        "berkeley bowl": 2,
        "cantaloupes": 2,
        "matrix multiplication": 1,
        "linear algebra knowledge": 1,
        "numpy matrices": 1,
        "vector dot products": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "fruit prices": 1,
        "final costs": 1,
        "fruit baskets": 1
    },
    "latex": {
        "partial derivative": 2,
        "berkeley bowl": 2,
        "cantaloupes": 2,
        "matrix multiplication": 1,
        "linear algebra knowledge": 1,
        "numpy matrices": 1,
        "vector dot products": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "fruit prices": 1,
        "final costs": 1,
        "fruit baskets": 1
    },
    "mult": {
        "partial derivative": 2,
        "berkeley bowl": 2,
        "cantaloupes": 2,
        "matrix multiplication": 1,
        "linear algebra knowledge": 1,
        "numpy matrices": 1,
        "vector dot products": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "fruit prices": 1,
        "final costs": 1,
        "fruit baskets": 1
    },
    "partial derivative": {
        "cantaloupes": 4,
        "vector dot products": 2,
        "berkeley bowl": 2,
        "bananas": 2,
        "fruit bowls": 2,
        "apples": 2,
        "sam": 2,
        "matrix expression": 2
    },
    "einstein notation": {
        "einstein notation": 4,
        "vectors": 2,
        "tensors": 2,
        "matrices": 2,
        "dot product": 2,
        "notational convention": 2,
        "summation sign": 2,
        "matrix multiplication": 2
    },
    "parentheses": {
        "dissimilarity": 2,
        "universities": 1,
        "imilar": 1,
        "trait": 1,
        "socioeconomic diversity": 1,
        "graduation rate": 1,
        "us department of": 1,
        "national average annual cost": 1,
        "national average": 1,
        "math module": 1,
        "regular expression syntax": 1,
        "challenge 14": 1,
        "metacharacters": 1,
        "parentheses": 1,
        "challenge 13": 1,
        "uring group skills": 1,
        "non-": 1
    },
    "network performance": {
        "learning rate loss": 2,
        "training method": 2,
        "network error": 2,
        "activation function": 2,
        "hidden layers": 2,
        "batch size": 2,
        "10000 element long vectors": 2,
        "stochastic gradient descent": 2,
        "connected layer": 2
    },
    "chart mark": {
        "altair": 5,
        "json representation": 2,
        "chart mark types": 1,
        "visualization channel": 1,
        "aggregate function": 1,
        "bar chart": 1,
        "histogtram": 1,
        "aggregate function count": 1,
        "bar plot": 1,
        "bin object": 1,
        "labels": 1,
        "axis object": 1,
        "scatter plot plot": 1
    },
    "point mark": {
        "altair": 5,
        "json representation": 2,
        "chart mark types": 1,
        "visualization channel": 1,
        "aggregate function": 1,
        "bar chart": 1,
        "histogtram": 1,
        "aggregate function count": 1,
        "bar plot": 1,
        "bin object": 1,
        "labels": 1,
        "axis object": 1,
        "scatter plot plot": 1
    },
    "gridsearchcv": {
        "gridsearchcv": 5,
        "confusion matrices": 2,
        "grid model": 2,
        "model selection": 2,
        "pre": 2,
        "hyperparameter tuning": 2,
        "randomforestregressor": 1,
        "shufflesplit": 1,
        "scaler": 1
    },
    "computer program": {
        "integers": 2,
        "python syntax": 2,
        "diter method": 2,
        "object thickness": 1,
        "medical applications": 1,
        "compton interactions": 1,
        "human body": 1,
        "photoelectric interactions": 1,
        "linear attenuation coefficient": 1,
        "rayleigh scattering": 1,
        "hounsfield unit": 1,
        "term project": 1,
        "numeric data": 1,
        "intger": 1,
        "base 10 integers": 1
    },
    "variable naming convention": {
        "computational graph": 4,
        "variable naming convention": 4,
        "exact variable names": 2,
        "local gradients": 2,
        "squared loss layer tasks": 2,
        "squared loss white box": 2,
        "squared loss black box": 2
    },
    "cvdow field": {
        "countplot": 2,
        "answer3b": 2,
        "noise violation": 2,
        "coolindex": 1,
        "vertical bar plot": 1,
        "noise violation calls": 1,
        "calls dataframe": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "pdf files": {
        "national database": 4,
        "us births": 2,
        "source online": 2,
        "hhs": 2,
        "name popularity": 2,
        "social security administration": 2,
        "name frequencies": 1,
        "pandas table": 1,
        "random sample": 1,
        "bar charts": 1
    },
    "pixel values": {
        "data format": 2,
        "euclidean distance": 2,
        "knn classifier": 2,
        "distance function": 2,
        "knn algorithm": 2,
        "function predict": 1,
        "predicted class value": 1,
        "nearestneighborsclassifier": 1,
        "function distance": 1,
        "test data": 1,
        "sk": 1,
        "image": 1,
        "knn process": 1
    },
    "mnist handwritten digit set": {
        "data format": 2,
        "euclidean distance": 2,
        "knn classifier": 2,
        "distance function": 2,
        "knn algorithm": 2,
        "function predict": 1,
        "predicted class value": 1,
        "nearestneighborsclassifier": 1,
        "function distance": 1,
        "test data": 1,
        "sk": 1,
        "image": 1,
        "knn process": 1
    },
    "image dataset": {
        "data format": 2,
        "euclidean distance": 2,
        "knn classifier": 2,
        "distance function": 2,
        "knn algorithm": 2,
        "function predict": 1,
        "predicted class value": 1,
        "nearestneighborsclassifier": 1,
        "function distance": 1,
        "test data": 1,
        "sk": 1,
        "image": 1,
        "knn process": 1
    },
    "airtime": {
        "random number generator": 6,
        "test sets": 4,
        "code cell": 3,
        "stats": 3,
        "unit tests": 2
    },
    "pig": {
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "procedural language": {
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "relational databases": {
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "hdfs": {
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "sql type scripts": {
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "rdbms": {
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "sqoop": {
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "document indexing": {
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "predictive modeling": {
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "log processing": {
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "google analytics": {
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "vm": {
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "map reduce job": {
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "hive hive": {
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "hadoop cluster": {
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "hadoop map reduce job": {
        "alice in wonderland word count": 1,
        "peter pan": 1,
        "word count": 1,
        "project gutenberg": 1,
        "hive": 1,
        "peter table sql drop table": 1,
        "textfile": 1,
        "word group": 1,
        "alice table sql drop table": 1,
        "word group by word": 1,
        "select word": 1,
        "data local": 1,
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "stepping interval": {
        "central finite different method": 3,
        "finite difference method": 3,
        "cancellation error": 3,
        "first order derivatives": 3,
        "approximation methods": 3,
        "fortran": 2,
        "matrices": 1
    },
    "finite difference method": {
        "central finite different method": 3,
        "finite difference method": 3,
        "cancellation error": 3,
        "first order derivatives": 3,
        "approximation methods": 3,
        "fortran": 2,
        "matrices": 1
    },
    "sissa machines": {
        "central finite different method": 3,
        "finite difference method": 3,
        "cancellation error": 3,
        "first order derivatives": 3,
        "approximation methods": 3,
        "fortran": 2,
        "matrices": 1
    },
    "finite differences": {
        "central finite different method": 3,
        "finite difference method": 3,
        "cancellation error": 3,
        "first order derivatives": 3,
        "approximation methods": 3,
        "fortran": 2,
        "matrices": 1
    },
    "central finite difference approximation": {
        "central finite different method": 3,
        "finite difference method": 3,
        "cancellation error": 3,
        "first order derivatives": 3,
        "approximation methods": 3,
        "fortran": 2,
        "matrices": 1
    },
    "central finite differences": {
        "central finite different method": 3,
        "finite difference method": 3,
        "cancellation error": 3,
        "first order derivatives": 3,
        "approximation methods": 3,
        "fortran": 2,
        "matrices": 1
    },
    "cancellation errors": {
        "central finite different method": 3,
        "finite difference method": 3,
        "cancellation error": 3,
        "first order derivatives": 3,
        "approximation methods": 3,
        "fortran": 2,
        "matrices": 1
    },
    "error plots": {
        "central finite different method": 3,
        "finite difference method": 3,
        "cancellation error": 3,
        "first order derivatives": 3,
        "approximation methods": 3,
        "fortran": 2,
        "matrices": 1
    },
    "cfd": {
        "central finite different method": 3,
        "finite difference method": 3,
        "cancellation error": 3,
        "first order derivatives": 3,
        "approximation methods": 3,
        "fortran": 2,
        "matrices": 1
    },
    "inverted": {
        "orthonormal basis": 4,
        "unit vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "dot product": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2
    },
    "1d arrays": {
        "orthonormal basis": 4,
        "unit vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "dot product": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2
    },
    "mathematical notation": {
        "orthonormal basis": 4,
        "unit vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "dot product": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2
    },
    "inner product": {
        "orthonormal basis": 4,
        "unit vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "dot product": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2
    },
    "norm": {
        "orthonormal basis": 4,
        "unit vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "dot product": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2
    },
    "unit vectors": {
        "orthonormal basis": 4,
        "unit vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "dot product": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2
    },
    "unit vector": {
        "orthonormal basis": 4,
        "unit vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "dot product": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2
    },
    "arbitrary vector": {
        "orthonormal basis": 4,
        "unit vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "dot product": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2
    },
    "orthogonal vectors": {
        "orthonormal basis": 4,
        "unit vectors": 2,
        "normality": 2,
        "orthogonality": 2,
        "dot product": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2
    },
    "performance metric": {
        "majority class classifier": 2,
        "false negatives": 2,
        "confusion matrix": 2,
        "true negatives": 2,
        "true positives": 2,
        "incorrect predictions": 2,
        "binary classification": 2,
        "false positives": 2,
        "quiz": 2
    },
    "correctly classified data points": {
        "majority class classifier": 2,
        "false negatives": 2,
        "confusion matrix": 2,
        "true negatives": 2,
        "true positives": 2,
        "incorrect predictions": 2,
        "binary classification": 2,
        "false positives": 2,
        "quiz": 2
    },
    "total data points": {
        "majority class classifier": 2,
        "false negatives": 2,
        "confusion matrix": 2,
        "true negatives": 2,
        "true positives": 2,
        "incorrect predictions": 2,
        "binary classification": 2,
        "false positives": 2,
        "quiz": 2
    },
    "majority": {
        "majority class classifier": 2,
        "false negatives": 2,
        "confusion matrix": 2,
        "true negatives": 2,
        "true positives": 2,
        "incorrect predictions": 2,
        "binary classification": 2,
        "false positives": 2,
        "quiz": 2
    },
    "baseline": {
        "majority class classifier": 2,
        "false negatives": 2,
        "confusion matrix": 2,
        "true negatives": 2,
        "true positives": 2,
        "incorrect predictions": 2,
        "binary classification": 2,
        "false positives": 2,
        "quiz": 2
    },
    "majority class classifier": {
        "majority class classifier": 2,
        "false negatives": 2,
        "confusion matrix": 2,
        "true negatives": 2,
        "true positives": 2,
        "incorrect predictions": 2,
        "binary classification": 2,
        "false positives": 2,
        "quiz": 2
    },
    "majority classifier": {
        "majority class classifier": 2,
        "false negatives": 2,
        "confusion matrix": 2,
        "true negatives": 2,
        "true positives": 2,
        "incorrect predictions": 2,
        "binary classification": 2,
        "false positives": 2,
        "quiz": 2
    },
    "majority class prediction": {
        "majority class classifier": 2,
        "false negatives": 2,
        "confusion matrix": 2,
        "true negatives": 2,
        "true positives": 2,
        "incorrect predictions": 2,
        "binary classification": 2,
        "false positives": 2,
        "quiz": 2
    },
    "logistic regression models": {
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "spam filter": {
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "model selection": {
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "kaggle evaluation": {
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "kaggle scores": {
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "testing tools": {
        "airtime": 3,
        "arrdelay": 3,
        "multivariate regresion model": 2,
        "predictor variable": 2,
        "regression model": 2,
        "random number generator": 1,
        "test sets": 1,
        "multiple independent variables": 1,
        "dependent variable": 1,
        "patsy formula": 1,
        "multivariate regression model": 1
    },
    "weighted average": {
        "census population table": 1,
        "weighted average": 1,
        "search interest table": 1,
        "olympic sports": 1,
        "population": 1,
        "volleyball": 1,
        "interest": 1,
        "netherlands": 1,
        "china": 1,
        "global search interest": 1,
        "global population": 1,
        "india": 1,
        "search interest": 1,
        "group by": 1,
        "sql": 1,
        "population weights": 1,
        "pandas dataframes": 1,
        "ranking": 1
    },
    "worldwide popularity": {
        "census population table": 1,
        "weighted average": 1,
        "search interest table": 1,
        "olympic sports": 1,
        "population": 1,
        "volleyball": 1,
        "interest": 1,
        "netherlands": 1,
        "china": 1,
        "global search interest": 1,
        "global population": 1,
        "india": 1,
        "search interest": 1,
        "group by": 1,
        "sql": 1,
        "population weights": 1,
        "pandas dataframes": 1,
        "ranking": 1
    },
    "search interest": {
        "census population table": 1,
        "weighted average": 1,
        "search interest table": 1,
        "olympic sports": 1,
        "population": 1,
        "volleyball": 1,
        "interest": 1,
        "netherlands": 1,
        "china": 1,
        "global search interest": 1,
        "global population": 1,
        "india": 1,
        "search interest": 1,
        "group by": 1,
        "sql": 1,
        "population weights": 1,
        "pandas dataframes": 1,
        "ranking": 1
    },
    "populations": {
        "census population table": 1,
        "weighted average": 1,
        "search interest table": 1,
        "olympic sports": 1,
        "population": 1,
        "volleyball": 1,
        "interest": 1,
        "netherlands": 1,
        "china": 1,
        "global search interest": 1,
        "global population": 1,
        "india": 1,
        "search interest": 1,
        "group by": 1,
        "sql": 1,
        "population weights": 1,
        "pandas dataframes": 1,
        "ranking": 1
    },
    "xor gate": {
        "l2 regularization": 4,
        "momentum term": 4,
        "weight update": 2,
        "activation function": 2,
        "l2 regularization term": 2,
        "regularizatino constant": 2,
        "batch size": 2
    },
    "partiular architecture": {
        "l2 regularization": 4,
        "momentum term": 4,
        "weight update": 2,
        "activation function": 2,
        "l2 regularization term": 2,
        "regularizatino constant": 2,
        "batch size": 2
    },
    "small multiples": {
        "global matplotlib plotting": 1,
        "seaborn package": 1,
        "notebook": 1,
        "frequency distribution": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "aggregation functions": {
        "global matplotlib plotting": 1,
        "seaborn package": 1,
        "notebook": 1,
        "frequency distribution": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "group properties": {
        "global matplotlib plotting": 1,
        "seaborn package": 1,
        "notebook": 1,
        "frequency distribution": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "atomic properties": {
        "global matplotlib plotting": 1,
        "seaborn package": 1,
        "notebook": 1,
        "frequency distribution": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "global properties": {
        "global matplotlib plotting": 1,
        "seaborn package": 1,
        "notebook": 1,
        "frequency distribution": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "mpg": {
        "global matplotlib plotting": 1,
        "seaborn package": 1,
        "notebook": 1,
        "frequency distribution": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "ipython notebooks": {
        "vectorised functions": 3,
        "execution time": 3,
        "first babies": 2,
        "national survey of family growth": 2,
        "first pregnancies": 1,
        "variable outcome": 1,
        "variable pregordr": 1,
        "implementation": 1,
        "loops": 1,
        "execution speed": 1,
        "linear regression implementation": 1
    },
    "numerical variable": {
        "line plot": 2,
        "bar plot": 2,
        "style sheet": 2,
        "solid green line": 2,
        "indus": 2,
        "housing data": 2,
        "blue dashed line": 2,
        "matplotlib commands": 1,
        "bar chart": 1,
        "horizontal bars": 1
    },
    "airline data set": {
        "multiindex": 3,
        "visualize outliers": 2,
        "inliers pluts outliers": 2,
        "iers": 2,
        "data point": 1,
        "inliers": 1,
        "bivariate distribution": 1,
        "outlier": 1,
        "outliers": 1,
        "noise points": 1,
        "dbscan algorithm": 1,
        "cluster analysis": 1
    },
    "feature variables": {
        "women": 6,
        "titanic dataset feature": 2,
        "bar plot": 2,
        "bar plots": 2,
        "titanic": 2,
        "men": 1,
        "kaggle": 1,
        "passengerid": 1
    },
    "neural noise": {
        "higher learning rate": 8,
        "polarity cutoff": 4,
        "noise reduction": 3,
        "6": 2
    },
    "topic modeling": {
        "tfidfvectorizer": 2,
        "bigrams": 2,
        "unigrams": 2,
        "document frequency": 2,
        "document term matrix": 2,
        "newsgroup": 1,
        "english stop words": 1,
        "json": 1,
        "reuters data": 1,
        "stop words": 1,
        "non-negative matrix factorization": 1,
        "unit probability": 1
    },
    "fair coin toss": {
        "fair coin": 3,
        "coin tosses": 2,
        "labeled countplot": 2,
        "1d numpy array": 1,
        "random samples": 1,
        "scipy stats library": 1,
        "probability distributions": 1,
        "discrete random variables": 1,
        "discrete distributions": 1,
        "stats": 1,
        "100": 1,
        "scipy": 1,
        "coin flips": 1
    },
    "medical data": {
        "plot command": 2,
        "bar chart": 2,
        "alcohol consumption": 2,
        "hist function": 2,
        "booleans": 1,
        "diseased patients": 1,
        "healthy patients": 1,
        "red dots": 1,
        "marker size": 1,
        "marker style": 1,
        "diseased people": 1,
        "python function": 1,
        "nested loop": 1
    },
    "tool bar": {
        "plot command": 2,
        "bar chart": 2,
        "alcohol consumption": 2,
        "hist function": 2,
        "booleans": 1,
        "diseased patients": 1,
        "healthy patients": 1,
        "red dots": 1,
        "marker size": 1,
        "marker style": 1,
        "diseased people": 1,
        "python function": 1,
        "nested loop": 1
    },
    "alkaline phosphotase": {
        "plot command": 2,
        "bar chart": 2,
        "alcohol consumption": 2,
        "hist function": 2,
        "booleans": 1,
        "diseased patients": 1,
        "healthy patients": 1,
        "red dots": 1,
        "marker size": 1,
        "marker style": 1,
        "diseased people": 1,
        "python function": 1,
        "nested loop": 1
    },
    "blood tests": {
        "plot command": 2,
        "bar chart": 2,
        "alcohol consumption": 2,
        "hist function": 2,
        "booleans": 1,
        "diseased patients": 1,
        "healthy patients": 1,
        "red dots": 1,
        "marker size": 1,
        "marker style": 1,
        "diseased people": 1,
        "python function": 1,
        "nested loop": 1
    },
    "matrix variable": {
        "plot command": 2,
        "bar chart": 2,
        "alcohol consumption": 2,
        "hist function": 2,
        "booleans": 1,
        "diseased patients": 1,
        "healthy patients": 1,
        "red dots": 1,
        "marker size": 1,
        "marker style": 1,
        "diseased people": 1,
        "python function": 1,
        "nested loop": 1
    },
    "medical diagnostic test": {
        "plot command": 2,
        "bar chart": 2,
        "alcohol consumption": 2,
        "hist function": 2,
        "booleans": 1,
        "diseased patients": 1,
        "healthy patients": 1,
        "red dots": 1,
        "marker size": 1,
        "marker style": 1,
        "diseased people": 1,
        "python function": 1,
        "nested loop": 1
    },
    "mean corpuscular volume": {
        "plot command": 2,
        "bar chart": 2,
        "alcohol consumption": 2,
        "hist function": 2,
        "booleans": 1,
        "diseased patients": 1,
        "healthy patients": 1,
        "red dots": 1,
        "marker size": 1,
        "marker style": 1,
        "diseased people": 1,
        "python function": 1,
        "nested loop": 1
    },
    "aspartate aminotransferase": {
        "plot command": 2,
        "bar chart": 2,
        "alcohol consumption": 2,
        "hist function": 2,
        "booleans": 1,
        "diseased patients": 1,
        "healthy patients": 1,
        "red dots": 1,
        "marker size": 1,
        "marker style": 1,
        "diseased people": 1,
        "python function": 1,
        "nested loop": 1
    },
    "alamine aminotransferase": {
        "plot command": 2,
        "bar chart": 2,
        "alcohol consumption": 2,
        "hist function": 2,
        "booleans": 1,
        "diseased patients": 1,
        "healthy patients": 1,
        "red dots": 1,
        "marker size": 1,
        "marker style": 1,
        "diseased people": 1,
        "python function": 1,
        "nested loop": 1
    },
    "alcoholic beverages": {
        "plot command": 2,
        "bar chart": 2,
        "alcohol consumption": 2,
        "hist function": 2,
        "booleans": 1,
        "diseased patients": 1,
        "healthy patients": 1,
        "red dots": 1,
        "marker size": 1,
        "marker style": 1,
        "diseased people": 1,
        "python function": 1,
        "nested loop": 1
    },
    "sigmoid activation function": {
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "mlp": 1,
        "hidden layer": 1,
        "non-linear activation function": 1,
        "embedding layers": 1,
        "neural network": 1,
        "data preprocessing": 1,
        "integers": 1,
        "maximum review length": 1,
        "feature vector": 1,
        "deep learning networks": 1
    },
    "mlp": {
        "mlp": 3,
        "decision function": 2,
        "weights": 2,
        "hidden layer": 2,
        "non-linear activation function": 2,
        "gaussian": 1,
        "misclassifications": 1,
        "convolutional networks": 1,
        "mlp model": 1,
        "test": 1,
        "mis": 1
    },
    "religious landscape study": {
        "religion": 3,
        "income": 3,
        "religious landscape study": 2,
        "pew research center": 2,
        "tidy data repository": 2,
        "religion column": 2,
        "q16 column": 1,
        "income columns": 1,
        "seaborn countplot": 1
    },
    "pew research center": {
        "religion": 3,
        "income": 3,
        "religious landscape study": 2,
        "pew research center": 2,
        "tidy data repository": 2,
        "religion column": 2,
        "q16 column": 1,
        "income columns": 1,
        "seaborn countplot": 1
    },
    "website updates": {
        "ooober": 9,
        "ridesharing company": 3,
        "public relations office": 3,
        "scandal patterns": 1,
        "poisson process": 1
    },
    "radiation particles": {
        "ooober": 9,
        "ridesharing company": 3,
        "public relations office": 3,
        "scandal patterns": 1,
        "poisson process": 1
    },
    "poisson process model": {
        "ooober": 9,
        "ridesharing company": 3,
        "public relations office": 3,
        "scandal patterns": 1,
        "poisson process": 1
    },
    "rain drops": {
        "ooober": 9,
        "ridesharing company": 3,
        "public relations office": 3,
        "scandal patterns": 1,
        "poisson process": 1
    },
    "homework 5": {
        "ooober": 9,
        "ridesharing company": 3,
        "public relations office": 3,
        "scandal patterns": 1,
        "poisson process": 1
    },
    "online store": {
        "ooober": 9,
        "ridesharing company": 3,
        "public relations office": 3,
        "scandal patterns": 1,
        "poisson process": 1
    },
    "integer division": {
        "coding practice": 3,
        "integer division": 2,
        "mathematical operations": 2,
        "symbolic math": 1,
        "integer division operations": 1,
        "integer operations": 1,
        "fractions": 1,
        "decimals": 1,
        "non-integer numbers": 1,
        "multiplication": 1,
        "subtraction": 1,
        "division": 1,
        "floating point numbers": 1
    },
    "rotation argument": {
        "vertical bar plot": 2,
        "coolindex": 1,
        "noise violation": 1,
        "seaborn plot": 1,
        "cvlegend": 1,
        "total noise violations": 1,
        "noise violation calls": 1,
        "calls dataframe": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "correlations": {
        "passenger class": 2,
        "alchohol beer": 1,
        "price": 1,
        "women": 1,
        "wealth": 1,
        "age distributions": 1,
        "hypothesis testing": 1,
        "statistical method": 1,
        "internet": 1,
        "statistical hypothesis": 1,
        "null hypothesis": 1,
        "hypothesis test": 1,
        "age": 1,
        "alternative hypothesis": 1,
        "sex": 1,
        "embarked columns": 1
    },
    "randomforestregressor model": {
        "lasso": 3,
        "sklearn object": 3,
        "scaler object": 3,
        "gridsearchcv": 2,
        "randomforestregressor": 1,
        "shufflesplit": 1,
        "scaler": 1,
        "model selection": 1,
        "pre": 1,
        "hyperparameter tuning": 1
    },
    "heatmapwithtime": {
        "heatmapwithtime": 4,
        "heatmap": 3,
        "usa": 2,
        "folium map": 2,
        "dummy location data": 1,
        "dates": 1,
        "constructor function": 1,
        "berkeley calls": 1,
        "transposed latitudes": 1,
        "call location data": 1
    },
    "simulated results": {
        "first babies": 3,
        "test statistic": 2,
        "null hypothesis": 2,
        "pregnancy length": 1,
        "random sampling": 1,
        "simulated samples": 1,
        "birth weight": 1,
        "age": 1,
        "correlation": 1,
        "statistical significance": 1,
        "false negative rate": 1,
        "nsfg data": 1,
        "hypothesis test": 1
    },
    "upper surface": {
        "pressure distribution": 1,
        "aerofoil": 1,
        "lift": 1,
        "wing area": 1,
        "2d aerofoil": 1,
        "angle of attack": 1,
        "reynolds number": 1,
        "drag coefficients": 1,
        "pressure coefficient profile": 1,
        "viscous boundary layer solver": 1,
        "drag coefficient": 1,
        "kinematic viscosity": 1,
        "sea level kinematic visosity": 1,
        "drag calculation": 1,
        "correspnding lift to drag ratios": 1,
        "moving least squares curve": 1,
        "iteration": 1
    },
    "control point weightings": {
        "pressure distribution": 1,
        "aerofoil": 1,
        "lift": 1,
        "wing area": 1,
        "2d aerofoil": 1,
        "angle of attack": 1,
        "reynolds number": 1,
        "drag coefficients": 1,
        "pressure coefficient profile": 1,
        "viscous boundary layer solver": 1,
        "drag coefficient": 1,
        "kinematic viscosity": 1,
        "sea level kinematic visosity": 1,
        "drag calculation": 1,
        "correspnding lift to drag ratios": 1,
        "moving least squares curve": 1,
        "iteration": 1
    },
    "control polygon": {
        "pressure distribution": 1,
        "aerofoil": 1,
        "lift": 1,
        "wing area": 1,
        "2d aerofoil": 1,
        "angle of attack": 1,
        "reynolds number": 1,
        "drag coefficients": 1,
        "pressure coefficient profile": 1,
        "viscous boundary layer solver": 1,
        "drag coefficient": 1,
        "kinematic viscosity": 1,
        "sea level kinematic visosity": 1,
        "drag calculation": 1,
        "correspnding lift to drag ratios": 1,
        "moving least squares curve": 1,
        "iteration": 1
    },
    "lower surface": {
        "pressure distribution": 1,
        "aerofoil": 1,
        "lift": 1,
        "wing area": 1,
        "2d aerofoil": 1,
        "angle of attack": 1,
        "reynolds number": 1,
        "drag coefficients": 1,
        "pressure coefficient profile": 1,
        "viscous boundary layer solver": 1,
        "drag coefficient": 1,
        "kinematic viscosity": 1,
        "sea level kinematic visosity": 1,
        "drag calculation": 1,
        "correspnding lift to drag ratios": 1,
        "moving least squares curve": 1,
        "iteration": 1
    },
    "lift coefficient": {
        "pressure distribution": 1,
        "aerofoil": 1,
        "lift": 1,
        "wing area": 1,
        "2d aerofoil": 1,
        "angle of attack": 1,
        "reynolds number": 1,
        "drag coefficients": 1,
        "pressure coefficient profile": 1,
        "viscous boundary layer solver": 1,
        "drag coefficient": 1,
        "kinematic viscosity": 1,
        "sea level kinematic visosity": 1,
        "drag calculation": 1,
        "correspnding lift to drag ratios": 1,
        "moving least squares curve": 1,
        "iteration": 1
    },
    "race car wing": {
        "pressure distribution": 1,
        "aerofoil": 1,
        "lift": 1,
        "wing area": 1,
        "2d aerofoil": 1,
        "angle of attack": 1,
        "reynolds number": 1,
        "drag coefficients": 1,
        "pressure coefficient profile": 1,
        "viscous boundary layer solver": 1,
        "drag coefficient": 1,
        "kinematic viscosity": 1,
        "sea level kinematic visosity": 1,
        "drag calculation": 1,
        "correspnding lift to drag ratios": 1,
        "moving least squares curve": 1,
        "iteration": 1
    },
    "aerofoil": {
        "pressure distribution": 1,
        "aerofoil": 1,
        "lift": 1,
        "wing area": 1,
        "2d aerofoil": 1,
        "angle of attack": 1,
        "reynolds number": 1,
        "drag coefficients": 1,
        "pressure coefficient profile": 1,
        "viscous boundary layer solver": 1,
        "drag coefficient": 1,
        "kinematic viscosity": 1,
        "sea level kinematic visosity": 1,
        "drag calculation": 1,
        "correspnding lift to drag ratios": 1,
        "moving least squares curve": 1,
        "iteration": 1
    },
    "angle of attack": {
        "pressure distribution": 1,
        "aerofoil": 1,
        "lift": 1,
        "wing area": 1,
        "2d aerofoil": 1,
        "angle of attack": 1,
        "reynolds number": 1,
        "drag coefficients": 1,
        "pressure coefficient profile": 1,
        "viscous boundary layer solver": 1,
        "drag coefficient": 1,
        "kinematic viscosity": 1,
        "sea level kinematic visosity": 1,
        "drag calculation": 1,
        "correspnding lift to drag ratios": 1,
        "moving least squares curve": 1,
        "iteration": 1
    },
    "upper surface control point": {
        "pressure distribution": 1,
        "aerofoil": 1,
        "lift": 1,
        "wing area": 1,
        "2d aerofoil": 1,
        "angle of attack": 1,
        "reynolds number": 1,
        "drag coefficients": 1,
        "pressure coefficient profile": 1,
        "viscous boundary layer solver": 1,
        "drag coefficient": 1,
        "kinematic viscosity": 1,
        "sea level kinematic visosity": 1,
        "drag calculation": 1,
        "correspnding lift to drag ratios": 1,
        "moving least squares curve": 1,
        "iteration": 1
    },
    "location": {
        "http get request": 2,
        "web browser": 1,
        "http request": 1,
        "json geoip request": 1,
        "ip address": 1,
        "get request": 1,
        "python requests library": 1,
        "quandl": 1,
        "requests": 1,
        "github credentials": 1,
        "rental prices": 1,
        "zillow dataset": 1,
        "python variable": 1,
        "quand": 1,
        "json": 1,
        "andl": 1
    },
    "extra credit tests": {
        "keyword argument": 2,
        "valueerror": 1,
        "typeerror": 1,
        "extra credit": 1,
        "while loop": 1,
        "gcd": 1,
        "euclidean algorithm": 1,
        "google books": 1,
        "modulo operator": 1,
        "positive integers": 1,
        "positional arguments": 1,
        "recursion": 1,
        "positional argument": 1,
        "slicing": 1,
        "arange": 1,
        "prime numbers": 1
    },
    "vectorised functions": {
        "execution time": 6,
        "vectorised functions": 5,
        "execution speed": 2,
        "linear regression implementation": 2,
        "implementation": 1,
        "loops": 1
    },
    "combinations": {
        "combination formula": 1,
        "non-distinct balls": 1,
        "finger exercise solution": 1,
        "gaussian trick": 1,
        "counting": 1,
        "coin tossing": 1,
        "coin toss": 1,
        "bernoulli scheme": 1,
        "scipy stats library": 1,
        "probability distributions": 1,
        "discrete random variables": 1,
        "discrete distributions": 1,
        "fair coin": 1,
        "stats": 1,
        "100": 1,
        "scipy": 1,
        "coin flips": 1
    },
    "spark context": {
        "ticker names": 3,
        "tickers": 2,
        "tickerinfo": 2,
        "test lists": 1,
        "training examples": 1,
        "test list": 1,
        "test examples": 1,
        "train example": 1,
        "tick": 1,
        "diff rolumns": 1,
        "company name": 1,
        "sector ids": 1,
        "sector id": 1
    },
    "import dependencies": {
        "ticker names": 3,
        "tickers": 2,
        "tickerinfo": 2,
        "test lists": 1,
        "training examples": 1,
        "test list": 1,
        "test examples": 1,
        "train example": 1,
        "tick": 1,
        "diff rolumns": 1,
        "company name": 1,
        "sector ids": 1,
        "sector id": 1
    },
    "stock price": {
        "ticker names": 3,
        "tickers": 2,
        "tickerinfo": 2,
        "test lists": 1,
        "training examples": 1,
        "test list": 1,
        "test examples": 1,
        "train example": 1,
        "tick": 1,
        "diff rolumns": 1,
        "company name": 1,
        "sector ids": 1,
        "sector id": 1
    },
    "sp500": {
        "ticker names": 3,
        "tickers": 2,
        "tickerinfo": 2,
        "test lists": 1,
        "training examples": 1,
        "test list": 1,
        "test examples": 1,
        "train example": 1,
        "tick": 1,
        "diff rolumns": 1,
        "company name": 1,
        "sector ids": 1,
        "sector id": 1
    },
    "partition columns": {
        "ticker names": 3,
        "tickers": 2,
        "tickerinfo": 2,
        "test lists": 1,
        "training examples": 1,
        "test list": 1,
        "test examples": 1,
        "train example": 1,
        "tick": 1,
        "diff rolumns": 1,
        "company name": 1,
        "sector ids": 1,
        "sector id": 1
    },
    "multinomialnb": {
        "confusion matrix": 5,
        "pipeline": 3,
        "multinomialnb": 2,
        "countvectorizer": 2,
        "tfidftransformer": 2,
        "train test split": 2
    },
    "differential expression": {
        "standard deviations": 3,
        "gene ids": 1,
        "gene ontology website": 1,
        "ontology enrichment": 1,
        "gene ontology enrichment": 1,
        "fpkm": 1,
        "gene expression": 1,
        "featurecounts": 1,
        "nonzero differences": 1,
        "gene id version number": 1,
        "gencode": 1,
        "gencode ids": 1,
        "ensembl ids": 1,
        "immune cell": 1
    },
    "decision tree learning": {
        "code cell": 2,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1,
        "string type": 1,
        "list comprehensions": 1,
        "str()": 1,
        "iterations": 1,
        "conditionals": 1
    },
    "points": {
        "computation time": 4,
        "nearest neighbor algorithm": 3,
        "digit recognition task": 2,
        "speedup": 2,
        "optimization": 2,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1
    },
    "distance computation": {
        "computation time": 3,
        "speedup": 3,
        "optimization": 2,
        "function imshow": 2,
        "predicted labels": 2,
        "nearest neighbor implementation": 2,
        "nearest neighbor algorithm": 2
    },
    "integrals": {
        "mean value": 3,
        "integral table": 3,
        "inverse trig functions": 2,
        "sympy": 2,
        "integrals": 2,
        "limit definition": 1,
        "derivative": 1,
        "nth fibonicci number": 1,
        "series": 1
    },
    "express": {
        "string methods": 3,
        "string values": 2,
        "replace method": 1,
        "string value": 1,
        "final expression": 1,
        "zfill": 1,
        "stackoverflow": 1,
        "stack overflow": 1,
        "decimal point": 1,
        "conversion function": 1,
        "len": 1,
        "pi": 1,
        "natural logarithm": 1
    },
    "assignment statements": {
        "string methods": 3,
        "string values": 2,
        "replace method": 1,
        "string value": 1,
        "final expression": 1,
        "zfill": 1,
        "stackoverflow": 1,
        "stack overflow": 1,
        "decimal point": 1,
        "conversion function": 1,
        "len": 1,
        "pi": 1,
        "natural logarithm": 1
    },
    "print statements": {
        "string methods": 3,
        "string values": 2,
        "replace method": 1,
        "string value": 1,
        "final expression": 1,
        "zfill": 1,
        "stackoverflow": 1,
        "stack overflow": 1,
        "decimal point": 1,
        "conversion function": 1,
        "len": 1,
        "pi": 1,
        "natural logarithm": 1
    },
    "value function": {
        "value iteration": 3,
        "randomly generated mdp": 3,
        "linear system": 2,
        "linear equation": 2,
        "state value function": 2,
        "exact policy iteration": 2,
        "policy iteration": 2
    },
    "value iteration update": {
        "value iteration": 3,
        "randomly generated mdp": 3,
        "linear system": 2,
        "linear equation": 2,
        "state value function": 2,
        "exact policy iteration": 2,
        "policy iteration": 2
    },
    "bellman backup operator value operator": {
        "value iteration": 3,
        "randomly generated mdp": 3,
        "linear system": 2,
        "linear equation": 2,
        "state value function": 2,
        "exact policy iteration": 2,
        "policy iteration": 2
    },
    "optimal value function": {
        "value iteration": 3,
        "randomly generated mdp": 3,
        "linear system": 2,
        "linear equation": 2,
        "state value function": 2,
        "exact policy iteration": 2,
        "policy iteration": 2
    },
    "misclassifications": {
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 1
    },
    "data labels": {
        "vector representation": 5,
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 1
    },
    "scipy stack": {
        "array computation package": 1,
        "fourier transforms": 1,
        "linear algebra": 1,
        "random numbers": 1,
        "solvers": 1,
        "interpolation routines": 1,
        "spare matrices": 1,
        "optimization": 1,
        "scipy": 1,
        "signal processing methods": 1,
        "basic differential equations": 1,
        "numeric integration": 1,
        "matlab": 1,
        "python program": 1,
        "united states": 1,
        "canada": 1
    },
    "numpy scipy matplotlib": {
        "array computation package": 1,
        "fourier transforms": 1,
        "linear algebra": 1,
        "random numbers": 1,
        "solvers": 1,
        "interpolation routines": 1,
        "spare matrices": 1,
        "optimization": 1,
        "scipy": 1,
        "signal processing methods": 1,
        "basic differential equations": 1,
        "numeric integration": 1,
        "matlab": 1,
        "python program": 1,
        "united states": 1,
        "canada": 1
    },
    "item price": {
        "item price type": 8,
        "lambda function": 4,
        "item price": 4
    },
    "fivethirtyeight": {
        "average unemployment rate": 3,
        "matplotlib plots": 3,
        "majors": 3,
        "low wage jobs": 3,
        "employment rates": 2,
        "women": 1,
        "part time rate": 1
    },
    "linear regression coefficients": {
        "linear regression equation": 1,
        "cutoff value": 1,
        "linear regression line": 1,
        "0 class": 1,
        "predicted probabilities": 1,
        "predicted probability": 1,
        "continuous response": 1,
        "binary response": 1,
        "log function": 1,
        "logistic function": 1,
        "negative coefficients": 1,
        "probability": 1,
        "positive coefficients": 1,
        "logistic regression beta values": 1,
        "categorical features": 1,
        "logistic curve": 1
    },
    "optimal path": {
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "mcp": {
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "ransac transform estimation": {
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "random element": {
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "negative mask": {
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "numpy masked array conventions": {
        "contiguous regions": 3,
        "minimal cost path": 3,
        "label of interest": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "basic string exercises": {
        "honour code": 4,
        "assertions": 4,
        "edsa honour code": 2,
        "breach of contract": 2,
        "donuts": 2,
        "int count": 2
    },
    "exponentially weighted functions": {
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "exponentialy weighted rolling functions": {
        "decay factor": 3,
        "exponentially weighted functions": 3,
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "economic data applications": {
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "ebola deaths": {
        "missing data values": 3,
        "forward fill": 3,
        "backfill": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "input": {
        "variable names": 2,
        "underscores": 2,
        "alphanumeric characters": 2,
        "python assert": 2,
        "column variables": 1,
        "valid variable names": 1,
        "equals sign": 1,
        "input string": 1,
        "equality string": 1,
        "fasta file": 1,
        "sequence text combination": 1,
        "blast executions": 1
    },
    "vertical bar plot": {
        "countplot": 2,
        "answer3b": 2,
        "noise violation": 2,
        "noise violation calls": 1,
        "calls dataframe": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "unfilled features": {
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2
    },
    "email address": {
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2
    },
    "quantified salary": {
        "ellipses": 2,
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2,
        "emails": 2,
        "optional exercises": 2,
        "email": 2
    },
    "correlation analysis": {
        "correlation matrix": 4,
        "timeseries": 3,
        "correlations": 1,
        "linear operations": 1,
        "graph lasso": 1,
        "numpy method": 1,
        "normalized data": 1,
        "diagonal pattern": 1,
        "affinity propagation": 1,
        "similarity scores": 1,
        "correlation coefficients": 1
    },
    "full training loop solution task": {
        "discriminator": 2,
        "context manager": 2,
        "semantics": 2,
        "single adversarial training example": 2,
        "noise distribution": 2,
        "synthetic images": 2,
        "data distribution": 2,
        "generative adversarial training": 2
    },
    "dataframe methods": {
        "data input": 4,
        "data output": 3,
        "sql expression": 3,
        "group": 3,
        "groupeddata operations": 3
    },
    "code cells": {
        "python code": 2,
        "average auc": 1,
        "code cell": 1,
        "code cells": 1,
        "print function": 1,
        "parentheses": 1,
        "kernel": 1,
        "python interpreter": 1,
        "kernel state": 1,
        "magics": 1,
        "ipython commands": 1,
        "keyboard shortcuts": 1,
        "user interface tour": 1,
        "coding assignments": 1,
        "test cells": 1
    },
    "input variable": {
        "tensorflow": 3,
        "mnist dataset": 1,
        "bias vectors": 1,
        "gradient descent training": 1,
        "softmax regression function": 1,
        "softmax implementation": 1,
        "negative log probability": 1,
        "softmax regression": 1,
        "classification function": 1,
        "cross entropy loss": 1,
        "learning rate": 1,
        "gradient descent": 1,
        "cross entropy loss function": 1,
        "tutorials": 1
    },
    "ly": {
        "close price": 5,
        "bank": 3,
        "heatmap": 2,
        "bank of america": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "morgan stanley": 1,
        "bollinger band plot": 1
    },
    "visualization libraries": {
        "close price": 5,
        "bank": 3,
        "heatmap": 2,
        "bank of america": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "morgan stanley": 1,
        "bollinger band plot": 1
    },
    "cufflinks": {
        "close price": 5,
        "bank": 3,
        "heatmap": 2,
        "bank of america": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "morgan stanley": 1,
        "bollinger band plot": 1
    },
    "transient diffusion": {
        "2d system": 2,
        "diffusion coefficient": 2,
        "flux": 2,
        "1d vector equation system": 2,
        "linear equation solver": 2,
        "linear index": 2,
        "timestep size": 2,
        "simulation": 2
    },
    "eigenpairs": {
        "eigenvectors": 2,
        "pca": 2,
        "eigenvalues": 2,
        "axes": 1,
        "lowest eigenvalues": 1,
        "eigenpairs": 1,
        "explained variance": 1,
        "principal components": 1,
        "information": 1,
        "first principal component": 1,
        "second principal component": 1,
        "projection matrix": 1,
        "concatenated top k eigenvectors": 1
    },
    "interact exercise 3": {
        "constant velocity wave": 2,
        "non-linear wave equations": 2,
        "py": 2,
        "soliton": 2,
        "2d array": 2,
        "2d numpy array": 2,
        "phi": 2,
        "indexing argument": 2
    },
    "animation": {
        "constant velocity wave": 2,
        "non-linear wave equations": 2,
        "py": 2,
        "soliton": 2,
        "2d array": 2,
        "2d numpy array": 2,
        "phi": 2,
        "indexing argument": 2
    },
    "base model": {
        "extratree": 2,
        "decision rules": 2,
        "decisiontreeregression": 2,
        "decision trees": 2,
        "decisiontreeregressor": 2,
        "important features": 2,
        "importance weight": 2,
        "validation data": 2
    },
    "time visibility": {
        "code cell": 3,
        "test sets": 3,
        "vectorized way": 2,
        "big data": 2,
        "numerical operations": 2,
        "iterrows()": 2,
        "returned dataframes": 1
    },
    "ots": {
        "orthonormal basis": 4,
        "line plot": 2,
        "bar plot": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2,
        "horizontal bars": 1
    },
    "user exploration": {
        "structured data": 1,
        "scatterplot": 1,
        "numeric features": 1,
        "simple line graph": 1,
        "uci machine learning": 1,
        "file contents": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1
    },
    "student alcohol consumption": {
        "uci": 5,
        "lambda function": 3,
        "fjob": 3,
        "boolean value": 2,
        "majority": 2
    },
    "apple stock": {
        "variable apple": 5,
        "datetime type": 4,
        "date column": 4,
        "duplicate dates": 2
    },
    "reflect database": {
        "list comprehensions": 3,
        "unpack": 3,
        "ples": 3,
        "count": 2,
        "emoji score": 2,
        "horizontal bar chart": 2
    },
    "gaussianprocess()": {
        "lassocv": 5,
        "colored image": 4,
        "train set": 4,
        "fine tuning": 1,
        "parameter tuning": 1
    },
    "confidance intervals": {
        "lassocv": 5,
        "colored image": 4,
        "train set": 4,
        "fine tuning": 1,
        "parameter tuning": 1
    },
    "random": {
        "gaussian discriminant analysis": 2,
        "quadratic discrimination boundary": 2,
        "covariance matrix": 2,
        "likelihood ratio test": 2,
        "gaussian distributions": 2,
        "simulated data": 2,
        "quadratic discriminant analysis": 2,
        "class distributions": 1
    },
    "class labels": {
        "gaussian discriminant analysis": 2,
        "quadratic discrimination boundary": 2,
        "covariance matrix": 2,
        "likelihood ratio test": 2,
        "gaussian distributions": 2,
        "simulated data": 2,
        "quadratic discriminant analysis": 2,
        "class distributions": 1
    },
    "chart mark types": {
        "altair": 4,
        "visualization channel": 1,
        "json representation": 1,
        "aggregate function": 1,
        "bar chart": 1,
        "histogtram": 1,
        "aggregate function count": 1,
        "bar plot": 1,
        "bin object": 1,
        "labels": 1,
        "axis object": 1,
        "scatter plot plot": 1
    },
    "visual encodings": {
        "altair": 4,
        "visualization channel": 1,
        "json representation": 1,
        "aggregate function": 1,
        "bar chart": 1,
        "histogtram": 1,
        "aggregate function count": 1,
        "bar plot": 1,
        "bin object": 1,
        "labels": 1,
        "axis object": 1,
        "scatter plot plot": 1
    },
    "overlapping circles": {
        "altair": 4,
        "visualization channel": 1,
        "json representation": 1,
        "aggregate function": 1,
        "bar chart": 1,
        "histogtram": 1,
        "aggregate function count": 1,
        "bar plot": 1,
        "bin object": 1,
        "labels": 1,
        "axis object": 1,
        "scatter plot plot": 1
    },
    "facet plots": {
        "altair": 4,
        "visualization channel": 1,
        "json representation": 1,
        "aggregate function": 1,
        "bar chart": 1,
        "histogtram": 1,
        "aggregate function count": 1,
        "bar plot": 1,
        "bin object": 1,
        "labels": 1,
        "axis object": 1,
        "scatter plot plot": 1
    },
    "data encoding": {
        "altair": 4,
        "visualization channel": 1,
        "json representation": 1,
        "aggregate function": 1,
        "bar chart": 1,
        "histogtram": 1,
        "aggregate function count": 1,
        "bar plot": 1,
        "bin object": 1,
        "labels": 1,
        "axis object": 1,
        "scatter plot plot": 1
    },
    "undersampling": {
        "statistical test": 2,
        "significance level alpha": 2,
        "test statistic": 2,
        "hypothesis testing": 2,
        "alternative hypothesis": 2,
        "distribution means": 2,
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1
    },
    "course tutorials": {
        "grading tests": 4,
        "assert statements": 3,
        "python dictionary comprehension": 2,
        "zip function": 2,
        "iterable": 1,
        "enumerate function": 1,
        "anaconda": 1,
        "data science modules": 1
    },
    "python crash course exercises": {
        "nested list": 2,
        "indexing": 2,
        "nest dictionary": 2,
        "email website": 2,
        "dog": 2,
        "capitalization": 2,
        "lambda expressions": 1,
        "() function": 1,
        "police officer": 1
    },
    "affine layers": {
        "computational graph": 4,
        "variable naming convention": 3,
        "local gradients": 2,
        "exact variable names": 2,
        "squared loss layer tasks": 1,
        "squared loss white box": 1,
        "squared loss black box": 1,
        "forward pass tasks": 1
    },
    "relu layer": {
        "computational graph": 4,
        "variable naming convention": 3,
        "local gradients": 2,
        "exact variable names": 2,
        "squared loss layer tasks": 1,
        "squared loss white box": 1,
        "squared loss black box": 1,
        "forward pass tasks": 1
    },
    "cells": {
        "python code": 2,
        "boolean list": 1,
        "code cells": 1,
        "print function": 1,
        "parentheses": 1,
        "kernel": 1,
        "python interpreter": 1,
        "kernel state": 1,
        "magics": 1,
        "ipython commands": 1,
        "keyboard shortcuts": 1,
        "user interface tour": 1,
        "coding assignments": 1,
        "test cells": 1
    },
    "variable postal code": {
        "postal code": 4,
        "extended zip codes": 4,
        "extended postal codes": 4,
        "zip codes": 3
    },
    "rm variable": {
        "dependent variable": 1,
        "predicted values": 1,
        "lstat": 1,
        "variable combinations": 1,
        "exercise": 1,
        "formula": 1,
        "quadratic regression": 1,
        "medv": 1,
        "python functions": 1,
        "patsy": 1,
        "dummy variables": 1,
        "categorical variables": 1,
        "patsy formulas": 1,
        "crim": 1,
        "fit models": 1
    },
    "metagenomics data": {
        "text munching": 2,
        "sequence data": 2,
        "sequence records": 2,
        "tutorial": 2,
        "input": 2,
        "ncbi blast": 2,
        "fasta file": 1,
        "sequence text combination": 1,
        "blast executions": 1
    },
    "non-redundant protein database": {
        "text munching": 2,
        "sequence data": 2,
        "sequence records": 2,
        "tutorial": 2,
        "input": 2,
        "ncbi blast": 2,
        "fasta file": 1,
        "sequence text combination": 1,
        "blast executions": 1
    },
    "semantic analysis": {
        "wordnet synset": 4,
        "word2vec model": 2,
        "synonym rings": 1,
        "wordnet": 1,
        "path similarity": 1,
        "word2vec": 1,
        "nltk brown corpus": 1,
        "movie reviews": 1,
        "code cell": 1,
        "cosine similarity": 1,
        "cosine similarities": 1
    },
    "expected class": {
        "error function": 2,
        "total cost function": 2,
        "last function approximation": 2,
        "learning rate": 2,
        "learning curve": 2,
        "regularization": 1,
        "predict()": 1,
        "correct guesses": 1,
        "guessed classes": 1,
        "predicted exam results": 1
    },
    "prediction error": {
        "error function": 2,
        "total cost function": 2,
        "last function approximation": 2,
        "learning rate": 2,
        "learning curve": 2,
        "regularization": 1,
        "predict()": 1,
        "correct guesses": 1,
        "guessed classes": 1,
        "predicted exam results": 1
    },
    "iata codes": {
        "dictionaries": 3,
        "code cell": 3,
        "json strings": 2,
        "iata": 2,
        "output file": 2,
        "acy airpot": 1,
        "json string": 1,
        "python dictionary": 1
    },
    "continuous response": {
        "decision tree algorithm": 2,
        "classification error rate": 2,
        "gini index": 2,
        "maximum value": 1,
        "splitting criteria": 1,
        "predicted probability": 1,
        "classification trees": 1,
        "node purity": 1,
        "titanic": 1,
        "sex": 1,
        "age": 1,
        "response variable": 1
    },
    "mean response": {
        "decision tree algorithm": 2,
        "classification error rate": 2,
        "gini index": 2,
        "maximum value": 1,
        "splitting criteria": 1,
        "predicted probability": 1,
        "classification trees": 1,
        "node purity": 1,
        "titanic": 1,
        "sex": 1,
        "age": 1,
        "response variable": 1
    },
    "total variance": {
        "decision tree algorithm": 2,
        "classification error rate": 2,
        "gini index": 2,
        "maximum value": 1,
        "splitting criteria": 1,
        "predicted probability": 1,
        "classification trees": 1,
        "node purity": 1,
        "titanic": 1,
        "sex": 1,
        "age": 1,
        "response variable": 1
    },
    "training observations": {
        "decision tree algorithm": 2,
        "classification error rate": 2,
        "gini index": 2,
        "maximum value": 1,
        "splitting criteria": 1,
        "predicted probability": 1,
        "classification trees": 1,
        "node purity": 1,
        "titanic": 1,
        "sex": 1,
        "age": 1,
        "response variable": 1
    },
    "dimensional reduction": {
        "cruising speed": 2,
        "tail height": 2,
        "delta airline": 1,
        "airbus": 1,
        "accommodation": 1,
        "categorical data": 1,
        "aircraft physical characteristics": 1,
        "attributes": 1,
        "wingspan": 1,
        "categorical variable": 1,
        "dimensionality reduction techniques": 1,
        "principal components analysis": 1,
        "frame": 1
    },
    "advanced methods": {
        "analytic function": 2,
        "diagonalizable matrix": 2,
        "identity matrix": 1,
        "square matrix": 1,
        "power series formula": 1,
        "diagonal matrix": 1,
        "square matrices": 1,
        "diagonalizable": 1,
        "matrices": 1,
        "eigenvals": 1,
        "e": 1,
        "diagonalize": 1,
        "matrix slicing": 1
    },
    "int64": {
        "normalized value": 3,
        "machine learning technique": 3,
        "maximum values": 3,
        "float64": 3,
        "unit tests": 3
    },
    "shotgun sequencing": {
        "pseudocode": 2,
        "unit testing": 2,
        "student names": 1,
        "genome sequencing": 1,
        "flowchart": 1,
        "maximum overlap": 1,
        "single": 1,
        "overlapping segments": 1,
        "combined string": 1,
        "programming practice": 1,
        "unit test": 1,
        "imput strings": 1,
        "unit tests": 1
    },
    "shopping behavior": {
        "lunar new year": 2,
        "christmas": 2,
        "transaction time": 1,
        "transaction times": 1,
        "datetime64": 1,
        "unique customers": 1,
        "customer trends": 1,
        "customer counts": 1,
        "boxplots": 1,
        "holidays": 1,
        "shopping behavior": 1,
        "line": 1,
        "reference lines": 1
    },
    "ticket fare": {
        "passenger class": 2,
        "women": 1,
        "wealth": 1,
        "age distributions": 1,
        "hypothesis testing": 1,
        "statistical method": 1,
        "internet": 1,
        "statistical hypothesis": 1,
        "null hypothesis": 1,
        "hypothesis test": 1,
        "age": 1,
        "alternative hypothesis": 1,
        "sex": 1,
        "embarked columns": 1
    },
    "social status": {
        "passenger class": 2,
        "women": 1,
        "wealth": 1,
        "age distributions": 1,
        "hypothesis testing": 1,
        "statistical method": 1,
        "internet": 1,
        "statistical hypothesis": 1,
        "null hypothesis": 1,
        "hypothesis test": 1,
        "age": 1,
        "alternative hypothesis": 1,
        "sex": 1,
        "embarked columns": 1
    },
    "cabin column": {
        "passenger class": 2,
        "women": 1,
        "wealth": 1,
        "age distributions": 1,
        "hypothesis testing": 1,
        "statistical method": 1,
        "internet": 1,
        "statistical hypothesis": 1,
        "null hypothesis": 1,
        "hypothesis test": 1,
        "age": 1,
        "alternative hypothesis": 1,
        "sex": 1,
        "embarked columns": 1
    },
    "ticket numbers": {
        "passenger class": 2,
        "women": 1,
        "wealth": 1,
        "age distributions": 1,
        "hypothesis testing": 1,
        "statistical method": 1,
        "internet": 1,
        "statistical hypothesis": 1,
        "null hypothesis": 1,
        "hypothesis test": 1,
        "age": 1,
        "alternative hypothesis": 1,
        "sex": 1,
        "embarked columns": 1
    },
    "survival rate": {
        "passenger class": 2,
        "women": 1,
        "wealth": 1,
        "age distributions": 1,
        "hypothesis testing": 1,
        "statistical method": 1,
        "internet": 1,
        "statistical hypothesis": 1,
        "null hypothesis": 1,
        "hypothesis test": 1,
        "age": 1,
        "alternative hypothesis": 1,
        "sex": 1,
        "embarked columns": 1
    },
    "single variables": {
        "passenger class": 2,
        "women": 1,
        "wealth": 1,
        "age distributions": 1,
        "hypothesis testing": 1,
        "statistical method": 1,
        "internet": 1,
        "statistical hypothesis": 1,
        "null hypothesis": 1,
        "hypothesis test": 1,
        "age": 1,
        "alternative hypothesis": 1,
        "sex": 1,
        "embarked columns": 1
    },
    "ordered interpretation": {
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "cylinders": {
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "categorical data": {
        "dtypes attribute": 1,
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "learning objectives": {
        "literals": 2,
        "basic regular expression syntax": 2,
        "regexr": 2,
        "brackets": 2,
        "logistic function": 1,
        "logit link function": 1,
        "odds ratios": 1,
        "college admissions data": 1,
        "logistic regression prediction line": 1,
        "binary class": 1
    },
    "computation time": {
        "timestep size": 2,
        "simulation": 2,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1,
        "nearest neighbor algorithm": 1,
        "2d system": 1,
        "diffusion coefficient": 1,
        "flux": 1,
        "1d vector equation system": 1,
        "linear equation solver": 1,
        "linear index": 1
    },
    "warmup section": {
        "integers": 6,
        "integer": 4,
        "overlap laughter": 4
    },
    "fake advertising data set": {
        "jointplot": 4,
        "age": 4,
        "area income": 2,
        "kde distributions": 2,
        "pairplot": 2
    },
    "stop words": {
        "cluster labels": 3,
        "kmeans": 3,
        "subset": 2,
        "row index": 2,
        "data1": 1,
        "log scale": 1,
        "2d scatter plot": 1,
        "line chart": 1
    },
    "vae": {
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 4
    },
    "image processing": {
        "face images": 2,
        "mlp": 2,
        "color intensity": 1,
        "colors": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1,
        "narrow networks": 1,
        "wide networks": 1,
        "cnn": 1,
        "pooling layer": 1,
        "convolutional layer": 1
    },
    "genres": {
        "movies": 3,
        "m1": 2,
        "movie titles": 2,
        "merge function": 2,
        "age": 2,
        "count": 1,
        "seaborn barplot": 1,
        "average rating": 1
    },
    "series isnull method": {
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94602": 1,
        "94545": 1,
        "business name": 1,
        "zip": 1,
        "zip codes": 1,
        "search engine": 1,
        "longitude values": 1,
        "businesses": 1,
        "longitude": 1,
        "latitude": 1
    },
    "binary array": {
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94602": 1,
        "94545": 1,
        "business name": 1,
        "zip": 1,
        "zip codes": 1,
        "search engine": 1,
        "longitude values": 1,
        "businesses": 1,
        "longitude": 1,
        "latitude": 1
    },
    "missing zip codes": {
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94602": 1,
        "94545": 1,
        "business name": 1,
        "zip": 1,
        "zip codes": 1,
        "search engine": 1,
        "longitude values": 1,
        "businesses": 1,
        "longitude": 1,
        "latitude": 1
    },
    "incorrect zip codes": {
        "san francisco zip codes": 1,
        "boolean array": 1,
        "notnull method": 1,
        "isin": 1,
        "94602": 1,
        "94545": 1,
        "business name": 1,
        "zip": 1,
        "zip codes": 1,
        "search engine": 1,
        "longitude values": 1,
        "businesses": 1,
        "longitude": 1,
        "latitude": 1
    },
    "daily stock price movements": {
        "couponcode": 2,
        "video lectures": 2,
        "udemy": 2,
        "cluster labels": 2,
        "dataframe df": 2,
        "company names companies": 2,
        "df": 1,
        "cluster label": 1
    },
    "knn model": {
        "predict method": 5,
        "knn model": 5,
        "confusion matrix": 4
    },
    "resilient distributed datasets": {
        "rdd": 4,
        "movielens": 4,
        "text file": 4,
        "head command": 2
    },
    "alg": {
        "lambdas": 2,
        "anonymous functions": 2,
        "graph cycles": 2,
        "lambda expression": 2,
        "ellipses": 2,
        "recursion": 2,
        "double100": 1,
        "integers": 1
    },
    "mathematics": {
        "lambdas": 2,
        "anonymous functions": 2,
        "graph cycles": 2,
        "lambda expression": 2,
        "ellipses": 2,
        "recursion": 2,
        "double100": 1,
        "integers": 1
    },
    "multicalc": {
        "lambdas": 2,
        "anonymous functions": 2,
        "graph cycles": 2,
        "lambda expression": 2,
        "ellipses": 2,
        "recursion": 2,
        "double100": 1,
        "integers": 1
    },
    "datastructures": {
        "lambdas": 2,
        "anonymous functions": 2,
        "graph cycles": 2,
        "lambda expression": 2,
        "ellipses": 2,
        "recursion": 2,
        "double100": 1,
        "integers": 1
    },
    "aries": {
        "lambdas": 2,
        "anonymous functions": 2,
        "graph cycles": 2,
        "lambda expression": 2,
        "ellipses": 2,
        "recursion": 2,
        "double100": 1,
        "integers": 1
    },
    "dna": {
        "shotgun sequencing": 4,
        "set function": 1,
        "dna": 1,
        "wiki shotgun sequencing": 1,
        "genome": 1,
        "shotgun sequencer": 1,
        "charicters": 1,
        "negative indexes": 1,
        "negative index": 1,
        "indexing": 1,
        "negative indexing": 1
    },
    "regular expression": {
        "regex": 2,
        "gzip module": 1,
        "match object": 1,
        "pattern object": 1,
        "us phone number": 1,
        "area code": 1,
        "regular expression syntax": 1,
        "challenge 14": 1,
        "metacharacters": 1,
        "parentheses": 1,
        "challenge 13": 1,
        "uring group skills": 1,
        "non-": 1
    },
    "generator training tests": {
        "data distribution": 4,
        "noise distribution": 2,
        "synthetic images": 2,
        "generative adversarial training": 2,
        "kernel density estimation plot": 2,
        "fake images": 1,
        "python variables": 1
    },
    "evaluation dataframe": {
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1
    },
    "labelled dataset": {
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1
    },
    "evaluation": {
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1
    },
    "training models": {
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1
    },
    "test datsets": {
        "predction model": 1,
        "zero predictor": 1,
        "filtering rate": 1,
        "beautifulsoup": 1,
        "spam mails": 1,
        "filter rate": 1,
        "spammy words": 1,
        "characterstics": 1,
        "html table": 1,
        "data parsing": 1,
        "spam": 1,
        "web crawling": 1,
        "datahub": 1,
        "contour plot": 1
    },
    "logistic regression project": {
        "jointplot": 4,
        "age": 4,
        "area income": 2,
        "kde distributions": 2,
        "pairplot": 2
    },
    "fake advertising": {
        "jointplot": 4,
        "age": 4,
        "area income": 2,
        "kde distributions": 2,
        "pairplot": 2
    },
    "internet usage": {
        "jointplot": 4,
        "age": 4,
        "area income": 2,
        "kde distributions": 2,
        "pairplot": 2
    },
    "pop table": {
        "population column": 2,
        "year column": 2,
        "quantitative data": 2,
        "integer": 2,
        "world population": 1,
        "ahs": 1,
        "standard metropolitan statistical area": 1,
        "join method": 1,
        "smsa": 1,
        "bar chart": 1
    },
    "ahs table": {
        "population column": 2,
        "year column": 2,
        "quantitative data": 2,
        "integer": 2,
        "world population": 1,
        "ahs": 1,
        "standard metropolitan statistical area": 1,
        "join method": 1,
        "smsa": 1,
        "bar chart": 1
    },
    "istinct": {
        "sql": 2,
        "aggregate functions": 2,
        "limit operator": 1,
        "limit syntax": 1,
        "sql subqueries": 1,
        "group by statement": 1,
        "group by operator": 1,
        "having operator": 1,
        "having clause": 1,
        "else statement": 1,
        "postgresql": 1,
        "date documentation": 1
    },
    "lierid": {
        "sql": 2,
        "aggregate functions": 2,
        "limit operator": 1,
        "limit syntax": 1,
        "sql subqueries": 1,
        "group by statement": 1,
        "group by operator": 1,
        "having operator": 1,
        "having clause": 1,
        "else statement": 1,
        "postgresql": 1,
        "date documentation": 1
    },
    "valueerror": {
        "keyword argument": 2,
        "while loop": 1,
        "gcd": 1,
        "euclidean algorithm": 1,
        "google books": 1,
        "modulo operator": 1,
        "positive integers": 1,
        "positional arguments": 1,
        "recursion": 1,
        "positional argument": 1,
        "slicing": 1,
        "arange": 1,
        "prime numbers": 1
    },
    "extra credit": {
        "keyword argument": 2,
        "while loop": 1,
        "gcd": 1,
        "euclidean algorithm": 1,
        "google books": 1,
        "modulo operator": 1,
        "positive integers": 1,
        "positional arguments": 1,
        "recursion": 1,
        "positional argument": 1,
        "slicing": 1,
        "arange": 1,
        "prime numbers": 1
    },
    "document space": {
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "cosine similarity": 1,
        "distance metric": 1,
        "cosine similarity score": 1,
        "lsi": 1,
        "reuters documents": 1,
        "emmed test": 1
    },
    "final matrix": {
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "cosine similarity": 1,
        "distance metric": 1,
        "cosine similarity score": 1,
        "lsi": 1,
        "reuters documents": 1,
        "emmed test": 1
    },
    "linalg svd function": {
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "cosine similarity": 1,
        "distance metric": 1,
        "cosine similarity score": 1,
        "lsi": 1,
        "reuters documents": 1,
        "emmed test": 1
    },
    "sigma matrix": {
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "cosine similarity": 1,
        "distance metric": 1,
        "cosine similarity score": 1,
        "lsi": 1,
        "reuters documents": 1,
        "emmed test": 1
    },
    "tdm": {
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "cosine similarity": 1,
        "distance metric": 1,
        "cosine similarity score": 1,
        "lsi": 1,
        "reuters documents": 1,
        "emmed test": 1
    },
    "term space": {
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "cosine similarity": 1,
        "distance metric": 1,
        "cosine similarity score": 1,
        "lsi": 1,
        "reuters documents": 1,
        "emmed test": 1
    },
    "svd": {
        "singular value matrix": 1,
        "reduction": 1,
        "ality reduction": 1,
        "rank k approximation": 1,
        "document transpose matrix": 1,
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "cosine similarity": 1,
        "distance metric": 1,
        "cosine similarity score": 1,
        "lsi": 1,
        "reuters documents": 1,
        "emmed test": 1
    },
    "online services": {
        "api": 2,
        "online services": 1,
        "table of contents": 1,
        "http status response": 1,
        "http response": 1,
        "requests library": 1,
        "crossref": 1,
        "bibliographic metadata": 1,
        "python dictionary": 1,
        "python dictionaries": 1,
        "orcid": 1,
        "publisher api": 1,
        "crossref search api": 1
    },
    "markdown cells": {
        "python code": 2,
        "code cells": 1,
        "print function": 1,
        "parentheses": 1,
        "kernel": 1,
        "python interpreter": 1,
        "kernel state": 1,
        "magics": 1,
        "ipython commands": 1,
        "keyboard shortcuts": 1,
        "user interface tour": 1,
        "coding assignments": 1,
        "test cells": 1
    },
    "op": {
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "garbage collector": {
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "global matplotlib plotting": {
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "seaborn package": {
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "notebook": {
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "frequency distribution": {
        "hist function": 1,
        "listy container": 1,
        "matplotlib hist": 1,
        "seaborn context": 1,
        "axvline": 1,
        "rear axle ratio": 1,
        "plot documentation": 1,
        "plotting commands": 1,
        "file extension": 1,
        "savefig command": 1,
        "saved png": 1,
        "markdown": 1,
        "columns of interest": 1,
        "matplotlib plotting routines": 1
    },
    "mamdani fuzzy inference process": {
        "salary": 3,
        "python list": 3,
        "graded components": 3,
        "straight line": 3,
        "memberships": 1
    },
    "fraud detection algorithm": {
        "salary": 3,
        "python list": 3,
        "graded components": 3,
        "straight line": 3,
        "memberships": 1
    },
    "fraud probability": {
        "salary": 3,
        "python list": 3,
        "graded components": 3,
        "straight line": 3,
        "memberships": 1
    },
    "bank database": {
        "salary": 3,
        "python list": 3,
        "graded components": 3,
        "straight line": 3,
        "memberships": 1
    },
    "pca eigenvectors": {
        "pca": 6,
        "iris data": 3,
        "plotting function": 2,
        "data matrix x": 2
    },
    "orient": {
        "pca": 6,
        "iris data": 3,
        "plotting function": 2,
        "data matrix x": 2
    },
    "pca axes": {
        "pca": 6,
        "iris data": 3,
        "plotting function": 2,
        "data matrix x": 2
    },
    "pca components": {
        "pca": 6,
        "iris data": 3,
        "plotting function": 2,
        "data matrix x": 2
    },
    "florentine families": {
        "florentine families": 3,
        "social network": 3,
        "ity": 2,
        "highest betweennness values": 1,
        "brokerage\" roles": 1,
        "code cell": 1,
        "high betweenness values": 1,
        "unit tests": 1
    },
    "undirected graph": {
        "adjacency matrix": 4,
        "linear algebra": 2,
        "matrix multiplication": 2,
        "normalization": 2,
        "symmetric numpy array": 2,
        "12 angry men": 1
    },
    "survey responses": {
        "numeric features": 1,
        "simple line graph": 1,
        "uci machine learning": 1,
        "file contents": 1,
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1
    },
    "data sources": {
        "json file": 4,
        "json": 3,
        "tihs dataset": 2,
        "stack overflow": 1,
        "stackoverflow": 1,
        "working email addresses": 1,
        "test cell": 1
    },
    "collections": {
        "json file": 4,
        "json": 3,
        "tihs dataset": 2,
        "stack overflow": 1,
        "stackoverflow": 1,
        "working email addresses": 1,
        "test cell": 1
    },
    "noise reduction": {
        "3 layer neural network": 9,
        "polarity cutoff": 4
    },
    "pressuresystem": {
        "m": 2,
        "25 mm": 2,
        "25 \u00b0c": 2,
        "time interval": 2,
        "pressure values": 2,
        "odeint": 2,
        "air pressure signals": 1
    },
    "keyword argument": {
        "requests library": 4,
        "http get request": 2,
        "nyt article api": 2,
        "results page": 1,
        "search parameters": 1,
        "slicing": 1,
        "centered difference": 1,
        "relative error": 1
    },
    "derive gradient equations": {
        "grad": 1,
        "bias parameters": 1,
        "ients": 1,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "mlp": 1,
        "hidden layer": 1,
        "non-linear activation function": 1
    },
    "gradient calculations": {
        "validation": 1,
        "trainingset": 1,
        "sgd iterations": 1,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "mlp": 1,
        "hidden layer": 1,
        "non-linear activation function": 1
    },
    "gradient computations": {
        "validation": 1,
        "trainingset": 1,
        "sgd iterations": 1,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "mlp": 1,
        "hidden layer": 1,
        "non-linear activation function": 1
    },
    "gradient vectors": {
        "validation": 1,
        "trainingset": 1,
        "sgd iterations": 1,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "mlp": 1,
        "hidden layer": 1,
        "non-linear activation function": 1
    },
    "maximum points": {
        "validation": 1,
        "trainingset": 1,
        "sgd iterations": 1,
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "mlp": 1,
        "hidden layer": 1,
        "non-linear activation function": 1
    },
    "schema": {
        "usstates": 8,
        "countries": 1,
        "periodicities": 1,
        "aggregation methods": 1,
        "indicators": 1,
        "wdidata": 1
    },
    "ensembl id": {
        "gene ids": 1,
        "gene ontology website": 1,
        "ontology enrichment": 1,
        "gene ontology enrichment": 1,
        "fpkm": 1,
        "gene expression": 1,
        "featurecounts": 1,
        "nonzero differences": 1,
        "gene id version number": 1,
        "gencode": 1,
        "gencode ids": 1,
        "ensembl ids": 1,
        "immune cell": 1
    },
    "gencode ids": {
        "gene ids": 1,
        "gene ontology website": 1,
        "ontology enrichment": 1,
        "gene ontology enrichment": 1,
        "fpkm": 1,
        "gene expression": 1,
        "featurecounts": 1,
        "nonzero differences": 1,
        "gene id version number": 1,
        "gencode": 1,
        "gencode ids": 1,
        "ensembl ids": 1,
        "immune cell": 1
    },
    "enrichment analysis": {
        "gene ids": 1,
        "gene ontology website": 1,
        "ontology enrichment": 1,
        "gene ontology enrichment": 1,
        "fpkm": 1,
        "gene expression": 1,
        "featurecounts": 1,
        "nonzero differences": 1,
        "gene id version number": 1,
        "gencode": 1,
        "gencode ids": 1,
        "ensembl ids": 1,
        "immune cell": 1
    },
    "ensembl ids": {
        "gene ids": 1,
        "gene ontology website": 1,
        "ontology enrichment": 1,
        "gene ontology enrichment": 1,
        "fpkm": 1,
        "gene expression": 1,
        "featurecounts": 1,
        "nonzero differences": 1,
        "gene id version number": 1,
        "gencode": 1,
        "gencode ids": 1,
        "ensembl ids": 1,
        "immune cell": 1
    },
    "gene ontology": {
        "gene ids": 1,
        "gene ontology website": 1,
        "ontology enrichment": 1,
        "gene ontology enrichment": 1,
        "fpkm": 1,
        "gene expression": 1,
        "featurecounts": 1,
        "nonzero differences": 1,
        "gene id version number": 1,
        "gencode": 1,
        "gencode ids": 1,
        "ensembl ids": 1,
        "immune cell": 1
    },
    "gene ids": {
        "gene ids": 1,
        "gene ontology website": 1,
        "ontology enrichment": 1,
        "gene ontology enrichment": 1,
        "fpkm": 1,
        "gene expression": 1,
        "featurecounts": 1,
        "nonzero differences": 1,
        "gene id version number": 1,
        "gencode": 1,
        "gencode ids": 1,
        "ensembl ids": 1,
        "immune cell": 1
    },
    "linear algebra knowledge": {
        "berkeley bowl": 2,
        "cantaloupes": 2,
        "vector dot products": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "fruit prices": 1,
        "final costs": 1,
        "fruit baskets": 1
    },
    "numpy matrices": {
        "berkeley bowl": 2,
        "cantaloupes": 2,
        "vector dot products": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1,
        "fruit prices": 1,
        "final costs": 1,
        "fruit baskets": 1
    },
    "timeseries": {
        "correlation matrix": 2,
        "linear regression model": 1,
        "correlations": 1,
        "linear operations": 1,
        "graph lasso": 1,
        "numpy method": 1,
        "normalized data": 1,
        "diagonal pattern": 1,
        "timeseries": 1,
        "affinity propagation": 1,
        "similarity scores": 1,
        "correlation coefficients": 1
    },
    "network traffic": {
        "narrow angular distance": 4,
        "search criteria": 4,
        "instrument response": 2,
        "wave": 1,
        "station metadata": 1,
        "vertical 1 hz stream": 1
    },
    "waveform dataset": {
        "narrow angular distance": 4,
        "search criteria": 4,
        "instrument response": 2,
        "wave": 1,
        "station metadata": 1,
        "vertical 1 hz stream": 1
    },
    "grouped mean": {
        "displacement": 4,
        "acceleration": 4,
        "horsepower": 2,
        "cylinders": 2,
        "aggregate quantities": 1
    },
    "cost array": {
        "minimal cost path": 3,
        "label of interest": 2,
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "sql keywords": {
        "variable names": 2,
        "underscores": 2,
        "alphanumeric characters": 2,
        "python assert": 2,
        "column variables": 1,
        "valid variable names": 1,
        "equals sign": 1,
        "input string": 1,
        "equality string": 1
    },
    "equal sign": {
        "variable names": 2,
        "underscores": 2,
        "alphanumeric characters": 2,
        "python assert": 2,
        "column variables": 1,
        "valid variable names": 1,
        "equals sign": 1,
        "input string": 1,
        "equality string": 1
    },
    "query": {
        "variable names": 2,
        "underscores": 2,
        "alphanumeric characters": 2,
        "python assert": 2,
        "column variables": 1,
        "valid variable names": 1,
        "equals sign": 1,
        "input string": 1,
        "equality string": 1
    },
    "sql query": {
        "variable names": 2,
        "underscores": 2,
        "alphanumeric characters": 2,
        "python assert": 2,
        "column variables": 1,
        "valid variable names": 1,
        "equals sign": 1,
        "input string": 1,
        "equality string": 1
    },
    "multiline regex pattern": {
        "variable names": 2,
        "underscores": 2,
        "alphanumeric characters": 2,
        "python assert": 2,
        "column variables": 1,
        "valid variable names": 1,
        "equals sign": 1,
        "input string": 1,
        "equality string": 1
    },
    "seaborn plotting": {
        "calls dataframe": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "seaborn plot": 1,
        "fraud": 1,
        "calls reporting": 1,
        "reasoning": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "classification rate": {
        "decision boundaries": 4,
        "predicted class": 2,
        "knn model": 2,
        "pandas manipulations": 2,
        "data format": 2,
        "test data": 1
    },
    "constant term": {
        "lstat": 1,
        "variable combinations": 1,
        "exercise": 1,
        "formula": 1,
        "quadratic regression": 1,
        "medv": 1,
        "python functions": 1,
        "patsy": 1,
        "dummy variables": 1,
        "categorical variables": 1,
        "patsy formulas": 1,
        "crim": 1,
        "fit models": 1
    },
    "lstat": {
        "lstat": 1,
        "variable combinations": 1,
        "exercise": 1,
        "formula": 1,
        "quadratic regression": 1,
        "medv": 1,
        "python functions": 1,
        "patsy": 1,
        "dummy variables": 1,
        "categorical variables": 1,
        "patsy formulas": 1,
        "crim": 1,
        "fit models": 1
    },
    "rm regressor": {
        "lstat": 1,
        "variable combinations": 1,
        "exercise": 1,
        "formula": 1,
        "quadratic regression": 1,
        "medv": 1,
        "python functions": 1,
        "patsy": 1,
        "dummy variables": 1,
        "categorical variables": 1,
        "patsy formulas": 1,
        "crim": 1,
        "fit models": 1
    },
    "bank authentication data set": {
        "matplolib": 1,
        "deep learning": 1,
        "neural network": 1,
        "standard scaling": 1,
        "standardize": 1,
        "scaler": 1,
        "scaling": 1,
        "scaled feature values": 1,
        "labels": 1,
        "tensorflow": 1,
        "n": 1,
        "scikit learn": 1,
        "testing sets": 1
    },
    "wavelet transformed image": {
        "matplolib": 1,
        "deep learning": 1,
        "neural network": 1,
        "standard scaling": 1,
        "standardize": 1,
        "scaler": 1,
        "scaling": 1,
        "scaled feature values": 1,
        "labels": 1,
        "tensorflow": 1,
        "n": 1,
        "scikit learn": 1,
        "testing sets": 1
    },
    "valve simulation": {
        "pressure signal": 2,
        "mpr": 1,
        "control valve": 1,
        "air pressure": 1,
        "spring": 1,
        "equations of motion": 1,
        "damping": 1,
        "higher order differential equations": 1,
        "diaphragm": 1,
        "vector equation": 1,
        "control valve dynamics": 1,
        "air pressure signals": 1
    },
    "dictionary comprehension": {
        "holomap": 2,
        "dropdown selection menu": 1,
        "numeric sliders": 1,
        "widgets": 1,
        "static files": 1,
        "video": 1,
        "dynamicmap": 1,
        "dropdown menu": 1,
        "holomaps": 1,
        "gif": 1,
        "static html file": 1,
        "dna sequence symbols": 1
    },
    "organisms": {
        "shotgun sequencing": 4,
        "dna": 1,
        "wiki shotgun sequencing": 1,
        "genome": 1,
        "shotgun sequencer": 1,
        "charicters": 1,
        "negative indexes": 1,
        "negative index": 1,
        "indexing": 1,
        "negative indexing": 1
    },
    "genetic instructions": {
        "shotgun sequencing": 4,
        "dna": 1,
        "wiki shotgun sequencing": 1,
        "genome": 1,
        "shotgun sequencer": 1,
        "charicters": 1,
        "negative indexes": 1,
        "negative index": 1,
        "indexing": 1,
        "negative indexing": 1
    },
    "nucleotides": {
        "shotgun sequencing": 4,
        "dna": 1,
        "wiki shotgun sequencing": 1,
        "genome": 1,
        "shotgun sequencer": 1,
        "charicters": 1,
        "negative indexes": 1,
        "negative index": 1,
        "indexing": 1,
        "negative indexing": 1
    },
    "deoxyribonucleic acid": {
        "shotgun sequencing": 4,
        "dna": 1,
        "wiki shotgun sequencing": 1,
        "genome": 1,
        "shotgun sequencer": 1,
        "charicters": 1,
        "negative indexes": 1,
        "negative index": 1,
        "indexing": 1,
        "negative indexing": 1
    },
    "ocr errors": {
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1
    },
    "regular expression magic": {
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1
    },
    "non-ascii characters": {
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1
    },
    "notepad": {
        "feta cheese": 1,
        "ni\u00e7oise olives": 1,
        "park avenue cafe": 1,
        "southern fried quail": 1,
        "mar": 1,
        "chopped salad goat": 1,
        "piece atlantic oysters": 1,
        "drinks table": 1,
        "meals table": 1,
        "price": 1,
        "meal name": 1,
        "entrees": 1,
        "side dishes": 1
    },
    "english model": {
        "animals": 2,
        "horse": 2,
        "default english corpus": 1,
        "spacy": 1,
        "tokens": 1,
        "word vectors": 1,
        "python dict": 1,
        "wordvecs": 1,
        "ndarray word vectors": 1,
        "np": 1,
        "string names": 1
    },
    "encoder tests": {
        "autoencoder": 3,
        "flattened image": 2,
        "keras sequential model": 2,
        "binary crossentropy loss": 2,
        "keras functional api": 2,
        "python list": 1,
        "pil image": 1
    },
    "party affiliation": {
        "sql": 2,
        "query strings": 1,
        "sql expressions": 1,
        "homework": 1,
        "query string variable": 1,
        "count": 1,
        "query string": 1,
        "committee id": 1,
        "transaction amount": 1,
        "total transaction amounts": 1,
        "limit 20": 1,
        "distinct keyword": 1
    },
    "table descriptions": {
        "sql": 2,
        "query strings": 1,
        "sql expressions": 1,
        "homework": 1,
        "query string variable": 1,
        "count": 1,
        "query string": 1,
        "committee id": 1,
        "transaction amount": 1,
        "total transaction amounts": 1,
        "limit 20": 1,
        "distinct keyword": 1
    },
    "idates": {
        "sql": 2,
        "query strings": 1,
        "sql expressions": 1,
        "homework": 1,
        "query string variable": 1,
        "count": 1,
        "query string": 1,
        "committee id": 1,
        "transaction amount": 1,
        "total transaction amounts": 1,
        "limit 20": 1,
        "distinct keyword": 1
    },
    "benign": {
        "age": 4,
        "parmaters": 4,
        "missing": 2,
        "dropna": 1,
        "pandas dataframes": 1,
        "labels": 1
    },
    "topologies": {
        "age": 4,
        "parmaters": 4,
        "missing": 2,
        "dropna": 1,
        "pandas dataframes": 1,
        "labels": 1
    },
    "mass density": {
        "age": 4,
        "parmaters": 4,
        "missing": 2,
        "dropna": 1,
        "pandas dataframes": 1,
        "labels": 1
    },
    "mal": {
        "age": 4,
        "parmaters": 4,
        "missing": 2,
        "dropna": 1,
        "pandas dataframes": 1,
        "labels": 1
    },
    "mammogram mass": {
        "age": 4,
        "parmaters": 4,
        "missing": 2,
        "dropna": 1,
        "pandas dataframes": 1,
        "labels": 1
    },
    "optimizers": {
        "age": 4,
        "parmaters": 4,
        "missing": 2,
        "dropna": 1,
        "pandas dataframes": 1,
        "labels": 1
    },
    "severity": {
        "age": 4,
        "parmaters": 4,
        "missing": 2,
        "dropna": 1,
        "pandas dataframes": 1,
        "labels": 1
    },
    "malignant": {
        "age": 4,
        "parmaters": 4,
        "missing": 2,
        "dropna": 1,
        "pandas dataframes": 1,
        "labels": 1
    },
    "severity classification": {
        "age": 4,
        "parmaters": 4,
        "missing": 2,
        "dropna": 1,
        "pandas dataframes": 1,
        "labels": 1
    },
    "public dataset": {
        "age": 4,
        "parmaters": 4,
        "missing": 2,
        "dropna": 1,
        "pandas dataframes": 1,
        "labels": 1
    },
    "mr class": {
        "mrjob": 3,
        "word count": 2,
        "reducer functions": 1,
        "fileor variable": 1,
        "sqlite3 database": 1,
        "counters": 1,
        "mapper function": 1,
        "hadoop": 1,
        "nltk": 1,
        "local mrjob word count": 1
    },
    "maximum count": {
        "mrjob": 3,
        "word count": 2,
        "reducer functions": 1,
        "fileor variable": 1,
        "sqlite3 database": 1,
        "counters": 1,
        "mapper function": 1,
        "hadoop": 1,
        "nltk": 1,
        "local mrjob word count": 1
    },
    "word count pairs": {
        "mrjob": 3,
        "word count": 2,
        "reducer functions": 1,
        "fileor variable": 1,
        "sqlite3 database": 1,
        "counters": 1,
        "mapper function": 1,
        "hadoop": 1,
        "nltk": 1,
        "local mrjob word count": 1
    },
    "steps function": {
        "mrjob": 3,
        "word count": 2,
        "reducer functions": 1,
        "fileor variable": 1,
        "sqlite3 database": 1,
        "counters": 1,
        "mapper function": 1,
        "hadoop": 1,
        "nltk": 1,
        "local mrjob word count": 1
    },
    "temporal trends": {
        "transaction time": 1,
        "transaction times": 1,
        "datetime64": 1,
        "unique customers": 1,
        "customer trends": 1,
        "customer counts": 1,
        "boxplots": 1,
        "holidays": 1,
        "shopping behavior": 1,
        "lunar new year": 1,
        "christmas": 1,
        "line": 1,
        "reference lines": 1
    },
    "pandas missing values": {
        "imports": 3,
        "state column": 3,
        "df2": 2,
        "df3": 2,
        "df5": 1,
        "integer valued count": 1
    },
    "housing price": {
        "training error": 4,
        "outlier": 2,
        "test error": 2,
        "root mean squared error": 2,
        "average": 2
    },
    "python interpreter": {
        "hash map": 4,
        "phonebook": 4,
        "programming": 4
    },
    "numpy operations": {
        "computation time": 3,
        "speedup": 3,
        "optimization": 2,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1,
        "nearest neighbor algorithm": 1
    },
    "pybatch": {
        "computation time": 3,
        "speedup": 3,
        "optimization": 2,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1,
        "nearest neighbor algorithm": 1
    },
    "pairwise distances": {
        "computation time": 3,
        "speedup": 3,
        "optimization": 2,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1,
        "nearest neighbor algorithm": 1
    },
    "squared euclidean distance": {
        "computation time": 3,
        "speedup": 3,
        "optimization": 2,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1,
        "nearest neighbor algorithm": 1
    },
    "hierarchical clustering": {
        "clustering algorithms": 3,
        "unsupervised techniques": 3,
        "clustering parameters": 3,
        "flame dataset": 3
    },
    "plotting function": {
        "clustering algorithms": 3,
        "unsupervised techniques": 3,
        "clustering parameters": 3,
        "flame dataset": 3
    },
    "omerative": {
        "clustering algorithms": 3,
        "unsupervised techniques": 3,
        "clustering parameters": 3,
        "flame dataset": 3
    },
    "geographical coordinates": {
        "multiple attacks": 5,
        "iraq": 5,
        "colorbar": 2
    },
    "terrorist attacks": {
        "multiple attacks": 5,
        "iraq": 5,
        "colorbar": 2
    },
    "default parameters": {
        "cluster labels": 3,
        "kmeans": 3,
        "permutation": 1,
        "adjusted rand index": 1,
        "rand index": 1,
        "ari score": 1,
        "random labeling": 1,
        "true clusterings": 1
    },
    "requests library": {
        "requests library": 4,
        "http get request": 2,
        "nyt article api": 2,
        "results page": 1,
        "search parameters": 1,
        "python dictionary": 1,
        "python dictionaries": 1
    },
    "vectorized implementation": {
        "mlp": 2,
        "decision function": 1,
        "weights": 1,
        "hidden layer": 1,
        "non-linear activation function": 1,
        "gaussian": 1,
        "misclassifications": 1,
        "convolutional networks": 1,
        "mlp model": 1,
        "test": 1,
        "mis": 1
    },
    "working mlp": {
        "mlp": 2,
        "decision function": 1,
        "weights": 1,
        "hidden layer": 1,
        "non-linear activation function": 1,
        "gaussian": 1,
        "misclassifications": 1,
        "convolutional networks": 1,
        "mlp model": 1,
        "test": 1,
        "mis": 1
    },
    "input data pipeline": {
        "attributes": 4,
        "attribute values": 2,
        "train file": 2,
        "test file": 2,
        "test data": 2
    },
    "sampled data": {
        "attributes": 4,
        "attribute values": 2,
        "train file": 2,
        "test file": 2,
        "test data": 2
    },
    "particle detectors": {
        "attributes": 4,
        "attribute values": 2,
        "train file": 2,
        "test file": 2,
        "test data": 2
    },
    "higgs dataset": {
        "attributes": 4,
        "attribute values": 2,
        "train file": 2,
        "test file": 2,
        "test data": 2
    },
    "background": {
        "attributes": 4,
        "attribute values": 2,
        "train file": 2,
        "test file": 2,
        "test data": 2
    },
    "monte carlo simulations": {
        "attributes": 4,
        "attribute values": 2,
        "train file": 2,
        "test file": 2,
        "test data": 2
    },
    "kinematic properties": {
        "attributes": 4,
        "attribute values": 2,
        "train file": 2,
        "test file": 2,
        "test data": 2
    },
    "python function": {
        "squared loss function": 2,
        "subset": 2,
        "row index": 2,
        "loss calculation": 1,
        "absolute loss": 1,
        "data1": 1,
        "log scale": 1,
        "2d scatter plot": 1,
        "line chart": 1
    },
    "floating point numbers": {
        "wait time": 2,
        "nerve pulses": 2,
        "empirical distribution": 1,
        "random variable": 1,
        "empirical distribution function": 1,
        "nerve pulse data": 1,
        "fomula": 1,
        "probability": 1,
        "cummulative distribution": 1,
        "estimate": 1
    },
    "cumulative distribution function": {
        "wait time": 2,
        "nerve pulses": 2,
        "empirical distribution": 1,
        "random variable": 1,
        "empirical distribution function": 1,
        "nerve pulse data": 1,
        "fomula": 1,
        "probability": 1,
        "cummulative distribution": 1,
        "estimate": 1
    },
    "nerve pulse data": {
        "wait time": 2,
        "nerve pulses": 2,
        "empirical distribution": 1,
        "random variable": 1,
        "empirical distribution function": 1,
        "nerve pulse data": 1,
        "fomula": 1,
        "probability": 1,
        "cummulative distribution": 1,
        "estimate": 1
    },
    "wait time": {
        "wait time": 2,
        "nerve pulses": 2,
        "empirical distribution": 1,
        "random variable": 1,
        "empirical distribution function": 1,
        "nerve pulse data": 1,
        "fomula": 1,
        "probability": 1,
        "cummulative distribution": 1,
        "estimate": 1
    },
    "empirical distribution function": {
        "wait time": 2,
        "nerve pulses": 2,
        "empirical distribution": 1,
        "random variable": 1,
        "empirical distribution function": 1,
        "nerve pulse data": 1,
        "fomula": 1,
        "probability": 1,
        "cummulative distribution": 1,
        "estimate": 1
    },
    "empirical distibution function": {
        "wait time": 2,
        "nerve pulses": 2,
        "empirical distribution": 1,
        "random variable": 1,
        "empirical distribution function": 1,
        "nerve pulse data": 1,
        "fomula": 1,
        "probability": 1,
        "cummulative distribution": 1,
        "estimate": 1
    },
    "confounds": {
        "ordinary least squares": 3,
        "linearmodels": 3,
        "linear models": 3,
        "design matrices": 3
    },
    "causation": {
        "ordinary least squares": 3,
        "linearmodels": 3,
        "linear models": 3,
        "design matrices": 3
    },
    "ooober": {
        "ooober": 6,
        "scandal patterns": 3,
        "poisson process": 3
    },
    "simplebfs": {
        "path length": 3,
        "distbfs()": 3,
        "bfs": 3,
        "edge weights": 3
    },
    "bfs": {
        "path length": 3,
        "distbfs()": 3,
        "bfs": 3,
        "edge weights": 3
    },
    "majority class": {
        "statistical test": 2,
        "significance level alpha": 2,
        "test statistic": 2,
        "hypothesis testing": 2,
        "alternative hypothesis": 2,
        "distribution means": 2
    },
    "synthetic minority oversampling technique": {
        "statistical test": 2,
        "significance level alpha": 2,
        "test statistic": 2,
        "hypothesis testing": 2,
        "alternative hypothesis": 2,
        "distribution means": 2
    },
    "equal classifications": {
        "statistical test": 2,
        "significance level alpha": 2,
        "test statistic": 2,
        "hypothesis testing": 2,
        "alternative hypothesis": 2,
        "distribution means": 2
    },
    "hipaa": {
        "object thickness": 1,
        "medical applications": 1,
        "compton interactions": 1,
        "human body": 1,
        "photoelectric interactions": 1,
        "linear attenuation coefficient": 1,
        "rayleigh scattering": 1,
        "hounsfield unit": 1,
        "term project": 1,
        "numeric data": 1,
        "intger": 1,
        "base 10 integers": 1
    },
    "off diagnoal entries": {
        "covariance": 1,
        "consistent algorithm": 1,
        "ica": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "integral calculator": 1,
        "numerical approximation": 1,
        "exact expression": 1,
        "gaussian random variable": 1,
        "peakedness": 1,
        "wolfram alpha": 1,
        "online service": 1
    },
    "sine waves": {
        "covariance": 1,
        "consistent algorithm": 1,
        "ica": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "integral calculator": 1,
        "numerical approximation": 1,
        "exact expression": 1,
        "gaussian random variable": 1,
        "peakedness": 1,
        "wolfram alpha": 1,
        "online service": 1
    },
    "covari": {
        "covariance": 1,
        "consistent algorithm": 1,
        "ica": 1,
        "sound clip": 1,
        "ambient sounds": 1,
        "integral calculator": 1,
        "numerical approximation": 1,
        "exact expression": 1,
        "gaussian random variable": 1,
        "peakedness": 1,
        "wolfram alpha": 1,
        "online service": 1
    },
    "jury selection": {
        "population": 2,
        "jury selection": 2,
        "racial composition": 2,
        "ncvs": 2,
        "property losses": 2,
        "bin widths": 2
    },
    "standardize": {
        "scaler": 1,
        "scaling": 1,
        "tensorflow": 1,
        "n": 1,
        "scikit learn": 1,
        "testing sets": 1,
        "permutation": 1,
        "adjusted rand index": 1,
        "rand index": 1,
        "ari score": 1,
        "random labeling": 1,
        "true clusterings": 1
    },
    "bayesian logistic regression form": {
        "univariate logistic regression": 2,
        "sigmoid function": 2,
        "mcmc procedure": 2,
        "pystan": 2,
        "roc scores": 2,
        "non-bayesian logistic": 2
    },
    "bernoulli method": {
        "univariate logistic regression": 2,
        "sigmoid function": 2,
        "mcmc procedure": 2,
        "pystan": 2,
        "roc scores": 2,
        "non-bayesian logistic": 2
    },
    "restaurant number of bookings": {
        "soup object": 2,
        "html objct": 2,
        "bs4": 2,
        "html": 2,
        "google chrome": 2,
        "inspect": 2
    },
    "restaurant names": {
        "soup object": 2,
        "html objct": 2,
        "bs4": 2,
        "html": 2,
        "google chrome": 2,
        "inspect": 2
    },
    "restaurant prices": {
        "soup object": 2,
        "html objct": 2,
        "bs4": 2,
        "html": 2,
        "google chrome": 2,
        "inspect": 2
    },
    "standard basis": {
        "orthonormal basis": 4,
        "dot product": 2,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2
    },
    "arrival delay": {
        "labeledpoint": 2,
        "arrival delay": 2,
        "departure delay": 2,
        "logisticregression": 2,
        "default parameters": 2,
        "iterations": 2
    },
    "holomap": {
        "holomap": 2,
        "dropdown selection menu": 1,
        "numeric sliders": 1,
        "widgets": 1,
        "static files": 1,
        "video": 1,
        "dynamicmap": 1,
        "dropdown menu": 1,
        "holomaps": 1,
        "gif": 1,
        "static html file": 1
    },
    "container type": {
        "holomap": 2,
        "dropdown selection menu": 1,
        "numeric sliders": 1,
        "widgets": 1,
        "static files": 1,
        "video": 1,
        "dynamicmap": 1,
        "dropdown menu": 1,
        "holomaps": 1,
        "gif": 1,
        "static html file": 1
    },
    "holomaps": {
        "holomap": 2,
        "dropdown selection menu": 1,
        "numeric sliders": 1,
        "widgets": 1,
        "static files": 1,
        "video": 1,
        "dynamicmap": 1,
        "dropdown menu": 1,
        "holomaps": 1,
        "gif": 1,
        "static html file": 1
    },
    "parameter exploration": {
        "holomap": 2,
        "dropdown selection menu": 1,
        "numeric sliders": 1,
        "widgets": 1,
        "static files": 1,
        "video": 1,
        "dynamicmap": 1,
        "dropdown menu": 1,
        "holomaps": 1,
        "gif": 1,
        "static html file": 1
    },
    "undirected multigraph": {
        "networkx": 3,
        "ax parameter": 3,
        "multigraph": 3,
        "drawing function": 3
    },
    "json documents": {
        "json file": 2,
        "python dictionary": 2,
        "python 3 notebook": 2,
        "course docker image": 2,
        "ipython notebooks": 2,
        "number count": 1,
        "cell type": 1
    },
    "jupyter notebook format": {
        "json file": 2,
        "python dictionary": 2,
        "python 3 notebook": 2,
        "course docker image": 2,
        "ipython notebooks": 2,
        "number count": 1,
        "cell type": 1
    },
    "context": {
        "2d system": 1,
        "diffusion coefficient": 1,
        "flux": 1,
        "1d vector equation system": 1,
        "linear equation solver": 1,
        "linear index": 1,
        "timestep size": 1,
        "simulation": 1,
        "inaugural corpus": 1,
        "word usage": 1,
        "chat data": 1,
        "summary stats": 1
    },
    "delay": {
        "linear regression model": 3,
        "polynomial": 3,
        "unit tests": 3,
        "instructor grades": 3
    },
    "del": {
        "linear regression model": 3,
        "polynomial": 3,
        "unit tests": 3,
        "instructor grades": 3
    },
    "crsdeptime": {
        "linear regression model": 3,
        "polynomial": 3,
        "unit tests": 3,
        "instructor grades": 3
    },
    "preprocess dataset": {
        "trip duration minutes": 2,
        "testing sets": 2,
        "multi layer perceptron": 1,
        "trip duration class": 1,
        "k neighbors classifier": 1,
        "gaussian naive bayes": 1,
        "report classification results": 1,
        "recall": 1,
        "decision tree classifier": 1,
        "predict": 1
    },
    "color codes": {
        "correlation matrix": 2,
        "correlations": 1,
        "linear operations": 1,
        "graph lasso": 1,
        "numpy method": 1,
        "normalized data": 1,
        "diagonal pattern": 1,
        "timeseries": 1,
        "affinity propagation": 1,
        "similarity scores": 1,
        "correlation coefficients": 1
    },
    "symmetrical matrix": {
        "correlation matrix": 2,
        "correlations": 1,
        "linear operations": 1,
        "graph lasso": 1,
        "numpy method": 1,
        "normalized data": 1,
        "diagonal pattern": 1,
        "timeseries": 1,
        "affinity propagation": 1,
        "similarity scores": 1,
        "correlation coefficients": 1
    },
    "generative model": {
        "input parameters": 1,
        "generative model": 1,
        "size argument": 1,
        "labeled scatter plot": 1,
        "mse": 1,
        "estimated model parameters": 1,
        "residuals": 1,
        "bootstrap": 1,
        "correlations": 1,
        "x arrays": 1,
        "random samples": 1,
        "boostrapped versions": 1
    },
    "map()": {
        "list comprehensions": 4,
        "test case": 2,
        "inner loop": 2,
        "outer loop": 2,
        "hashtags": 2
    },
    "log transformation": {
        "shopping": 2,
        "shopping trips": 2,
        "boxplots": 2,
        "lunar new year": 2,
        "christmas": 2,
        "symmetrize": 1,
        "log transformation": 1
    },
    "credientials": {
        "negative tweets": 1,
        "positive tweets": 1,
        "nltk twitter corpus": 1,
        "tfidfvectorizer": 1,
        "bigrams": 1,
        "default parameters": 1,
        "trigrams": 1,
        "randomforestclassifier": 1,
        "unigrams": 1,
        "stop words": 1,
        "user timeline": 1,
        "tweepy's": 1
    },
    "aliases": {
        "last name": 4,
        "aliases": 2,
        "alias": 2,
        "first name": 2,
        "students": 1
    },
    "assertion tests": {
        "uniquecarrier depdelay origin": 2,
        "dayofweek": 2,
        "departure delay": 2,
        "unit tests": 2,
        "binary indicators": 1,
        "intercept": 1,
        "int64": 1
    },
    "cis 211": {
        "cis211": 1,
        "canvas": 1,
        "jupyter": 1,
        "cis 211": 1,
        "string": 1,
        "french": 1,
        "ick reply": 1,
        "bad style reply": 1,
        "hello function": 1,
        "capitalized language name": 1,
        "lower case characters": 1
    },
    "mic": {
        "docs": 3,
        "tdmatrix": 3,
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "reuters documents": 1,
        "emmed test": 1
    },
    "term frequency inverse document frequency": {
        "docs": 3,
        "tdmatrix": 3,
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "reuters documents": 1,
        "emmed test": 1
    },
    "entropy function": {
        "docs": 3,
        "tdmatrix": 3,
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "reuters documents": 1,
        "emmed test": 1
    },
    "inverse document frequency components": {
        "docs": 3,
        "tdmatrix": 3,
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "reuters documents": 1,
        "emmed test": 1
    },
    "text files": {
        "binary files": 3,
        "numpy array file": 3,
        "ndarray": 2,
        "binary number": 2,
        "hexadecimal number": 1
    },
    "kmeans": {
        "kmeans": 3,
        "silhouette coefficient": 2,
        "kmeans clusterer": 2,
        "cluster labels": 1,
        "predicted clusters": 1,
        "true clusters": 1,
        "unsupervised learning": 1
    },
    "log bernoulli loss": {
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 1
    },
    "multivariate bernoulli distribution": {
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 1
    },
    "negative log bernoulli loss": {
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 1
    },
    "oulli loss": {
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 1
    },
    "kl term": {
        "multivariate": 5,
        "logvar": 5,
        "hyperparameters": 1
    },
    "clustering pipeline": {
        "fish measurements samples": 3,
        "cluster labels": 2,
        "dataframe df": 1,
        "labels": 1,
        "species": 1,
        "couponcode": 1,
        "video lectures": 1,
        "udemy": 1
    },
    "boundary conditions": {
        "populated neighboring cells": 1,
        "boolean array": 1,
        "equality": 1,
        "2d system": 1,
        "diffusion coefficient": 1,
        "flux": 1,
        "1d vector equation system": 1,
        "linear equation solver": 1,
        "linear index": 1,
        "timestep size": 1,
        "simulation": 1
    },
    "traffic sign images": {
        "evaluation() function": 1,
        "activation model": 1,
        "metrics history": 1,
        "sequential model": 1,
        "loss functions": 1,
        "metrics": 1,
        "learning process": 1,
        "keras": 1,
        "fit() function": 1,
        "stochastic gradient descent": 1,
        "training loss": 1
    },
    "dense layer width": {
        "evaluation() function": 1,
        "activation model": 1,
        "metrics history": 1,
        "sequential model": 1,
        "loss functions": 1,
        "metrics": 1,
        "learning process": 1,
        "keras": 1,
        "fit() function": 1,
        "stochastic gradient descent": 1,
        "training loss": 1
    },
    "relu activation function": {
        "evaluation() function": 1,
        "activation model": 1,
        "metrics history": 1,
        "sequential model": 1,
        "loss functions": 1,
        "metrics": 1,
        "learning process": 1,
        "keras": 1,
        "fit() function": 1,
        "stochastic gradient descent": 1,
        "training loss": 1
    },
    "flatten layer": {
        "evaluation() function": 1,
        "activation model": 1,
        "metrics history": 1,
        "sequential model": 1,
        "loss functions": 1,
        "metrics": 1,
        "learning process": 1,
        "keras": 1,
        "fit() function": 1,
        "stochastic gradient descent": 1,
        "training loss": 1
    },
    "keras documentation": {
        "evaluation() function": 1,
        "activation model": 1,
        "metrics history": 1,
        "sequential model": 1,
        "loss functions": 1,
        "metrics": 1,
        "learning process": 1,
        "keras": 1,
        "fit() function": 1,
        "stochastic gradient descent": 1,
        "training loss": 1
    },
    "elementary data exploration": {
        "pandas histogram methods": 2,
        "data exploration": 2,
        "numpy library": 2,
        "naive bayes predictor": 2,
        "test data": 2,
        "naive bayes classifier": 1
    },
    "operators": {
        "dissimilarity": 2,
        "universities": 1,
        "imilar": 1,
        "trait": 1,
        "socioeconomic diversity": 1,
        "graduation rate": 1,
        "us department of": 1,
        "national average annual cost": 1,
        "national average": 1,
        "math module": 1
    },
    "non_duplicates": {
        "rdd": 3,
        "cartesian product": 3,
        "collinear points": 1,
        "r": 1,
        "spark rdd api": 1,
        "helper functions": 1,
        "assert statement unit tests": 1
    },
    "single positional argument": {
        "positional argument": 2,
        "dateutil package": 1,
        "datetime time object": 1,
        "parser": 1,
        "delimiter": 1,
        "floating point values": 1,
        "typeerror": 1,
        "keyword argument": 1,
        "keyword arguments": 1,
        "single positional argument": 1
    },
    "upstream pressure": {
        "time interval": 3,
        "pressure values": 3,
        "odeint": 3,
        "air pressure signals": 2
    },
    "def keyword": {
        "help message": 2,
        "positional arguments": 1,
        "keyword arguments": 1,
        "function call": 1,
        "input": 1,
        "default input values": 1,
        "default values": 1,
        "docstring": 1,
        "source code": 1,
        "fahrenheit": 1
    },
    "genomics data": {
        "fasta file": 2,
        "text munching": 2,
        "sequence data": 2,
        "inputformat": 2,
        "tutorial": 2,
        "rdd": 1
    },
    "match object instances": {
        "regex": 1,
        "pattern object": 1,
        "us phone number": 1,
        "area code": 1,
        "regular expression syntax": 1,
        "challenge 14": 1,
        "metacharacters": 1,
        "parentheses": 1,
        "challenge 13": 1,
        "uring group skills": 1,
        "non-": 1
    },
    "step size": {
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1,
        "signature": 1
    },
    "numerical optimization": {
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1,
        "signature": 1
    },
    "fudge factor": {
        "approximation": 1,
        "taylor series approximation": 1,
        "newton step": 1,
        "moral equivalent": 1,
        "linear equations": 1,
        "multidimensional variables": 1,
        "scalar objective function": 1,
        "elementwise multiplication": 1,
        "elementwise product": 1,
        "signature": 1
    },
    "recursive feature elimination": {
        "randomforestclassifier": 2,
        "random forest classifier": 2,
        "score function": 2,
        "pipeline anova rfc": 1,
        "anova filter": 1,
        "random forest classification": 1,
        "svc classification": 1
    },
    "linear algebra operations": {
        "unstable equilibrium state vector": 2,
        "lqr solver": 1,
        "q": 1,
        "lqr": 1,
        "matrix multiplications": 1,
        "traceback": 1,
        "matrix multiplication": 1,
        "size mismatch": 1,
        "runtimeerror": 1
    },
    "regresja": {
        "funkcji": 1,
        "liczba przyk\u0142ad\u00f3w": 1,
        "res": 1,
        "many variables": 1,
        "variables": 1,
        "wiste": 1,
        "\ufffd": 1,
        "funkcja straty": 1,
        "oznacza iloczyn skalarny": 1,
        "gradients": 1
    },
    "shapely point geometry object": {
        "error message": 2,
        "shapely geometry": 2,
        "linestring": 2,
        "shapely point": 2,
        "polygon geometry": 2
    },
    "shapely points": {
        "error message": 2,
        "shapely geometry": 2,
        "linestring": 2,
        "shapely point": 2,
        "polygon geometry": 2
    },
    "linestring object": {
        "error message": 2,
        "shapely geometry": 2,
        "linestring": 2,
        "shapely point": 2,
        "polygon geometry": 2
    },
    "coords": {
        "error message": 2,
        "shapely geometry": 2,
        "linestring": 2,
        "shapely point": 2,
        "polygon geometry": 2
    },
    "polygon object": {
        "error message": 2,
        "shapely geometry": 2,
        "linestring": 2,
        "shapely point": 2,
        "polygon geometry": 2
    },
    "github repository": {
        "error message": 2,
        "shapely geometry": 2,
        "linestring": 2,
        "shapely point": 2,
        "polygon geometry": 2
    },
    "derivative": {
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "color intensity": 1,
        "colors": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1
    },
    "numerical differentiation": {
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "color intensity": 1,
        "colors": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1
    },
    "50x50 array": {
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "color intensity": 1,
        "colors": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1
    },
    "x": {
        "text files": 1,
        "summer scene": 1,
        "text editor": 1,
        "winter scene": 1,
        "datasets": 1,
        "color intensity": 1,
        "colors": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1
    },
    "file1": {
        "color intensity": 2,
        "colors": 2,
        "numpy functions": 2,
        "2d array": 2,
        "bar chart": 2
    },
    "authorization code": {
        "requests library": 4,
        "http get request": 2,
        "nyt article api": 2,
        "results page": 1,
        "search parameters": 1
    },
    "new york times api": {
        "requests library": 4,
        "http get request": 2,
        "nyt article api": 2,
        "results page": 1,
        "search parameters": 1
    },
    "base url": {
        "requests library": 4,
        "http get request": 2,
        "nyt article api": 2,
        "results page": 1,
        "search parameters": 1
    },
    "response format": {
        "requests library": 4,
        "http get request": 2,
        "nyt article api": 2,
        "results page": 1,
        "search parameters": 1
    },
    "duke ellington": {
        "requests library": 4,
        "http get request": 2,
        "nyt article api": 2,
        "results page": 1,
        "search parameters": 1
    },
    "sgd iterations": {
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "mlp": 1,
        "hidden layer": 1,
        "non-linear activation function": 1
    },
    "visualize weights": {
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "mlp": 1,
        "hidden layer": 1,
        "non-linear activation function": 1
    },
    "true class label": {
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "mlp": 1,
        "hidden layer": 1,
        "non-linear activation function": 1
    },
    "highest probability": {
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "mlp": 1,
        "hidden layer": 1,
        "non-linear activation function": 1
    },
    "multilayer perceptron": {
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "mlp": 1,
        "hidden layer": 1,
        "non-linear activation function": 1
    },
    "probability normalizing factor": {
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "mlp": 1,
        "hidden layer": 1,
        "non-linear activation function": 1
    },
    "unnormalized probabilities": {
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "mlp": 1,
        "hidden layer": 1,
        "non-linear activation function": 1
    },
    "multiclass logistic regression model": {
        "likelihood term": 1,
        "probability": 1,
        "maximum a posteriori parameter": 1,
        "map solution": 1,
        "maximum a posteriori solution": 1,
        "decision function": 1,
        "weights": 1,
        "mlp": 1,
        "hidden layer": 1,
        "non-linear activation function": 1
    },
    "matplotlib introduction": {
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1,
        "matplotlib exercises": 1,
        "credit dataset": 1,
        "black coloured markers": 1,
        "font size": 1,
        "age": 1,
        "attributes duration": 1
    },
    "diminishing returns": {
        "probabilistic predictions": 3,
        "paremeters": 3,
        "average auc": 2,
        "code cell": 2
    },
    "universities": {
        "dissimilarity": 2,
        "imilar": 1,
        "trait": 1,
        "socioeconomic diversity": 1,
        "graduation rate": 1,
        "us department of": 1,
        "national average annual cost": 1,
        "national average": 1,
        "math module": 1
    },
    "elections table": {
        "dem states column": 2,
        "democratic votes": 2,
        "elections table": 2,
        "spread function": 1,
        "call to group": 1,
        "democrat spread column": 1,
        "southern states": 1
    },
    "3d arrays": {
        "linear system": 2,
        "linear equation": 2,
        "state value function": 2,
        "exact policy iteration": 2,
        "policy iteration": 2
    },
    "randomly generated mdps": {
        "linear system": 2,
        "linear equation": 2,
        "state value function": 2,
        "exact policy iteration": 2,
        "policy iteration": 2
    },
    "honour code": {
        "assertions": 4,
        "edsa honour code": 2,
        "breach of contract": 2,
        "honour code": 2
    },
    "shift operators": {
        "rolling correlation function": 3,
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "noise violation": {
        "noise violation calls": 1,
        "calls dataframe": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "total noise violations": {
        "noise violation calls": 1,
        "calls dataframe": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "noise violation calls": {
        "noise violation calls": 1,
        "calls dataframe": 1,
        "eventtm": 1,
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "noise level estimation": {
        "colored image": 4,
        "train set": 4,
        "fine tuning": 1,
        "parameter tuning": 1
    },
    "clt": {
        "central limit theorem": 2,
        "uniform distribution": 2,
        "random variates": 2,
        "probability distribution": 1,
        "random variable": 1,
        "uniform2": 1,
        "clt": 1
    },
    "national database": {
        "hhs": 4,
        "name popularity": 4,
        "name frequencies": 2
    },
    "formula syntax": {
        "formula": 1,
        "quadratic regression": 1,
        "medv": 1,
        "python functions": 1,
        "patsy": 1,
        "dummy variables": 1,
        "categorical variables": 1,
        "patsy formulas": 1,
        "crim": 1,
        "fit models": 1
    },
    "patsy patsy": {
        "formula": 1,
        "quadratic regression": 1,
        "medv": 1,
        "python functions": 1,
        "patsy": 1,
        "dummy variables": 1,
        "categorical variables": 1,
        "patsy formulas": 1,
        "crim": 1,
        "fit models": 1
    },
    "y matrices": {
        "formula": 1,
        "quadratic regression": 1,
        "medv": 1,
        "python functions": 1,
        "patsy": 1,
        "dummy variables": 1,
        "categorical variables": 1,
        "patsy formulas": 1,
        "crim": 1,
        "fit models": 1
    },
    "matplolib": {
        "deep learning": 1,
        "neural network": 1,
        "standard scaling": 1,
        "standardize": 1,
        "scaler": 1,
        "scaling": 1,
        "tensorflow": 1,
        "n": 1,
        "scikit learn": 1,
        "testing sets": 1
    },
    "likelihood": {
        "binomial": 4,
        "likelihood function": 3,
        "likelihood": 1,
        "maximum likelihood estimate": 1,
        "binomial distribution": 1
    },
    "coordinate system": {
        "orthonormal basis": 4,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2
    },
    "vector": {
        "orthonormal basis": 4,
        "\\ld": 2,
        "basis vectors": 2,
        "standard basis": 2
    },
    "floats": {
        "rounding errors": 1,
        "relative error": 1,
        "integer arithmetic": 1,
        "integer argument": 1,
        "sqrt": 1,
        "float": 1,
        "arbitrary integer": 1,
        "integers": 1,
        "large integers": 1,
        "compute time": 1
    },
    "date ranges": {
        "unknown indices": 1,
        "keyword argument": 1,
        "asfreq": 1,
        "resample": 1,
        "freq keyword arguments": 1,
        "finegrained control": 1,
        "offset aliases": 1,
        "lesson notes": 1,
        "time interval": 1,
        "period object": 1
    },
    "encies": {
        "unknown indices": 1,
        "keyword argument": 1,
        "asfreq": 1,
        "resample": 1,
        "freq keyword arguments": 1,
        "finegrained control": 1,
        "offset aliases": 1,
        "lesson notes": 1,
        "time interval": 1,
        "period object": 1
    },
    "grades": {
        "grades": 1,
        "student alcohol usage": 1,
        "background information": 1,
        "kaggle": 1,
        "school board members": 1,
        "explor": 1,
        "correlation": 1,
        "dataframe talc": 1,
        "alcohol usage": 1,
        "covariation": 1
    },
    "student alcohol usage": {
        "grades": 1,
        "student alcohol usage": 1,
        "background information": 1,
        "kaggle": 1,
        "school board members": 1,
        "explor": 1,
        "correlation": 1,
        "dataframe talc": 1,
        "alcohol usage": 1,
        "covariation": 1
    },
    "problemas": {
        "rotaci\u00f3n": 3,
        "matriz": 2,
        "matrices": 2,
        "\u00f3n": 1,
        "guardalos": 1,
        "variable res": 1
    },
    "nearest neighbour classification": {
        "euclidean distance": 2,
        "feature vectors": 1,
        "cosine distance": 1,
        "classify": 1,
        "nearest neighbour classifier": 1,
        "alaphabet": 1,
        "divergence function": 1,
        "variances": 1,
        "character pairs": 1
    },
    "word2vec model": {
        "word2vec model": 3,
        "total frequency": 2,
        "code cell": 2,
        "cosine similarity": 1,
        "cosine similarities": 1,
        "movie reviews": 1
    },
    "average length": {
        "basecount": 3,
        "wordcount": 2,
        "helper function": 1,
        "kmercount": 1,
        "sliding window": 1,
        "overlapping": 1,
        "rdd": 1
    },
    "quandl": {
        "quandl": 1,
        "requests": 1,
        "http get request": 1,
        "github credentials": 1,
        "rental prices": 1,
        "zillow dataset": 1,
        "python variable": 1,
        "quand": 1,
        "json": 1,
        "andl": 1
    },
    "california home prices": {
        "quandl": 1,
        "requests": 1,
        "http get request": 1,
        "github credentials": 1,
        "rental prices": 1,
        "zillow dataset": 1,
        "python variable": 1,
        "quand": 1,
        "json": 1,
        "andl": 1
    },
    "error optimization": {
        "2d calculation": 1,
        "gridblocks": 1,
        "timesteps": 1,
        "computation time": 1,
        "gridsize": 1,
        "error function": 1,
        "timestep": 1,
        "timestep size": 1,
        "simulation": 1,
        "execution time": 1
    },
    "resolution scheme": {
        "2d calculation": 1,
        "gridblocks": 1,
        "timesteps": 1,
        "computation time": 1,
        "gridsize": 1,
        "error function": 1,
        "timestep": 1,
        "timestep size": 1,
        "simulation": 1,
        "execution time": 1
    },
    "1d homogeneous problem": {
        "2d calculation": 1,
        "gridblocks": 1,
        "timesteps": 1,
        "computation time": 1,
        "gridsize": 1,
        "error function": 1,
        "timestep": 1,
        "timestep size": 1,
        "simulation": 1,
        "execution time": 1
    },
    "1d problem": {
        "2d calculation": 1,
        "gridblocks": 1,
        "timesteps": 1,
        "computation time": 1,
        "gridsize": 1,
        "error function": 1,
        "timestep": 1,
        "timestep size": 1,
        "simulation": 1,
        "execution time": 1
    },
    "global error": {
        "2d calculation": 1,
        "gridblocks": 1,
        "timesteps": 1,
        "computation time": 1,
        "gridsize": 1,
        "error function": 1,
        "timestep": 1,
        "timestep size": 1,
        "simulation": 1,
        "execution time": 1
    },
    "plot generation": {
        "vectorised functions": 3,
        "execution time": 3,
        "implementation": 1,
        "loops": 1,
        "execution speed": 1,
        "linear regression implementation": 1
    },
    "numerical methods": {
        "vectorised functions": 3,
        "execution time": 3,
        "implementation": 1,
        "loops": 1,
        "execution speed": 1,
        "linear regression implementation": 1
    },
    "assignment notebook": {
        "vectorised functions": 3,
        "execution time": 3,
        "implementation": 1,
        "loops": 1,
        "execution speed": 1,
        "linear regression implementation": 1
    },
    "linear interpolation": {
        "vectorised functions": 3,
        "execution time": 3,
        "implementation": 1,
        "loops": 1,
        "execution speed": 1,
        "linear regression implementation": 1
    },
    "linear equations": {
        "vectorised functions": 3,
        "execution time": 3,
        "implementation": 1,
        "loops": 1,
        "execution speed": 1,
        "linear regression implementation": 1
    },
    "assignment task": {
        "vectorised functions": 3,
        "execution time": 3,
        "implementation": 1,
        "loops": 1,
        "execution speed": 1,
        "linear regression implementation": 1
    },
    "higher efficiency": {
        "vectorised functions": 3,
        "execution time": 3,
        "implementation": 1,
        "loops": 1,
        "execution speed": 1,
        "linear regression implementation": 1
    },
    "linear interpolation function": {
        "vectorised functions": 3,
        "execution time": 3,
        "implementation": 1,
        "loops": 1,
        "execution speed": 1,
        "linear regression implementation": 1
    },
    "code review": {
        "unit testing": 2,
        "maximum overlap": 1,
        "single": 1,
        "overlapping segments": 1,
        "combined string": 1,
        "programming practice": 1,
        "unit test": 1,
        "imput strings": 1,
        "unit tests": 1
    },
    "computational science": {
        "unit testing": 2,
        "maximum overlap": 1,
        "single": 1,
        "overlapping segments": 1,
        "combined string": 1,
        "programming practice": 1,
        "unit test": 1,
        "imput strings": 1,
        "unit tests": 1
    },
    "shotgun assembly program": {
        "unit testing": 2,
        "maximum overlap": 1,
        "single": 1,
        "overlapping segments": 1,
        "combined string": 1,
        "programming practice": 1,
        "unit test": 1,
        "imput strings": 1,
        "unit tests": 1
    },
    "l2 regularization": {
        "momentum term": 2,
        "l2 regularization term": 2,
        "l2 regularization": 2,
        "regularizatino constant": 2,
        "batch size": 2
    },
    "momentum term": {
        "momentum term": 2,
        "l2 regularization term": 2,
        "l2 regularization": 2,
        "regularizatino constant": 2,
        "batch size": 2
    },
    "weight update": {
        "momentum term": 2,
        "l2 regularization term": 2,
        "l2 regularization": 2,
        "regularizatino constant": 2,
        "batch size": 2
    },
    "uk": {
        "sqlite function": 2,
        "strftime": 2,
        "invoicedate": 2,
        "support rep": 2,
        "table employee": 2
    },
    "moving averages": {
        "heatmap": 2,
        "close price": 2,
        "bank of america": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "morgan stanley": 1,
        "bollinger band plot": 1
    },
    "close price": {
        "heatmap": 2,
        "close price": 2,
        "bank of america": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "morgan stanley": 1,
        "bollinger band plot": 1
    },
    "ipython kernel": {
        "python code": 1,
        "kernel": 1,
        "python interpreter": 1,
        "kernel state": 1,
        "magics": 1,
        "ipython commands": 1,
        "keyboard shortcuts": 1,
        "user interface tour": 1,
        "coding assignments": 1,
        "test cells": 1
    },
    "fluid density": {
        "material index": 2,
        "layout command": 1,
        "light material index": 1,
        "conditional branching method": 1,
        "swarm particle indices": 1,
        "material setup": 1,
        "material types": 1,
        "viscosity": 1,
        "density": 1
    },
    "viscosity": {
        "material index": 2,
        "layout command": 1,
        "light material index": 1,
        "conditional branching method": 1,
        "swarm particle indices": 1,
        "material setup": 1,
        "material types": 1,
        "viscosity": 1,
        "density": 1
    },
    "particle swarm": {
        "material index": 2,
        "layout command": 1,
        "light material index": 1,
        "conditional branching method": 1,
        "swarm particle indices": 1,
        "material setup": 1,
        "material types": 1,
        "viscosity": 1,
        "density": 1
    },
    "text processing import": {
        "multinomialnb": 2,
        "countvectorizer": 2,
        "tfidftransformer": 2,
        "train test split": 2,
        "confusion matrix": 1
    },
    "tfidftransformer": {
        "multinomialnb": 2,
        "countvectorizer": 2,
        "tfidftransformer": 2,
        "train test split": 2,
        "confusion matrix": 1
    },
    "file contents": {
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1
    },
    "panda documentation": {
        "matplotlib documentation": 1,
        "3d plotting": 1,
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1
    },
    "unstable equilibrium point": {
        "linear quadratic regulator": 2,
        "optimal feedback gain": 2,
        "unstable equilibrium state vector": 2,
        "lqr solver": 1,
        "q": 1,
        "lqr": 1
    },
    "unstable equilibrium": {
        "linear quadratic regulator": 2,
        "optimal feedback gain": 2,
        "unstable equilibrium state vector": 2,
        "lqr solver": 1,
        "q": 1,
        "lqr": 1
    },
    "state vector": {
        "linear quadratic regulator": 2,
        "optimal feedback gain": 2,
        "unstable equilibrium state vector": 2,
        "lqr solver": 1,
        "q": 1,
        "lqr": 1
    },
    "closed loop full state feedback controller": {
        "linear quadratic regulator": 2,
        "optimal feedback gain": 2,
        "unstable equilibrium state vector": 2,
        "lqr solver": 1,
        "q": 1,
        "lqr": 1
    },
    "whitespace character": {
        "regex": 4,
        "dollar sign": 2,
        "dollars": 1,
        "square paranthesis": 1,
        "uppercase letters": 1
    },
    "non-negligible pressure drop": {
        "m": 2,
        "25 mm": 2,
        "25 \u00b0c": 2,
        "time interval": 1,
        "pressure values": 1,
        "odeint": 1
    },
    "realistic equation solving": {
        "m": 2,
        "25 mm": 2,
        "25 \u00b0c": 2,
        "time interval": 1,
        "pressure values": 1,
        "odeint": 1
    },
    "pressurised vessel": {
        "m": 2,
        "25 mm": 2,
        "25 \u00b0c": 2,
        "time interval": 1,
        "pressure values": 1,
        "odeint": 1
    },
    "diseased people": {
        "booleans": 1,
        "diseased patients": 1,
        "healthy patients": 1,
        "red dots": 1,
        "marker size": 1,
        "marker style": 1,
        "diseased people": 1,
        "python function": 1,
        "nested loop": 1
    },
    "class label": {
        "booleans": 1,
        "diseased patients": 1,
        "healthy patients": 1,
        "red dots": 1,
        "marker size": 1,
        "marker style": 1,
        "diseased people": 1,
        "python function": 1,
        "nested loop": 1
    },
    "barh plot type": {
        "regular bar plot": 3,
        "countplot": 2,
        "answer3b": 2,
        "noise violation": 2
    },
    "value counts": {
        "regular bar plot": 3,
        "countplot": 2,
        "answer3b": 2,
        "noise violation": 2
    },
    "fixed weights": {
        "face images": 2,
        "mlp": 2,
        "narrow networks": 1,
        "wide networks": 1,
        "cnn": 1,
        "pooling layer": 1,
        "convolutional layer": 1
    },
    "object dection": {
        "face images": 2,
        "mlp": 2,
        "narrow networks": 1,
        "wide networks": 1,
        "cnn": 1,
        "pooling layer": 1,
        "convolutional layer": 1
    },
    "color histograms": {
        "face images": 2,
        "mlp": 2,
        "narrow networks": 1,
        "wide networks": 1,
        "cnn": 1,
        "pooling layer": 1,
        "convolutional layer": 1
    },
    "convolutional layers": {
        "face images": 2,
        "mlp": 2,
        "narrow networks": 1,
        "wide networks": 1,
        "cnn": 1,
        "pooling layer": 1,
        "convolutional layer": 1
    },
    "convolutional network": {
        "face images": 2,
        "mlp": 2,
        "narrow networks": 1,
        "wide networks": 1,
        "cnn": 1,
        "pooling layer": 1,
        "convolutional layer": 1
    },
    "cnn": {
        "face images": 2,
        "mlp": 2,
        "narrow networks": 1,
        "wide networks": 1,
        "cnn": 1,
        "pooling layer": 1,
        "convolutional layer": 1
    },
    "automatic image captioning": {
        "face images": 2,
        "mlp": 2,
        "narrow networks": 1,
        "wide networks": 1,
        "cnn": 1,
        "pooling layer": 1,
        "convolutional layer": 1
    },
    "night scene": {
        "face images": 2,
        "mlp": 2,
        "narrow networks": 1,
        "wide networks": 1,
        "cnn": 1,
        "pooling layer": 1,
        "convolutional layer": 1
    },
    "scene labeling": {
        "face images": 2,
        "mlp": 2,
        "narrow networks": 1,
        "wide networks": 1,
        "cnn": 1,
        "pooling layer": 1,
        "convolutional layer": 1
    },
    "text processing": {
        "recurrent neural network": 1,
        "identifiers": 1,
        "tensorflow string manipulation": 1,
        "processed image": 1,
        "command prompt": 1,
        "tesseract library": 1,
        "ocr": 1,
        "reading errors": 1,
        "tesseract": 1
    },
    "scientific ecosystem": {
        "latin alphabets": 1,
        "python 3": 1,
        "unicode strings": 1,
        "dictionaries": 1,
        "collection types": 1,
        "tab": 1,
        "question mark": 1,
        "ipython": 1,
        "control flow structure": 1
    },
    "core python crash course": {
        "latin alphabets": 1,
        "python 3": 1,
        "unicode strings": 1,
        "dictionaries": 1,
        "collection types": 1,
        "tab": 1,
        "question mark": 1,
        "ipython": 1,
        "control flow structure": 1
    },
    "random numbers": {
        "random numbers": 2,
        "python program": 1,
        "united states": 1,
        "canada": 1,
        "deterministic algorithm": 1,
        "random method": 1,
        "arbitrary integer": 1,
        "random number": 1
    },
    "human eye": {
        "cantaloupes": 2,
        "vector dot products": 1,
        "berkeley bowl": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1
    },
    "gaussian blurring function": {
        "cantaloupes": 2,
        "vector dot products": 1,
        "berkeley bowl": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1
    },
    "python pic": {
        "cantaloupes": 2,
        "vector dot products": 1,
        "berkeley bowl": 1,
        "bananas": 1,
        "fruit bowls": 1,
        "apples": 1,
        "sam": 1,
        "matrix expression": 1
    },
    "dimensionality reduction techniques": {
        "handwritten digits": 2,
        "pca": 2,
        "data matrix x": 2,
        "dimensionality reduction": 1,
        "principal components": 1,
        "residual noise": 1
    },
    "alternate pca": {
        "handwritten digits": 2,
        "pca": 2,
        "data matrix x": 2,
        "dimensionality reduction": 1,
        "principal components": 1,
        "residual noise": 1
    },
    "randomizedpca": {
        "handwritten digits": 2,
        "pca": 2,
        "data matrix x": 2,
        "dimensionality reduction": 1,
        "principal components": 1,
        "residual noise": 1
    },
    "undersampling regularization": {
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "rigde": {
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "oversampling": {
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "ridge": {
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "oversampling regular": {
        "non-churn populations": 1,
        "learning curves": 1,
        "feature engineering": 1,
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "project narrative": {
        "kmeans": 3,
        "height": 1,
        "weight": 1,
        "dimensionality reduction": 1,
        "principal components analysis": 1,
        "normal distributions": 1,
        "testing distributions": 1
    },
    "word2": {
        "polarity cutoff": 4,
        "noise reduction": 3,
        "6": 2
    },
    "word indices": {
        "polarity cutoff": 4,
        "noise reduction": 3,
        "6": 2
    },
    "local list variable": {
        "polarity cutoff": 4,
        "noise reduction": 3,
        "6": 2
    },
    "affine layer tasks": {
        "computational graph": 2,
        "variable naming convention": 2,
        "exact variable names": 1,
        "local gradients": 1,
        "squared loss layer tasks": 1,
        "squared loss white box": 1,
        "squared loss black box": 1
    },
    "affine white box": {
        "computational graph": 2,
        "variable naming convention": 2,
        "exact variable names": 1,
        "local gradients": 1,
        "squared loss layer tasks": 1,
        "squared loss white box": 1,
        "squared loss black box": 1
    },
    "affine layer": {
        "computational graph": 2,
        "variable naming convention": 2,
        "exact variable names": 1,
        "local gradients": 1,
        "squared loss layer tasks": 1,
        "squared loss white box": 1,
        "squared loss black box": 1
    },
    "affine black box": {
        "computational graph": 2,
        "variable naming convention": 2,
        "exact variable names": 1,
        "local gradients": 1,
        "squared loss layer tasks": 1,
        "squared loss white box": 1,
        "squared loss black box": 1
    },
    "local gradients": {
        "computational graph": 2,
        "variable naming convention": 2,
        "exact variable names": 1,
        "local gradients": 1,
        "squared loss layer tasks": 1,
        "squared loss white box": 1,
        "squared loss black box": 1
    },
    "exact variable names": {
        "computational graph": 2,
        "variable naming convention": 2,
        "exact variable names": 1,
        "local gradients": 1,
        "squared loss layer tasks": 1,
        "squared loss white box": 1,
        "squared loss black box": 1
    },
    "eratosthenes": {
        "boolean list": 2,
        "prime numbers": 1,
        "reasoning": 1,
        "booleans": 1,
        "cells": 1,
        "colored cell": 1,
        "integers": 1,
        "grey cells": 1
    },
    "random tensors": {
        "random tensor": 7,
        "uniform distribution": 2
    },
    "sqlite3 library": {
        "population": 3,
        "foreign key constraints": 3,
        "sqlite3 library": 3
    },
    "alter table command": {
        "population": 3,
        "foreign key constraints": 3,
        "sqlite3 library": 3
    },
    "sqlite3 database": {
        "population": 3,
        "foreign key constraints": 3,
        "sqlite3 library": 3
    },
    "us births": {
        "hhs": 2,
        "name popularity": 2,
        "name frequencies": 1,
        "social security administration": 1,
        "pandas table": 1,
        "random sample": 1,
        "bar charts": 1
    },
    "source answer cell": {
        "mysqrt": 1,
        "sqrt()": 1,
        "modulo operation": 1,
        "mysqrt()": 1,
        "internet": 1,
        "python sieve": 1,
        "sieve": 1,
        "eratosthenes": 1,
        "prime numbers": 1
    },
    "algorithmic thinking": {
        "mysqrt": 1,
        "sqrt()": 1,
        "modulo operation": 1,
        "mysqrt()": 1,
        "internet": 1,
        "python sieve": 1,
        "sieve": 1,
        "eratosthenes": 1,
        "prime numbers": 1
    },
    "source code": {
        "mysqrt": 1,
        "sqrt()": 1,
        "modulo operation": 1,
        "mysqrt()": 1,
        "internet": 1,
        "python sieve": 1,
        "sieve": 1,
        "eratosthenes": 1,
        "prime numbers": 1
    },
    "nbgrader extension": {
        "mysqrt": 1,
        "sqrt()": 1,
        "modulo operation": 1,
        "mysqrt()": 1,
        "internet": 1,
        "python sieve": 1,
        "sieve": 1,
        "eratosthenes": 1,
        "prime numbers": 1
    },
    "numerical simulation": {
        "mysqrt": 1,
        "sqrt()": 1,
        "modulo operation": 1,
        "mysqrt()": 1,
        "internet": 1,
        "python sieve": 1,
        "sieve": 1,
        "eratosthenes": 1,
        "prime numbers": 1
    },
    "transformation": {
        "mysqrt": 1,
        "sqrt()": 1,
        "modulo operation": 1,
        "mysqrt()": 1,
        "internet": 1,
        "python sieve": 1,
        "sieve": 1,
        "eratosthenes": 1,
        "prime numbers": 1
    },
    "scratch pad": {
        "mysqrt": 1,
        "sqrt()": 1,
        "modulo operation": 1,
        "mysqrt()": 1,
        "internet": 1,
        "python sieve": 1,
        "sieve": 1,
        "eratosthenes": 1,
        "prime numbers": 1
    },
    "statistical modeling": {
        "mysqrt": 1,
        "sqrt()": 1,
        "modulo operation": 1,
        "mysqrt()": 1,
        "internet": 1,
        "python sieve": 1,
        "sieve": 1,
        "eratosthenes": 1,
        "prime numbers": 1
    },
    "narrative text": {
        "mysqrt": 1,
        "sqrt()": 1,
        "modulo operation": 1,
        "mysqrt()": 1,
        "internet": 1,
        "python sieve": 1,
        "sieve": 1,
        "eratosthenes": 1,
        "prime numbers": 1
    },
    "python basics": {
        "nested list": 1,
        "indexing": 1,
        "nest dictionary": 1,
        "email website": 1,
        "dog": 1,
        "capitalization": 1,
        "lambda expressions": 1,
        "() function": 1,
        "police officer": 1
    },
    "perform gradient ascent": {
        "learning rate": 2,
        "learning curve": 2,
        "regularization": 1,
        "predict()": 1,
        "correct guesses": 1,
        "guessed classes": 1,
        "predicted exam results": 1
    },
    "api docs": {
        "sql expression": 3,
        "group": 3,
        "groupeddata operations": 3
    },
    "dataframewriter": {
        "sql expression": 3,
        "group": 3,
        "groupeddata operations": 3
    },
    "hierarchical modeling": {
        "departure delays": 3,
        "poisson distribution": 2,
        "depdelay": 2,
        "central illinois regional airport": 1,
        "code cell": 1
    },
    "hierarchical model": {
        "departure delays": 3,
        "poisson distribution": 2,
        "depdelay": 2,
        "central illinois regional airport": 1,
        "code cell": 1
    },
    "arrdelay column": {
        "labeledpoint": 2,
        "arrival delay": 2,
        "departure delay": 2,
        "logisticregression": 1,
        "default parameters": 1,
        "iterations": 1
    },
    "depdelay column": {
        "labeledpoint": 2,
        "arrival delay": 2,
        "departure delay": 2,
        "logisticregression": 1,
        "default parameters": 1,
        "iterations": 1
    },
    "decoder tests": {
        "autoencoder": 3,
        "binary crossentropy loss": 2,
        "keras functional api": 2,
        "python list": 1,
        "pil image": 1
    },
    "test statistics": {
        "birth weight": 1,
        "age": 1,
        "correlation": 1,
        "null hypothesis": 1,
        "first babies": 1,
        "statistical significance": 1,
        "false negative rate": 1,
        "nsfg data": 1,
        "hypothesis test": 1
    },
    "first babies": {
        "birth weight": 1,
        "age": 1,
        "correlation": 1,
        "null hypothesis": 1,
        "first babies": 1,
        "statistical significance": 1,
        "false negative rate": 1,
        "nsfg data": 1,
        "hypothesis test": 1
    },
    "census bureau website": {
        "data files": 2,
        "python modules": 1,
        "encoding specification": 1,
        "total outflows": 1,
        "fips designators": 1,
        "single": 1,
        "stateoutflows": 1,
        "pandas data frame": 1
    },
    "irs": {
        "data files": 2,
        "python modules": 1,
        "encoding specification": 1,
        "total outflows": 1,
        "fips designators": 1,
        "single": 1,
        "stateoutflows": 1,
        "pandas data frame": 1
    },
    "irs tax migration": {
        "data files": 2,
        "python modules": 1,
        "encoding specification": 1,
        "total outflows": 1,
        "fips designators": 1,
        "single": 1,
        "stateoutflows": 1,
        "pandas data frame": 1
    },
    "fips codes": {
        "data files": 2,
        "python modules": 1,
        "encoding specification": 1,
        "total outflows": 1,
        "fips designators": 1,
        "single": 1,
        "stateoutflows": 1,
        "pandas data frame": 1
    },
    "desc keyword": {
        "sql aliases": 1,
        "sql alias syntax": 1,
        "query arguments": 1,
        "database table": 1,
        "alias as": 1,
        "column": 1,
        "aliases": 1,
        "sql subqueries": 1,
        "else statement": 1
    },
    "order by keyword": {
        "sql aliases": 1,
        "sql alias syntax": 1,
        "query arguments": 1,
        "database table": 1,
        "alias as": 1,
        "column": 1,
        "aliases": 1,
        "sql subqueries": 1,
        "else statement": 1
    },
    "lynomial": {
        "20th order polynomials": 2,
        "fold errors": 1,
        "dual problem": 1,
        "wildly behaving pilynomials": 1,
        "lagrange multipliers": 1,
        "training error": 1,
        "bias": 1,
        "penalty term": 1
    },
    "patients": {
        "age": 2,
        "patients": 1,
        "liver disease": 1,
        "grouped bar chart": 1,
        "hue property": 1,
        "correlation heatmap": 1,
        "dimensionality": 1,
        "decisiontreeclassifier": 1
    },
    "library": {
        "age": 2,
        "patients": 1,
        "liver disease": 1,
        "grouped bar chart": 1,
        "hue property": 1,
        "correlation heatmap": 1,
        "dimensionality": 1,
        "decisiontreeclassifier": 1
    },
    "numeric codes": {
        "us phone number": 1,
        "area code": 1,
        "regular expression syntax": 1,
        "challenge 14": 1,
        "metacharacters": 1,
        "parentheses": 1,
        "challenge 13": 1,
        "uring group skills": 1,
        "non-": 1
    },
    "data entry errors": {
        "us phone number": 1,
        "area code": 1,
        "regular expression syntax": 1,
        "challenge 14": 1,
        "metacharacters": 1,
        "parentheses": 1,
        "challenge 13": 1,
        "uring group skills": 1,
        "non-": 1
    },
    "robots": {
        "us phone number": 1,
        "area code": 1,
        "regular expression syntax": 1,
        "challenge 14": 1,
        "metacharacters": 1,
        "parentheses": 1,
        "challenge 13": 1,
        "uring group skills": 1,
        "non-": 1
    },
    "databases": {
        "ratings data": 1,
        "movielens dataset": 1,
        "sqlite database": 1,
        "exercise notebook": 1,
        "sqlite databse": 1,
        "sqlite3 package": 1,
        "ratings table": 1,
        "python object": 1,
        "ratings": 1
    },
    "numpy vectors": {
        "tickerinfo": 2,
        "ticker names": 2,
        "diff rolumns": 1,
        "tickers": 1,
        "company name": 1,
        "sector ids": 1,
        "sector id": 1
    },
    "ecommerce customers csv file": {
        "2d hex bin plot": 1,
        "jointplot": 1,
        "yearly amount spent": 1,
        "correlated feature": 1,
        "linear model plot": 1,
        "testing sets": 1,
        "l": 1,
        "scatterplot": 1,
        "predicted values": 1
    },
    "yearly amount spent columns": {
        "2d hex bin plot": 1,
        "jointplot": 1,
        "yearly amount spent": 1,
        "correlated feature": 1,
        "linear model plot": 1,
        "testing sets": 1,
        "l": 1,
        "scatterplot": 1,
        "predicted values": 1
    },
    "jointplot": {
        "2d hex bin plot": 1,
        "jointplot": 1,
        "yearly amount spent": 1,
        "correlated feature": 1,
        "linear model plot": 1,
        "testing sets": 1,
        "l": 1,
        "scatterplot": 1,
        "predicted values": 1
    },
    "time on website": {
        "2d hex bin plot": 1,
        "jointplot": 1,
        "yearly amount spent": 1,
        "correlated feature": 1,
        "linear model plot": 1,
        "testing sets": 1,
        "l": 1,
        "scatterplot": 1,
        "predicted values": 1
    },
    "lookaheads": {
        "literals": 2,
        "basic regular expression syntax": 2,
        "regexr": 2,
        "brackets": 2
    },
    "anchors": {
        "anchor": 2,
        "character class": 2,
        "regexr": 2,
        "regex": 2
    },
    "basic vector operations": {
        "vector x": 4,
        "basic vector operations": 3,
        "scalar a": 1
    },
    "box plot": {
        "interquartile range": 2,
        "quartiles": 2,
        "outlier": 1,
        "pandas methods": 1,
        "compute variance": 1,
        "compute standard deviation": 1
    },
    "lattice": {
        "deterministic results": 2,
        "random seed": 2,
        "simulation": 2,
        "relative frequencies": 2
    },
    "attice": {
        "deterministic results": 2,
        "random seed": 2,
        "simulation": 2,
        "relative frequencies": 2
    },
    "transition behavior": {
        "deterministic results": 2,
        "random seed": 2,
        "simulation": 2,
        "relative frequencies": 2
    },
    "exoplanets": {
        "exoplanet properties": 2,
        "github repo": 2,
        "extrasolar planets": 2,
        "pandas series object": 1,
        "masses": 1
    },
    "subplot command": {
        "diseased patients": 1,
        "healthy patients": 1,
        "red dots": 1,
        "marker size": 1,
        "marker style": 1,
        "diseased people": 1,
        "python function": 1,
        "nested loop": 1
    },
    "subplot documentation": {
        "diseased patients": 1,
        "healthy patients": 1,
        "red dots": 1,
        "marker size": 1,
        "marker style": 1,
        "diseased people": 1,
        "python function": 1,
        "nested loop": 1
    },
    "feature index": {
        "diseased patients": 1,
        "healthy patients": 1,
        "red dots": 1,
        "marker size": 1,
        "marker style": 1,
        "diseased people": 1,
        "python function": 1,
        "nested loop": 1
    },
    "function body": {
        "diseased patients": 1,
        "healthy patients": 1,
        "red dots": 1,
        "marker size": 1,
        "marker style": 1,
        "diseased people": 1,
        "python function": 1,
        "nested loop": 1
    },
    "liver disease": {
        "diseased patients": 1,
        "healthy patients": 1,
        "red dots": 1,
        "marker size": 1,
        "marker style": 1,
        "diseased people": 1,
        "python function": 1,
        "nested loop": 1
    },
    "data distribution": {
        "diseased patients": 1,
        "healthy patients": 1,
        "red dots": 1,
        "marker size": 1,
        "marker style": 1,
        "diseased people": 1,
        "python function": 1,
        "nested loop": 1
    },
    "discriminator lab": {
        "interface": 1,
        "keras hints": 1,
        "keras": 1,
        "noise distribution": 1,
        "kernel density estimation plot": 1,
        "python variable": 1,
        "concatenation": 1,
        "training data requirements": 1
    },
    "stream summary": {
        "spectrograms": 2,
        "spectrogram plot": 2,
        "logarithmic frequency scale": 2,
        "tapering": 1,
        "lowpass": 1
    },
    "tohoku example earthquake data": {
        "spectrograms": 2,
        "spectrogram plot": 2,
        "logarithmic frequency scale": 2,
        "tapering": 1,
        "lowpass": 1
    },
    "checkpoint": {
        "neural network": 1,
        "of variable tensors": 1,
        "list of variable tensors": 1,
        "truncated normal distribution": 1,
        "placeholder tensor": 1,
        "random numbers": 1,
        "output layers": 1,
        "relu activation function": 1
    },
    "floating point errors": {
        "datetime objects": 3,
        "booleans": 1,
        "handgun checks": 1,
        "vector operations": 1,
        "long gun background checks": 1,
        "frame": 1
    },
    "sale protocols": {
        "datetime objects": 3,
        "booleans": 1,
        "handgun checks": 1,
        "vector operations": 1,
        "long gun background checks": 1,
        "frame": 1
    },
    "nics": {
        "datetime objects": 3,
        "booleans": 1,
        "handgun checks": 1,
        "vector operations": 1,
        "long gun background checks": 1,
        "frame": 1
    },
    "buzzfeednews": {
        "datetime objects": 3,
        "booleans": 1,
        "handgun checks": 1,
        "vector operations": 1,
        "long gun background checks": 1,
        "frame": 1
    },
    "pdf": {
        "datetime objects": 3,
        "booleans": 1,
        "handgun checks": 1,
        "vector operations": 1,
        "long gun background checks": 1,
        "frame": 1
    },
    "fbi nics": {
        "datetime objects": 3,
        "booleans": 1,
        "handgun checks": 1,
        "vector operations": 1,
        "long gun background checks": 1,
        "frame": 1
    },
    "national instant criminal background check system": {
        "datetime objects": 3,
        "booleans": 1,
        "handgun checks": 1,
        "vector operations": 1,
        "long gun background checks": 1,
        "frame": 1
    },
    "background checks": {
        "datetime objects": 3,
        "booleans": 1,
        "handgun checks": 1,
        "vector operations": 1,
        "long gun background checks": 1,
        "frame": 1
    },
    "gun checks": {
        "datetime objects": 3,
        "booleans": 1,
        "handgun checks": 1,
        "vector operations": 1,
        "long gun background checks": 1,
        "frame": 1
    },
    "fbi reports": {
        "datetime objects": 3,
        "booleans": 1,
        "handgun checks": 1,
        "vector operations": 1,
        "long gun background checks": 1,
        "frame": 1
    },
    "fbi": {
        "datetime objects": 3,
        "booleans": 1,
        "handgun checks": 1,
        "vector operations": 1,
        "long gun background checks": 1,
        "frame": 1
    },
    "select statement": {
        "usstates": 8
    },
    "public schema": {
        "usstates": 8
    },
    "public tables": {
        "usstates": 8
    },
    "postgres": {
        "usstates": 8
    },
    "schemas": {
        "usstates": 8
    },
    "table peek": {
        "usstates": 8
    },
    "total bill": {
        "squared loss function": 4,
        "loss calculation": 2,
        "absolute loss": 2
    },
    "squared loss": {
        "squared loss function": 2,
        "computational graph": 2,
        "loss calculation": 1,
        "absolute loss": 1,
        "forward pass tasks": 1,
        "variable naming convention": 1
    },
    "classifer performance": {
        "probabilistic predictions": 3,
        "paremeters": 3,
        "average auc": 1,
        "code cell": 1
    },
    "default values": {
        "probabilistic predictions": 3,
        "paremeters": 3,
        "average auc": 1,
        "code cell": 1
    },
    "multiple axes": {
        "age": 4,
        "fare predictor": 1,
        "passenger class": 1,
        "precision stats": 1,
        "predictors": 1
    },
    "single matplot lib figure": {
        "age": 4,
        "fare predictor": 1,
        "passenger class": 1,
        "precision stats": 1,
        "predictors": 1
    },
    "side by side axes": {
        "age": 4,
        "fare predictor": 1,
        "passenger class": 1,
        "precision stats": 1,
        "predictors": 1
    },
    "titanic disaster": {
        "age": 4,
        "fare predictor": 1,
        "passenger class": 1,
        "precision stats": 1,
        "predictors": 1
    },
    "ridesharing company": {
        "ooober": 6,
        "scandal patterns": 1,
        "poisson process": 1
    },
    "public relations office": {
        "ooober": 6,
        "scandal patterns": 1,
        "poisson process": 1
    },
    "bonus content": {
        "uci machine learning repository": 2,
        "chemical analysis": 2,
        "wine dataset": 2,
        "data dictionary": 2
    },
    "urls": {
        "subset": 2,
        "row index": 2,
        "data1": 1,
        "log scale": 1,
        "2d scatter plot": 1,
        "line chart": 1
    },
    "counts keyword argument": {
        "subset": 2,
        "row index": 2,
        "data1": 1,
        "log scale": 1,
        "2d scatter plot": 1,
        "line chart": 1
    },
    "sp": {
        "rdd": 2,
        "movielens": 2,
        "text file": 2,
        "head command": 2
    },
    "iris species": {
        "unknown iris": 2,
        "predicted response value": 2,
        "euclidian distance": 2,
        "distance metric": 2
    },
    "iris flower": {
        "unknown iris": 2,
        "predicted response value": 2,
        "euclidian distance": 2,
        "distance metric": 2
    },
    "julia set": {
        "iteration prescription": 2,
        "julia set program": 1,
        "julia set problem": 1,
        "maximum value": 1,
        "julia set": 1,
        "fixed complex number": 1,
        "upper limit": 1
    },
    "grading tests": {
        "python dictionary comprehension": 2,
        "zip function": 2,
        "iterable": 1,
        "enumerate function": 1,
        "anaconda": 1,
        "data science modules": 1
    },
    "gre": {
        "count()": 2,
        "dropna()": 2,
        "outliers": 2,
        "median": 2
    },
    "integer indices": {
        "array indexing": 1,
        "boolean indexing": 1,
        "index 26": 1,
        "participant names": 1,
        "participant id": 1,
        "average": 1,
        "indexing": 1,
        "boolean mask": 1
    },
    "[python tutorial": {
        "integers": 2,
        "python syntax": 2,
        "diter method": 2,
        "binary files": 1,
        "numpy array file": 1
    },
    "shell companies": {
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2
    },
    "electrical grid failures": {
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2
    },
    "enron fraud": {
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2
    },
    "frozen concentrated orange juice futures": {
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2
    },
    "google sleuthing": {
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2
    },
    "enron": {
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2
    },
    "blockbuster movies": {
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2
    },
    "ellipses": {
        "notebook": 2,
        "magic command": 2,
        "magic function": 2,
        "magic functions": 2
    },
    "binomial distribution": {
        "binomial": 3,
        "likelihood function": 2,
        "likelihood": 1,
        "maximum likelihood estimate": 1,
        "binomial distribution": 1
    },
    "gan hint": {
        "discriminator": 2,
        "context manager": 2,
        "semantics": 2,
        "single adversarial training example": 2
    },
    "keras functional api": {
        "discriminator": 2,
        "context manager": 2,
        "semantics": 2,
        "single adversarial training example": 2
    },
    "input size": {
        "discriminator": 2,
        "context manager": 2,
        "semantics": 2,
        "single adversarial training example": 2
    },
    "bayesian model": {
        "mcmc procedure": 2,
        "pystan": 2,
        "roc scores": 2,
        "non-bayesian logistic": 2
    },
    "computation segment": {
        "mcmc procedure": 2,
        "pystan": 2,
        "roc scores": 2,
        "non-bayesian logistic": 2
    },
    "sharpe ratio": {
        "sharpe ratio": 2,
        "microsoft": 1,
        "risk premium": 1,
        "&": 1,
        "beta": 1,
        "500": 1,
        "yahoo finance": 1
    },
    "final classification": {
        "training error": 1,
        "generalization error": 1,
        "cross validation": 1,
        "label array": 1,
        "training classifications": 1,
        "iris set": 1,
        "misclassifications": 1,
        "cv": 1
    },
    "selectkbest": {
        "gridsearchcv": 2,
        "randomforestregressor": 1,
        "shufflesplit": 1,
        "scaler": 1,
        "model selection": 1,
        "pre": 1,
        "hyperparameter tuning": 1
    },
    "randomforestregressor": {
        "gridsearchcv": 2,
        "randomforestregressor": 1,
        "shufflesplit": 1,
        "scaler": 1,
        "model selection": 1,
        "pre": 1,
        "hyperparameter tuning": 1
    },
    "movie reviews": {
        "embedding layers": 1,
        "neural network": 1,
        "data preprocessing": 1,
        "integers": 1,
        "maximum review length": 1,
        "feature vector": 1,
        "deep learning networks": 1,
        "code cell": 1
    },
    "decision tree algorithm": {
        "titanic": 2,
        "sex": 2,
        "age": 2,
        "response variable": 2
    },
    "final mask": {
        "convenience function": 2,
        "alpha channels": 2,
        "alpha blended individual images": 2,
        "custom alpha channel masks": 2
    },
    "homogeneous problem": {
        "2d system": 1,
        "diffusion coefficient": 1,
        "flux": 1,
        "1d vector equation system": 1,
        "linear equation solver": 1,
        "linear index": 1,
        "timestep size": 1,
        "simulation": 1
    },
    "reflecting surface": {
        "2d system": 1,
        "diffusion coefficient": 1,
        "flux": 1,
        "1d vector equation system": 1,
        "linear equation solver": 1,
        "linear index": 1,
        "timestep size": 1,
        "simulation": 1
    },
    "inhomogeneous diffusion": {
        "2d system": 1,
        "diffusion coefficient": 1,
        "flux": 1,
        "1d vector equation system": 1,
        "linear equation solver": 1,
        "linear index": 1,
        "timestep size": 1,
        "simulation": 1
    },
    "dirichlet boundary condition": {
        "2d system": 1,
        "diffusion coefficient": 1,
        "flux": 1,
        "1d vector equation system": 1,
        "linear equation solver": 1,
        "linear index": 1,
        "timestep size": 1,
        "simulation": 1
    },
    "particle bouncing": {
        "2d system": 1,
        "diffusion coefficient": 1,
        "flux": 1,
        "1d vector equation system": 1,
        "linear equation solver": 1,
        "linear index": 1,
        "timestep size": 1,
        "simulation": 1
    },
    "2d diffusion problem": {
        "2d system": 1,
        "diffusion coefficient": 1,
        "flux": 1,
        "1d vector equation system": 1,
        "linear equation solver": 1,
        "linear index": 1,
        "timestep size": 1,
        "simulation": 1
    },
    "2d transient simulation": {
        "2d system": 1,
        "diffusion coefficient": 1,
        "flux": 1,
        "1d vector equation system": 1,
        "linear equation solver": 1,
        "linear index": 1,
        "timestep size": 1,
        "simulation": 1
    },
    "diffusive flux": {
        "2d system": 1,
        "diffusion coefficient": 1,
        "flux": 1,
        "1d vector equation system": 1,
        "linear equation solver": 1,
        "linear index": 1,
        "timestep size": 1,
        "simulation": 1
    },
    "statistical package": {
        "positive words": 2,
        "positive texts": 2,
        "positive counts": 2,
        "measurement": 1,
        "caluclation": 1
    },
    "positive words": {
        "positive words": 2,
        "positive texts": 2,
        "positive counts": 2,
        "measurement": 1,
        "caluclation": 1
    },
    "relational algebra operators": {
        "character name": 2,
        "lead actor name": 2,
        "movie character names": 2,
        "stella": 2
    },
    "hadoop streaming": {
        "mrwordfreqcount": 2,
        "hadoop mode": 2,
        "hadoop streaming": 2,
        "mrjob": 2
    },
    "double for loop": {
        "list comprehensions": 3,
        "inner loop": 2,
        "outer loop": 2,
        "hashtags": 1
    },
    "nested list": {
        "list comprehensions": 3,
        "inner loop": 2,
        "outer loop": 2,
        "hashtags": 1
    },
    "eigenval": {
        "tickerinfo": 2,
        "ticker names": 2,
        "tickers": 1,
        "company name": 1,
        "sector ids": 1,
        "sector id": 1
    },
    "eigh function": {
        "tickerinfo": 2,
        "ticker names": 2,
        "tickers": 1,
        "company name": 1,
        "sector ids": 1,
        "sector id": 1
    },
    "tickers": {
        "tickerinfo": 2,
        "ticker names": 2,
        "tickers": 1,
        "company name": 1,
        "sector ids": 1,
        "sector id": 1
    },
    "computecov function": {
        "tickerinfo": 2,
        "ticker names": 2,
        "tickers": 1,
        "company name": 1,
        "sector ids": 1,
        "sector id": 1
    },
    "cov key": {
        "tickerinfo": 2,
        "ticker names": 2,
        "tickers": 1,
        "company name": 1,
        "sector ids": 1,
        "sector id": 1
    },
    "spectral analysis": {
        "tickerinfo": 2,
        "ticker names": 2,
        "tickers": 1,
        "company name": 1,
        "sector ids": 1,
        "sector id": 1
    },
    "directory figs": {
        "tickerinfo": 2,
        "ticker names": 2,
        "tickers": 1,
        "company name": 1,
        "sector ids": 1,
        "sector id": 1
    },
    "holiday shopping": {
        "tickerinfo": 2,
        "ticker names": 2,
        "tickers": 1,
        "company name": 1,
        "sector ids": 1,
        "sector id": 1
    },
    "income distribution": {
        "tickerinfo": 2,
        "ticker names": 2,
        "tickers": 1,
        "company name": 1,
        "sector ids": 1,
        "sector id": 1
    },
    "feedback survey": {
        "extratree": 1,
        "decision rules": 1,
        "decisiontreeregression": 1,
        "decision trees": 1,
        "decisiontreeregressor": 1,
        "important features": 1,
        "importance weight": 1,
        "validation data": 1
    },
    "averaging methods": {
        "extratree": 1,
        "decision rules": 1,
        "decisiontreeregression": 1,
        "decision trees": 1,
        "decisiontreeregressor": 1,
        "important features": 1,
        "importance weight": 1,
        "validation data": 1
    },
    "multiple base models": {
        "extratree": 1,
        "decision rules": 1,
        "decisiontreeregression": 1,
        "decision trees": 1,
        "decisiontreeregressor": 1,
        "important features": 1,
        "importance weight": 1,
        "validation data": 1
    },
    "concordance": {
        "inaugural corpus": 2,
        "word usage": 2,
        "chat data": 2,
        "summary stats": 2
    },
    "integer node": {
        "networkx": 2,
        "drawing function": 2,
        "directed graph": 1,
        "matplotlib axes": 1,
        "ax parameter": 1,
        "multigraph": 1
    },
    "speech tagging": {
        "nltk": 1,
        "pointwise mutual information": 1,
        "pmi": 1,
        "trigrams": 1,
        "speech tagging": 1,
        "default tagger": 1,
        "pos tagging": 1,
        "universal tagger": 1
    },
    "grail": {
        "nltk": 1,
        "pointwise mutual information": 1,
        "pmi": 1,
        "trigrams": 1,
        "speech tagging": 1,
        "default tagger": 1,
        "pos tagging": 1,
        "universal tagger": 1
    },
    "monty python": {
        "nltk": 1,
        "pointwise mutual information": 1,
        "pmi": 1,
        "trigrams": 1,
        "speech tagging": 1,
        "default tagger": 1,
        "pos tagging": 1,
        "universal tagger": 1
    },
    "data standardization": {
        "dimensionality reduction": 1,
        "principal components": 1,
        "residual noise": 1,
        "labeled faces": 1,
        "lfw exercise": 1,
        "eigenfaces": 1,
        "eigendigits": 1,
        "facial recognition exercise": 1
    },
    "bar plot": {
        "dimensionality reduction": 1,
        "principal components": 1,
        "residual noise": 1,
        "labeled faces": 1,
        "lfw exercise": 1,
        "eigenfaces": 1,
        "eigendigits": 1,
        "facial recognition exercise": 1
    },
    "linear relationships": {
        "subtle outliers": 2,
        "outliers": 2,
        "data values": 2,
        "mean value": 1
    },
    "skewedness": {
        "subtle outliers": 2,
        "outliers": 2,
        "data values": 2,
        "mean value": 1
    },
    "normality": {
        "subtle outliers": 2,
        "outliers": 2,
        "data values": 2,
        "mean value": 1
    },
    "log function": {
        "subtle outliers": 2,
        "outliers": 2,
        "data values": 2,
        "mean value": 1
    },
    "opening parenthesis function": {
        "first babies": 2,
        "national survey of family growth": 2,
        "first pregnancies": 1,
        "variable outcome": 1,
        "variable pregordr": 1
    },
    "creative commons attribution": {
        "first babies": 2,
        "national survey of family growth": 2,
        "first pregnancies": 1,
        "variable outcome": 1,
        "variable pregordr": 1
    },
    "flower class": {
        "feature vector": 1,
        "versicolor": 1,
        "correctly classified examples": 1,
        "target": 1,
        "decision model": 1,
        "misclassification percentage": 1,
        "decision tree classifier": 1
    },
    "folowing questions": {
        "predict functionality": 3,
        "scatterplot": 2,
        "polynomial features": 1,
        "polynomialfeatures": 1
    },
    "mean value": {
        "pandas method": 5,
        "lambda expression": 1,
        "pand": 1
    },
    "acoustic properties": {
        "testing": 7
    },
    "unclear variable names": {
        "exit()": 1,
        "string argument": 1,
        "isalpha": 1,
        "python code": 1,
        "string slicing": 1,
        "floating point number": 1,
        "float function": 1
    },
    "trinket book": {
        "exit()": 1,
        "string argument": 1,
        "isalpha": 1,
        "python code": 1,
        "string slicing": 1,
        "floating point number": 1,
        "float function": 1
    },
    "tentamen template": {
        "latex": 3,
        "rmse": 2,
        "variable rmse": 2
    },
    "manual grading": {
        "latex": 3,
        "rmse": 2,
        "variable rmse": 2
    },
    "markdown": {
        "latex": 3,
        "rmse": 2,
        "variable rmse": 2
    },
    "lesson notebook": {
        "optimal kde bandwidth": 4,
        "kde": 3
    },
    "associative arrays": {
        "tab": 1,
        "question mark": 1,
        "ipython": 1,
        "control flow structure": 1,
        "python program": 1,
        "united states": 1,
        "canada": 1
    },
    "collection type": {
        "tab": 1,
        "question mark": 1,
        "ipython": 1,
        "control flow structure": 1,
        "python program": 1,
        "united states": 1,
        "canada": 1
    },
    "default namespace": {
        "tab": 1,
        "question mark": 1,
        "ipython": 1,
        "control flow structure": 1,
        "python program": 1,
        "united states": 1,
        "canada": 1
    },
    "array analysis": {
        "event metadata": 3,
        "fdsn server": 1,
        "wildcard": 1,
        "waveform data": 1,
        "channel code": 1
    },
    "estimate travel times": {
        "event metadata": 3,
        "fdsn server": 1,
        "wildcard": 1,
        "waveform data": 1,
        "channel code": 1
    },
    "seismic phases": {
        "event metadata": 3,
        "fdsn server": 1,
        "wildcard": 1,
        "waveform data": 1,
        "channel code": 1
    },
    "cross correlation routines": {
        "event metadata": 3,
        "fdsn server": 1,
        "wildcard": 1,
        "waveform data": 1,
        "channel code": 1
    },
    "event detection": {
        "event metadata": 3,
        "fdsn server": 1,
        "wildcard": 1,
        "waveform data": 1,
        "channel code": 1
    },
    "plot ray paths": {
        "event metadata": 3,
        "fdsn server": 1,
        "wildcard": 1,
        "waveform data": 1,
        "channel code": 1
    },
    "manipulation filtering": {
        "event metadata": 3,
        "fdsn server": 1,
        "wildcard": 1,
        "waveform data": 1,
        "channel code": 1
    },
    "obspy documentation": {
        "event metadata": 3,
        "fdsn server": 1,
        "wildcard": 1,
        "waveform data": 1,
        "channel code": 1
    },
    "ipython tab completion": {
        "event metadata": 3,
        "fdsn server": 1,
        "wildcard": 1,
        "waveform data": 1,
        "channel code": 1
    },
    "kmeans()": {
        "random number generator": 2,
        "elbow method": 2,
        "kmeans algorithm": 2,
        "inertia": 1
    },
    "cluster()": {
        "random number generator": 2,
        "elbow method": 2,
        "kmeans algorithm": 2,
        "inertia": 1
    },
    "2d histogram": {
        "iraq": 5,
        "colorbar": 2
    },
    "mpg cars": {
        "uc irvine machine learning repository": 3,
        "cars2": 2,
        "cars1": 2
    },
    "valid": {
        "python assert": 2,
        "column variables": 1,
        "valid variable names": 1,
        "equals sign": 1,
        "input string": 1,
        "equality string": 1
    },
    "python assert": {
        "python assert": 2,
        "column variables": 1,
        "valid variable names": 1,
        "equals sign": 1,
        "input string": 1,
        "equality string": 1
    },
    "variable name": {
        "python assert": 2,
        "column variables": 1,
        "valid variable names": 1,
        "equals sign": 1,
        "input string": 1,
        "equality string": 1
    },
    "eventtm": {
        "fraud crimes": 1,
        "pandas bar plot": 1,
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "longitude": {
        "zip codes": 3,
        "inspection": 2,
        "inspection dataframe": 2
    },
    "missing data values": {
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "forward fill": {
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "backfill": {
        "autoregressive modeling": 2,
        "ebola data": 2,
        "time series modelling": 2,
        "autoregressive model": 1
    },
    "marketing campaign": {
        "default": 1,
        "housing": 1,
        "dummy variables": 1,
        "loan": 1,
        "married people": 1,
        "singletones": 1,
        "marketing": 1
    },
    "multivariate regresion model": {
        "random number generator": 3,
        "test sets": 2,
        "unit tests": 1,
        "stats": 1
    },
    "predictor variable": {
        "random number generator": 3,
        "test sets": 2,
        "unit tests": 1,
        "stats": 1
    },
    "regression model": {
        "random number generator": 3,
        "test sets": 2,
        "unit tests": 1,
        "stats": 1
    },
    "variable combinations": {
        "formula": 1,
        "quadratic regression": 1,
        "medv": 1,
        "python functions": 1,
        "patsy": 1,
        "dummy variables": 1,
        "categorical variables": 1
    },
    "labels": {
        "tensorflow": 1,
        "n": 1,
        "scikit learn": 1,
        "testing sets": 1,
        "memory requirements": 1,
        "numpy email arrays": 1,
        "indicator variable": 1
    },
    "exchange formats": {
        "stationxml": 1,
        "international standard exchange format": 1,
        "station metadata": 1,
        "trace objects": 1,
        "ainformation": 1,
        "nested obspy inventory class": 1,
        "event metadata": 1
    },
    "airport delays": {
        "x variable": 2,
        "eigenvalues": 2,
        "eigenvectors": 2,
        "covariance matrix": 1
    },
    "pokemon": {
        "dictionaries": 2,
        "pokemon": 1,
        "isin()": 1,
        "body style": 1,
        "groupby operations": 1,
        "minimum injection volume": 1
    },
    "correlation plots": {
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "conditional density": {
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "redundancy": {
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "spam words": {
        "contour plot": 1,
        "false negatives": 1,
        "email": 1,
        "cutoff probability": 1,
        "final classifier": 1,
        "cancer screenings": 1,
        "false positives": 1
    },
    "pandas solutions": {
        "pandas syntax": 4,
        "n": 2,
        "boolean vector": 1
    },
    "polynomical models": {
        "indicator variables": 1,
        "lambda function": 1,
        "categorical attributes": 1,
        "linearregression model": 1,
        "data matrix": 1,
        "ridgecv": 1,
        "hours distribution": 1
    },
    "training label": {
        "embedding layers": 1,
        "neural network": 1,
        "data preprocessing": 1,
        "integers": 1,
        "maximum review length": 1,
        "feature vector": 1,
        "deep learning networks": 1
    },
    "lstm": {
        "embedding layers": 1,
        "neural network": 1,
        "data preprocessing": 1,
        "integers": 1,
        "maximum review length": 1,
        "feature vector": 1,
        "deep learning networks": 1
    },
    "feedfoward network": {
        "embedding layers": 1,
        "neural network": 1,
        "data preprocessing": 1,
        "integers": 1,
        "maximum review length": 1,
        "feature vector": 1,
        "deep learning networks": 1
    },
    "embedding layer": {
        "embedding layers": 1,
        "neural network": 1,
        "data preprocessing": 1,
        "integers": 1,
        "maximum review length": 1,
        "feature vector": 1,
        "deep learning networks": 1
    },
    "recurrent connections": {
        "embedding layers": 1,
        "neural network": 1,
        "data preprocessing": 1,
        "integers": 1,
        "maximum review length": 1,
        "feature vector": 1,
        "deep learning networks": 1
    },
    "output layer": {
        "embedding layers": 1,
        "neural network": 1,
        "data preprocessing": 1,
        "integers": 1,
        "maximum review length": 1,
        "feature vector": 1,
        "deep learning networks": 1
    },
    "lstm cells": {
        "embedding layers": 1,
        "neural network": 1,
        "data preprocessing": 1,
        "integers": 1,
        "maximum review length": 1,
        "feature vector": 1,
        "deep learning networks": 1
    },
    "embed": {
        "embedding layers": 1,
        "neural network": 1,
        "data preprocessing": 1,
        "integers": 1,
        "maximum review length": 1,
        "feature vector": 1,
        "deep learning networks": 1
    },
    "rnn": {
        "embedding layers": 1,
        "neural network": 1,
        "data preprocessing": 1,
        "integers": 1,
        "maximum review length": 1,
        "feature vector": 1,
        "deep learning networks": 1
    },
    "recurrent neural network": {
        "embedding layers": 1,
        "neural network": 1,
        "data preprocessing": 1,
        "integers": 1,
        "maximum review length": 1,
        "feature vector": 1,
        "deep learning networks": 1
    },
    "hours studyig": {
        "mean grades": 2,
        "panda dataframe": 2,
        "mean grade": 2,
        "reversed regression": 1
    },
    "student grades": {
        "mean grades": 2,
        "panda dataframe": 2,
        "mean grade": 2,
        "reversed regression": 1
    },
    "axis": {
        "cache": 1,
        "fetch": 1,
        "array slicing syntax": 1,
        "column id": 1,
        "row id": 1,
        "compound expressions": 1,
        "boolean arrays": 1
    },
    "differential calculus": {
        "sympy": 1,
        "function": 1,
        "function lambdify": 1,
        "python functions": 1,
        "slicing": 1,
        "centered difference": 1,
        "relative error": 1
    },
    "protein chains": {
        "pdb structures": 3,
        "protein chains": 3,
        "protein chain": 1
    },
    "orderid": {
        "aggregate functions": 1,
        "sql": 1,
        "having operator": 1,
        "having clause": 1,
        "else statement": 1,
        "postgresql": 1,
        "date documentation": 1
    },
    "unitprice quantity": {
        "aggregate functions": 1,
        "sql": 1,
        "having operator": 1,
        "having clause": 1,
        "else statement": 1,
        "postgresql": 1,
        "date documentation": 1
    },
    "lasso regression model": {
        "crsdeptime": 2,
        "depdelay": 1,
        "linear regression model": 1,
        "polynomial": 1,
        "unit tests": 1,
        "instructor grades": 1
    },
    "common movie interests": {
        "common movie interests": 1,
        "common movie interest": 1,
        "common": 1,
        "minimum count": 1,
        "normalized weight": 1,
        "networkx graph": 1,
        "int value": 1
    },
    "userid": {
        "common movie interests": 1,
        "common movie interest": 1,
        "common": 1,
        "minimum count": 1,
        "normalized weight": 1,
        "networkx graph": 1,
        "int value": 1
    },
    "action level": {
        "lead readings": 2,
        "plots": 1,
        "overall lead levels": 1,
        "calculations": 1,
        "mean value": 1,
        "flint water": 1
    },
    "virginia tech": {
        "lead readings": 2,
        "plots": 1,
        "overall lead levels": 1,
        "calculations": 1,
        "mean value": 1,
        "flint water": 1
    },
    "flint water quality dataset": {
        "lead readings": 2,
        "plots": 1,
        "overall lead levels": 1,
        "calculations": 1,
        "mean value": 1,
        "flint water": 1
    },
    "tap water samples": {
        "lead readings": 2,
        "plots": 1,
        "overall lead levels": 1,
        "calculations": 1,
        "mean value": 1,
        "flint water": 1
    },
    "copper": {
        "lead readings": 2,
        "plots": 1,
        "overall lead levels": 1,
        "calculations": 1,
        "mean value": 1,
        "flint water": 1
    },
    "lead contaminants": {
        "lead readings": 2,
        "plots": 1,
        "overall lead levels": 1,
        "calculations": 1,
        "mean value": 1,
        "flint water": 1
    },
    "execution time": {
        "execution time": 3,
        "vectorised functions": 2,
        "execution speed": 1,
        "linear regression implementation": 1
    },
    "%%timeit function": {
        "execution time": 3,
        "vectorised functions": 2,
        "execution speed": 1,
        "linear regression implementation": 1
    },
    "chemotherapy": {
        "contingency table": 1,
        "pivot": 1,
        "status": 1,
        "sum function": 1,
        "cancer test": 1,
        "population members": 1,
        "icon array": 1
    },
    "radiation": {
        "contingency table": 1,
        "pivot": 1,
        "status": 1,
        "sum function": 1,
        "cancer test": 1,
        "population members": 1,
        "icon array": 1
    },
    "cancer screening": {
        "contingency table": 1,
        "pivot": 1,
        "status": 1,
        "sum function": 1,
        "cancer test": 1,
        "population members": 1,
        "icon array": 1
    },
    "medical tests": {
        "contingency table": 1,
        "pivot": 1,
        "status": 1,
        "sum function": 1,
        "cancer test": 1,
        "population members": 1,
        "icon array": 1
    },
    "breast cancer": {
        "contingency table": 1,
        "pivot": 1,
        "status": 1,
        "sum function": 1,
        "cancer test": 1,
        "population members": 1,
        "icon array": 1
    },
    "basic cancer statistics": {
        "contingency table": 1,
        "pivot": 1,
        "status": 1,
        "sum function": 1,
        "cancer test": 1,
        "population members": 1,
        "icon array": 1
    },
    "challenge 15": {
        "regular expression syntax": 1,
        "challenge 14": 1,
        "metacharacters": 1,
        "parentheses": 1,
        "challenge 13": 1,
        "uring group skills": 1,
        "non-": 1
    },
    "local folder": {
        "linux": 1,
        "tree structure": 1,
        "operating system functions": 1,
        "filenames": 1,
        "os module": 1,
        "getcwd": 1,
        "listdir": 1
    },
    "double backslashes": {
        "linux": 1,
        "tree structure": 1,
        "operating system functions": 1,
        "filenames": 1,
        "os module": 1,
        "getcwd": 1,
        "listdir": 1
    },
    "rdd": {
        "augmented vector": 2,
        "outer product": 2,
        "lower left matrix": 1,
        "outer product average": 1,
        "average": 1
    },
    "shopping": {
        "symmetrize": 1,
        "log transformation": 1,
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "distribution shops": {
        "symmetrize": 1,
        "log transformation": 1,
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "plotting region": {
        "symmetrize": 1,
        "log transformation": 1,
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "quantile method": {
        "symmetrize": 1,
        "log transformation": 1,
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "log transform": {
        "symmetrize": 1,
        "log transformation": 1,
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "tick marks": {
        "symmetrize": 1,
        "log transformation": 1,
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "special series solutions": {
        "formal power series": 3,
        "sympy": 1,
        "fourier series": 1,
        "51st term": 1,
        "infinite representation": 1
    },
    "rows": {
        "python indexing": 6
    },
    "character class negation": {
        "regexr": 2,
        "solution breakdown": 2,
        "brackets": 2
    },
    "multilinear regression": {
        "polynomial model": 1,
        "design matrix": 1,
        "polynomial features": 1,
        "vandermonde matrix": 1,
        "polynomialfeatures": 1,
        "toy vector": 1
    },
    "ecommerce purchases exercise": {
        "average purchase price": 3,
        "lowest purchase prices": 2,
        "website": 1
    },
    "plot options": {
        "width plot option": 2,
        "user guide": 2,
        "ts cell magic": 2
    },
    "width plot": {
        "width plot option": 2,
        "user guide": 2,
        "ts cell magic": 2
    },
    "value dimension": {
        "width plot option": 2,
        "user guide": 2,
        "ts cell magic": 2
    },
    "random seed": {
        "training error": 2,
        "outlier": 1,
        "test error": 1,
        "root mean squared error": 1,
        "average": 1
    },
    "interpreted language": {
        "hash map": 2,
        "phonebook": 2,
        "programming": 2
    },
    "methods": {
        "hash map": 2,
        "phonebook": 2,
        "programming": 2
    },
    "string methods documentation": {
        "hash map": 2,
        "phonebook": 2,
        "programming": 2
    },
    "variable names": {
        "hash map": 2,
        "phonebook": 2,
        "programming": 2
    },
    "assignment operator": {
        "hash map": 2,
        "phonebook": 2,
        "programming": 2
    },
    "numerical data types": {
        "hash map": 2,
        "phonebook": 2,
        "programming": 2
    },
    "builtin function id": {
        "hash map": 2,
        "phonebook": 2,
        "programming": 2
    },
    "numerical types": {
        "hash map": 2,
        "phonebook": 2,
        "programming": 2
    },
    "arithmetic tools": {
        "hash map": 2,
        "phonebook": 2,
        "programming": 2
    },
    "sum operation": {
        "hash map": 2,
        "phonebook": 2,
        "programming": 2
    },
    "python indexes": {
        "hash map": 2,
        "phonebook": 2,
        "programming": 2
    },
    "list index": {
        "hash map": 2,
        "phonebook": 2,
        "programming": 2
    },
    "indexerror": {
        "hash map": 2,
        "phonebook": 2,
        "programming": 2
    },
    "object types": {
        "hash map": 2,
        "phonebook": 2,
        "programming": 2
    },
    "help documentation": {
        "hash map": 2,
        "phonebook": 2,
        "programming": 2
    },
    "introspection": {
        "hash map": 2,
        "phonebook": 2,
        "programming": 2
    },
    "sum operations": {
        "hash map": 2,
        "phonebook": 2,
        "programming": 2
    },
    "numpy optimized distance computation": {
        "optimization": 2,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1,
        "nearest neighbor algorithm": 1
    },
    "nearest neighbor search": {
        "optimization": 2,
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1,
        "nearest neighbor algorithm": 1
    },
    "docstring": {
        "rug plot": 2,
        "random jitter": 1,
        "slicing": 1,
        "centered difference": 1,
        "relative error": 1
    },
    "dummy indicator variables": {
        "binary indicators": 2,
        "intercept": 2,
        "float64": 1,
        "int64": 1
    },
    "dayofweek": {
        "binary indicators": 2,
        "intercept": 2,
        "float64": 1,
        "int64": 1
    },
    "uniquecarrier": {
        "binary indicators": 2,
        "intercept": 2,
        "float64": 1,
        "int64": 1
    },
    "word count": {
        "lower case": 3,
        "flatmap": 2,
        "reduce process": 1
    },
    "load data": {
        "lower case": 3,
        "flatmap": 2,
        "reduce process": 1
    },
    "character replacements": {
        "lower case": 3,
        "flatmap": 2,
        "reduce process": 1
    },
    "regular expression package": {
        "lower case": 3,
        "flatmap": 2,
        "reduce process": 1
    },
    "pattern recognition literature": {
        "multivariate data set": 1,
        "iris flower data set": 1,
        "multiple measurements": 1,
        "taxonomic problems": 1,
        "linear discriminant analysis": 1,
        "list comprehensions": 1
    },
    "exoplanet properties": {
        "github repo": 2,
        "extrasolar planets": 2,
        "pandas series object": 1,
        "masses": 1
    },
    "text file": {
        "colors": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1,
        "memory requirements": 1,
        "numpy email arrays": 1
    },
    "gridded dataset": {
        "volumetric data": 2,
        "2d display device": 2,
        "sagittal plane": 2
    },
    "data variables": {
        "volumetric data": 2,
        "2d display device": 2,
        "sagittal plane": 2
    },
    "coordinates": {
        "volumetric data": 2,
        "2d display device": 2,
        "sagittal plane": 2
    },
    "value dimensions": {
        "volumetric data": 2,
        "2d display device": 2,
        "sagittal plane": 2
    },
    "key dimensions": {
        "volumetric data": 2,
        "2d display device": 2,
        "sagittal plane": 2
    },
    "notmnist image data": {
        "neural network": 1,
        "of variable tensors": 1,
        "list of variable tensors": 1,
        "truncated normal distribution": 1,
        "placeholder tensor": 1,
        "random numbers": 1
    },
    "bikeshare dataset": {
        "response variable": 3,
        "observation": 3
    },
    "evaluation metrics": {
        "response variable": 3,
        "observation": 3
    },
    "capital bikeshare": {
        "response variable": 3,
        "observation": 3
    },
    "data dictionary": {
        "response variable": 3,
        "observation": 3
    },
    "programming problem": {
        "dictionaries": 1,
        "collection types": 1,
        "tab": 1,
        "question mark": 1,
        "ipython": 1,
        "control flow structure": 1
    },
    "loss functions": {
        "squared loss function": 3,
        "loss calculation": 2,
        "absolute loss": 1
    },
    "confusion matrix review": {
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "confusion": {
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "baseline accuracy": {
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "data set size": {
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "minorty classs": {
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "slightly mutated copies": {
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "population distribution": {
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "smote": {
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "open source package": {
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "non-churn populations": {
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "learning curves": {
        "statistical test": 1,
        "significance level alpha": 1,
        "test statistic": 1,
        "hypothesis testing": 1,
        "alternative hypothesis": 1,
        "distribution means": 1
    },
    "bayesian basic stats test process": {
        "matplotlib graph": 3,
        "finger exercises": 1,
        "bayesian computing library": 1,
        "normal likelihood": 1
    },
    "logistic regression coefficients": {
        "negative coefficients": 1,
        "probability": 1,
        "positive coefficients": 1,
        "logistic regression beta values": 1,
        "categorical features": 1,
        "logistic curve": 1
    },
    "horizontal bar chart": {
        "concat": 6
    },
    "pyspark library functions": {
        "coll": 3,
        "spark exercise": 3
    },
    "v": {
        "coll": 3,
        "spark exercise": 3
    },
    "hidden test cases": {
        "coll": 3,
        "spark exercise": 3
    },
    "assert statement unit test cells": {
        "coll": 3,
        "spark exercise": 3
    },
    "collin": {
        "coll": 3,
        "spark exercise": 3
    },
    "grading": {
        "coll": 3,
        "spark exercise": 3
    },
    "reasoning": {
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1,
        "boolean list": 1
    },
    "seaborn exercises": {
        "titanic data set": 3,
        "survival rates": 3
    },
    "color schemes": {
        "titanic data set": 3,
        "survival rates": 3
    },
    "logit link function": {
        "logistic function": 1,
        "logit link function": 1,
        "odds ratios": 1,
        "college admissions data": 1,
        "logistic regression prediction line": 1,
        "binary class": 1
    },
    "admittance": {
        "logistic function": 1,
        "logit link function": 1,
        "odds ratios": 1,
        "college admissions data": 1,
        "logistic regression prediction line": 1,
        "binary class": 1
    },
    "cluster centre estimates": {
        "makeclustersequal": 1,
        "function": 1,
        "cluster 1": 1,
        "column vectors": 1,
        "kmeans": 1,
        "cluster centres": 1
    },
    "initial": {
        "makeclustersequal": 1,
        "function": 1,
        "cluster 1": 1,
        "column vectors": 1,
        "kmeans": 1,
        "cluster centres": 1
    },
    "function optimization approach": {
        "makeclustersequal": 1,
        "function": 1,
        "cluster 1": 1,
        "column vectors": 1,
        "kmeans": 1,
        "cluster centres": 1
    },
    "agglomerative clustering": {
        "makeclustersequal": 1,
        "function": 1,
        "cluster 1": 1,
        "column vectors": 1,
        "kmeans": 1,
        "cluster centres": 1
    },
    "summary table": {
        "count()": 2,
        "dropna()": 2,
        "outliers": 1,
        "median": 1
    },
    "drop data points": {
        "count()": 2,
        "dropna()": 2,
        "outliers": 1,
        "median": 1
    },
    "programming problems": {
        "integers": 2,
        "python syntax": 2,
        "diter method": 2
    },
    "assignment instructions": {
        "integers": 2,
        "python syntax": 2,
        "diter method": 2
    },
    "submission instructions": {
        "integers": 2,
        "python syntax": 2,
        "diter method": 2
    },
    "ncvs data": {
        "ncvs": 2,
        "property losses": 2,
        "bin widths": 2
    },
    "join operations": {
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "http status reply code": {
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "log file": {
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "ascii file": {
        "regular expression": 1,
        "pattern matching": 1,
        "string matching": 1,
        "search pattern": 1,
        "regular expressions": 1,
        "gzip module": 1
    },
    "standard scaling": {
        "scaler": 1,
        "scaling": 1,
        "tensorflow": 1,
        "n": 1,
        "scikit learn": 1,
        "testing sets": 1
    },
    "inventory": {
        "event metadata": 2,
        "fdsn server": 1,
        "wildcard": 1,
        "waveform data": 1,
        "channel code": 1
    },
    "interactive ipython": {
        "event metadata": 2,
        "fdsn server": 1,
        "wildcard": 1,
        "waveform data": 1,
        "channel code": 1
    },
    "solutions lecture": {
        "tensorflow": 3,
        "vocabulary lists": 1,
        "categorical values": 1,
        "hash buckets": 1
    },
    "advanced expression manipulation solutions": {
        "docstring": 3,
        "mathematical operators": 3
    },
    "numerical dataset": {
        "permutation": 1,
        "adjusted rand index": 1,
        "rand index": 1,
        "ari score": 1,
        "random labeling": 1,
        "true clusterings": 1
    },
    "elbow method": {
        "permutation": 1,
        "adjusted rand index": 1,
        "rand index": 1,
        "ari score": 1,
        "random labeling": 1,
        "true clusterings": 1
    },
    "inflection point": {
        "permutation": 1,
        "adjusted rand index": 1,
        "rand index": 1,
        "ari score": 1,
        "random labeling": 1,
        "true clusterings": 1
    },
    "elbow plot": {
        "permutation": 1,
        "adjusted rand index": 1,
        "rand index": 1,
        "ari score": 1,
        "random labeling": 1,
        "true clusterings": 1
    },
    "data input": {
        "group": 3,
        "groupeddata operations": 3
    },
    "data output": {
        "group": 3,
        "groupeddata operations": 3
    },
    "sql expression": {
        "group": 3,
        "groupeddata operations": 3
    },
    "valid times": {
        "integer 1234": 1,
        "python 3": 1,
        "integer division": 1,
        "modulo operation": 1,
        "divmod": 1,
        "boolean expressions": 1
    },
    "weekly sales data": {
        "datetimeindex": 3,
        "autocorrelations": 2,
        "mean absolute error": 1
    },
    "walmart sales data": {
        "datetimeindex": 3,
        "autocorrelations": 2,
        "mean absolute error": 1
    },
    "walmart": {
        "datetimeindex": 3,
        "autocorrelations": 2,
        "mean absolute error": 1
    },
    "bin size": {
        "matshow functions": 1,
        "matrices": 1,
        "bitmapped image file": 1,
        "imshow": 1,
        "color channels": 1,
        "grayscale image": 1
    },
    "model parameters": {
        "model selection": 2,
        "pre": 2,
        "hyperparameter tuning": 2
    },
    "income information": {
        "capital gain": 2,
        "marital status": 2,
        "capital gain value": 1,
        "pie chart": 1
    },
    "information file": {
        "capital gain": 2,
        "marital status": 2,
        "capital gain value": 1,
        "pie chart": 1
    },
    "linear regression stochastic gradient descent": {
        "stochastic gradient descent": 2,
        "oblicz gradienty": 1,
        "derivatives": 1,
        "sgd minibash": 1,
        "cent": 1
    },
    "\ufffd": {
        "stochastic gradient descent": 2,
        "oblicz gradienty": 1,
        "derivatives": 1,
        "sgd minibash": 1,
        "cent": 1
    },
    "ad": {
        "stochastic gradient descent": 2,
        "oblicz gradienty": 1,
        "derivatives": 1,
        "sgd minibash": 1,
        "cent": 1
    },
    "funkcja straty": {
        "stochastic gradient descent": 2,
        "oblicz gradienty": 1,
        "derivatives": 1,
        "sgd minibash": 1,
        "cent": 1
    },
    "model prediction": {
        "stochastic gradient descent": 2,
        "oblicz gradienty": 1,
        "derivatives": 1,
        "sgd minibash": 1,
        "cent": 1
    },
    "squares deviations": {
        "stochastic gradient descent": 2,
        "oblicz gradienty": 1,
        "derivatives": 1,
        "sgd minibash": 1,
        "cent": 1
    },
    "df1": {
        "profit": 1,
        "gender column": 1,
        "income": 1,
        "expenses": 1,
        "df2": 1,
        "age": 1
    },
    "random ages": {
        "profit": 1,
        "gender column": 1,
        "income": 1,
        "expenses": 1,
        "df2": 1,
        "age": 1
    },
    "gender column": {
        "profit": 1,
        "gender column": 1,
        "income": 1,
        "expenses": 1,
        "df2": 1,
        "age": 1
    },
    "values": {
        "profit": 1,
        "gender column": 1,
        "income": 1,
        "expenses": 1,
        "df2": 1,
        "age": 1
    },
    "age column": {
        "profit": 1,
        "gender column": 1,
        "income": 1,
        "expenses": 1,
        "df2": 1,
        "age": 1
    },
    "randomly": {
        "profit": 1,
        "gender column": 1,
        "income": 1,
        "expenses": 1,
        "df2": 1,
        "age": 1
    },
    "randomly sampled categorical values": {
        "profit": 1,
        "gender column": 1,
        "income": 1,
        "expenses": 1,
        "df2": 1,
        "age": 1
    },
    "partition function": {
        "partition function": 1,
        "exponential function": 1,
        "parameter vectors": 1,
        "logarithm": 1,
        "list itertools": 1,
        "binary vectors": 1
    },
    "parameter vectors": {
        "partition function": 1,
        "exponential function": 1,
        "parameter vectors": 1,
        "logarithm": 1,
        "list itertools": 1,
        "binary vectors": 1
    },
    "discrete probability distribution": {
        "partition function": 1,
        "exponential function": 1,
        "parameter vectors": 1,
        "logarithm": 1,
        "list itertools": 1,
        "binary vectors": 1
    },
    "airbus": {
        "cruising speed": 1,
        "accommodation": 1,
        "categorical data": 1,
        "tail height": 1,
        "wingspan": 1,
        "categorical variable": 1
    },
    "search box": {
        "searchable command palette": 2,
        "markdown": 1,
        "jupyter": 1,
        "colab": 1,
        "os x": 1
    },
    "while loop": {
        "keyword argument": 2,
        "positional argument": 1,
        "slicing": 1,
        "arange": 1,
        "prime numbers": 1
    },
    "gcd": {
        "keyword argument": 2,
        "positional argument": 1,
        "slicing": 1,
        "arange": 1,
        "prime numbers": 1
    },
    "euclidean algorithm": {
        "keyword argument": 2,
        "positional argument": 1,
        "slicing": 1,
        "arange": 1,
        "prime numbers": 1
    },
    "google books": {
        "keyword argument": 2,
        "positional argument": 1,
        "slicing": 1,
        "arange": 1,
        "prime numbers": 1
    },
    "modulo operator": {
        "keyword argument": 2,
        "positional argument": 1,
        "slicing": 1,
        "arange": 1,
        "prime numbers": 1
    },
    "positive integers": {
        "keyword argument": 2,
        "positional argument": 1,
        "slicing": 1,
        "arange": 1,
        "prime numbers": 1
    },
    "actualelapsedtime": {
        "actualelapsedtime": 1,
        "optional parameter bandwidth": 1,
        "kernel density estimation": 1,
        "x axis label": 1,
        "code cell": 1,
        "kernal density estimation": 1
    },
    "cufflinks library": {
        "bank of america": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "morgan stanley": 1,
        "bollinger band plot": 1
    },
    "technical analysis plots": {
        "bank of america": 2,
        "candle plot": 1,
        "simple moving averages plot": 1,
        "morgan stanley": 1,
        "bollinger band plot": 1
    },
    "training points": {
        "kernel matrix": 2,
        "linear kernel": 2,
        "2d dataset": 2
    },
    "ays": {
        "processed image": 1,
        "command prompt": 1,
        "tesseract library": 1,
        "ocr": 1,
        "reading errors": 1,
        "tesseract": 1
    },
    "ayscale": {
        "processed image": 1,
        "command prompt": 1,
        "tesseract library": 1,
        "ocr": 1,
        "reading errors": 1,
        "tesseract": 1
    },
    "first image": {
        "processed image": 1,
        "command prompt": 1,
        "tesseract library": 1,
        "ocr": 1,
        "reading errors": 1,
        "tesseract": 1
    },
    "image stacking": {
        "swarp": 1,
        "weighting function": 1,
        "stacking": 1,
        "median": 1,
        "ma": 1,
        "unweighted mean": 1
    },
    "f": {
        "swarp": 1,
        "weighting function": 1,
        "stacking": 1,
        "median": 1,
        "ma": 1,
        "unweighted mean": 1
    },
    "image subtraction": {
        "swarp": 1,
        "weighting function": 1,
        "stacking": 1,
        "median": 1,
        "ma": 1,
        "unweighted mean": 1
    },
    "exposure": {
        "swarp": 1,
        "weighting function": 1,
        "stacking": 1,
        "median": 1,
        "ma": 1,
        "unweighted mean": 1
    },
    "psfs": {
        "swarp": 1,
        "weighting function": 1,
        "stacking": 1,
        "median": 1,
        "ma": 1,
        "unweighted mean": 1
    },
    "wcstools gethead": {
        "swarp": 1,
        "weighting function": 1,
        "stacking": 1,
        "median": 1,
        "ma": 1,
        "unweighted mean": 1
    },
    "zptmag": {
        "swarp": 1,
        "weighting function": 1,
        "stacking": 1,
        "median": 1,
        "ma": 1,
        "unweighted mean": 1
    },
    "skyadu": {
        "swarp": 1,
        "weighting function": 1,
        "stacking": 1,
        "median": 1,
        "ma": 1,
        "unweighted mean": 1
    },
    "airmass": {
        "swarp": 1,
        "weighting function": 1,
        "stacking": 1,
        "median": 1,
        "ma": 1,
        "unweighted mean": 1
    },
    "unweighted simple average": {
        "swarp": 1,
        "weighting function": 1,
        "stacking": 1,
        "median": 1,
        "ma": 1,
        "unweighted mean": 1
    },
    "median stack": {
        "swarp": 1,
        "weighting function": 1,
        "stacking": 1,
        "median": 1,
        "ma": 1,
        "unweighted mean": 1
    },
    "integral calculator": {
        "priors": 1,
        "symmetric": 1,
        "normalization constant": 1,
        "gamma": 1,
        "ma": 1
    },
    "numerical approximation": {
        "priors": 1,
        "symmetric": 1,
        "normalization constant": 1,
        "gamma": 1,
        "ma": 1
    },
    "exact expression": {
        "priors": 1,
        "symmetric": 1,
        "normalization constant": 1,
        "gamma": 1,
        "ma": 1
    },
    "gaussian random variable": {
        "priors": 1,
        "symmetric": 1,
        "normalization constant": 1,
        "gamma": 1,
        "ma": 1
    },
    "peakedness": {
        "priors": 1,
        "symmetric": 1,
        "normalization constant": 1,
        "gamma": 1,
        "ma": 1
    },
    "wolfram alpha": {
        "priors": 1,
        "symmetric": 1,
        "normalization constant": 1,
        "gamma": 1,
        "ma": 1
    },
    "online service": {
        "priors": 1,
        "symmetric": 1,
        "normalization constant": 1,
        "gamma": 1,
        "ma": 1
    },
    "ity": {
        "highest betweennness values": 1,
        "brokerage\" roles": 1,
        "code cell": 1,
        "high betweenness values": 1,
        "unit tests": 1
    },
    "grouped histograms": {
        "line plot": 2,
        "bar plot": 2,
        "horizontal bars": 1
    },
    "grouped box plots": {
        "line plot": 2,
        "bar plot": 2,
        "horizontal bars": 1
    },
    "statistics plotting library": {
        "line plot": 2,
        "bar plot": 2,
        "horizontal bars": 1
    },
    "title functions": {
        "line plot": 2,
        "bar plot": 2,
        "horizontal bars": 1
    },
    "motivational plots": {
        "line plot": 2,
        "bar plot": 2,
        "horizontal bars": 1
    },
    "flowchart": {
        "line plot": 2,
        "bar plot": 2,
        "horizontal bars": 1
    },
    "boston data dictionary": {
        "line plot": 2,
        "bar plot": 2,
        "horizontal bars": 1
    },
    "numpy i": {
        "argument": 4,
        "functiopn": 1
    },
    "identity line": {
        "training error": 2,
        "test error": 1,
        "root mean squared error": 1,
        "average": 1
    },
    "1": {
        "training error": 2,
        "test error": 1,
        "root mean squared error": 1,
        "average": 1
    },
    "root mean squared error": {
        "training error": 2,
        "test error": 1,
        "root mean squared error": 1,
        "average": 1
    },
    "predicted responses": {
        "training error": 2,
        "test error": 1,
        "root mean squared error": 1,
        "average": 1
    },
    "function return values": {
        "rps": 2,
        "non-empty tuples": 2,
        "merged list": 1
    },
    "function return value": {
        "rps": 2,
        "non-empty tuples": 2,
        "merged list": 1
    },
    "gains matrix": {
        "unstable equilibrium state vector": 2,
        "lqr solver": 1,
        "q": 1,
        "lqr": 1
    },
    "algebraic riccati equation solution": {
        "unstable equilibrium state vector": 2,
        "lqr solver": 1,
        "q": 1,
        "lqr": 1
    },
    "algebraic ricatti equation": {
        "unstable equilibrium state vector": 2,
        "lqr solver": 1,
        "q": 1,
        "lqr": 1
    },
    "qr": {
        "unstable equilibrium state vector": 2,
        "lqr solver": 1,
        "q": 1,
        "lqr": 1
    },
    "algebraic riccati equation": {
        "unstable equilibrium state vector": 2,
        "lqr solver": 1,
        "q": 1,
        "lqr": 1
    },
    "feedback control law": {
        "unstable equilibrium state vector": 2,
        "lqr solver": 1,
        "q": 1,
        "lqr": 1
    },
    "quadratic cost function": {
        "unstable equilibrium state vector": 2,
        "lqr solver": 1,
        "q": 1,
        "lqr": 1
    },
    "recommender system": {
        "pandas library": 2,
        "ratings matrix": 2,
        "similarity scores": 1
    },
    "numpy binary files": {
        "ndarray": 2,
        "binary number": 2,
        "hexadecimal number": 1
    },
    "streaming data": {
        "testphot database": 3,
        "database table": 1,
        "testfeats table": 1
    },
    "stack overflow": {
        "color intensity": 1,
        "colors": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1
    },
    "python list": {
        "color intensity": 1,
        "colors": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1
    },
    "pixel triplets": {
        "color intensity": 1,
        "colors": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1
    },
    "image1": {
        "color intensity": 1,
        "colors": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1
    },
    "string method split": {
        "color intensity": 1,
        "colors": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1
    },
    "tile source": {
        "geoviews": 1,
        "bokeh wmtstilesource": 1,
        "datashader": 1,
        "taxi dropoffs": 1,
        "aggregator functions": 1
    },
    "discriminator tests": {
        "noise distribution": 1,
        "kernel density estimation plot": 1,
        "python variable": 1,
        "concatenation": 1,
        "training data requirements": 1
    },
    "lowest classification error": {
        "lowest classification error": 2,
        "classification error": 1,
        "qu": 1,
        "complexity": 1
    },
    "lowest": {
        "lowest classification error": 2,
        "classification error": 1,
        "qu": 1,
        "complexity": 1
    },
    "ml": {
        "neural network models": 1,
        "drop out": 1,
        "dropout": 1,
        "multiple independent internal representations": 1,
        "randomly selected neurons": 1
    },
    "hidden layer width": {
        "neural network models": 1,
        "drop out": 1,
        "dropout": 1,
        "multiple independent internal representations": 1,
        "randomly selected neurons": 1
    },
    "machine learning algorithm": {
        "nested loop": 1,
        "stopwords": 1,
        "counter class": 1,
        "collection package": 1,
        "standard library": 1
    },
    "matplotlib exercises": {
        "credit dataset": 1,
        "black coloured markers": 1,
        "font size": 1,
        "age": 1,
        "attributes duration": 1
    },
    "naive bayes classifier": {
        "naive bayes predictor": 2,
        "test data": 2,
        "naive bayes classifier": 1
    },
    "coscale imports": {
        "anomaly detection": 1,
        "page views data": 1,
        "forecasting": 1,
        "page view data": 1,
        "linear regression model": 1
    },
    "fraud": {
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "calls reporting": {
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "boxplot": {
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "cvlegend value": {
        "interquartile range": 1,
        "aborn": 1,
        "crime type": 1,
        "pandas boxplot": 1,
        "seaborn boxplot": 1
    },
    "data aggregration": {
        "tabular data": 1,
        "groupby function": 1,
        "groupby animation": 1,
        "rotten tomatoes": 1,
        "revenue": 1
    },
    "alternate uniform distribution": {
        "central limit theorem": 1,
        "uniform distribution": 1,
        "random variates": 1,
        "uniform2": 1,
        "clt": 1
    },
    "source online": {
        "hhs": 2,
        "name popularity": 2,
        "name frequencies": 1
    },
    "line segment": {
        "collinear points": 1,
        "r": 1,
        "spark rdd api": 1,
        "helper functions": 1,
        "assert statement unit tests": 1
    },
    "grain": {
        "grain sample": 1,
        "kmeans instance": 1,
        "inertias": 1,
        "grain data samples": 1,
        "inertia": 1
    },
    "uci": {
        "grain sample": 1,
        "kmeans instance": 1,
        "inertias": 1,
        "grain data samples": 1,
        "inertia": 1
    },
    "ampling": {
        "event metadata": 1,
        "fdsn server": 1,
        "wildcard": 1,
        "waveform data": 1,
        "channel code": 1
    },
    "pandas syntax": {
        "n": 2,
        "pandas syntax": 2,
        "boolean vector": 1
    },
    "indicator variables": {
        "linearregression model": 1,
        "data matrix": 1,
        "indicator variable": 1,
        "sex": 1,
        "embarked columns": 1
    },
    "artificial neural networks": {
        "matrix multiplications": 1,
        "traceback": 1,
        "matrix multiplication": 1,
        "size mismatch": 1,
        "runtimeerror": 1
    },
    "weighted inputs": {
        "matrix multiplications": 1,
        "traceback": 1,
        "matrix multiplication": 1,
        "size mismatch": 1,
        "runtimeerror": 1
    },
    "rgb color images": {
        "matrix multiplications": 1,
        "traceback": 1,
        "matrix multiplication": 1,
        "size mismatch": 1,
        "runtimeerror": 1
    },
    "single layer network": {
        "matrix multiplications": 1,
        "traceback": 1,
        "matrix multiplication": 1,
        "size mismatch": 1,
        "runtimeerror": 1
    },
    "gpu acceleration": {
        "matrix multiplications": 1,
        "traceback": 1,
        "matrix multiplication": 1,
        "size mismatch": 1,
        "runtimeerror": 1
    },
    "array container": {
        "matrices": 3,
        "fortran": 2
    },
    "n": {
        "matrices": 3,
        "fortran": 2
    },
    "historical page views": {
        "cpu": 1,
        "individual timeseries": 1,
        "individual pageviews": 1,
        "pageview format": 1,
        "total request rate": 1
    },
    "markov chain": {
        "markov chains": 3,
        "islice function": 1,
        "markov chain": 1
    },
    "singular value matrix": {
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "reuters documents": 1,
        "emmed test": 1
    },
    "reduction": {
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "reuters documents": 1,
        "emmed test": 1
    },
    "ality reduction": {
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "reuters documents": 1,
        "emmed test": 1
    },
    "rank k approximation": {
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "reuters documents": 1,
        "emmed test": 1
    },
    "document transpose matrix": {
        "conceptual similarity": 1,
        "document folding": 1,
        "document vectors": 1,
        "reuters documents": 1,
        "emmed test": 1
    },
    "online retails purchase": {
        "uk": 2,
        "negative quatity entries": 2,
        "customerid": 1
    },
    "bootstrap": {
        "bootstrap": 1,
        "correlations": 1,
        "x arrays": 1,
        "random samples": 1,
        "boostrapped versions": 1
    },
    "portugal": {
        "sqlite function": 1,
        "strftime": 1,
        "invoicedate": 1,
        "support rep": 1,
        "table employee": 1
    },
    "customer id": {
        "sqlite function": 1,
        "strftime": 1,
        "invoicedate": 1,
        "support rep": 1,
        "table employee": 1
    },
    "invoice amount": {
        "sqlite function": 1,
        "strftime": 1,
        "invoicedate": 1,
        "support rep": 1,
        "table employee": 1
    },
    "lead readings": {
        "plots": 1,
        "overall lead levels": 1,
        "calculations": 1,
        "mean value": 1,
        "flint water": 1
    },
    "religion": {
        "religion column": 2,
        "q16 column": 1,
        "income columns": 1,
        "seaborn countplot": 1
    },
    "carts": {
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "log transformed data": {
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "vertical bands": {
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "over plotting": {
        "shopping": 1,
        "shopping trips": 1,
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "ensorflow": {
        "searchable command palette": 1,
        "markdown": 1,
        "jupyter": 1,
        "colab": 1,
        "os x": 1
    },
    "basic regular expression syntax": {
        "regexr": 2,
        "brackets": 2
    },
    "multiline": {
        "regexr": 2,
        "regex": 2
    },
    "ensitivity": {
        "regexr": 2,
        "regex": 2
    },
    "quantfiers": {
        "regexr": 2,
        "regex": 2
    },
    "quantifiers": {
        "regexr": 2,
        "regex": 2
    },
    "lazy matching": {
        "regexr": 2,
        "regex": 2
    },
    "groupings": {
        "regexr": 2,
        "regex": 2
    },
    "sentiment dictionary file": {
        "double": 1,
        "meanrdd": 1,
        "reducebykey": 1,
        "dummy data": 1
    },
    "yelp reviews": {
        "double": 1,
        "meanrdd": 1,
        "reducebykey": 1,
        "dummy data": 1
    },
    "python tuples": {
        "double": 1,
        "meanrdd": 1,
        "reducebykey": 1,
        "dummy data": 1
    },
    "sentiment dictionary": {
        "double": 1,
        "meanrdd": 1,
        "reducebykey": 1,
        "dummy data": 1
    },
    "apply sentiment analysis": {
        "double": 1,
        "meanrdd": 1,
        "reducebykey": 1,
        "dummy data": 1
    },
    "short cut calculation": {
        "double": 1,
        "meanrdd": 1,
        "reducebykey": 1,
        "dummy data": 1
    },
    "multiple test points": {
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1,
        "nearest neighbor algorithm": 1
    },
    "handwritten digits recognition dataset": {
        "function imshow": 1,
        "predicted labels": 1,
        "nearest neighbor implementation": 1,
        "nearest neighbor algorithm": 1
    },
    "advection equation": {
        "gaussian function": 1,
        "seismic disturbances": 1,
        "initial condition": 1,
        "spatial initial condition": 1
    },
    "source free elastic wave equation": {
        "gaussian function": 1,
        "seismic disturbances": 1,
        "initial condition": 1,
        "spatial initial condition": 1
    },
    "shear modulus": {
        "gaussian function": 1,
        "seismic disturbances": 1,
        "initial condition": 1,
        "spatial initial condition": 1
    },
    "eigenvector matrix": {
        "gaussian function": 1,
        "seismic disturbances": 1,
        "initial condition": 1,
        "spatial initial condition": 1
    },
    "uncertainty estimates": {
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "posterior probability": {
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "posterior function": {
        "sampler": 1,
        "second george tutorial": 1,
        "random offset": 1,
        "maximum likelihood estimates": 1
    },
    "acquisition funel": {
        "bar chart": 2,
        "fitness test": 2
    },
    "linearsvc": {
        "cluster labels": 2,
        "kmeans": 2
    },
    "home zip code business": {
        "testing": 4
    },
    "barber leave reviews": {
        "testing": 4
    },
    "the dataset": {
        "testing": 4
    },
    "race": {
        "testing": 4
    },
    "expanded image": {
        "colors": 1,
        "numpy functions": 1,
        "2d array": 1,
        "bar chart": 1
    },
    "b11e sandbox solutions": {
        "stackoverflow": 2,
        "max()": 2
    },
    "exit()": {
        "python code": 1,
        "string slicing": 1,
        "floating point number": 1,
        "float function": 1
    },
    "string argument": {
        "python code": 1,
        "string slicing": 1,
        "floating point number": 1,
        "float function": 1
    },
    "isalpha": {
        "python code": 1,
        "string slicing": 1,
        "floating point number": 1,
        "float function": 1
    },
    "datascience": {
        "null hypothesis": 2,
        "majors": 1,
        "part time": 1
    },
    "ops": {
        "control flow structure": 1,
        "python program": 1,
        "united states": 1,
        "canada": 1
    },
    "control flow": {
        "control flow structure": 1,
        "python program": 1,
        "united states": 1,
        "canada": 1
    },
    "search engine": {
        "longitude values": 1,
        "businesses": 1,
        "longitude": 1,
        "latitude": 1
    },
    "puntuation tokens": {
        "nltk corpus": 2,
        "nltk reuters corpus": 2
    },
    "alphanumeric characters": {
        "nltk corpus": 2,
        "nltk reuters corpus": 2
    },
    "lexical diversity": {
        "nltk corpus": 2,
        "nltk reuters corpus": 2
    },
    "mathematical model": {
        "squared loss function": 2,
        "loss calculation": 1,
        "absolute loss": 1
    },
    "percent tip": {
        "squared loss function": 2,
        "loss calculation": 1,
        "absolute loss": 1
    },
    "safari mathjax": {
        "squared loss function": 2,
        "loss calculation": 1,
        "absolute loss": 1
    },
    "absolute loss": {
        "squared loss function": 2,
        "loss calculation": 1,
        "absolute loss": 1
    },
    "absolute loss functions": {
        "squared loss function": 2,
        "loss calculation": 1,
        "absolute loss": 1
    },
    "tip value": {
        "squared loss function": 2,
        "loss calculation": 1,
        "absolute loss": 1
    },
    "credit dataset": {
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1
    },
    "numpy method": {
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1
    },
    "statistics table": {
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1
    },
    "attribute creditamount": {
        "2d python plotting library": 1,
        "lib": 1,
        "plotting functions": 1,
        "web search": 1
    },
    "tweeperror": {
        "json file": 2,
        "kevin bacon": 2
    },
    "dictionary keys": {
        "json file": 2,
        "kevin bacon": 2
    },
    "rate limit": {
        "json file": 2,
        "kevin bacon": 2
    },
    "consumer key": {
        "json file": 2,
        "kevin bacon": 2
    },
    "manually graded example": {
        "rmse": 2,
        "variable rmse": 2
    },
    "autograded example": {
        "rmse": 2,
        "variable rmse": 2
    },
    "attack densities": {
        "iraq": 3,
        "colorbar": 1
    },
    "karate club": {
        "social network": 2,
        "code cell": 1,
        "unit tests": 1
    },
    "pairwise links": {
        "social network": 2,
        "code cell": 1,
        "unit tests": 1
    },
    "wikipedia": {
        "social network": 2,
        "code cell": 1,
        "unit tests": 1
    },
    "administrator": {
        "social network": 2,
        "code cell": 1,
        "unit tests": 1
    },
    "training pair": {
        "computational graph": 2,
        "forward pass tasks": 1,
        "variable naming convention": 1
    },
    "advanced python objects test": {
        "hexadecimal representation": 2,
        "advanced strings problem": 1,
        "advanced": 1
    },
    "donuts": {
        "assertions": 4
    },
    "int count": {
        "assertions": 4
    },
    "random sample": {
        "social security administration": 1,
        "pandas table": 1,
        "random sample": 1,
        "bar charts": 1
    },
    "longitude values": {
        "inspection": 2,
        "inspection dataframe": 2
    },
    "validzip variable": {
        "inspection": 2,
        "inspection dataframe": 2
    },
    "geographic patterns": {
        "inspection": 2,
        "inspection dataframe": 2
    },
    "business id": {
        "inspection": 2,
        "inspection dataframe": 2
    },
    "restaurant address": {
        "inspection": 2,
        "inspection dataframe": 2
    },
    "map making": {
        "inspection": 2,
        "inspection dataframe": 2
    },
    "restaurant score": {
        "inspection": 2,
        "inspection dataframe": 2
    },
    "silhouette scores": {
        "silhouette coefficient": 2,
        "kmeans clusterer": 2
    },
    "silhouette score": {
        "silhouette coefficient": 2,
        "kmeans clusterer": 2
    },
    "scaled feature values": {
        "tensorflow": 1,
        "n": 1,
        "scikit learn": 1,
        "testing sets": 1
    },
    "binary files": {
        "binary files": 2,
        "numpy array file": 2
    },
    "text munching": {
        "fasta file": 1,
        "sequence text combination": 1,
        "blast executions": 1,
        "rdd": 1
    },
    "sequence data": {
        "fasta file": 1,
        "sequence text combination": 1,
        "blast executions": 1,
        "rdd": 1
    },
    "groupbykey": {
        "fasta file": 1,
        "sequence text combination": 1,
        "rdd partitions": 1,
        "blast executions": 1
    },
    "metadata combinations": {
        "fasta file": 1,
        "sequence text combination": 1,
        "rdd partitions": 1,
        "blast executions": 1
    },
    "pokemon morphologies": {
        "body style": 1,
        "groupby operations": 1,
        "minimum injection volume": 1,
        "dictionaries": 1
    },
    "course id": {
        "student id number": 1,
        "email address": 1,
        "course id": 1,
        "github username": 1
    },
    "unique course id": {
        "student id number": 1,
        "email address": 1,
        "course id": 1,
        "github username": 1
    },
    "colebrook function": {
        "time interval": 1,
        "pressure values": 1,
        "odeint": 1,
        "air pressure signals": 1
    },
    "200 kpa": {
        "time interval": 1,
        "pressure values": 1,
        "odeint": 1,
        "air pressure signals": 1
    },
    "steady state value": {
        "time interval": 1,
        "pressure values": 1,
        "odeint": 1,
        "air pressure signals": 1
    },
    "tank pressure": {
        "time interval": 1,
        "pressure values": 1,
        "odeint": 1,
        "air pressure signals": 1
    },
    "roc curve": {
        "average auc": 2,
        "code cell": 2
    },
    "passenger class column": {
        "fare predictor": 1,
        "passenger class": 1,
        "precision stats": 1,
        "predictors": 1
    },
    "single dataframe": {
        "fare predictor": 1,
        "passenger class": 1,
        "precision stats": 1,
        "predictors": 1
    },
    "encoded columns": {
        "fare predictor": 1,
        "passenger class": 1,
        "precision stats": 1,
        "predictors": 1
    },
    "logvar": {
        "hyperparameters": 4
    },
    "example exercise": {
        "code cell": 1,
        "exercise notebook": 1,
        "valueerror": 1,
        "squares function": 1
    },
    "corr()": {
        "linearregression model": 1,
        "data matrix": 1,
        "ridgecv": 1,
        "hours distribution": 1
    },
    "order()": {
        "linearregression model": 1,
        "data matrix": 1,
        "ridgecv": 1,
        "hours distribution": 1
    },
    "embedding layers": {
        "integers": 1,
        "maximum review length": 1,
        "feature vector": 1,
        "deep learning networks": 1
    },
    "intensive repo": {
        "bar plot": 2,
        "exploratory data analysis": 1,
        "deceased passengers": 1
    },
    "python packages": {
        "bar plot": 2,
        "exploratory data analysis": 1,
        "deceased passengers": 1
    },
    "machine learning nanodegree less": {
        "bar plot": 2,
        "exploratory data analysis": 1,
        "deceased passengers": 1
    },
    "font cache": {
        "bar plot": 2,
        "exploratory data analysis": 1,
        "deceased passengers": 1
    },
    "predictive models": {
        "bar plot": 2,
        "exploratory data analysis": 1,
        "deceased passengers": 1
    },
    "pandas scraping": {
        "medical abbreviations": 2,
        "extra": 2
    },
    "medical abbreviations": {
        "medical abbreviations": 2,
        "extra": 2
    },
    "divergence": {
        "alaphabet": 1,
        "divergence function": 1,
        "variances": 1,
        "character pairs": 1
    },
    "divergence scores": {
        "alaphabet": 1,
        "divergence function": 1,
        "variances": 1,
        "character pairs": 1
    },
    "gence": {
        "alaphabet": 1,
        "divergence function": 1,
        "variances": 1,
        "character pairs": 1
    },
    "competiton": {
        "alaphabet": 1,
        "divergence function": 1,
        "variances": 1,
        "character pairs": 1
    },
    "feature indexes": {
        "alaphabet": 1,
        "divergence function": 1,
        "variances": 1,
        "character pairs": 1
    },
    "node purity": {
        "titanic": 1,
        "sex": 1,
        "age": 1,
        "response variable": 1
    },
    "optical character recognition": {
        "mnist sequence dataset": 1,
        "deep learning model": 1,
        "python variable": 1,
        "optical character recognition": 1
    },
    "optical character recognition lab": {
        "mnist sequence dataset": 1,
        "deep learning model": 1,
        "python variable": 1,
        "optical character recognition": 1
    },
    "mnist digits": {
        "mnist sequence dataset": 1,
        "deep learning model": 1,
        "python variable": 1,
        "optical character recognition": 1
    },
    "tokenize song lyrics": {
        "kaggle hosted dataset": 1,
        "songlyrics": 1,
        "song lyrics": 1,
        "tokenization": 1
    },
    "programming practice": {
        "unit test": 1,
        "imput strings": 1,
        "unit testing": 1,
        "unit tests": 1
    },
    "open source python library": {
        "mrwordfreqcount": 1,
        "hadoop mode": 1,
        "hadoop streaming": 1,
        "mrjob": 1
    },
    "native": {
        "mrwordfreqcount": 1,
        "hadoop mode": 1,
        "hadoop streaming": 1,
        "mrjob": 1
    },
    "virtual machine": {
        "mrwordfreqcount": 1,
        "hadoop mode": 1,
        "hadoop streaming": 1,
        "mrjob": 1
    },
    "map reduce jobs": {
        "mrwordfreqcount": 1,
        "hadoop mode": 1,
        "hadoop streaming": 1,
        "mrjob": 1
    },
    "word count map reduce": {
        "mrwordfreqcount": 1,
        "hadoop mode": 1,
        "hadoop streaming": 1,
        "mrjob": 1
    },
    "iteration prescription": {
        "julia set": 1,
        "fixed complex number": 1,
        "upper limit": 1,
        "iteration prescription": 1
    },
    "locked box": {
        "parse": 1,
        "scriptsig": 1,
        "script": 1,
        "scriptpubkey": 1
    },
    "limited programming language": {
        "parse": 1,
        "scriptsig": 1,
        "script": 1,
        "scriptpubkey": 1
    },
    "script": {
        "parse": 1,
        "scriptsig": 1,
        "script": 1,
        "scriptpubkey": 1
    },
    "scriptpubkey": {
        "parse": 1,
        "scriptsig": 1,
        "script": 1,
        "scriptpubkey": 1
    },
    "personal check": {
        "parse": 1,
        "scriptsig": 1,
        "script": 1,
        "scriptpubkey": 1
    },
    "smart contract": {
        "parse": 1,
        "scriptsig": 1,
        "script": 1,
        "scriptpubkey": 1
    },
    "scriptsig": {
        "parse": 1,
        "scriptsig": 1,
        "script": 1,
        "scriptpubkey": 1
    },
    "locking script": {
        "parse": 1,
        "scriptsig": 1,
        "script": 1,
        "scriptpubkey": 1
    },
    "serialization": {
        "parse": 1,
        "scriptsig": 1,
        "script": 1,
        "scriptpubkey": 1
    },
    "access": {
        "nested data structure": 1,
        "indexing": 1,
        "dictionaries": 1,
        "twitter search": 1
    },
    "twitter api access": {
        "nested data structure": 1,
        "indexing": 1,
        "dictionaries": 1,
        "twitter search": 1
    },
    "twitter credentials": {
        "nested data structure": 1,
        "indexing": 1,
        "dictionaries": 1,
        "twitter search": 1
    },
    "place of interest": {
        "nested data structure": 1,
        "indexing": 1,
        "dictionaries": 1,
        "twitter search": 1
    },
    "similarity": {
        "inaugural corpus": 1,
        "word usage": 1,
        "chat data": 1,
        "summary stats": 1
    },
    "common contexts": {
        "inaugural corpus": 1,
        "word usage": 1,
        "chat data": 1,
        "summary stats": 1
    },
    "dispersion plot": {
        "inaugural corpus": 1,
        "word usage": 1,
        "chat data": 1,
        "summary stats": 1
    },
    "word usage": {
        "inaugural corpus": 1,
        "word usage": 1,
        "chat data": 1,
        "summary stats": 1
    },
    "function predict": {
        "test data": 1,
        "sk": 1,
        "image": 1,
        "knn process": 1
    },
    "predicted class value": {
        "test data": 1,
        "sk": 1,
        "image": 1,
        "knn process": 1
    },
    "nearestneighborsclassifier": {
        "test data": 1,
        "sk": 1,
        "image": 1,
        "knn process": 1
    },
    "function distance": {
        "test data": 1,
        "sk": 1,
        "image": 1,
        "knn process": 1
    },
    "unit test cells": {
        "jupyter dashboard": 1,
        "stubbed out factorial function": 1,
        "machine problems": 1,
        "positive integer": 1
    },
    "first machine problem": {
        "jupyter dashboard": 1,
        "stubbed out factorial function": 1,
        "machine problems": 1,
        "positive integer": 1
    },
    "explicit math functions": {
        "matrix": 1,
        "gaussian distribution": 1,
        "probabilities": 1,
        "2d array": 1
    },
    "keras model": {
        "tensorflow optimizer": 2,
        "tensor init": 2
    },
    "k means algorithm": {
        "metropolitans": 2,
        "medoids": 1
    },
    "k medoids algorithm": {
        "metropolitans": 2,
        "medoids": 1
    },
    "squared errors": {
        "metropolitans": 2,
        "medoids": 1
    },
    "diagonal entries": {
        "programming task": 1,
        "single shell": 1,
        "diagonal entries": 1
    },
    "list": {
        "non-empty tuples": 2,
        "merged list": 1
    },
    "hessian": {
        "elementwise multiplication": 1,
        "elementwise product": 1,
        "signature": 1
    },
    "collaborative filtering": {
        "pandas library": 2,
        "similarity scores": 1
    },
    "band similarity": {
        "pandas library": 2,
        "similarity scores": 1
    },
    "ine similarity": {
        "pandas library": 2,
        "similarity scores": 1
    },
    "complex listening preferences": {
        "pandas library": 2,
        "similarity scores": 1
    },
    "string formatting": {
        "binary number": 2,
        "hexadecimal number": 1
    },
    "text formatting options": {
        "binary number": 2,
        "hexadecimal number": 1
    },
    "stopping condition": {
        "classification error": 1,
        "qu": 1,
        "complexity": 1
    },
    "cultures": {
        "recurrent neural network": 1,
        "identifiers": 1,
        "tensorflow string manipulation": 1
    },
    "earthling names": {
        "recurrent neural network": 1,
        "identifiers": 1,
        "tensorflow string manipulation": 1
    },
    "ikea furniture": {
        "recurrent neural network": 1,
        "identifiers": 1,
        "tensorflow string manipulation": 1
    },
    "article titles": {
        "recurrent neural network": 1,
        "identifiers": 1,
        "tensorflow string manipulation": 1
    },
    "pokemon names": {
        "recurrent neural network": 1,
        "identifiers": 1,
        "tensorflow string manipulation": 1
    },
    "latin transcript": {
        "recurrent neural network": 1,
        "identifiers": 1,
        "tensorflow string manipulation": 1
    },
    "unique tokens": {
        "recurrent neural network": 1,
        "identifiers": 1,
        "tensorflow string manipulation": 1
    },
    "vocabulary": {
        "recurrent neural network": 1,
        "identifiers": 1,
        "tensorflow string manipulation": 1
    },
    "shipping time": {
        "shipping time": 3
    },
    "error messages": {
        "python program": 1,
        "united states": 1,
        "canada": 1
    },
    "array computation package": {
        "python program": 1,
        "united states": 1,
        "canada": 1
    },
    "fourier transforms": {
        "python program": 1,
        "united states": 1,
        "canada": 1
    },
    "solvers": {
        "python program": 1,
        "united states": 1,
        "canada": 1
    },
    "interpolation routines": {
        "python program": 1,
        "united states": 1,
        "canada": 1
    },
    "spare matrices": {
        "python program": 1,
        "united states": 1,
        "canada": 1
    },
    "signal processing methods": {
        "python program": 1,
        "united states": 1,
        "canada": 1
    },
    "basic differential equations": {
        "python program": 1,
        "united states": 1,
        "canada": 1
    },
    "numeric integration": {
        "python program": 1,
        "united states": 1,
        "canada": 1
    },
    "populated neighboring cells": {
        "populated neighboring cells": 1,
        "boolean array": 1,
        "equality": 1
    },
    "[scipy library": {
        "populated neighboring cells": 1,
        "boolean array": 1,
        "equality": 1
    },
    "convolution": {
        "populated neighboring cells": 1,
        "boolean array": 1,
        "equality": 1
    },
    "convolve2d function": {
        "populated neighboring cells": 1,
        "boolean array": 1,
        "equality": 1
    },
    "boundary effects": {
        "populated neighboring cells": 1,
        "boolean array": 1,
        "equality": 1
    },
    "r cost matrices": {
        "lqr solver": 1,
        "q": 1,
        "lqr": 1
    },
    "ode mouse v8": {
        "gene ids": 1,
        "gene id version number": 1,
        "gencode": 1
    },
    "kallisto": {
        "gene ids": 1,
        "gene id version number": 1,
        "gencode": 1
    },
    "star": {
        "gene ids": 1,
        "gene id version number": 1,
        "gencode": 1
    },
    "berkeley bowl": {
        "sam": 1,
        "matrix expression": 1,
        "cantaloupes": 1
    },
    "bananas": {
        "sam": 1,
        "matrix expression": 1,
        "cantaloupes": 1
    },
    "cantaloupes": {
        "sam": 1,
        "matrix expression": 1,
        "cantaloupes": 1
    },
    "fruit bowls": {
        "sam": 1,
        "matrix expression": 1,
        "cantaloupes": 1
    },
    "apples": {
        "sam": 1,
        "matrix expression": 1,
        "cantaloupes": 1
    },
    "lists": {
        "square brackets": 3
    },
    "mean": {
        "testing": 3
    },
    "modulation index": {
        "testing": 3
    },
    "median frequency": {
        "testing": 3
    },
    "acoustic analysis": {
        "testing": 3
    },
    "speech analysis": {
        "testing": 3
    },
    "recorded voice samples": {
        "testing": 3
    },
    "spectral flatness mode": {
        "testing": 3
    },
    "gender recogn": {
        "testing": 3
    },
    "spectral entropy": {
        "testing": 3
    },
    "ordinary least squares": {
        "computer science majors": 2,
        "kmeans": 1
    },
    "design matrices": {
        "computer science majors": 2,
        "kmeans": 1
    },
    "patsy": {
        "computer science majors": 2,
        "kmeans": 1
    },
    "grouped counts": {
        "cylinders": 2,
        "aggregate quantities": 1
    },
    "while loops": {
        "random module": 1,
        "random integer": 1,
        "placeholder value": 1
    },
    "random integer": {
        "random module": 1,
        "random integer": 1,
        "placeholder value": 1
    },
    "guessing game": {
        "random module": 1,
        "random integer": 1,
        "placeholder value": 1
    },
    "ities": {
        "iraq": 2,
        "colorbar": 1
    },
    "tabular data": {
        "revenue": 2,
        "rotten tomatoes": 1
    },
    "business dataframe": {
        "zip codes": 3
    },
    "nonmissing values": {
        "zip codes": 3
    },
    "latitude": {
        "zip codes": 3
    },
    "vector machines lab training": {
        "bank dataset": 1,
        "algorithms": 1,
        "data preprocessing steps": 1
    },
    "sequence records": {
        "fasta file": 1,
        "sequence text combination": 1,
        "blast executions": 1
    },
    "ncbi blast": {
        "fasta file": 1,
        "sequence text combination": 1,
        "blast executions": 1
    },
    "colebrook": {
        "time interval": 1,
        "pressure values": 1,
        "odeint": 1
    },
    "dynamic balances": {
        "time interval": 1,
        "pressure values": 1,
        "odeint": 1
    },
    "computer tut 1": {
        "time interval": 1,
        "pressure values": 1,
        "odeint": 1
    },
    "gas flow system": {
        "time interval": 1,
        "pressure values": 1,
        "odeint": 1
    },
    "flattened mnist image": {
        "hyperparameters": 3
    },
    "labeledpoint": {
        "logisticregression": 1,
        "default parameters": 1,
        "iterations": 1
    },
    "departure delay": {
        "logisticregression": 1,
        "default parameters": 1,
        "iterations": 1
    },
    "preprocessing steps": {
        "model selection": 1,
        "pre": 1,
        "hyperparameter tuning": 1
    },
    "optimal pipeline": {
        "model selection": 1,
        "pre": 1,
        "hyperparameter tuning": 1
    },
    "optimal preprocessing": {
        "model selection": 1,
        "pre": 1,
        "hyperparameter tuning": 1
    },
    "pipelines": {
        "model selection": 1,
        "pre": 1,
        "hyperparameter tuning": 1
    },
    "connectintensive repo": {
        "bar plot": 2,
        "deceased passengers": 1
    },
    "function lambdify": {
        "slicing": 1,
        "centered difference": 1,
        "relative error": 1
    },
    "unit step size": {
        "slicing": 1,
        "centered difference": 1,
        "relative error": 1
    },
    "backward difference": {
        "slicing": 1,
        "centered difference": 1,
        "relative error": 1
    },
    "positional argument": {
        "slicing": 1,
        "centered difference": 1,
        "relative error": 1
    },
    "numpy array slicing": {
        "slicing": 1,
        "centered difference": 1,
        "relative error": 1
    },
    "isinstance": {
        "slicing": 1,
        "centered difference": 1,
        "relative error": 1
    },
    "numbers module": {
        "slicing": 1,
        "centered difference": 1,
        "relative error": 1
    },
    "aircraft physical characteristics": {
        "tail height": 1,
        "wingspan": 1,
        "categorical variable": 1
    },
    "cruising speed": {
        "tail height": 1,
        "wingspan": 1,
        "categorical variable": 1
    },
    "tail height": {
        "tail height": 1,
        "wingspan": 1,
        "categorical variable": 1
    },
    "attributes": {
        "tail height": 1,
        "wingspan": 1,
        "categorical variable": 1
    },
    "control point loaciton": {
        "correspnding lift to drag ratios": 1,
        "moving least squares curve": 1,
        "iteration": 1
    },
    "aerofoil drag": {
        "correspnding lift to drag ratios": 1,
        "moving least squares curve": 1,
        "iteration": 1
    },
    "lift to drag ratio": {
        "correspnding lift to drag ratios": 1,
        "moving least squares curve": 1,
        "iteration": 1
    },
    "aerofoil chord length": {
        "correspnding lift to drag ratios": 1,
        "moving least squares curve": 1,
        "iteration": 1
    },
    "target lift coefficent": {
        "correspnding lift to drag ratios": 1,
        "moving least squares curve": 1,
        "iteration": 1
    },
    "kinematic viscosity": {
        "correspnding lift to drag ratios": 1,
        "moving least squares curve": 1,
        "iteration": 1
    },
    "sql aliases": {
        "column": 1,
        "aliases": 1,
        "sql subqueries": 1
    },
    "sql alias syntax": {
        "column": 1,
        "aliases": 1,
        "sql subqueries": 1
    },
    "query arguments": {
        "column": 1,
        "aliases": 1,
        "sql subqueries": 1
    },
    "alias as": {
        "column": 1,
        "aliases": 1,
        "sql subqueries": 1
    },
    "revenue": {
        "else statement": 1,
        "postgresql": 1,
        "date documentation": 1
    },
    "distance metric": {
        "emmed test": 2,
        "reuters documents": 1
    },
    "path similarity": {
        "word2vec model": 1,
        "movie reviews": 1,
        "code cell": 1
    },
    "nltk brown corpus": {
        "word2vec model": 1,
        "movie reviews": 1,
        "code cell": 1
    },
    "squared exponential distance": {
        "squared exponential distance": 1,
        "green cells": 1,
        "docstring": 1
    },
    "contravariant derivatives": {
        "probability density": 1,
        "arbitrary input data array": 1,
        "binned probability density": 1
    },
    "repeated indices": {
        "probability density": 1,
        "arbitrary input data array": 1,
        "binned probability density": 1
    },
    "general relativity": {
        "probability density": 1,
        "arbitrary input data array": 1,
        "binned probability density": 1
    },
    "tensor expression": {
        "probability density": 1,
        "arbitrary input data array": 1,
        "binned probability density": 1
    },
    "univariate problem": {
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "predictive distribution": {
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "joint distribution": {
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "kernel function evaluations": {
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "mean draw": {
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "kernel vector": {
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "generative process": {
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "conditional models": {
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "target noise": {
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "periodic data generator": {
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "2d toy dataset": {
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "linearly separable dataset": {
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "multivariate gaussian distribution": {
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "optimization problem": {
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "maximum margin problem": {
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "quadratic programming problem": {
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "support vectors": {
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "quadratic function": {
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "lagrange multipliers": {
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "inequality constraints": {
        "kernel matrix": 1,
        "linear kernel": 1,
        "2d dataset": 1
    },
    "autoencoder tests": {
        "autoencoder": 1,
        "python list": 1,
        "pil image": 1
    },
    "autoencoder": {
        "autoencoder": 1,
        "python list": 1,
        "pil image": 1
    },
    "transaction time": {
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "transaction times": {
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "unique customers": {
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "customer trends": {
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "customer counts": {
        "boxplots": 1,
        "lunar new year": 1,
        "christmas": 1
    },
    "indexing notation": {
        "numpy array variables": 1,
        "indexing": 1,
        "boolean mask": 1
    },
    "checkerboard": {
        "python function": 1,
        "dtype": 1,
        "size": 1
    },
    "solution breakdown": {
        "brackets": 2
    },
    "pipe character": {
        "regex": 2
    },
    "or relation": {
        "regex": 2
    },
    "word border": {
        "regex": 2
    },
    "postive lookahead": {
        "regex": 2
    },
    "negative lookahead": {
        "regex": 2
    },
    "fractal": {
        "triangle vertex": 1,
        "current": 1
    },
    "polygon": {
        "triangle vertex": 1,
        "current": 1
    },
    "sierpinski triangle": {
        "triangle vertex": 1,
        "current": 1
    },
    "initial random point": {
        "triangle vertex": 1,
        "current": 1
    },
    "chaos game": {
        "triangle vertex": 1,
        "current": 1
    },
    "course repository": {
        "functoin": 1,
        "pandas data frame": 1
    },
    "major airports": {
        "functoin": 1,
        "pandas data frame": 1
    },
    "split indices": {
        "root mean squared error": 1,
        "average": 1
    },
    "cross validation function": {
        "root mean squared error": 1,
        "average": 1
    },
    "feature sets": {
        "root mean squared error": 1,
        "average": 1
    },
    "ick reply": {
        "capitalized language name": 1,
        "lower case characters": 1
    },
    "bad style reply": {
        "capitalized language name": 1,
        "lower case characters": 1
    },
    "hello function": {
        "capitalized language name": 1,
        "lower case characters": 1
    },
    "tokenize method": {
        "cluster labels": 1,
        "kmeans": 1
    },
    "porter stemmer": {
        "cluster labels": 1,
        "kmeans": 1
    },
    "clustering analysis": {
        "cluster labels": 1,
        "kmeans": 1
    },
    "color intensity": {
        "colors": 1,
        "bar chart": 1
    },
    "keras hints": {
        "concatenation": 1,
        "training data requirements": 1
    },
    "kernel density estimation plot": {
        "concatenation": 1,
        "training data requirements": 1
    },
    "generator sampling tests": {
        "concatenation": 1,
        "training data requirements": 1
    },
    "fibonicci sequence": {
        "nth fibonicci number": 1,
        "series": 1
    },
    "generating function": {
        "nth fibonicci number": 1,
        "series": 1
    },
    "power series": {
        "nth fibonicci number": 1,
        "series": 1
    },
    "table manipulation": {
        "majors": 1,
        "part time": 1
    },
    "rug plot": {
        "optimal kde bandwidth": 2
    },
    "sample": {
        "optimal kde bandwidth": 2
    },
    "pling": {
        "event metadata": 2
    },
    "linearization": {
        "q": 1,
        "lqr": 1
    },
    "pend": {
        "q": 1,
        "lqr": 1
    },
    "small": {
        "q": 1,
        "lqr": 1
    },
    "angular speed": {
        "q": 1,
        "lqr": 1
    },
    "goal state": {
        "q": 1,
        "lqr": 1
    },
    "fixed goal state": {
        "q": 1,
        "lqr": 1
    },
    "initial values": {
        "q": 1,
        "lqr": 1
    },
    "nonlinear system": {
        "q": 1,
        "lqr": 1
    },
    "fixed end goal state": {
        "q": 1,
        "lqr": 1
    },
    "local testing": {
        "test data": 2
    },
    "edx": {
        "test data": 2
    },
    "test datasets": {
        "test data": 2
    },
    "network training": {
        "test data": 2
    },
    "configuration file": {
        "test data": 2
    },
    "debugging purposes": {
        "test data": 2
    },
    "yaml file": {
        "test data": 2
    },
    "gene ontology website": {
        "gene id version number": 1,
        "gencode": 1
    },
    "ontology enrichment": {
        "gene id version number": 1,
        "gencode": 1
    },
    "gene ontology enrichment": {
        "gene id version number": 1,
        "gencode": 1
    },
    "gene expression": {
        "gene id version number": 1,
        "gencode": 1
    },
    "nonzero differences": {
        "gene id version number": 1,
        "gencode": 1
    },
    "numeric libraries": {
        "squared loss function": 1,
        "loss calculation": 1
    },
    "lab 5": {
        "squared loss function": 1,
        "loss calculation": 1
    },
    "squared loss function": {
        "squared loss function": 1,
        "loss calculation": 1
    },
    "eigenvalue decomposition": {
        "covariance": 1,
        "eigenvalue problem": 1
    },
    "exact linear decomposition": {
        "covariance": 1,
        "eigenvalue problem": 1
    },
    "sample covariance matrix": {
        "covariance": 1,
        "eigenvalue problem": 1
    },
    "singular values": {
        "covariance": 1,
        "eigenvalue problem": 1
    },
    "exact decomposition": {
        "covariance": 1,
        "eigenvalue problem": 1
    },
    "low wage jobs": {
        "women": 1,
        "part time rate": 1
    },
    "employment rates": {
        "women": 1,
        "part time rate": 1
    },
    "normalizing constants": {
        "propper pdf": 1,
        "normalizing constant": 1
    },
    "forward pass tasks": {
        "variable naming convention": 1,
        "computational graph": 1
    },
    "boolean arrays": {
        "rotten tomatoes": 1,
        "revenue": 1
    },
    "groupby function": {
        "rotten tomatoes": 1,
        "revenue": 1
    },
    "groupby animation": {
        "rotten tomatoes": 1,
        "revenue": 1
    },
    "python api": {
        "map transformation": 2
    },
    "sparkcontext": {
        "map transformation": 2
    },
    "parallel work": {
        "map transformation": 2
    },
    "parallelize method": {
        "map transformation": 2
    },
    "statistical relationships": {
        "alchohol beer": 1,
        "price": 1
    },
    "map transformation": {
        "map function": 1,
        "lambda functions": 1
    },
    "predicted clusters": {
        "silhouette coefficient": 1,
        "kmeans clusterer": 1
    },
    "sum of squared errors function": {
        "silhouette coefficient": 1,
        "kmeans clusterer": 1
    },
    "sse score": {
        "silhouette coefficient": 1,
        "kmeans clusterer": 1
    },
    "binomial": {
        "binomial": 1,
        "likelihood function": 1
    },
    "standard file types": {
        "binary files": 1,
        "numpy array file": 1
    },
    "plain text files": {
        "binary files": 1,
        "numpy array file": 1
    },
    "file types": {
        "binary files": 1,
        "numpy array file": 1
    },
    "matrix notation": {
        "orthonormal basis": 2
    },
    "excercises": {
        "orthonormal basis": 2
    },
    "decision tree classifier": {
        "decision tree classsifier": 1,
        "test sets": 1
    },
    "true negatives": {
        "quiz": 2
    },
    "true positives": {
        "quiz": 2
    },
    "incorrect predictions": {
        "quiz": 2
    },
    "performance": {
        "average auc": 1,
        "code cell": 1
    },
    "probabilistic predictions": {
        "average auc": 1,
        "code cell": 1
    },
    "paremeters": {
        "average auc": 1,
        "code cell": 1
    },
    "auc score": {
        "average auc": 1,
        "code cell": 1
    },
    "optimal hypermater": {
        "average auc": 1,
        "code cell": 1
    },
    "linear discriminant model": {
        "tail method": 1,
        "head method": 1
    },
    "multiple measurements": {
        "tail method": 1,
        "head method": 1
    },
    "morphologic variation": {
        "tail method": 1,
        "head method": 1
    },
    "gasp\u00e9 peninsula": {
        "tail method": 1,
        "head method": 1
    },
    "taxonomic problems": {
        "tail method": 1,
        "head method": 1
    },
    "linear discriminant analysis": {
        "tail method": 1,
        "head method": 1
    },
    "wikimedia commons": {
        "tail method": 1,
        "head method": 1
    },
    "iris setosa": {
        "tail method": 1,
        "head method": 1
    },
    "lambda function": {
        "linearregression model": 1,
        "data matrix": 1
    },
    "categorical attributes": {
        "linearregression model": 1,
        "data matrix": 1
    },
    "hypothesis test": {
        "null hypothesis": 2
    },
    "har": {
        "unique tokens": 1,
        "siddhartha": 1
    },
    "siddhartha": {
        "unique tokens": 1,
        "siddhartha": 1
    },
    "grep flags": {
        "unique tokens": 1,
        "siddhartha": 1
    },
    "command line shell tools": {
        "unique tokens": 1,
        "siddhartha": 1
    },
    "problems": {
        "integers": 2
    },
    "challeng": {
        "integers": 2
    },
    "sectionmaterials notebooks": {
        "normal distributions": 1,
        "testing distributions": 1
    },
    "class lectures": {
        "normal distributions": 1,
        "testing distributions": 1
    },
    "path parameter": {
        "memory requirements": 1,
        "numpy email arrays": 1
    },
    "ham": {
        "memory requirements": 1,
        "numpy email arrays": 1
    },
    "spam": {
        "memory requirements": 1,
        "numpy email arrays": 1
    },
    "node degrees": {
        "code cell": 1,
        "unit tests": 1
    },
    "election": {
        "sql alchemy library": 1,
        "schema": 1
    },
    "public records": {
        "sql alchemy library": 1,
        "schema": 1
    },
    "small donors": {
        "sql alchemy library": 1,
        "schema": 1
    },
    "fec": {
        "sql alchemy library": 1,
        "schema": 1
    },
    "federal election commission": {
        "sql alchemy library": 1,
        "schema": 1
    },
    "datahub cluster": {
        "sql alchemy library": 1,
        "schema": 1
    },
    "shared postgres databases": {
        "sql alchemy library": 1,
        "schema": 1
    },
    "basecount": {
        "rdd": 2
    },
    "colored images": {
        "custom alpha channel masks": 2
    },
    "orb feature detection": {
        "custom alpha channel masks": 2
    },
    "wildcards": {
        "sql subqueries": 1,
        "else statement": 1
    },
    "postgresql": {
        "sql subqueries": 1,
        "else statement": 1
    },
    "where clause": {
        "sql subqueries": 1,
        "else statement": 1
    },
    "missing letters": {
        "sql subqueries": 1,
        "else statement": 1
    },
    "select distinct statement": {
        "sql subqueries": 1,
        "else statement": 1
    },
    "distinct operator": {
        "sql subqueries": 1,
        "else statement": 1
    },
    "limit operator": {
        "sql subqueries": 1,
        "else statement": 1
    },
    "limit syntax": {
        "sql subqueries": 1,
        "else statement": 1
    },
    "aggregate functions": {
        "else statement": 2
    },
    "2d calculation": {
        "timestep size": 1,
        "simulation": 1
    },
    "gridblocks": {
        "timestep size": 1,
        "simulation": 1
    },
    "timesteps": {
        "timestep size": 1,
        "simulation": 1
    },
    "scaling": {
        "dimensionality": 1,
        "decisiontreeclassifier": 1
    },
    "periodicities": {
        "indicators": 1,
        "wdidata": 1
    },
    "aggregation methods": {
        "indicators": 1,
        "wdidata": 1
    },
    "continent": {
        "spirit consumption": 2
    },
    "conceptual similarity": {
        "reuters documents": 1,
        "emmed test": 1
    },
    "document folding": {
        "reuters documents": 1,
        "emmed test": 1
    },
    "cosine similarity score": {
        "reuters documents": 1,
        "emmed test": 1
    },
    "knn classifier": {
        "emmed test": 1,
        "test data": 1
    },
    "pandas method": {
        "lambda expression": 1,
        "pand": 1
    },
    "bin numerical data": {
        "numerical data": 1,
        "pandas function qcut": 1
    },
    "long words": {
        "list comprehensions": 1,
        "hashtags": 1
    },
    "return value": {
        "list comprehensions": 1,
        "hashtags": 1
    },
    "filter()": {
        "list comprehensions": 1,
        "hashtags": 1
    },
    "http status response": {
        "python dictionary": 1,
        "python dictionaries": 1
    },
    "http response": {
        "python dictionary": 1,
        "python dictionaries": 1
    },
    "crossref": {
        "python dictionary": 1,
        "python dictionaries": 1
    },
    "bibliographic metadata": {
        "python dictionary": 1,
        "python dictionaries": 1
    },
    "real folder names": {
        "getcwd": 1,
        "listdir": 1
    },
    "seaborn solutions": {
        "jointplot": 1,
        "annotation": 1
    },
    "dates": {
        "query dates": 1,
        "average prices": 1
    },
    "holidays": {
        "lunar new year": 1,
        "christmas": 1
    },
    "analogies": {
        "vectors": 1,
        "fasttext": 1
    },
    "artificial intelligence": {
        "vectors": 1,
        "fasttext": 1
    },
    "fasttext": {
        "vectors": 1,
        "fasttext": 1
    },
    "facebook": {
        "vectors": 1,
        "fasttext": 1
    },
    "mathematical objects": {
        "vectors": 1,
        "fasttext": 1
    },
    "mathematical relations": {
        "vectors": 1,
        "fasttext": 1
    },
    "italy": {
        "vectors": 1,
        "fasttext": 1
    },
    "indirect addressing": {
        "indexing": 1,
        "boolean mask": 1
    },
    "boolean mask": {
        "indexing": 1,
        "boolean mask": 1
    },
    "summary statistics on text": {
        "chat data": 1,
        "summary stats": 1
    },
    "mean windspeeds": {
        "mean windspeed": 2
    },
    "conditioning": {
        "data matrix": 1,
        "number": 1
    },
    "autograder variables": {
        "tensorflow optimizer": 1,
        "tensor init": 1
    },
    "tensorflow session": {
        "tensorflow optimizer": 1,
        "tensor init": 1
    },
    "tensors labels": {
        "tensorflow optimizer": 1,
        "tensor init": 1
    },
    "aggregated loss": {
        "tensorflow optimizer": 1,
        "tensor init": 1
    },
    "training example": {
        "tensorflow optimizer": 1,
        "tensor init": 1
    },
    "minibatch": {
        "tensorflow optimizer": 1,
        "tensor init": 1
    },
    "tensor tests": {
        "tensorflow optimizer": 1,
        "tensor init": 1
    },
    "zeroto1": {
        "ratings matrix": 2
    },
    "pivot table": {
        "ratings matrix": 2
    },
    "book recommendations": {
        "ratings matrix": 2
    },
    "embarked": {
        "sex": 1,
        "embarked columns": 1
    },
    "correlation table": {
        "mean value": 1
    },
    "concatenation": {
        "students": 1
    },
    "logs": {
        "continued fraction": 1
    },
    "miscellaneous": {
        "continued fraction": 1
    },
    "wine": {
        "uci wine dataset": 1
    },
    "names": {
        "data3": 1
    },
    "searborn": {
        "list comprehensions": 1
    },
    "pair plot": {
        "list comprehensions": 1
    },
    "2d array": {
        "bar chart": 1
    },
    "command line utilities": {
        "event metadata": 1
    },
    "epicentral range": {
        "event metadata": 1
    },
    "instrument corrected waveforms": {
        "event metadata": 1
    },
    "interactive ipython help": {
        "event metadata": 1
    },
    "assertion test": {
        "code cell": 1
    },
    "encoding option": {
        "code cell": 1
    },
    "flight cancellations": {
        "code cell": 1
    },
    "white stripes": {
        "similarity scores": 1
    },
    "similarity score": {
        "similarity scores": 1
    },
    "listening history": {
        "similarity scores": 1
    },
    "training format": {
        "linear regression model": 1
    },
    "group practice": {
        "scatter plot plot": 1
    },
    "gaussian discriminant": {
        "class distributions": 1
    },
    "cov": {
        "class distributions": 1
    },
    "ces": {
        "class distributions": 1
    },
    "trained classifier": {
        "class distributions": 1
    },
    "meshgrid": {
        "class distributions": 1
    },
    "decision surface": {
        "class distributions": 1
    },
    "genre": {
        "revenue": 1
    },
    "movies dataframe": {
        "revenue": 1
    },
    "booleans": {
        "boolean list": 1
    },
    "boolean list": {
        "boolean list": 1
    },
    "colored cell": {
        "boolean list": 1
    },
    "grey cells": {
        "boolean list": 1
    },
    "random forest model": {
        "confusion matrix": 1
    },
    "social security administration": {
        "name frequencies": 1
    },
    "clustering handwritten digits": {
        "kmeans clusterer": 1
    },
    "clustering exercises": {
        "kmeans clusterer": 1
    },
    "multiple independent variables": {
        "stats": 1
    },
    "dependent variable": {
        "stats": 1
    },
    "patsy formula": {
        "stats": 1
    },
    "distance": {
        "stats": 1
    },
    "line breaks": {
        "set function": 1
    },
    "pattern matching": {
        "gzip module": 1
    },
    "string matching": {
        "gzip module": 1
    },
    "search pattern": {
        "gzip module": 1
    },
    "rdd partitions": {
        "blast executions": 1
    },
    "mean attack points": {
        "dictionaries": 1
    },
    "utcdatetime initialization": {
        "utcdatetime objects": 1
    },
    "attribute access": {
        "utcdatetime objects": 1
    },
    "utcdatetime objects": {
        "utcdatetime objects": 1
    },
    "utcdatetime object": {
        "utcdatetime objects": 1
    },
    "timestamp": {
        "utcdatetime objects": 1
    },
    "tohoku main shock": {
        "utcdatetime objects": 1
    },
    "health risk": {
        "attributes": 1
    },
    "nexrad radar": {
        "answer key": 1
    },
    "precipitation estimate": {
        "answer key": 1
    },
    "precipitation rate": {
        "answer key": 1
    },
    "precip rate": {
        "answer key": 1
    },
    "reflectivity": {
        "answer key": 1
    },
    "mpr": {
        "air pressure signals": 1
    },
    "pressure signal": {
        "air pressure signals": 1
    },
    "control valve": {
        "air pressure signals": 1
    },
    "air pressure": {
        "air pressure signals": 1
    },
    "spring": {
        "air pressure signals": 1
    },
    "equations of motion": {
        "air pressure signals": 1
    },
    "damping": {
        "air pressure signals": 1
    },
    "higher order differential equations": {
        "air pressure signals": 1
    },
    "diaphragm": {
        "air pressure signals": 1
    },
    "vector equation": {
        "air pressure signals": 1
    },
    "control valve dynamics": {
        "air pressure signals": 1
    },
    "final random forest model": {
        "code cell": 1
    },
    "probabilistic preditions": {
        "code cell": 1
    },
    "exhaustive search selection": {
        "predictors": 1
    },
    "simulated predictors": {
        "predictors": 1
    },
    "hyperparameter search": {
        "hyperparameters": 1
    },
    "function reparameterize": {
        "hyperparameters": 1
    },
    "sgd": {
        "hyperparameters": 1
    },
    "stochastic variable": {
        "hyperparameters": 1
    },
    "stochasticity": {
        "hyperparameters": 1
    },
    "forward": {
        "hyperparameters": 1
    },
    "ened mnist image": {
        "hyperparameters": 1
    },
    "fl": {
        "hyperparameters": 1
    },
    "mnist image": {
        "hyperparameters": 1
    },
    "adam": {
        "hyperparameters": 1
    },
    "2001 flight data": {
        "acy airpot": 1
    },
    "xml": {
        "acy airpot": 1
    },
    "delay information": {
        "acy airpot": 1
    },
    "manual analysis": {
        "trump tweets": 1
    },
    "twitter clients": {
        "trump tweets": 1
    },
    "squared l2 distances": {
        "medoids": 1
    },
    "medoids": {
        "medoids": 1
    },
    "partial differential equations": {
        "relative error": 1
    },
    "type checking": {
        "relative error": 1
    },
    "taylor series expansions": {
        "relative error": 1
    },
    "size": {
        "relative error": 1
    },
    "finite difference schems": {
        "relative error": 1
    },
    "triangle counts": {
        "12 angry men": 1
    },
    "internet movie database": {
        "12 angry men": 1
    },
    "inputformat": {
        "rdd": 1
    },
    "wordcount": {
        "rdd": 1
    },
    "kmercount": {
        "rdd": 1
    },
    "sliding window": {
        "rdd": 1
    },
    "overlapping": {
        "rdd": 1
    },
    "icd9 code": {
        "cd": 1
    },
    "patient id": {
        "cd": 1
    },
    "group by statement": {
        "else statement": 1
    },
    "group by operator": {
        "else statement": 1
    },
    "having operator": {
        "else statement": 1
    },
    "having clause": {
        "else statement": 1
    },
    "reduced dataset": {
        "decisiontreeclassifier": 1
    },
    "minmaxscaler": {
        "decisiontreeclassifier": 1
    },
    "gaussian naive bayes classifier": {
        "decisiontreeclassifier": 1
    },
    "diagram": {
        "spirit consumption": 1
    },
    "wine consumption": {
        "spirit consumption": 1
    },
    "alcoohol consumption": {
        "spirit consumption": 1
    },
    "median alcoohol consumption": {
        "spirit consumption": 1
    },
    "object oriented programming notebook 2": {
        "surnames": 1
    },
    "classes": {
        "surnames": 1
    },
    "genealogy": {
        "surnames": 1
    },
    "census": {
        "surnames": 1
    },
    "census bureau": {
        "surnames": 1
    },
    "coloumn": {
        "outlier": 1
    },
    "hand calculations": {
        "outlier": 1
    },
    "median": {
        "outlier": 1
    },
    "interquartile range": {
        "outlier": 1
    },
    "quartiles": {
        "outlier": 1
    },
    "predicted category": {
        "emmed test": 1
    },
    "reuters document categorization": {
        "emmed test": 1
    },
    "training document": {
        "emmed test": 1
    },
    "reuters text categorization": {
        "emmed test": 1
    },
    "dampening": {
        "set hyperparameters": 1
    },
    "momentum": {
        "set hyperparameters": 1
    },
    "bank marketing data set": {
        "indicator variable": 1
    },
    "phone calls": {
        "indicator variable": 1
    },
    "bank term deposit": {
        "indicator variable": 1
    },
    "portuguese banking institution": {
        "indicator variable": 1
    },
    "direct marketing campaigns": {
        "indicator variable": 1
    },
    "merkle paths": {
        "merkle path": 1
    },
    "average cpu usage": {
        "width variable": 1
    },
    "single linear regression": {
        "width variable": 1
    },
    "sqlite3 package": {
        "python object": 1
    },
    "ratings table": {
        "python object": 1
    },
    "phenosense assay": {
        "markdown formatting": 1
    },
    "pubmed article": {
        "markdown formatting": 1
    },
    "drug resistance": {
        "markdown formatting": 1
    },
    "academic literature reference": {
        "markdown formatting": 1
    },
    "plaque reduction assay": {
        "markdown formatting": 1
    },
    "query dates": {
        "average prices": 1
    },
    "q": {
        "twitter search": 1
    },
    "filtering step": {
        "twitter search": 1
    },
    "euclidean distance": {
        "test data": 1
    },
    "knn algorithm": {
        "test data": 1
    },
    "windspeeds": {
        "mean windspeed": 1
    },
    "mean windspeed": {
        "mean windspeed": 1
    },
    "average windspeed": {
        "mean windspeed": 1
    },
    "multiple aggregations": {
        "aggregate quantities": 1
    },
    "style sheet": {
        "horizontal bars": 1
    },
    "solid green line": {
        "horizontal bars": 1
    },
    "indus": {
        "horizontal bars": 1
    },
    "housing data": {
        "horizontal bars": 1
    },
    "blue dashed line": {
        "horizontal bars": 1
    },
    "statements assessment solutions": {
        "even numbers": 1
    }
}