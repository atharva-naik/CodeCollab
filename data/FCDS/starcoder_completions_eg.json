{
    "def movie_count_by_genre(movies, genres):\n    \"\"\"\n    Count the number of movies in each movie genre.\n\n    args:\n        movies (pd.DataFrame) : Dataframe containing movie attributes\n        genres (List[str]) :  the list of movie genres\n\n    return:\n        Dict[str, Dict[int, int]]  : a nested mapping from movie genre to year to number of movies in that year\n    \"\"\"\n    result = {}\n\n    for g in genres:": "def movie_count_by_genre(movies, genres):\n    \"\"\"\n    Count the number of movies in each movie genre.\n\n    args:\n        movies (pd.DataFrame) : Dataframe containing movie attributes\n        genres (List[str]) :  the list of movie genres\n\n    return:\n        Dict[str, Dict[int, int]]  : a nested mapping from movie genre to year to number of movies in that year\n    \"\"\"\n    result = {}\n    for g in genres:\n        result[g] = {}\n        for year in range(1950, 2020):\n            result[g][year] = 0",
    "def movie_count_by_genre(movies, genres):\n    \"\"\"\n    Count the number of movies in each movie genre.\n\n    args:\n        movies (pd.DataFrame) : Dataframe containing movie attributes\n        genres (List[str]) :  the list of movie genres\n\n    return:\n        Dict[str, Dict[int, int]]  : a nested mapping from movie genre to year to number of movies in that year\n    \"\"\"\n    result = {}\n\n    for g in genres:\n      temp = movies.groupby([g,movies.release_date.str[-4:]]).agg(movie_count = (\"movie_title\", \"count\")).reset_index()": "def movie_count_by_genre(movies, genres):\n    \"\"\"\n    Count the number of movies in each movie genre.\n\n    args:\n        movies (pd.DataFrame) : Dataframe containing movie attributes\n        genres (List[str]) :  the list of movie genres\n\n    return:\n        Dict[str, Dict[int, int]]  : a nested mapping from movie genre to year to number of movies in that year\n    \"\"\"\n    result = {}\n    for g in genres:\n        temp = movies.groupby([g, movies.release_date.str[-4:]]).agg(movie_count=('movie_title', 'count')).reset_index()\n        result[g] = temp.to_dict('index')\n    return result",
    "def movie_count_by_genre(movies, genres):\n    \"\"\"\n    Count the number of movies in each movie genre.\n\n    args:\n        movies (pd.DataFrame) : Dataframe containing movie attributes\n        genres (List[str]) :  the list of movie genres\n\n    return:\n        Dict[str, Dict[int, int]]  : a nested mapping from movie genre to year to number of movies in that year\n    \"\"\"\n    result = {}\n\n    for g in genres:\n      temp = movies.groupby([g,movies.release_date.str[-4:]]).agg(movie_count = (\"movie_title\", \"count\")).reset_index()\n      years = temp[temp[g]==1][['release_date','movie_count']].set_index('release_date').to_dict()['movie_count']\n": "def movie_count_by_genre(movies, genres):\n    \"\"\"\n    Count the number of movies in each movie genre.\n\n    args:\n        movies (pd.DataFrame) : Dataframe containing movie attributes\n        genres (List[str]) :  the list of movie genres\n\n    return:\n        Dict[str, Dict[int, int]]  : a nested mapping from movie genre to year to number of movies in that year\n    \"\"\"\n    result = {}\n    for g in genres:\n        temp = movies.groupby([g, movies.release_date.str[-4:]]).agg(movie_count=('movie_title', 'count')).reset_index()\n        years = temp[temp[g] == 1][['release_date', 'movie_count']].set_index('release_date').to_dict()['movie_count']\n        result[g] = years\n    return result",
    "def movie_count_by_genre(movies, genres):\n    \"\"\"\n    Count the number of movies in each movie genre.\n\n    args:\n        movies (pd.DataFrame) : Dataframe containing movie attributes\n        genres (List[str]) :  the list of movie genres\n\n    return:\n        Dict[str, Dict[int, int]]  : a nested mapping from movie genre to year to number of movies in that year\n    \"\"\"\n    result = {}\n\n    for g in genres:\n      temp = movies.groupby([g,movies.release_date.str[-4:]]).agg(movie_count = (\"movie_title\", \"count\")).reset_index()\n      years = temp[temp[g]==1][['release_date','movie_count']].set_index('release_date').to_dict()['movie_count']\n      years = {int(k):int(v) for k,v in years.items()}\n": "def movie_count_by_genre(movies, genres):\n    \"\"\"\n    Count the number of movies in each movie genre.\n\n    args:\n        movies (pd.DataFrame) : Dataframe containing movie attributes\n        genres (List[str]) :  the list of movie genres\n\n    return:\n        Dict[str, Dict[int, int]]  : a nested mapping from movie genre to year to number of movies in that year\n    \"\"\"\n    result = {}\n    for g in genres:\n        temp = movies.groupby([g, movies.release_date.str[-4:]]).agg(movie_count=('movie_title', 'count')).reset_index()\n        years = temp[temp[g] == 1][['release_date', 'movie_count']].set_index('release_date').to_dict()['movie_count']\n        years = {int(k): int(v) for (k, v) in years.items()}\n        result[g] = years\n    return result",
    "def movie_count_by_genre(movies, genres):\n    \"\"\"\n    Count the number of movies in each movie genre.\n\n    args:\n        movies (pd.DataFrame) : Dataframe containing movie attributes\n        genres (List[str]) :  the list of movie genres\n\n    return:\n        Dict[str, Dict[int, int]]  : a nested mapping from movie genre to year to number of movies in that year\n    \"\"\"\n    result = {}\n\n    for g in genres:\n      temp = movies.groupby([g,movies.release_date.str[-4:]]).agg(movie_count = (\"movie_title\", \"count\")).reset_index()\n      years = temp[temp[g]==1][['release_date','movie_count']].set_index('release_date').to_dict()['movie_count']\n      years = {int(k):int(v) for k,v in years.items()}\n      result[g] = years\n": "def movie_count_by_genre(movies, genres):\n    \"\"\"\n    Count the number of movies in each movie genre.\n\n    args:\n        movies (pd.DataFrame) : Dataframe containing movie attributes\n        genres (List[str]) :  the list of movie genres\n\n    return:\n        Dict[str, Dict[int, int]]  : a nested mapping from movie genre to year to number of movies in that year\n    \"\"\"\n    result = {}\n    for g in genres:\n        temp = movies.groupby([g, movies.release_date.str[-4:]]).agg(movie_count=('movie_title', 'count')).reset_index()\n        years = temp[temp[g] == 1][['release_date', 'movie_count']].set_index('release_date').to_dict()['movie_count']\n        years = {int(k): int(v) for (k, v) in years.items()}\n        result[g] = years"
}